<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sentry</title>
    <link>https://blog.sentry.io/feed.xml</link>
    <description></description>
    <item>
      <title>Performance Monitoring and more updates to Sentry for Electron</title>
      <link>https://blog.sentry.io/2022/03/22/performance-monitoring-and-more-updates-to-sentry-for-electron/</link>
      <description>For those who aren’t that familiar with it, Electron is an open-source framework that allows developers to build cross-platform desktop…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2022-03-22T00:00">March 22, 2022</time></p><ul><li><a href="https://blog.sentry.io/sdk-updates/"><span>SDK Updates</span></a></li></ul><div><p>For those who aren’t that familiar with it, Electron is an open-source framework that allows developers to build cross-platform desktop applications in JavaScript. Some of the most popular desktop applications like VS Code, Slack, Discord, and Atom, are all built in Electron. </p>
<p>While Electron makes it easy to build cross-platform applications, maintaining them is a whole other thing. You need to be aware of OS-specific challenges, the machines your applications are running on, and their configurations. <a href="https://docs.sentry.io/platforms/javascript/guides/electron/">Version 3.0 of our Electron SDK</a> helps you get a handle on all these unknowns with more context on every error, insight into when a release starts to degrade, and enable <a href="https://sentry.io/features/distributed-tracing/">distributed tracing</a> to easily see where the most time in a transaction is spent. </p>
<h2 id="get-started"><a href="#get-started" aria-label="get started permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Get started</h2>
<h3 id="install"><a href="#install" aria-label="install permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Install</h3>
<div data-language="bash"><pre><code><span># Using yarn</span>
<span>yarn</span> <span>add</span> @sentry/electron

<span># Using npm</span>
<span>npm</span> <span>install</span> @sentry/electron</code></pre></div>
<h3 id="configure"><a href="#configure" aria-label="configure permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Configure</h3>
<div data-language="javascript"><pre><code><span>import</span> <span>*</span> <span>as</span> Sentry <span>from</span> <span>&#34;@sentry/electron&#34;</span><span>;</span>
Sentry<span>.</span><span>init</span><span>(</span><span>{</span> dsn<span>:</span> <span>&#34;https://examplePublicKey@o0.ingest.sentry.io/0&#34;</span> <span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>You need to call init in the main process and every renderer process you spawn.</em> </p>
<p>With V3.0 of Sentry for Electron, you can automatically monitor application performance without any additional configuration. As well as, track crash-free sessions by release, and unlock more information for every issue like CPU details, display data, memory status, language details, and more. Check out the release notes <a href="https://github.com/getsentry/sentry-electron/releases">here</a>. </p>
<h2 id="electron-performance-monitoring"><a href="#electron-performance-monitoring" aria-label="electron performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Electron Performance Monitoring</h2>
<p>Errors are only half the story. Electron developers also need to know if their app responds quickly to user input on any machine or operating system. This type of visibility helps you see if objects load quickly when called—and, if not, then provide you with tools to solve what’s urgent, faster. </p>
<p>Sentry’s performance monitoring for Electron surfaces conditions that cause bottlenecks or latency issues for Electron renderer processes, along with a breakdown of operations within each transaction. So you can easily see which span is taking the longest and save yourself the frustration of clicking into every trace and span by getting operation details and insights on a silver platter. </p>
</div><div>
<h2 id="electron-release-health"><a href="#electron-release-health" aria-label="electron release health permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Electron Release Health</h2>
<p>Version 3.0 automatically captures session data to help you better understand how each app release is performing. Sentry calculates crash-free sessions, crash-free users, and version adoption by release. If a release inexplicably tanks your crash-free users, you can see the moment a release starts to degrade and get a list of new issues and failed transactions. Plus, we also provide a list of commit authors so you can skip <code>git blame</code> and just Slack your teammates who are best suited to fix the problem (that they created).</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png?w=438&amp;fm=webp 438w,
https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png?w=875&amp;fm=webp 875w,
https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png?w=1750&amp;fm=webp 1750w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png?w=438 438w,
https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png?w=875 875w,
https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png?w=1750 1750w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="release details" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5okYcrERDFE6Dy4e3TAYMo/315a0bde09417c3f376bd0053f3b361f/Screen_Shot_2022-03-20_at_6.56.32_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But hey, don’t know why there was a dramatic dip in crash-free sessions? This is fine. Click “Open in Discover” from any release details page; then, Sentry will automatically build and run a query for events by release to help you get to the root of any problem.</p>
<p>Explore whether multiple conditions contribute to an issue: does this only happen on a specific machine or operating system? Or does it affect all Linux machines? Or all Windows 11 users? Answer it quickly in Discover. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png?w=618&amp;fm=webp 618w,
https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png?w=1235&amp;fm=webp 1235w,
https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png?w=2470&amp;fm=webp 2470w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png?w=618 618w,
https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png?w=1235 1235w,
https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png?w=2470 2470w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="electron-discover" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1rhatnltsHvGZBZqNIJlP9/ed504b60b698955fb3ecafdb99a2e452/Screen_Shot_2022-03-20_at_6.52.29_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Discover also includes pre-built searches that help answer common questions about all your events, unique errors, and clients. And if you don’t like these thoughtful, hand-crafted, pre-built searches, you can modify them and save them to a custom dashboard. </p>
<h2 id="electron-error-monitoring"><a href="#electron-error-monitoring" aria-label="electron error monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Electron Error Monitoring</h2>
<p>Understanding issues across various devices with access to different metadata, latencies, network issues, and upgrade cadences is hard and getting exponentially harder. Sentry for Electron 3.0 helps developers see what actually matters, solve issues faster with richer context, and learn continuously about their applications. </p>
<p>Not only will you see the user impact of each issue, but you’ll also get all the information you need to know about the machines the error happened on, like: </p>
<ul>
<li>CPU (processor count, machine architecture) </li>
<li>Screen (density, resolution, height/width)</li>
<li>Memory </li>
<li>Language Details (locale details) </li>
</ul>
</div><div>
<h2 id="to-wrap-it-up"><a href="#to-wrap-it-up" aria-label="to wrap it up permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>To wrap it up</h2>
<p>Developers need visibility into when a user writes to disk, fetches media, loads an object in a given viewport—or, simply when a user tries to launch the app. Without this data, untreated performance problems and serious errors inevitably result in a poor user experience. </p>
<p>Update your Electron SDK to immediately know everything about the hardware, OS, screen orientation, network conditions, and device language settings for every issue caught and reported by Sentry. Solve issues with context and confidence and save time by not looking for obscure machines to recreate the problem. With the latest Electron SDK and Sentry, you can easily uncover the who, what, when, where, and why behind every issue.</p>
<p>Get started with <a href="https://sentry.io/for/electron/">Sentry for Electron</a> and drop us a line on <a href="https://github.com/getsentry/sentry-javascript">GitHub</a>, <a href="https://twitter.com/getsentry?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Twitter</a>, or our <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6L8G5xKVLlbfRGF3BcVb6Z/222282ceff456d9020f9a7cd0cc87d14/Errors2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Unity Tutorial: What You Need to Know Before Developing Your First Unity Game</title>
      <link>https://blog.sentry.io/2022/03/21/unity-tutorial-what-you-need-to-know-before-developing-your-first-unity-game/</link>
      <description>This step-by-step walkthrough of Unity&#39;s platform will help beginners navigate platform basics, with screenshots to assist.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In this article we are going to talk about Unity basics. By the end you will understand the Unity editor interface, Game Objects and Sprites, the frequently used UI elements, and a high-level overview of how to monitor your Unity games for errors and performance issues. This is written for beginners who have never used Unity before but have previous experience using a programming language. </p>
<p>The following should be installed on your computer to follow along this tutorial: </p>
<ul>
<li>Unity</li>
<li>Unity Hub</li>
<li>Visual Studio</li>
</ul>
<p><em>In this tutorial, Unity Version “2020.3.23f1” is used. </em></p>
<p>Unity is a cross-platform game engine where you can develop 2d and 3d games. When we say cross-platform, we mean it is used to build multi-platform applications (for example, Android, iOS, desktop, virtual reality, consoles). It supports more than 19 platforms and the Unity editor is supported by macOS, Windows, and Linux.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4SadA9fx57lNVlHMS4LjSA/d2db91f3b0f6cb8d5a7c14a640dffb31/unity-tutorial61.png" alt="unity-tutorial61"/></p>
<p>Let’s open Unity.</p>
<h2 id="introduction-to-the-unity-editor-interface"><a href="#introduction-to-the-unity-editor-interface" aria-label="introduction to the unity editor interface permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Introduction to the Unity editor interface</h2>
<p>Start by opening Unity Hub &gt; Click on New Project &gt; Select 2D &gt; Click on Create Project. </p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4nmAsSGhWHixqDv0AhLdWd/070367d8117a26f600c331b8e5bdfc63/unity-tutorial85.png" alt="unity-tutorial85"/></p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/fJk6Ct6LQJM3AnPUQj8Pm/6a7d38486bd1267ce6108fdc3f4a0968/unity-tutorial63.png" alt="unity-tutorial63"/></p>
<p>After opening Unity and creating your new project, you’ll land in the editor interface (see below). The Unity Editor has several windows. You can edit the layout to whatever suits you. But before changing the layout, let’s understand a little more about each window’s capabilities.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4hAaWLXD8nvHzSpDo5VrwX/fadb352497f7fb8aa07f06e22daf7c4b/unity-tutorial11.png" alt="unity-tutorial11"/></p>
<h3 id="hierarchy-window"><a href="#hierarchy-window" aria-label="hierarchy window permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Hierarchy window</h3>
<p>This window is for all the objects in the scene in hierarchical order. By objects, I mean game objects which are literally anything in the scene. In the image above, the “Main Camera” is a GameObject. The GameObjects will be arranged in the same order you created them (you can re-arrange if you’d like). The order (top to bottom) does not matter all that much in most cases. But the Hierarchy allows creation of Parent-Child relationships by dragging GameObjects into each other.</p>
<h3 id="scene-window"><a href="#scene-window" aria-label="scene window permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Scene Window</h3>
<p>A Scene is where the actual content of your game lives. The scene can be a menu scene, a level scene, a game scene, etc. You can view the scene in 2d  and 3d view, even if it is a 2d project. To do so, just toggle the 2d button as shown in the image below. In this window you can select, position, and/or modify the GameObjects.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/75GzdmzMAfUer3XXDdAIgO/0675e4cf2795bd5a6b7e8e09d10ef704/unity-tutorial17.png" alt="unity-tutorial17"/></p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/716Qv57REDWqGKIkR2gCW/3f0080dc4368490f126a901d5cc8ee48/unity-tutorial72.png" alt="unity-tutorial72"/></p>
<h3 id="game-window"><a href="#game-window" aria-label="game window permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Game window</h3>
<p>Located just to the right of the “Scene” tab, the “Game” tab opens a window of what the player will see when they play your game.</p>
<h3 id="game-object-inspector-window"><a href="#game-object-inspector-window" aria-label="game object inspector window permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Game Object Inspector Window</h3>
<p>From this window, you can change any component of the selected GameObject. In the image shown below, the Main Camera GameObject is selected, and below is all the detailed information for the Main Camera. “Transform”, “Camera”, and “Audio Listener” are all components added to the Main Camera by default. You can add more components to a GameObject by using the “AddComponent” button. We will talk more about components later.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/1KaPMqU5KyLpLH0Wspd001/47ef5bf581cf56014b5efd769bc1485a/unity-tutorial22.png" alt="unity-tutorial22"/></p>
<h3 id="project-window"><a href="#project-window" aria-label="project window permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Project Window</h3>
<p>This is where the project folders live. There is an Assets folder and a Packages folder. The Assets folder contains everything about your game — scenes, images, fonts, C# scripts, sound files, and more. The Packages folder contains the packages which are “extensions” to the Unity Editor that can add functionality or assets that you install from the Package Manager (for example Unity UI Package, which is installed by default). You can remove the packages from the Package Manager. To open the Package Manager click on Window in the menu bar, then Package Manager. </p>
<h3 id="console-window"><a href="#console-window" aria-label="console window permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Console Window</h3>
<p>Just right of the Project Window is the Console Window. Here you will find log messages, error messages, and warnings.</p>
<h3 id="changing-the-layout"><a href="#changing-the-layout" aria-label="changing the layout permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Changing the Layout</h3>
<p>I’m going to change the layout to a (personally) more preferable view.</p>
<p>There are pre-saved layouts from the Layout dropdown menu as shown in the image below.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/eUuJ6bgGiMJoxGKCa1yUd/f4e2fc94624c524ee75fadc947caa70b/unity-tutorial68.png" alt="unity-tutorial68"/></p>
<p>You can change the layout by dragging and dropping the windows wherever you desire. Here, I dragged the Game window to be below the Scene window at the center, and the Project &amp; Console windows to be below the Hierarchy window on the left. Choose whichever layout you prefer.</p>
<h2 id="game-objects"><a href="#game-objects" aria-label="game objects permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Game Objects</h2>
<p>A GameObject is any object in your scene. It is like a container that has properties. You change properties by adding and editing its components. Unity has a lot of components ready to be used, but you can create your own as well using C# scripts.</p>
<p>There are a few ways to create a GameObject and add it to a scene:</p>
<ul>
<li>Right-click in the Hierarchy window, then choose any of the objects from the popup menu as shown in the image below. You can create an empty object, select a 2D object, a 3D object, effects, and so on.</li>
</ul>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4w8DyFH8KS72jzmD5f5nNo/6350252fca1386855cdd53648140e727/unity-tutorial38.png" alt="unity-tutorial38"/></p>
<ul>
<li>Alternatively, you can drag an object from the Assets folder and drop it in the Hierarchy window (Unity will try to create a GameObject with the appropriate components for you).</li>
</ul>
<p>When you create an empty GameObject, it is an empty container until you add components. This empty GameObject can be used as a container for the scene management script, for example (we will talk about scripts later). This GameObject will not be visible to the player since it has no component that can be rendered/displayed to the player, but the script will run in the background. </p>
<p>Let’s create one and check the inspector.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/6mR6lC6fxhsKsd2RJz4BV4/24719dcc53e50fda3d63dfaedc1e7b87/unity-tutorial77.png" alt="unity-tutorial77"/></p>
<p>According to the image above, the empty GameObject only has a Transform component. We will talk about the Transform component a little later. As you can see in the Scene window, only the Main Camera is shown. The Main Camera has some special components like Gizmos which can easily be found in the scene view.</p>
<p>Let’s check out some other frequently used game objects.</p>
<h2 id="sprites"><a href="#sprites" aria-label="sprites permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sprites</h2>
<p>A Sprite is a 2D graphical GameObject (basically an image). They are images that cover the GameObjects to give them a visual appearance. </p>
<p>Let’s add a Sprite into our scene.</p>
<p>There are two ways we can add a Sprite:</p>
<ol>
<li>If you want specific shapes, like a square or a circle, right click in the hierarchy window &gt;  2D Object &gt; Sprites &gt; Select whatever shape you want as shown in the image below.</li>
</ol>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4RmvAgwWIYC82N76Ij6ZNe/0be6816354d7c40e9b275bb233e3f052/unity-tutorial37.png" alt="unity-tutorial37"/></p>
<ol start="2">
<li>Drag an image from the assets folder into the hierarchy window. To do this, we’ll need to add images into the asset folder. For organizational purposes: Create a new folder within the assets folder for Sprites / images.</li>
</ol>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/1pP44FbubxXUFRLKcey6ox/1fdcee43f03a37b30a78b34da4784e2d/unity-tutorial71.png" alt="unity-tutorial71"/><img src="https://images.ctfassets.net/em6l9zw4tzag/6Jt61xNSvxAynMFR5nWjJS/f502fe09a2f1d0801a34613f85d28c23/unity-tutorial26.png" alt="unity-tutorial26"/></p>
<p>Now you can drag items into the images folder, or right-click on the images folder &gt; Import New Asset &gt; Choose the image you want from your computer.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4EzdWD2BWKRI4HAHegz3wJ/a9662bc58bfded544ce057f39f385525/unity-tutorial48.png" alt="unity-tutorial48"/></p>
<p>I’m going to add an image of a frog into my Assets &gt; Images folder.
<img src="https://images.ctfassets.net/em6l9zw4tzag/5V4gCME0sQqk1LgSl1vXHV/c97c9f73e2bb4071c5e353e8acfff481/unity-tutorial67.png" alt="unity-tutorial67"/></p>
<p>Let’s add this Sprite into the scene by dragging it into the Hierarchy window.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/6VE5bGfGDuDJftutTXUKFb/3e0cbb4ab5aeaa4811313fbdfc54137a/unity-tutorial73.png" alt="unity-tutorial73"/></p>
<p>As you can see in the image below, the frog image appears low quality as the outline is pixelated. </p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/1x2A3MEvVJ9KSovtYwzV0h/565babf022021903fddeb26da826e29a/unity-tutorial52.png" alt="unity-tutorial52"/></p>
<p>To improve the quality, uncheck Low Resolution Aspect Ratios as shown below.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4QadhAvdMHOotlq09Dfvxt/67b75a703753ae3131467bdc70a22506/unity-tutorial20.png" alt="unity-tutorial20"/></p>
<p>We need to scale the frog down as it is too big. To do so, select the frog, then go to the Inspector and change the Scale in the Transform Component to a smaller size (0.5, for example). Another way to do this is to select (and grab) the image by one of the blue dots around it’s edges and, while holding the shift key to maintain aspect ratio, drag it to the size you want.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/25HocRpAp0200uuyoxJYS8/aa6fd95f9ed7e9ad4622560875c5279b/unity-tutorial28.png" alt="unity-tutorial28"/></p>
<h2 id="sprite-inspector"><a href="#sprite-inspector" aria-label="sprite inspector permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sprite Inspector</h2>
<p>Now let’s take a look at the Sprite’s inspector.</p>
<p>As shown in the image, a Sprite has two main components by default:</p>
<ol>
<li>Transform</li>
<li>Sprite Renderer</li>
</ol>
<p>You can always add more components using the “Add Component” button at the bottom.</p>
<p>The Transform component has the object’s position, rotation, &amp; scale in X, Y, &amp; Z coordinates. Since this is a 2D game object, Z will be 0. These are pretty self explanatory. </p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/2DAR7mSAB6S1NJvfbd6kkK/47ec480a7a7d0b8c9544e560e5333a57/unity-tutorial35.png" alt="unity-tutorial35"/></p>
<p>Let’s see how these X, Y, and Z coordinates are measured. </p>
<p>For the “Position”, X &amp; Y are measured from the center of the screen. The center of the screen grid is point (0,0).</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/1jo6cNPOEoY6M7m1kJSIH2/971acb2bd03274de4c14744c67033a1e/unity-tutorial33.png" alt="unity-tutorial33"/></p>
<p>The frog’s center is located at point (0,0) thus position X = 0 &amp; Y = 0. This point is measured from the blue circle at the center which is called the object’s pivot. </p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/3xMhsFmFsXbeic42h2uJhy/29e34dced27d78da3cc7ae8c63c0a3dc/unity-tutorial78.png" alt="unity-tutorial78"/></p>
<p>The Sprite’s rotation will rotate around the pivot. Let’s change rotation values and check the frog. If we change the X value, it will rotate around the X axis.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/31JCXDINlPp9H7dQCw0RDN/02f9c05c3ba2a2f0e8c7ca23ce905713/unity-tutorial74.png" alt="unity-tutorial74"/></p>
<p>If we change the Y value, it will rotate around the Y axis. </p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4hUEpXT3khwCN8fQu1OoBh/bf8e8cae233ad8526cd6a3fea5aa1e20/unity-tutorial31.png" alt="unity-tutorial31"/></p>
<p>If we change the Z value, it will rotate around the Z axis. </p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/2HOu9IryNMwXwQkebh7dzn/4cb84cedff4f92cdc499c868668e6265/unity-tutorial19.png" alt="unity-tutorial19"/></p>
<p>To open the Sprite Editor window: From the menu bar, select Window &gt; Select 2D &gt; Sprite Editor, then select the value from the Pivot dropdown window (center is the default).</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/CNCGVONcWQxwRT5rIogGT/794a9047cf0880413de83d010adbfd42/unity-tutorial2.png" alt="unity-tutorial2"/></p>
<p>Let’s define the main properties of the sprite renderer component:</p>
<ul>
<li><strong>Sprite</strong>: You can change the image here</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png?w=162&amp;fm=webp 162w,
https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png?w=323&amp;fm=webp 323w,
https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png?w=646&amp;fm=webp 646w" sizes="(max-width: 646px) 100vw, 646px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png?w=162 162w,
https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png?w=323 323w,
https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png?w=646 646w" sizes="(max-width: 646px) 100vw, 646px"/>
          <img alt="sprite renderer" title="" src="https://images.ctfassets.net/em6l9zw4tzag/68JV14nTM3BWwOUH9AyV6T/2a89ecaf96050f42a71f2d32c1c515be/Screen_Shot_2022-03-21_at_4.11.35_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ul>
<li><strong>Color</strong>: Change its color.The chosen color will cover the image but keeps the outline of the frog. Let’s change the color to black as shown in the image below.</li>
</ul>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/3XvI08HbGTiiwVKxJvDMcR/3aaa4da1db7eb257316a04cb02bc8be4/unity-tutorial40.png" alt="unity-tutorial40"/></p>
<ul>
<li><strong>Flip</strong>: Allows you to flip the game object vertically and horizontally by checking the X &amp; Y. </li>
<li><strong>Additional Settings</strong>: If you use layers, you can sort the GameObject into a specific layer, as well as its order in that layer. For example, you can make a background layer that will be the background image of your game. Then the UI layer will be for the buttons and menus.</li>
</ul>
<h2 id="ui-game-objects"><a href="#ui-game-objects" aria-label="ui game objects permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>UI Game Objects</h2>
<p>To add these GameObjects to the scene, we right-click in the hierarchy window &gt; UI menu.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/4ZeBmCt8VLiJqR6vsVmMaQ/553458ce05aa526d0947e81ca687c056/unity-tutorial49.png" alt="unity-tutorial49"/></p>
<p>Now, let’s add the following UI GameObjects and check their inspector components.</p>
<p>When you add a text, image or button GameObject, a Canvas and an EventSystem are automatically added to the Hierarchy. Let’s define and understand these, and then we’ll continue on with the GameObjects.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/6CEBGAXYbjm2R3OAZzzCIL/0e5dcd3602501e952d1e35e7ff2b4807/unity-tutorial25.png" alt="unity-tutorial25"/></p>
<h3 id="canvas"><a href="#canvas" aria-label="canvas permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Canvas</h3>
<p>The Canvas is a container for all UI elements in the scene. All UI elements such as texts, images, &amp; buttons should be inside a Canvas. If Unity did not find one, it will add one automatically as you saw when you added a text GameObject. </p>
<p>As shown in the image, Canvas inspector has four components in its inspector by default:</p>
<ol>
<li>Rect Transform </li>
<li>Canvas </li>
<li>Canvas Scaler</li>
<li>Graphic Raycaster</li>
</ol>
<h5 id="rect-transform"><a href="#rect-transform" aria-label="rect transform permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Rect Transform</h5>
<p>Similar to Transform but has more properties and is mainly for UI elements. Here it is grayed out, as these values are controlled by the Canvas component.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/3wP4l2GXdSnqiNJpu0psqx/7f100e072eb8ae6ebb15055abd9baf6b/unity-tutorial6.png" alt="unity-tutorial6"/></p>
<h5 id="canvas-1"><a href="#canvas-1" aria-label="canvas 1 permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Canvas</h5>
<p>Canvas is a component that controls how a group of UI elements will be rendered. All UI elements must be children of a Canvas. It is possible to have more than one canvas in a scene.</p>
<p>When we look at our frog in the game view and scene view, you’ll notice the text is very small in the game view and the Canvas is shifted in the scene view.</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/5ZvjNAic74Qa0FFQWxDfEn/037523079e6c0311bafe7ed0ed079cd4/unity-tutorial12.png" alt="unity-tutorial12"/></p>
<p>To adjust, we can change the Render mode to “Screen Space - Camera” and drag and drop the “Main Camera” from the Hierarchy into the Render Camera component as shown in the two images below.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png?w=319&amp;fm=webp 319w,
https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png?w=637&amp;fm=webp 637w,
https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png?w=1274&amp;fm=webp 1274w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png?w=319 319w,
https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png?w=637 637w,
https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png?w=1274 1274w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="rendermode+rendercamera" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6muBXLfwdM7XPFcl8G0ccF/63b7fca554a3c50a79b6cbcd0de24b11/Screen_Shot_2022-03-21_at_4.24.23_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now the Canvas will be centered in the main camera view as shown below:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png?w=482&amp;fm=webp 482w,
https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png?w=963&amp;fm=webp 963w,
https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png?w=1926&amp;fm=webp 1926w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png?w=482 482w,
https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png?w=963 963w,
https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png?w=1926 1926w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial75" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3SsClrY3NwHxlGHQUmnR03/18270cc24faaef0ea87ee9d59893d434/unity-tutorial75.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h5 id="canvas-scaler"><a href="#canvas-scaler" aria-label="canvas scaler permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Canvas Scaler</h5>
<p>This component lets you choose how the UI elements scale when the screen size changes from device to device. You will normally want it to scale with screen size and that is what we will do. Change the UI Scale mode to “scale with screen size” as shown:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png?w=160&amp;fm=webp 160w,
https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png?w=319&amp;fm=webp 319w,
https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png?w=638&amp;fm=webp 638w" sizes="(max-width: 638px) 100vw, 638px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png?w=160 160w,
https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png?w=319 319w,
https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png?w=638 638w" sizes="(max-width: 638px) 100vw, 638px"/>
          <img alt="unity-tutorial76" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4zF6F9W4a24iQP4qKKrBPF/01248e5aff6d0a5b3c68d17633089800/unity-tutorial76.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We also need to choose a reference resolution. This is self explanatory. I normally choose the size of the background image so the image won’t be crushed. We will change this later after we add a background image.</p>
<h5 id="graphic-rayaster"><a href="#graphic-rayaster" aria-label="graphic rayaster permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Graphic Rayaster</h5>
<p>Do you ever wonder how the graphics are being detected?</p>
<p>It is the raycaster that sends rays and looks to see if any graphics have been hit or not. (“hit by that ray”)</p>
<p>From this component you can determine whether to ignore reversed graphics (backfacing graphics) or not, and decide on the blocking objects and masks to that ray.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png?w=180&amp;fm=webp 180w,
https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png?w=360&amp;fm=webp 360w,
https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png?w=720&amp;fm=webp 720w" sizes="(max-width: 720px) 100vw, 720px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png?w=180 180w,
https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png?w=360 360w,
https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png?w=720 720w" sizes="(max-width: 720px) 100vw, 720px"/>
          <img alt="graphic raycaster" title="" src="https://images.ctfassets.net/em6l9zw4tzag/qQI36RDDVs9fdd5XzLQyh/e8282775c1985db9fbd8fea0f881f4cd/Screen_Shot_2022-03-21_at_4.20.38_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="event-system"><a href="#event-system" aria-label="event system permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Event System</h3>
<p>The Event System is for events. It captures input events from input devices (for example a mouse, keyboard, or touch on mobile devices). If there is no Event System, you will not be able to have any input events.</p>
<h3 id="text-image-button-objects"><a href="#text-image-button-objects" aria-label="text image button objects permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Text, Image, Button objects</h3>
<h5 id="text"><a href="#text" aria-label="text permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Text</h5>
<p>Now let’s go to the text GameObject. Locate and select the text, then drag it to where you want it on the screen (let’s move it to the top left corner). We can increase the text font size (to 30 for example) to make it more visible. It will appear the text has disappeared, but we can correc this by changing the vertical overflow in the inspector from “Truncate” to “Overflow”, as shown below. We will probably change the text color later, after we add a background image. You can change the size of the text GameObject as well by dragging the text by one of it’s corners so it will hold more text without the need to overflow. This will be needed after we make a final UI design as this text may have a background frame.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png?w=484&amp;fm=webp 484w,
https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png?w=967&amp;fm=webp 967w,
https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png?w=1934&amp;fm=webp 1934w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png?w=484 484w,
https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png?w=967 967w,
https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png?w=1934 1934w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial84" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5gbdOMhnDoW8QVqFl6OMeo/c29c1be246e2fd94c6fb1fd873a81ca0/unity-tutorial84.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h5 id="image"><a href="#image" aria-label="image permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Image</h5>
<p>Let’s give our game (and frog) a background image. We can import a background image into the assets/images folder. I added the image GameObject into the scene and named it “BackgroundImage”. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png?w=131&amp;fm=webp 131w,
https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png?w=262&amp;fm=webp 262w,
https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png?w=524&amp;fm=webp 524w" sizes="(max-width: 524px) 100vw, 524px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png?w=131 131w,
https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png?w=262 262w,
https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png?w=524 524w" sizes="(max-width: 524px) 100vw, 524px"/>
          <img alt="unity-tutorial29" title="" src="https://images.ctfassets.net/em6l9zw4tzag/19K6ziUEAiXC2wEnKEj69a/9b367ff5d9e9a34d004a873b6a8bda3e/unity-tutorial29.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>In the Image inspector, drag and drop the imported image into the “Source Image” property in the “Image” component. </p>
<p>If the image looks too small, navigate to the image component and click “Set Native” to make the image its original size. But now it’s too big. Make sure position X &amp; Y are both set to zero so that the image is centered.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial41" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2KgalW3AMljVVoNmK9XjrC/8cd8f4ee05a9eed5cfcc1f42b9071077/unity-tutorial41.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It is ok that the image is too big, the reason for this is that the canvas is set to a lower resolution. Remember earlier when I mentioned that we’d change the reference resolution to the size of the background image? Let’s go to the canvas GameObject and set the reference resolution to the size of the image.</p>
<p>My image is 1920 x 1351 px. Now the image’s size looks good, but because it is not the same ratio as the screen, we will have to change the anchors and the image position.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial14" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4pfoCp6Vp74tkZhGOtYp9/b9faaeb01f5ced39f30e5bccc44e8668/unity-tutorial14.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If we want to change the image position and anchors, we can navigate to the “Rect Transform” component for our background image in the image inspector. Select “center-middle” from the anchor presets.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial65" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4gVlbxWHe2EAsxws40yrA5/d68d4312ce3a3d18412edf322a89bcab/unity-tutorial65.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Hold “Alt/Option” and select the bottom-center position for the image and anchors position to adjust. As you can see, the anchors changed their location to “bottom-center” <em>and</em> the image did as well.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial36" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4vG8xpQ6Lm7hDv29I8PFZy/1f33eb2b94b10106e59f439bd3f86641/unity-tutorial36.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Since we added text GameObject before the background image, we’ll need to change the order to bring the text to the front. You can move objects forward or backward by moving them up (or down) in the Hierarchy window. Lower items will be more forward, and higher items more towards the back.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png?w=115&amp;fm=webp 115w,
https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png?w=229&amp;fm=webp 229w,
https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png?w=458&amp;fm=webp 458w" sizes="(max-width: 458px) 100vw, 458px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png?w=115 115w,
https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png?w=229 229w,
https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png?w=458 458w" sizes="(max-width: 458px) 100vw, 458px"/>
          <img alt="unity-tutorial43" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3JQUl3oqeZphrXB4TKsCkw/513249dac116a78b8906780f5a11ecce/unity-tutorial43.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We need to revisit our text object and change its size as it depends on the reference resolution of the canvas. As you can see a few images above, the text is relatively small.</p>
<p>I changed the font size to 60 and edited it to say “Make the frog smaller”, changed the text color to black, and made the text object wider by dragging in the scene viewer. You may have noticed the text object disappears (if you happened to move it over top of the frog) as the frog is a <em>Sprite</em>, not an image.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial30" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h5 id="button"><a href="#button" aria-label="button permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Button</h5>
<p>To insert a button, right click in the Scene Hierarchy and go to Create → UI → Button. The button is accompanied with a text GameObject. </p>
<p>We can change the position, color, and size of the text &amp; the button,</p>
<p>I edited the text game object of the button, changed the text to “Scale”, changed the color to black, and changed the font size to 40. Now we have a button that does not do anything until we add a C# script.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial21" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2nBybo6sxKVZ8G8EbBr45v/f1d030d3e5eeb935960a222fe135784e/unity-tutorial21.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
<a href="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial30" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7oHP1TMfj3VGIg7iNnmMir/b13c21d46ee1c39749d0c632ba443122/unity-tutorial30.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="introduction-to-c-scripts"><a href="#introduction-to-c-scripts" aria-label="introduction to c scripts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Introduction to C# Scripts</h2>
<p>If you’re not familiar with C#, you can get familiar with it over at <a href="https://www.w3schools.com/cs/cs_intro.php">W3Schools</a> or <a href="https://docs.microsoft.com/en-us/dotnet/csharp/tour-of-csharp/tutorials/">Microsoft</a>. It is the programming language used in Unity scripts. </p>
<p>Let’s add a small C# script to our button GameObject so that when we click the button, the frog scales down. We’ll add a script component to the button by clicking on “Add Component” in the button’s inspector and name the script “Scale”. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png?w=263&amp;fm=webp 263w,
https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png?w=525&amp;fm=webp 525w,
https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png?w=1050&amp;fm=webp 1050w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png?w=263 263w,
https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png?w=525 525w,
https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png?w=1050 1050w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="intro to c# scripts" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Fttd4NilKK8N35MDBxkJD/5345539ba090ba257dbccc7fad6319ae/Screen_Shot_2022-03-21_at_4.31.41_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Unity defaults to Visual Studio for editing, but you can select any editor you prefer from the “External Tools” panel in preferences. After double clicking on the “Scale” script we’re taken to our editor with some initial content like this:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png?w=252&amp;fm=webp 252w,
https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png?w=503&amp;fm=webp 503w,
https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png?w=1006&amp;fm=webp 1006w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png?w=252 252w,
https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png?w=503 503w,
https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png?w=1006 1006w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial51" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5Zr0HPHMwPBb9EDq5zNPQk/4a4e606cdd29d18fa6dd1a59606685d6/unity-tutorial51.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Every script made in Unity contains two functions, “Start()” and “Update()”, inside a public class with the name of the C# file you just created. </p>
<p>When you run the game, the “Start()” function runs one time at the beginning of the game, while the “Update()” function is called once per frame. We don’t have to use these functions in every script, so we can either delete them or leave them empty. </p>
<p>To scale down the frog when we click on the Scale button, we will make a new function, <code>public void ScaleDown(){}</code>, so we can call this function when we click on the Scale button.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png?w=440&amp;fm=webp 440w,
https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png?w=880&amp;fm=webp 880w,
https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png?w=1760&amp;fm=webp 1760w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png?w=440 440w,
https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png?w=880 880w,
https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png?w=1760 1760w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial24" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1d7rE5pB9KLuUvZBelH1xb/0f42287a2a2a32a5e73453e8576ad43c/unity-tutorial24.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Save the script file and return to Unity to call the function and run the game. Select the button GameObject from the Hierarchy. You will find the OnClick() list in the button component in the inspector as shown in the image below. Click “+” and add the function we just created in the script. Since the script is attached to the button itself, drag and drop the button  GameObject from Hierarchy to the empty GameObject area and select the “ScaleDown()” function from the drop down menu.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png?w=352&amp;fm=webp 352w,
https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png?w=704&amp;fm=webp 704w,
https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png?w=1408&amp;fm=webp 1408w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png?w=352 352w,
https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png?w=704 704w,
https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png?w=1408 1408w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial86" title="" src="https://images.ctfassets.net/em6l9zw4tzag/52Q4fUQjWevIpA4DnAhFSJ/1bbbdddb34d693df3f31d12c9a972f73/Screen_Shot_2022-03-17_at_10.17.03_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Time to run our game. Click the play button.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png?w=363&amp;fm=webp 363w,
https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png?w=726&amp;fm=webp 726w,
https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png?w=1452&amp;fm=webp 1452w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png?w=363 363w,
https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png?w=726 726w,
https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png?w=1452 1452w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial56" title="" src="https://images.ctfassets.net/em6l9zw4tzag/22Oj4vGXvb96qB97SCj4po/47affa51a9c879242923d7a651a1356b/unity-tutorial56.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>When we run the game, any changes made while in game mode cannot be saved, and when you exit game mode, everything returns to the state it was in prior to running (keep this in mind).</p>
<p>Now let’s click on the “Scale” button and see what happens to the frog.</p>
<p>(Before clicking on the scale button)
<a href="https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png?w=364&amp;fm=webp 364w,
https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png?w=728&amp;fm=webp 728w,
https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png?w=1456&amp;fm=webp 1456w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png?w=364 364w,
https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png?w=728 728w,
https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png?w=1456 1456w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial8" title="" src="https://images.ctfassets.net/em6l9zw4tzag/67QDc6Kg8Kz8QhvpwUJkKn/22c88c5b942d33eb1da48ab8177a57ac/unity-tutorial8.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>(After clicking on the scale button)
<a href="https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png?w=364&amp;fm=webp 364w,
https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png?w=728&amp;fm=webp 728w,
https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png?w=1456&amp;fm=webp 1456w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png?w=364 364w,
https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png?w=728 728w,
https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png?w=1456 1456w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial81" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4AXyHSDdeeb4YUozHUh1x9/748d46e46d8ae2db152e22b576c96e9d/unity-tutorial81.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>As you can see, the frog is smaller — and if you check the inspector, the scale values are now 0.2. Once you stop the game, the values will return to their originals.</p>
<p>If you made it this far — congratulations. You have made a functioning micro game!</p>
<h2 id="monitoring-our-games-for-errors--performance-issues"><a href="#monitoring-our-games-for-errors--performance-issues" aria-label="monitoring our games for errors  performance issues permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Monitoring our games for errors &amp; performance issues</h2>
<p>Whenever we develop a game so popular that it’s played by thousands of gamers, we’ll want to make sure we’re monitoring for errors and performance issues our users may experience so we can quickly resolve them. A tool like Sentry can help us with this.</p>
<h3 id="implementing-sentry"><a href="#implementing-sentry" aria-label="implementing sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Implementing Sentry</h3>
<p>Getting started is easy. <a href="https://blog.sentry.io/2022/03/21/unity-tutorial-what-you-need-to-know-before-developing-your-first-unity-game/sentry.io/signup">Signup</a>, and select “Unity” as the platform you’d like to setup.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png?w=492&amp;fm=webp 492w,
https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png?w=984&amp;fm=webp 984w,
https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png?w=1968&amp;fm=webp 1968w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png?w=492 492w,
https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png?w=984 984w,
https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png?w=1968 1968w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial53" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5j5LBI7LC82e143hqUFl4E/ca61cd63742d918979d713a319928af6/unity-tutorial53.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Create a new project in Sentry and give it a name. You can associate projects with certain teams, which is useful for large organizations.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png?w=492&amp;fm=webp 492w,
https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png?w=984&amp;fm=webp 984w,
https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png?w=1968&amp;fm=webp 1968w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png?w=492 492w,
https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png?w=984 984w,
https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png?w=1968 1968w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial66" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2ISfQLgNUGAmPf5uGv7pca/5bca11e97549a9c4c5152a2ce0cb26e5/unity-tutorial66.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once your project is created, you will find the steps to install the package, configure your DSN, and call the Unity SDK.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial5" title="" src="https://images.ctfassets.net/em6l9zw4tzag/34wRd1fA77kgz2VNqs3Czp/845d412d2ab221e68d54ec0161926c9f/unity-tutorial5.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We can open the package maanger in Unity by clicking Window &gt; Package Manager.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial16" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7y4Fjwug3QGFseMUmffMDS/2348cee2ed649316b4594adb025f925b/unity-tutorial16.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Click the ”+” sign and then “Add package from git URL…“.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png?w=799&amp;fm=webp 799w,
https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png?w=1598&amp;fm=webp 1598w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png?w=799 799w,
https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png?w=1598 1598w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial7" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7uplRGsjEbTokxRxCNfP6c/420bfad7b01d8fc11eb1fed7d45a03e4/unity-tutorial7.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Paste this URL into the input field: </p>
<div data-language="text"><pre><code>https://github.com/getsentry/unity.git#0.10.1 </code></pre></div>
<p>You can get the latest URL from the “Install” section in Sentry’s docs (<a href="https://docs.sentry.io/platforms/unity/">https://docs.sentry.io/platforms/unity/</a>). This will install the package.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png?w=799&amp;fm=webp 799w,
https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png?w=1598&amp;fm=webp 1598w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png?w=799 799w,
https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png?w=1598 1598w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial44" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4CES2yed5G5CGmEZlgOPXB/ce1e7da6b6214d56c711129a9e59bada/unity-tutorial44.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We’ll need to add our DSN by clicking on Tools &gt; Sentry. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png?w=299&amp;fm=webp 299w,
https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png?w=1196&amp;fm=webp 1196w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png?w=299 299w,
https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png?w=1196 1196w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial18" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1rD8P1kKOq9V4jEGGMtzYf/d36388432aef37dcedeb1f5f3aa83a4a/unity-tutorial18.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>To find the DSN to your project.</p>
<ul>
<li>If you are signed in, the Unity Sentry documentation will have the DSN to your project here <a href="https://docs.sentry.io/platforms/unity">https://docs.sentry.io/platforms/unity</a>.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png?w=399&amp;fm=webp 399w,
https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png?w=798&amp;fm=webp 798w,
https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png?w=1596&amp;fm=webp 1596w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png?w=399 399w,
https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png?w=798 798w,
https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png?w=1596 1596w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial79" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6VNY0h0baZnxPh3wXuuaFY/812042203b3733b06539cc2e7df3a12c/unity-tutorial79.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ul>
<li>You can get the DSN for your project within Sentry’s platform.</li>
</ul>
<p>Go to your Projects page &gt; Click on your current project &gt; Settings &gt; Client Keys (DSN).</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png?w=434&amp;fm=webp 434w,
https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png?w=868&amp;fm=webp 868w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png?w=434 434w,
https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png?w=868 868w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial15" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1jPnWKqmfZlxed0Cb3KWkm/94f1123b3b97d8151d2231c214ffbf4d/unity-tutorial15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="tracking-errors"><a href="#tracking-errors" aria-label="tracking errors permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tracking errors</h2>
<p>To track an error in Sentry, we need to trigger an intentional one. Let’s make a spelling mistake in our frog name and check if Unity will find the frog GameObject.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png?w=440&amp;fm=webp 440w,
https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png?w=879&amp;fm=webp 879w,
https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png?w=1758&amp;fm=webp 1758w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png?w=440 440w,
https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png?w=879 879w,
https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png?w=1758 1758w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial50" title="" src="https://images.ctfassets.net/em6l9zw4tzag/m4yJNETLklsm765PqNI9n/23088fdf6ea983a530b3578e6050d84f/unity-tutorial50.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>As seen below, we triggered a Null exception error as there is no GameObject called “Frog”.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial9" title="" src="https://images.ctfassets.net/em6l9zw4tzag/NdRkKH4fwMXddJGBjKo7r/1f14a54cec0908c8bfbc0513bc321e86/unity-tutorial9.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now let’s run the game one more time and see how Sentry tracked the error. </p>
<p>We have a new, unhandled issue to resolve. Once we handle this exception, we can click “Resolve”. (I’ll write more about what else we can do to monitor Unity errors in Sentry in a future post).</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png?w=310&amp;fm=webp 310w,
https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png?w=620&amp;fm=webp 620w,
https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png?w=1240&amp;fm=webp 1240w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png?w=310 310w,
https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png?w=620 620w,
https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png?w=1240 1240w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial34" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3rKAnPqHUmIt4zCmyKUuOl/c19a45ce065b027cc51eb5d4dc905a47/unity-tutorial34.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
<a href="https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png?w=410&amp;fm=webp 410w,
https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png?w=819&amp;fm=webp 819w,
https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png?w=1638&amp;fm=webp 1638w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png?w=410 410w,
https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png?w=819 819w,
https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png?w=1638 1638w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial42" title="" src="https://images.ctfassets.net/em6l9zw4tzag/57Snf6vyE02sv7GLToefBw/5c0d68d692002e859dfea8ad1dd8d0f6/unity-tutorial42.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="monitoring-performance"><a href="#monitoring-performance" aria-label="monitoring performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Monitoring performance</h2>
<p>A laggy game is a sure way to make someone stop playing. In addition to catching errors, it’s also important to monitor slowdowns or crashes in our game. We can get started by clicking “Performance” within Sentry.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial45" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5HboN0if8gEXcqrUAZPQEi/0cd9fc9ebd89fdb923230c1359477de4/unity-tutorial45.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>“Start setup” and then select the Unity SDK from the list of supported SDKs. </p>
<p>Back in the Unity editor, navigate to Tools &gt; Sentry &gt; then change the “Traces Sample Rate” to a value between 0 and 1, as shown in the image below. Inputting “1” will send 100% of transactions to Sentry.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png?w=301&amp;fm=webp 301w,
https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png?w=601&amp;fm=webp 601w,
https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png?w=1202&amp;fm=webp 1202w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png?w=301 301w,
https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png?w=601 601w,
https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png?w=1202 1202w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7KqTbfROwtdONcy6WFXYDh/6e236951911d17e0ff0abe5ac1a4b7ad/unity-tutorial3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We can open our “Scale” C# script to capture transactions for Sentry to monitor our project’s performance. We set this up by adding the code below:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png?w=436&amp;fm=webp 436w,
https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png?w=872&amp;fm=webp 872w,
https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png?w=1744&amp;fm=webp 1744w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png?w=436 436w,
https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png?w=872 872w,
https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png?w=1744 1744w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial60" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2ERLtsCjoeTw9zuijD2Yu9/91c28aee93b87f27e5ca90a0d39aef1a/unity-tutorial60.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now we can run the game and check the performance page in Sentry. You can toggle between projects, environments, and the time duration for the transactions you’re monitoring. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial57" title="" src="https://images.ctfassets.net/em6l9zw4tzag/bRrU2G0ajrbdYHccB5Lg9/4777d1543e56c0c52d795085934496c8/unity-tutorial57.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We can look at all transactions, or filter to only look at web vitals, frontend, backend, and/or mobile transactions.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-tutorial55" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2zBIdCkGhigYZQynEqz1qs/063f6449307f3dddb4e5a149b2ad706e/unity-tutorial55.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>For example, here, the All Transactions tab is open where we can see a handful of performance metrics (more details <a href="https://docs.sentry.io/product/performance/metrics/">here</a>, including User Misery, which is the number of users who experience a load time 4x the company response time threshold of 300ms).</p>
<h2 id="conclusion"><a href="#conclusion" aria-label="conclusion permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Conclusion</h2>
<p>Thank you for reading and I hope you have a basic understanding of the Unity Platform as well as Sentry’s application monitoring platform. Stay tuned for more Unity articles as we build on our foundational knowledge.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/74U5gl9Rg9TYDp1bYnFEXY/277dbc81e0a75afefee9441fb7ae2448/meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>11 Python IDEs Developers Should Consider</title>
      <link>https://blog.sentry.io/2022/03/16/11-python-ides-developers-should-consider/</link>
      <description>While all beginning Python developers will probably start coding using Python’s Integrated Development and Learning Environment (IDLE), it won’t take long before they realize this approach has its limits. Most will look to tools that help them more efficiently build code.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Python is one of the most popular programming languages available for software and application development today. Indeed, <a href="https://www.statista.com/statistics/793628/worldwide-developer-survey-most-used-languages/">nearly 50% of developers worldwide use Python</a> for their projects. Because it is also easy to learn, it’s a natural starting point for beginning developers.</p>
<p>While all beginning Python developers will probably start coding using Python’s Integrated Development and Learning Environment (IDLE), it won’t take long before they realize this approach has its limits. So, after some experience with IDLE, most will look to tools that help them more efficiently build code.</p>
<p>More advanced code editors like GNU/Emacs are the natural next step as they provide added functionality over the basic shell while maintaining coding and debugging speed. But most developers will want to move to full-featured integrated development environments (IDEs) quickly. IDEs include code editing, compiling/interpreting, debugging, code profiling, and version control features, among others.</p>
<p>Here are some of the best Python IDEs in the market today that even the most novice developer can use to enhance their development experience. Many offer both free and paid versions, allowing developers to expand their capabilities as they learn.</p>
<h2 id="best-for-beginners"><a href="#best-for-beginners" aria-label="best for beginners permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Best for Beginners</h2>
<p>There are a few choices that are ideally suited for those just starting out with Python programming. These IDEs focus on fundamental features and structures to help beginners learn to program effectively and use best practices. They point out to new developers where they have potential problems in their code and help them quickly and easily identify errors.</p>
<h3 id="idle"><a href="#idle" aria-label="idle permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>IDLE</h3>
<p>The default editor that is bundled with Python, IDLE has basic text editing and development capabilities. It gives users an introduction to basic IDE features such as syntax highlighting and smart indenting. It also includes a basic yet functional debugger. IDLE is a good starting point for those who do not want to be overwhelmed with large feature sets.</p>
<h3 id="thonny"><a href="#thonny" aria-label="thonny permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Thonny</h3>
<p>Among third-party IDEs, one targets itself specifically towards beginning developers. Thonny is a free, open-source, basic application that <a href="https://thonny.org/">lets novices get a good grasp</a> on working with an IDE. It has a simple, uncluttered interface that makes users focus on the code rather than other features. It also trains new developers on features like code completion and syntax highlighting.</p>
<p>Thonny has a basic debugger that again is intended for educational purposes. While more advanced third-party code analysis and error handling products are available, beginners should stick with the basics while using Thonny. Once they move to more advanced IDEs, developers are more likely to benefit from these tools.</p>
<p>Thonny is a great starting point for new Python developers, but it is intentionally limited. As developers advance in experience, they will want to transition to one of the other packages below.</p>
<h2 id="bridging-both-worlds"><a href="#bridging-both-worlds" aria-label="bridging both worlds permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Bridging Both Worlds</h2>
<p>As skills develop, developers will have access to more powerful features. There are a few options that offer excellent versions for beginners and then scale (both in feature sets and costs) as the user’s experience and needs increase.</p>
<h3 id="the-top-line-code-editors-that-act-like-ides"><a href="#the-top-line-code-editors-that-act-like-ides" aria-label="the top line code editors that act like ides permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The top line code editors that act like IDEs</h3>
<p>There are many outstanding editing products that, while officially considered code editors, have so much additional functionality that they verge on being IDEs. Among the packages new developers might want to consider, especially as an interim step between code editing and IDE development are:</p>
<ul>
<li>GNU/emacs</li>
<li>Atom</li>
<li>SublimeText</li>
<li>Vim</li>
</ul>
<h3 id="pycharm"><a href="#pycharm" aria-label="pycharm permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>PyCharm</h3>
<p>PyCharm from JetBrains is <a href="https://www.jetbrains.com/pycharm/">a powerful cross-platform IDE</a> specific to Python. PyCharm is widely used and has developed a large community to help support new developers find their footings. It comes in both a free basic and paid professional version ($199/year). </p>
<p>PyCharm has some of the most advanced feature sets among Python IDEs. The free (Community) version has useful tools for beginners, including code completion, syntax highlighting, and code verification, that make it easy to spot potential coding errors. It also includes helpful debugging and testing tools. </p>
<p>PyCharm also offers access to numerous plugins and extensions, including critical security plugins. These help new developers understand that it is not just ransomware that poses a threat; instead, it is vulnerabilities in their own code that give hackers a clear attack vector. </p>
<p>As developers advance, they will likely want to move to the professional version, which adds profiling, and remote development tools, along with integrations with frameworks like Django. PyCharm Professional also includes powerful scientific tools that are handy for data scientists.</p>
<h3 id="wing"><a href="#wing" aria-label="wing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Wing</h3>
<p>For a product that <a href="https://wingware.com/">truly scales with a developer’s experience</a> and needs, consider Wing. Wing is a Python-specific IDE that comes in three flavors: Wing 101, a simple, lightweight IDE for those just starting out; Wing Personal, an intermediate-level version for hobbyists; and Wing Pro for full-fledged developers.</p>
<p>Wing Pro has a high-end, powerful code editor and includes strong debugging tools, integrated unit testing, and remote development features. And it integrates with frameworks like Django.</p>
<p>Wing offers a 30-day free trial for the Pro version. Developers may choose from an annual ($179) or lifetime license for the current version ($245) that comes with one year of free upgrades.</p>
<h3 id="visual-studio-code"><a href="#visual-studio-code" aria-label="visual studio code permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Visual Studio Code</h3>
<p>Visual Studio Code is Microsoft’s free entry into the Python IDE market. Although it is officially cross-platform, it is (not surprisingly) perhaps <a href="https://code.visualstudio.com">most effective for use</a> in Windows. Because it is a Microsoft product, it has a large and active community.</p>
<p>The strength of Visual Studio Code is its lightweight code editor, which is an excellent starting point for beginners. In addition, it offers an intelligent auto-completion feature, which will benefit new developers. Additional tools such as syntax highlighting, and auto-indentation increase coding efficiency. More advanced developers can take advantage of the thousands of available extensions and libraries. </p>
<p>Visual Studio Code includes a native debugger, but developers should consider third-party tools for <a href="https://sentry.io/for/python/?utm_campaign=10530506129&amp;utm_content=g&amp;utm_medium=cpc&amp;utm_source=google&amp;utm_term=sentry.io">more advanced error identification</a> and correction.</p>
<h2 id="powerful-platforms-for-advanced-developers"><a href="#powerful-platforms-for-advanced-developers" aria-label="powerful platforms for advanced developers permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Powerful Platforms for Advanced Developers</h2>
<p>As their experience continues to grow, developers may want to consider additional options that have powerful features focused on specific needs such as data science.</p>
<h3 id="pydeveclipse"><a href="#pydeveclipse" aria-label="pydeveclipse permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>PyDev/Eclipse</h3>
<p>PyDev and Eclipse <a href="https://www.pydev.org/index.html">may be the IDE of choice</a> for developers looking to do double duty when learning languages. The Eclipse IDE initially focused on Java, but further development led to several plugins allowing Eclipse to work with other languages. The PyDev plugin in Eclipse’s Python IDE product.</p>
<p>PyDev is open source, making it an economical choice for beginners. However, PyDev requests that users donate through PayPal or Patreon to support continued development.</p>
<p>PyDev’s code completion tools are useful as novice developers begin to memorize Python syntax. In addition, code analysis and code coverage tools help developers build code quickly and with fewer errors that require debugging. PyDev also integrates with the Django Python framework, making development even simpler.</p>
<p>Learning PyDev and Eclipse will help more advanced developers easily transfer between languages. Those who have spent time with PyDev should find no problems jumping into Java programming with Eclipse.</p>
<p>While PyDev does have a native debugger, <a href="https://sentry.io/for/python/">beginners may want to consider</a> more fully-featured third-party debugging, error-tracking, and performance monitoring tools. </p>
<p>Because of its extensive environment, large feature set, and multi-language support, Eclipse will require a bit more effort to learn to use well than other IDEs.</p>
<h3 id="spyder"><a href="#spyder" aria-label="spyder permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Spyder</h3>
<p>Spyder is a powerful, cross-platform, Python-specific IDE with a dedicated focus. Specifically, Spyder <a href="https://www.spyder-ide.org">is built for scientific applications</a>, that is, applications with extensive data science needs. While Spyder is a free, open-source IDE, they request donations to help fund future development.</p>
<p>Spyder has helpful code editing features such as auto-completion, syntax highlighting, and static code analysis. But where it stands out is with its more advanced features. For example, it has built-in integrations with many scientific packages - NumPy, SciPy, iPython, and matplotlib, just to name a few. In addition, Spyder offers a variable explorer that makes it easy to view data within the IDE.</p>
<p>Spyder has powerful debugging capabilities and is known for its efficiency in identifying and eliminating bottlenecks.  </p>
<p>Spyder is also the choice for <a href="https://hostingdata.co.uk/online-privacy-guide/">developers more concerned with online privacy</a> as, unlike most of the other IDEs, it does not collect or maintain personal developer information.</p>
<h3 id="jupyter-notebook"><a href="#jupyter-notebook" aria-label="jupyter notebook permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Jupyter Notebook</h3>
<p>Another IDE targeting data scientists, Jupyter Notebook is a free, open-source, cross-platform app that works with Python as well as other languages. Jupyter has a clean, easy-to-use interface that <a href="https://jupyter.org">simplifies coding</a> for new developers.</p>
<p>Jupyter is particularly well-suited for data-intensive applications such as numerical simulation, statistical modeling, and machine learning.</p>
<p>IDEs are great (and even necessary) for Python developers writing and compiling their code. But once it’s time to ship to production, using a monitoring platform <a href="https://sentry.io">like Sentry</a> will let them know how well (or not well) their code is performing. </p>
<h2 id="getting-the-most-out-of-python-ides"><a href="#getting-the-most-out-of-python-ides" aria-label="getting the most out of python ides permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Getting the most out of Python IDEs</h2>
<p>Python IDEs do more than just help beginning developers learn good coding practices and build error-free code. They also serve as an introduction to a range of products that streamline and secure the application development lifecycle.</p>
<p>For instance, while Python IDEs often have outstanding debugging capabilities, they generally are not as useful for monitoring code health once a product is shipped. That is where more focused products, like <a href="https://docs.sentry.io/platforms/python/">Sentry’s Python SDK</a>, come into play.</p>
<p>Sentry has a number of advanced features that reduce the time spent in identifying and correcting errors. It provides deep inspection of runtime errors and allows users to quickly group exceptions by type to prioritize remediation efforts. Sentry also identifies issues that negatively impact application performance and highlights code errors associated with performance problems. SDK users can optimize their code health and build high-performing applications to help meet every customer performance demand.</p>
<h2 id="conclusion"><a href="#conclusion" aria-label="conclusion permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Conclusion</h2>
<p>Because of Python’s popularity, the number of learning and development tools available to new developers is exceptional. IDEs are one such tool. Coupled with performance monitoring products like the Sentry, IDEs can quickly turn the newest of developers into efficient, accomplished ones.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/71Q0i090p06pCDqQsj2aH2/34949d67c8f1020955219c8aa07bd26e/python-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Building an Always-on Business Leaves No Room for Downtime</title>
      <link>https://blog.sentry.io/2022/03/15/building-an-always-on-business-leaves-no-room-for-downtime/</link>
      <description>If uptime is a core tenet of your business success, unreported issues and users moving on to the next best thing isn&#39;t an option. Take San Francisco-based Arcade for example.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As is often the case with digital products, your users could be experiencing issues you might not be aware of. The unknown unknowns could include random <a href="https://sentry.io/features/context/">bugs</a> or memory leaks slowing down <a href="https://sentry.io/for/performance/">performance</a> and, in many cases, those issues aren’t reported… folks just bail.</p>
<p>If uptime is a core tenet of your business success, unreported issues and users moving on to the next best thing isn’t an option. Take San Francisco-based <a href="https://www.arcade.software/">Arcade</a> for example. </p>
<p>Designed by technologists who’ve built products at Atlassian and LaunchDarkly, Arcade empowers everyone to build, manage, and publish interactive demos in just a few clicks. This gives creators the tools they need to feel proud of their work—and show it off in magical, high-impact experiences on websites, social media, and beyond.</p>
<p>“Our product is highly visible. Organizations use Arcade on landing pages that are viewed thousands of times over. Simply put, they have to work… always,” says Rich Manalang, Arcade CTO &amp; Co-founder.</p>
<h2 id="no-second-chances"><a href="#no-second-chances" aria-label="no second chances permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>No second chances</h2>
<p>Arcade’s published demos get tens of thousands of unique views per month across website properties, and they’re currently growing in volume by ~2x month over month. As a result, the potential impact on someone else’s ability to showcase their product carries inherent risk. To support that growing audience, they’re committed to achieving <a href="https://try.sentry-demo.com/demo/start/?scenario=releases">100% crash-free sessions</a> with every release… no pressure.</p>
<p>Just the other day Rich and his team noticed that their Chrome extension was failing… nothing huge, but something that could’ve impacted the user experience. Using Sentry, and leveraging the ability to <a href="https://docs.sentry.io/product/cli/releases/#sentry-cli-sourcemaps">upload source maps</a>, they were able to dig deeper, quickly identify the source behind the issue and solve it before it could grow into a bigger problem.</p>
<p>Here’s how they did it:</p>
</div><div>
<p>As it turns out, the issue surfaced because the team uses certain browser features that aren’t supported universally across operating systems just yet. But that comes with the territory; delivering a digital product doesn’t happen in a vacuum and third-party tools and core technologies can impact performance based on their respective updates and new releases.</p>
<p>“We have an always-on business that other organizations rely on, there’s no room for downtime and Sentry has become an essential business driver for us in this sense,” says Rich, adding that his team pays close attention to “the characteristics in the metrics that Sentry provides. In particular, we want to know whether from release to release, our product gets faster or slower.”</p>
<p>If you’d like to learn more about how the Arcade team approaches release health and manages 100% uptime, check out our full conversation with them <a href="https://sentry.io/customers/arcade/">here</a>.</p>
<p>And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5yvzFYXlWbaZaSMa9npnlp/ad95dfc67ebb317a04f235ca1e6da30d/releaseHealth3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Continuous Performance Improvement of HTTP API</title>
      <link>https://blog.sentry.io/2022/03/01/continuous-performance-improvement-of-http-api/</link>
      <description>We develop an analytics HTTP API in Python. This is how we discover what to improve to serve requests faster.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2022-03-01T00:00">March 1, 2022</time></p><ul><li><a href="https://blog.sentry.io/guest-posts/"><span>Guest Posts</span></a></li></ul><div><p><em>The following guest post addresses how to improve your services’s performance with Sentry and other application profilers for Python. Visit <a href="https://www.specto.dev/">Specto.dev</a> to learn more about application profiling and Sentry’s upcoming mobile application profiling offering. We’re making intentional investments in performance monitoring to make sure we give you all the context to help you solve what’s urgent faster.</em></p>
<p><em>For those who are new to profiling, application profilers augment performance monitoring data by capturing every single function call taking place in a given operation. As you’ll read below, profiling data can be pretty difficult to analyze on its own. When combined with Sentry’s Error and Performance Monitoring, developers get insights into not only what’s slow, but also the function calls that may be the root cause.</em></p>
<hr/>
<p>In my <a href="https://blog.sentry.io/2022/02/25/how-we-optimized-python-api-server-code-100x/">previous post</a>, I detailed a few code tricks to improve backend performance. How did I know where to focus and what to optimize, though? Indeed, joining Cython and other low-level gizmos to the party should have solid reasoning.</p>
<p>I work at <a href="https://athenian.com/">Athenian</a>. Athenian offers a SaaS that helps engineering leaders build a continuous improvement software development culture. We have pretty strict performance targets dictated by the UX. It’s hard to achieve great P95 response times without proper tooling. So we’ve wrapped ourselves with high-quality apps and services:</p>
<ul>
<li><a href="https://docs.sentry.io/product/sentry-basics/tracing/distributed-tracing/">Sentry Distributed Tracing</a> allows us to investigate why a particular API request executed slow in production. This tool works in the Python domain.</li>
<li>Prodfiler gives an independent zoom into the native CPU performance, including all the shared libraries.</li>
<li>py-spy is an excellent low-overhead Python profiler by <a href="https://medium.com/u/de31421e853a">Ben Frederickson</a></li>
<li>Prometheus + Grafana help to monitor the immediate situation and trigger performance disaster recovery.</li>
<li><a href="https://cloud.google.com/logging/docs/logs-based-metrics">Google log-based metrics</a> augment the previous toolchain by indicating an elevated frequency of important operational events.</li>
<li><a href="https://cloud.google.com/blog/products/databases/get-ahead-of-database-performance-issues-with-cloud-sql-insights">Google Cloud SQL</a> Insights is a must-have managed PostgreSQL performance monitor on the individual query level.</li>
<li><a href="https://explain.tensor.ru/">explain.tensor.ru</a> is my favorite PostgreSQL execution plan visualizer. It offers many automated hints that are always relevant.</li>
</ul>
<p>Today’s post illustrates the weekly routine to identify slow spots and speed up things. In particular, I will demonstrate the usefulness of Sentry traces, py-spy, and Prodfiler.</p>
<h2 id="finding-the-victim"><a href="#finding-the-victim" aria-label="finding the victim permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Finding the victim</h2>
<p>We start at the performance overview page in <a href="https://sentry.io/">Sentry</a>. We check it every few days:</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/2t5LGlZt0lfONUmLlqdzJZ/e054da6b321ac215801e83ba305b7c17/api_perf_overview.png" alt="" title="Athenian API performance overview"/></p><figcaption><p>Athenian API performance overview in Sentry. Image by Author.</p></figcaption></figure><div>
<p>The table shows P50 and P95 response times for all our API endpoints and the deferred (<code>if err != nil {</code> , oops, that’s my muscle memory) tasks executed after serving the main request, e.g., updating the cache. Athenian API is an analytics API. It aggregates hundreds of thousands of items such as PR, release, CI run, JIRA issue metadata while typically applying tens of filters and calculating statistics and confidence intervals on the fly. Hence the average response time measures in seconds instead of milliseconds.</p>
<p>P50 and P95 are also visible in Prometheus / Grafana, nothing is outstanding yet. However, if we click an endpoint, for example, <code>/metrics/code_checks</code>, we will access more details and drill down:</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/6Wwhf5Q2nGnFOwbn9AbnyD/a72bb2b154a7c5e8d317cd25759edc45/slow_runs.png" alt="" title="Athenian slow runs"/></p><figcaption><p>Slow runs of one of our API’s endpoints in Sentry. Image by Author.</p></figcaption></figure><div>
<p>The details table shows the analyzed traces of the chosen endpoint sorted by duration in descending order. I thank the Sentry team for changing the USER column to display user IDs instead of IP addresses by my request 👏🙇‍♂️.</p>
<p>We proceed by clicking on a suspiciously slow endpoint call and studying a profile-like structure. It becomes immediately apparent (for the code author, of course) where DB and CPU bottlenecks happened.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/7FLJa215jq2x89pUsrkBzT/57f5de093c1c8513fd75b68f8ea0c09f/fragment_end_trace.png" alt="" title="Fragment of API trace "/></p><figcaption><p>Fragment of API endpoint trace in Sentry. Image by Author.</p></figcaption></figure><div>
<p>The names in the left pane are the result of manual code instrumentation. For example, this is how we instrument the calls to <code>mine_check_runs()</code> function:</p>
<div data-language="text"><pre><code>@sentry_span
async def mine_check_runs(...):
    # endpoint logic</code></pre></div>
<p>where <code>@sentry_span</code> is a function decorator to wrap the call into Sentry span — node in the trace tree. We don’t decorate every single method we have, of course. Instead, we follow the intuition of what’s interesting to measure and what’s noise.</p>
<div data-language="python"><pre><code><span>def</span> <span>sentry_span</span><span>(</span>func<span>)</span><span>:</span>
    <span>if</span> asyncio<span>.</span>iscoroutinefunction<span>(</span>func<span>)</span><span>:</span>
        <span>@async_wraps</span><span>(</span>func<span>)</span>
        <span>async</span> <span>def</span> <span>wrapped_async_sentry_span</span><span>(</span><span>*</span>args<span>,</span> <span>**</span>kwargs<span>)</span><span>:</span>
            __tracebackhide__ <span>=</span> <span>True</span>
            <span>with</span> sentry_sdk<span>.</span>Hub<span>(</span>sentry_sdk<span>.</span>Hub<span>.</span>current<span>)</span><span>:</span>
                <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span>func<span>.</span>__qualname__<span>)</span><span>:</span>
                    <span>return</span> <span>await</span> func<span>(</span><span>*</span>args<span>,</span> <span>**</span>kwargs<span>)</span>

        <span>return</span> wrapped_async_sentry_span

    <span>@functools<span>.</span>wraps</span><span>(</span>func<span>)</span>
    <span>def</span> <span>wrapped_sync_sentry_span</span><span>(</span><span>*</span>args<span>,</span> <span>**</span>kwargs<span>)</span><span>:</span>
        __tracebackhide__ <span>=</span> <span>True</span>
        <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span>func<span>.</span>__qualname__<span>)</span><span>:</span>
            <span>return</span> func<span>(</span><span>*</span>args<span>,</span> <span>**</span>kwargs<span>)</span>

    <span>return</span> wrapped_sync_sentry_span</code></pre></div>
<p><code>sentry_sdk.start_span()</code> performs the elapsed time measurement of the internals. <code>with sentry_sdk.Hub(sentry_sdk.Hub.current)</code> is the <a href="https://github.com/getsentry/sentry-python/issues/772">workaround for incomplete <code>asyncio</code> support in Sentry SDK</a>. <code>__tracebackhide__</code> is a magic local variable that hides the wrapper function from call stacks in pytest and Sentry.</p>
<p><code>/metrics/code_checks</code> returns <a href="https://api.athenian.co/v1/ui/#model-CodeCheckMetricID">various statistics about CI runs</a> reported to GitHub: GitHub Actions, CircleCI, Appveyor, etc. One commit may generate tens and even hundreds of CI runs, and according to the Sentry trace we loaded 164,610 of them for just two weeks of client X. Fetching CI runs from the DB requires about 10 <code>JOIN</code>-s; usually, it’s not a problem, and the query finishes in~500ms, but we were unfortunate. The second problem emerged in <code>disambiguate_pull_requests()</code> Python function. The CI runs reported to GitHub map to commits instead of pull requests. <a href="https://docs.github.com/en/rest/reference/checks#create-a-check-run">That’s how GitHub works</a>. Consequently, if there are several PRs with the same commit, we have to determine which of the PRs triggered the CI. <code>_disambiguate_pull_requests()</code> applies several heuristics to solve the puzzle. We can and will precompute the function, but we haven’t yet due to a few domain-specific issues.</p>
<p>To cut a long story short, it’s not OK to spend one second in <code>_disambiguate_pull_requests()</code> and we should dig inside and optimize.</p>
<h2 id="profile-rewrite-repeat"><a href="#profile-rewrite-repeat" aria-label="profile rewrite repeat permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Profile, rewrite, repeat</h2>
<p>Thanks to storing the request body in Sentry trace metadata, it’s always possible to replay locally with production DB proxied to localhost. We proceed by saving the function’s arguments on disk and preparing the <em>macro</em>benchmark.</p>
<div data-language="text"><pre><code># curl --data &#39;{...}&#39; http://localhost:8080/v1/metrics/code_checks
async def _disambiguate_pull_requests(*args, **kwargs):
    with open(&#34;/tmp/args.pickle&#34;, &#34;wb&#34;) as fout:
        pickle.dump((args, kwargs), fout)
    exit()</code></pre></div>
<p>I use <a href="https://github.com/ionelmc/pytest-benchmark">pytest-benchmark</a>, a pytest plugin for benchmarking.</p>
<div data-language="text"><pre><code>def test__disambiguate_pull_requests(benchmark):
    with open(&#34;/tmp/args.pickle&#34;, &#34;rb&#34;) as fin:
        args, kwargs = pickle.load(fin)
    benchmark(_disambiguate_pull_requests, *args, **kwargs)</code></pre></div>
<p>Execute the benchmark with <code>pytest --benchmark-min-rounds=N</code> where N is a tradeoff between precision and benchmark time. N should be big enough to bound round fluctuations to the target level. I usually aim at somewhere between 0.5% and 2% ratio to the average.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/4Ul1qJnyafQyLcoX6z95dV/147ea953b65af417d8c8293f37867996/sample_benchmark_run.png" alt="" title="Athenian sample benchmark run"/></p><figcaption><p>Sample benchmark run. Image by Author.</p></figcaption></figure><div>
<p>We have set up the <em>macro</em>benchmark and now enter the profile-optimize cycle:</p>
<ol>
<li>Gather the profile of the current code.</li>
<li>Analyze the profile: what are the bottlenecks? Did the last changes help?</li>
<li>Stop if you either see an evenly flat profile or struggle with optimizing further.</li>
<li>Formulate optimization hypothesis and rewrite the code accordingly.</li>
<li>Go to step 1.</li>
</ol>
<p>I am a fan of gathering the profile with py-spy. It’s a sampling profiler for Python: it reads the memory dump of the process with some configurable frequency and recognizes and walks the thread stacks. The overhead grows naturally as the sampling frequency increases, and there is always a tradeoff. I usually set 500 Hz for decent results.</p>
<p><code>py-spy record -r 500 -o profile.ss -f speedscope -- pytest ...</code></p>
<p>py-spy can output files in <a href="https://github.com/jlfwong/speedscope">speedscope</a> flamegraph-like format. I like speedscope for the “Left Heavy” view, and it’s ideal for investigating repetitive benchmark iterations.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/2gAsl0YLHsK7VeAnTNrS7V/fb692556bd8e09c1854bdbd7160e9f7b/py-spy_profile.png" alt="" title="Athenian py-spy profile iteration 0"/></p><figcaption><p>Profile gathered by py-spy and visualized in Speedscope, iteration 0. Image by Author.</p></figcaption></figure><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/7GjiDOkB0892AMHcyjilCy/c541bcca73351b4aefc67070df34de8c/pyspy_profile_iteration_6.png" alt="" title="Athenian pyspy profile iteration 6"/></p></figure><div>
<p>It usually takes around ten profile-optimize loop iterations to hit a wall and stop. The upper two images were speedscope profiles when I began optimizing and at the 6th iteration. We see that the unrelated pink flames on the right have become wider, while some flames on the left disappeared — that’s good.</p>
<p>Alas, <em>macro</em>benchmarks inherit some of the microbenchmark problems, particularly the dependency on the context. And, of course, the best solution for the performance problems is changing the algorithm instead of bypassing another pandas consolidation. I recommend everyone to watch <a href="https://www.youtube.com/watch?v=m25p3EtBua4">“Design for Performance”</a> talk by Fedor Pikus. Don’t mind C++ because the presented concepts are universally applicable.</p>
<h2 id="monitoring-assumptions"><a href="#monitoring-assumptions" aria-label="monitoring assumptions permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Monitoring assumptions</h2>
<p>Regarding the dependency on the context. We have optimized <code>_disambiguate_pull_requests()</code> for one particular client. How can we be sure that we don’t have a performance regression for some other client? What’s the overall impact instead of reduced P95? Prodfiler comes on the scene.</p>
<p>Many have heard about <a href="https://ebpf.io/">eBPF</a> — arguably the greatest Linux kernel technology since cgroups. We’ve got a kernel virtual machine with JIT, and it can execute lightweight programs in runtime. eBPF can sample Python call stack similarly to py-spy but with less overhead and generalized to other languages. Prodfiler is a SaaS that aggregates traces from eBPF-driven agents. An agent is a shadow Kubernetes pod with full access to the node.</p>
<p>The following flamegraph in Prodfiler shows how <code>_disambiguate_pull_requests()</code> performed in our production over one day. The longer the aggregated period is, the more samples Profiler collects, and the better the precision becomes.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1JBX2lPzMaM9VfebX9vvDN/1ff07c0bdc1d14213d1f86b0bf857019/perf_in_prodfiler.png" alt="" title="Athenian Prodfiler performance"/></p><figcaption><p>Fine-grained insight into the function’s performance in Prodfiler. Image by Author.</p></figcaption></figure><div>
<p>There are a few caveats:</p>
<ol>
<li>We compile CPython with some extra optimizations compared to the standard OS package. Hence we have to submit debug symbols to Prodfiler in our CI/CD.</li>
<li><code>asyncio</code> is not supported, so there are no coroutine stack traces.</li>
<li>Compared to manual Sentry-like instrumentation, it’s impossible to measure logical parts of a function.</li>
</ol>
<p>Overall, Prodfiler has proved to be a great tool to validate performance optimizations. As a bonus, it seamlessly decomposes the flames down to specific kernel functions, which py-spy cannot do.</p>
<h2 id="summary"><a href="#summary" aria-label="summary permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Summary</h2>
<p>I have described how we identify slow CPU spots in the backend, profile them, and monitor the optimizations. We have used:</p>
<ul>
<li><a href="https://docs.sentry.io/product/sentry-basics/tracing/distributed-tracing/">Sentry Distributed Tracing</a>.</li>
<li>py-spy.</li>
<li>Prodfiler.</li>
</ul>
<p>The next post should cover how we wrestle with PostgreSQL performance, so stay tuned and please follow the author. Oh, and if the product we’re building sounds like something your engineering org needs, check out our <a href="https://athenian.com/">website</a>.</p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 01 Mar 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>JS Browser SDK: Bundle size matters</title>
      <link>https://blog.sentry.io/2022/02/28/js-browser-sdk-bundle-size-matters/</link>
      <description>SDKs naturally increase in size over time. After all, it does take more bytes to implement more features. This is not a big deal for most…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>SDKs naturally increase in size over time. After all, it does take more bytes to implement more features. This is not a big deal for most languages—the relative size of each new feature is small, and load times and storage aren’t big concerns for code running on a server.</p>
<p>On the other hand, browser-based JavaScript SDKs have to load in the browsers of our customers’ users (in what is called “bundles” of code.) Larger JS bundles mean longer load times, which in turn increase user misery, which then can cause the user to leave pages entirely.</p>
<h2 id="how-much-does-js-bundle-size-really-matter"><a href="#how-much-does-js-bundle-size-really-matter" aria-label="how much does js bundle size really matter permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>How much does JS bundle size really matter?</h2>
<p>Simply put, JavaScript bundle size matters a lot. From some of the folks that help steer the ship:</p>
<blockquote>
<p>Companies with high-traffic applications save millions of dollars by tweaking and optimizing their performance. Google, for example, found out that a one-half-second delay in returning a search results page damaged user satisfaction, resulting in a 20% drop in traffic. And for a company that generates 95% of its profits from advertising, a 20% drop in traffic meant millions of dollars in lost revenue. Amazon did a similar experiment as well, and found out that even very small delays—increments of 100 milliseconds—resulted in a significant drop in revenue.</p>
</blockquote>
<p><em>- Third-Party JavaScript, Ben Vinegar &amp; Anton Kovalyov, 2013</em></p>
<p>And yes, <a href="https://medium.com/swlh/the-unhealthy-obsession-with-javascript-bundle-size-bf0945184c86">there is a lot of debate</a> about bundle size obsession. But not everyone in the world has access to high-speed internet and the latest and greatest toys from big smartphone and laptop manufacturers. Those folks are disproportionately affected by the move towards bigger and bigger web apps with longer and longer load times. </p>
<p>In the future, we think we’ll see some fundamental changes to address this—and we’d like to help lead that charge—but in the meantime, we need to optimize as much as we can with the tools available. It required a lot of research, trial and error, and bikeshedding, but we’re pleased to say we are achieving measurable success.</p>
<h2 id="why-is-reducing-bundle-size-hard"><a href="#why-is-reducing-bundle-size-hard" aria-label="why is reducing bundle size hard permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Why is reducing bundle size hard?</h2>
<p>The JavaScript SDK (especially on the browser) is one of our most popular SDKs. Last year leading up to the holiday shopping season, we broke over 3 million downloads a day (via npm alone). So, we really don’t want to break something, degrading the user experience and making the lives of all our friends in support a nightmare.</p>
<p>To make matters even more complicated, there were a variety of ways we could approach the problem. We could make the SDK more “tree-shakeable,” reduce the number of bytes in the SDK, adopt new async loading strategies for different parts of the SDK or more. These changes could have been breaking (required SDK end-user changes) or not, so we were quickly getting overwhelmed with the scope of it all. In the end, we realized for this initiative to succeed, we needed a clear plan and a solid foundation.</p>
<p>To get the foundation in place, we decided to first work on release stability. Release stability covered all the work that goes into shipping our SDK in a reliable manner—checking that everything still worked as it did before. </p>
<p>This included unit tests, integration tests, e2e, and some new concepts for testing like “tree shake-ability” of the browser SDK. Before we started our work, testing on the JS SDK was sub-optimal. There were the infamous ember tests that constantly failed but weren’t maintained by someone on the team, browser stack integration tests that took forever (and constantly flaked), and issues with our unit test coverage for both browser and node.</p>
<p>To improve this, <a href="https://github.com/getsentry/sentry-javascript/pull/4226">we reactivated our old browser integration tests</a>, Onur contributed with <a href="https://github.com/getsentry/sentry-javascript/pull/3989">new browser integration tests using the Playwright framework</a>, and then we ran a <a href="https://github.com/getsentry/sentry-javascript/pulls?q=is%3Apr+add+integration+tests+is%3Aclosed+milestone%3A%22Release+Stability%22">BUNCH of integration tests</a>. </p>
<p>These new integration tests covered all the browser-specific public APIs and now, also tracing, where we didn’t have tracing before (still terrible coverage in Node, but “Rome wasn’t” … you get it.) </p>
<h3 id="getting-stuff-done"><a href="#getting-stuff-done" aria-label="getting stuff done permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Getting stuff done</h3>
<p>Now having the plan was awesome, but we recognized that there were changes we could make that have little to no risk but still add a ton of value. In the week before the holiday break in December, we assembled a task force to push out some of these quick wins. The goal of this task force? To reduce the size of the minified uncompressed bundle by 15%.</p>
<p>Here are some of the methods we used to achieve these quick wins:</p>
<ul>
<li>Reducing the usage of un-minifiable Public Class Declarations</li>
<li>Removing unnecessary TypeScript enums (which don’t transpile to es5 well)</li>
<li>Reducing wasteful protocol code</li>
<li>Removing usage of optional chaining (which doesn’t transpile to es5 well)</li>
<li>Converting classes to functions + objects</li>
<li>Simplifying the internal logger</li>
<li>Consolidating duplicate code</li>
<li>Investigating producing different types of bundles (debug, production)</li>
</ul>
<p>The iteration speed was quick, with PRs quickly opening and closing to test out new ideas—it was awesome.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png?w=320&amp;fm=webp 320w,
https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png?w=639&amp;fm=webp 639w,
https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png?w=1278&amp;fm=webp 1278w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png?w=320 320w,
https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png?w=639 639w,
https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png?w=1278 1278w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="abhi_deleting_backend" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6yQkb5S0L0wy1qzxhRO9Js/695f8b5001ea7e76d8c55e1c75ff54cb/Untitled.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We monitored this process day by day, tracked all the PRs in a GH milestone, and made sure to add tests to increase confidence. We then shipped these changes in a new SDK version, 6.17.0</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png?w=146&amp;fm=webp 146w,
https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png?w=291&amp;fm=webp 291w,
https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png?w=582&amp;fm=webp 582w" sizes="(max-width: 582px) 100vw, 582px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png?w=146 146w,
https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png?w=291 291w,
https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png?w=582 582w" sizes="(max-width: 582px) 100vw, 582px"/>
          <img alt="ben_tweet" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1oLs6bO3B5gxzUJ5uIpy6s/5bca5aca8c4865108d27691bd4500400/Untitled__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It’s more like 15-16%.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png?w=514&amp;fm=webp 514w,
https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png?w=1027&amp;fm=webp 1027w,
https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png?w=2054&amp;fm=webp 2054w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png?w=514 514w,
https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png?w=1027 1027w,
https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png?w=2054 2054w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="numbers" title="" src="https://images.ctfassets.net/em6l9zw4tzag/hVnV1SSUKOcbCVXfpc8HQ/5530a7763d66faff9cc642320974dd42/Untitled__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Consider the full timeline and then how long it took the team to achieve this in Q4.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png?w=362&amp;fm=webp 362w,
https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png?w=723&amp;fm=webp 723w,
https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png?w=1446&amp;fm=webp 1446w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png?w=362 362w,
https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png?w=723 723w,
https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png?w=1446 1446w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="timeline" title="" src="https://images.ctfassets.net/em6l9zw4tzag/164WkXf6b771EEx5crMFxA/35fc30ac2e113a24bdf000350224d9b3/Untitled__3_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="whats-next"><a href="#whats-next" aria-label="whats next permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>What’s Next?</h2>
<p>Now that we’ve put the foundation in place with release stability confidence and tackled the quick wins, we can proceed with shipping a new major version of the JavaScript SDK. This will further enable tree-shaking optimizations in the SDK and reduce another 15% of the bundle size. We are targeting to ship the major version in Q1 of 2022. <a href="https://github.com/getsentry/sentry-javascript/issues/4240">Check out our plan here</a>.</p>
<p>After we ship the major, there are a variety of next steps we can consider.</p>
<ul>
<li>Optimize hubs and scopes, allowing us to reduce bundle size and better support micro-frontend application</li>
<li>Go further with tree-shaking support</li>
<li>Expand on async loading, making it easier to selectively load parts of the SDK</li>
<li>Refactor the internals even more, maybe even <a href="https://gist.github.com/mitsuhiko/deb73a83f1d2acea330b766cece435c6">adopting a hook system</a>?</li>
<li>Refactor the Node SDK to use async hooks instead of domains</li>
</ul>
<p>All of these are not equal in value nor in feasibility. Nevertheless, they’re on our list of what we would like to do (PRs are welcome.)</p>
<p>Finally, please give us your feedback—anyone and everyone. Drop us a line on <a href="https://github.com/getsentry/sentry-javascript">GitHub</a>, <a href="https://twitter.com/getsentry?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Twitter</a>, or our <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for free today or write to sales@sentry.io to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5LssCwpMIAbV2MfhtKj5Z3/9b50a85210cb1b625aa001ae9db273dd/bundle-size-matters-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>How we optimized Python API server code 100x</title>
      <link>https://blog.sentry.io/2022/02/25/how-we-optimized-python-api-server-code-100x/</link>
      <description>Some of the tricks we used to speed up calls to our analytics API written in Python: played with asyncio, messed with SQLAlchemy, hacked deep in asyncpg, rewrote parts in Cython, found better data structures, replaced some pandas with pure numpy.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Python code optimization may seem easy or hard depending on the performance target. If the target is “best effort”, carefully choosing the algorithm and applying well-known common practices is usually enough. If the target is dictated by the UX, you have to go down a few abstraction layers and hack the system sometimes. Or rewrite the underlying libraries. Or change the language, really.</p>
<p>This post is about our experience in Python code optimizations when whatever you do is not fast enough. I personally had much fun undertaking the challenges and squeezing API response times under one second. So much fun, in fact, that we’ve got enough notes for a series of blog posts.</p>
<p>By writing “we” I mean the engineers working at <a href="https://athenian.com/">Athenian</a>. Athenian offers a SaaS to help engineering leaders build a continuous improvement software development culture. To translate from landing-pagish, we mirror GitHub and JIRA metadata to our own DB, analyze it, and display metrics and charts in the SPA. For now. The plan is to conquer the world, of course.</p>
<h2 id="those-naughty-coroutines"><a href="#those-naughty-coroutines" aria-label="those naughty coroutines permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Those naughty coroutines</h2>
<p>The API request processing typically balances between two poles: CPU and IO wait. There is no clear separation between them; like yin and yang, they dance together hand in hand with sophisticated relationships. If one profiles a request, they will see a messy DAG of function calls that can project to CPU and IO occupation axes. Let’s consider this simplified code:</p>
<div data-language="python"><pre><code><span>await</span> asyncio<span>.</span>gather<span>(</span>query_sql_a<span>(</span><span>)</span><span>,</span> query_sql_b<span>(</span><span>)</span><span>,</span> query_sql_c<span>(</span><span>)</span><span>)</span></code></pre></div>
<p>We launch three coroutines that request data from a SQL DB. Athenian uses PostgreSQL, so let’s imagine that we work with PostgreSQL. Each coroutine passes through three stages:</p>
<ol>
<li>(CPU) Prepare the request to PostgreSQL and send it.</li>
<li>(IO wait) Wait until PostgreSQL responds.</li>
<li>(CPU) Read the response and convert it to Python objects.</li>
</ol>
<p>Let’s suppose that (1) and (3) both elapse one second for each of the coroutines, and that PostgreSQL is infinitely powerful and always requires 5 seconds to compute the response for <code>query_sql_a</code>, 3 seconds for <code>query_sql_b</code>, and 1 second for <code>query_sql_c</code>. This doesn’t mean that, for example, <code>query_sql_a</code> will always spend 5 seconds in IO wait (2), because Python can only execute one of the three coroutines at each moment of time.</p>
<p><code>asyncio.gather</code> launches coroutines in the order of passed arguments. That’s not written in the <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.gather">documentation</a> and must be an implementation detail, but it’s important to consider: we will first execute (1) of <code>query_sql_a</code>, then (1) of <code>query_sql_b</code>, then (1) of <code>query_sql_c</code>, then wait one second while PostgreSQL is busy, then execute (3) in the opposite order.</p>
</div><div>
<p>According to the execution plan, we bottleneck in the CPU: 86% of the OS thread time CPU was doing some useful work. Now consider a different order of launching coroutines:</p>
<p><code>await asyncio.gather(query_sql_c(), query_sql_b(), query_sql_a())</code></p>
</div><div>
<p>The second execution plan demonstrates how bad things go if we don’t guess the optimal order in which we should launch coroutines. The wall time increases from 7s to 10s — by 43%. We no longer heavily bottleneck in the CPU (60% vs. 86%).<code>query_sql_c</code> stage 3 competes with <code>query_sql_a</code> stage 1 and wins or loses depending on the event loop internals.</p>
<p>I am writing about Python code optimizations here, so I will not cover such outstanding issues as SQL performance and reducing individual IO wait-s. Hence my advice would be</p>
<blockquote>
<p><em>Try to pass coroutines in <code>asyncio.gather()</code> ordered by the expected IO wait time descending. That is, the first argument should be the coroutine with the highest expected IO wait, and so on.</em></p>
</blockquote>
<p>Real example: we have a spot in the code where we <code>gather</code> ~10 coroutines. When I ordered them according to the mentioned heuristic, the average overall execution time decreased <strong>x2</strong>.</p>
<p>Would it make sense to order arguments of a hypothetical <code>thread_gather</code> that launches and joins threads instead of coroutines? Of course not. Would it be faster to launch threads instead of coroutines in my example? Actually, coroutines perform better given the GIL:</p>
</div><div>

<p>Our API uses SQLAlchemy Core to generate SQL (no ORM). There are quite a few places where some conditions in <code>WHERE</code> repeat. One example is the replacement of <code>OR</code> with <code>UNION ALL</code>: instead of</p>
<div data-language="python"><pre><code>SELECT <span>*</span> FROM table WHERE <span>(</span><span>(</span>a <span>=</span> <span>1</span> <span>and</span> b <span>=</span> <span>2</span><span>)</span> OR <span>(</span>a <span>=</span> <span>2</span> <span>and</span> b <span>=</span> <span>1</span><span>)</span><span>)</span> AND c <span>=</span> <span>3</span>```

we write

```Python
<span>(</span>SELECT <span>*</span> FROM table WHERE a <span>=</span> <span>1</span> <span>and</span> b <span>=</span> <span>2</span> <span>and</span> c <span>=</span> <span>3</span><span>)</span>
UNION ALL
<span>(</span>SELECT <span>*</span> FROM table WHERE a <span>=</span> <span>2</span> <span>and</span> b <span>=</span> <span>1</span> <span>and</span> c <span>=</span> <span>3</span><span>)</span></code></pre></div>
<p>Why <code>UNION ALL</code> is usually better in such a scenario is a topic of another blog post. Let’s focus on how <code>UNION ALL</code> looks in SQLAlchemy:</p>
<div data-language="python"><pre><code>union_all<span>(</span>select<span>(</span><span>[</span>table<span>]</span><span>)</span><span>.</span>where<span>(</span>and_<span>(</span>a <span>==</span> <span>1</span><span>,</span> b <span>==</span> <span>2</span><span>,</span> c <span>==</span> <span>3</span><span>)</span><span>)</span><span>,</span>
          select<span>(</span><span>[</span>table<span>]</span><span>)</span><span>.</span>where<span>(</span>and_<span>(</span>a <span>==</span> <span>2</span><span>,</span> b <span>==</span> <span>1</span><span>,</span> c <span>==</span> <span>3</span><span>)</span><span>)</span><span>)</span></code></pre></div>
<p>Imagine that instead of <code>c = 3</code> there is a big expression, with variadic <code>IN</code>, etc. — constructing such an object twice is expensive. Instead, we can write:</p>
<div data-language="python"><pre><code>shared_cond <span>=</span> c <span>==</span> <span>3</span>
union_all<span>(</span>select<span>(</span><span>[</span>table<span>]</span><span>)</span><span>.</span>where<span>(</span>and_<span>(</span>a <span>==</span> <span>1</span><span>,</span> b <span>==</span> <span>2</span><span>,</span> shared_cond<span>)</span><span>)</span><span>,</span>
          select<span>(</span><span>[</span>table<span>]</span><span>)</span><span>.</span>where<span>(</span>and_<span>(</span>a <span>==</span> <span>2</span><span>,</span> b <span>==</span> <span>1</span><span>,</span> shared_cond<span>)</span><span>)</span><span>)</span></code></pre></div>
<p>This won’t work for every SQLAlchemy engine and for SQLite in particular because SQLAlchemy generates <code>?, ?, ?</code> as parameter placeholders there and not indexed references <code>$1, $2, $3</code>. Nevertheless, together with the upgrade from SQLAlchemy 1.3 to 1.4 where they improved the treatment of big <code>IN</code>-s we got <strong>1.5-2x faster</strong> SQL compilation.</p>
<h2 id="from-rows-to-columns"><a href="#from-rows-to-columns" aria-label="from rows to columns permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>From rows to columns</h2>
<p>We query PostgreSQL through asyncpg. asyncpg fetches return rows like nearly any other relational DB drivers. However, our analytics API needs to build <code>pd.DataFrame</code>-s which are columnar: the values of each returned column are stored together. Moreover, before pandas 2.0, several columns of the same dtype are stored together in the same numpy array aka the block.</p>
<p>Naively constructing DataFrame using <code>DataFrame.from_records()</code> is extremely inefficient. Suppose that PostgreSQL knocks at asyncpg’s door. Here is what comes next:</p>
<ol>
<li>Parse PostgreSQL wire protocol and create Python objects.</li>
<li>Insert those Python objects into created <code>asyncpg.Record</code>-s.</li>
<li>Iterate rows and insert Python objects into numpy array of dtype <code>object</code>.</li>
<li>Infer better dtypes (e.g. int, datetime, etc.) and convert Python objects to them.</li>
<li>Consolidate — BlockManager, the special pandas 1.x quirk, merges numpy arrays of the same dtype together.</li>
</ol>
<p>Given pure <code>object</code> columns (e.g., with SQL nulls), we touch their reference counters 4 times: in (1), (3), (4), and (5). <code>asyncpg.Record</code> is used as an auxiliary container and can be excluded. Moreover, we don’t have to perform (4) because we already know the correct dtypes from the SQL query. The end-to-end transition from pgproto to ready DataFrame, therefore, takes above 500ms with ~20 object and ~20 typed columns and 300,000 rows on a modern x86 CPU.</p>
<p>The ideal pipeline would be:</p>
<ol>
<li>Parse PostgreSQL wire protocol and write directly to numpy arrays without materializing strictly typed objects.</li>
<li>Construct BlockManager without redundant consolidation.</li>
</ol>
<p>Pure <code>object</code> values would increment reference counters only once. The whole thing would elapse ~5ms by mere estimation. However, unfortunately, parsing pgproto and constructing <code>asyncpg.Record</code>-s reside deep inside Cython and even C code of <code>asyncpg</code>, so making the ideal pipeline means forking the project. We will surely fork it before conquering the world but have had to find a compromise in the meantime.</p>
<p>Our current compromise pipeline:</p>
<ol>
<li>Parse PostgreSQL wire protocol and create Python objects.</li>
<li>Insert those Python objects into created <code>asyncpg.Record</code>-s.</li>
<li>Iterate rows and insert Python objects into two numpy arrays of dtype <code>object</code> — one for dtyped and one for <code>object</code> columns.</li>
<li>Convert dtypes given the prior knowledge from the SQL query.</li>
<li>Construct the blocks and wrap them in BlockManager.</li>
</ol>
<p>Now pure <code>object</code> values increment the refcounters twice: in (1) and (3). We no longer try to guess the types. The memory copy bloat is significantly reduced. Our measurements indicate at least <strong>10x faster</strong> conversion times, around ~50ms.</p>
<p>The actual source code can be found in the repository where our API lives: <a href="https://github.com/athenianco/athenian-api-open">athenianco/athenian-api-open</a>. It’s not universal and there is not enough will to make it a proper open-source library. Feel free to adapt it to your needs! We distribute those files under the MIT license.</p>
<p>Let me finish this section by giving generic advice.</p>
<blockquote>
<p>Avoid object columns in pandas DataFrame-s whenever possible. Operations with them are much slower than with properly typed ones.</p>
</blockquote>
<h2 id="iterating-lists-of-tuples-without-gil"><a href="#iterating-lists-of-tuples-without-gil" aria-label="iterating lists of tuples without gil permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Iterating lists of tuples without GIL</h2>
<p>A very specific objective: optimize the iteration over raw <code>asyncpg.Record</code>-s. It is indeed possible to work with them directly with GIL released. Cython code follows:</p>
<div data-language="python"><pre><code>cdef extern <span>from</span> <span>&#34;asyncpg_recordobj.h&#34;</span><span>:</span>
    PyObject <span>*</span>ApgRecord_GET_ITEM<span>(</span>PyObject <span>*</span><span>,</span> <span>int</span><span>)</span>
cdef extern <span>from</span> <span>&#34;Python.h&#34;</span><span>:</span>
    <span># added nogil -&gt; from cpython cimport ...</span>
    <span># these are the macros that read from the internal ob_items</span>
    PyObject <span>*</span>PyList_GET_ITEM<span>(</span>PyObject <span>*</span><span>,</span> Py_ssize_t<span>)</span> nogil
cdef nogil_iter<span>(</span>rows<span>:</span> <span>list</span><span>[</span>asyncpg<span>.</span>Record<span>]</span><span>)</span><span>:</span>
    cdef<span>:</span>
        Py_ssize_t i<span>,</span> size
        PyObject <span>*</span>record
        PyObject <span>*</span>value
    size <span>=</span> <span>len</span><span>(</span>rows<span>)</span>
    <span>with</span> nogil<span>:</span>
        <span>for</span> i <span>in</span> <span>range</span><span>(</span>size<span>)</span><span>:</span>
            record <span>=</span> PyList_GET_ITEM<span>(</span><span>&lt;</span>PyObject <span>*</span><span>&gt;</span>rows<span>,</span> i<span>)</span>
            value <span>=</span> ApgRecord_GET_ITEM<span>(</span>record<span>,</span> <span>0</span><span>)</span></code></pre></div>
<p><code>asyncpg_recordobj.h</code> is a simplification of the real <a href="https://github.com/MagicStack/asyncpg/blob/master/asyncpg/protocol/record/recordobj.h">recordobj.h</a> in asyncpg:</p>
<div data-language="python"><pre><code>typedef struct <span>{</span>
    PyObject_VAR_HEAD

    <span>//</span> asyncpg specifics begin here
    <span>//</span> <span>if</span> they add another field<span>,</span> we will <span>break</span> spectacularly
    Py_hash_t self_hash<span>;</span>
    PyObject <span>*</span>desc<span>;</span>  <span>//</span> we don&#39;t care of the actual <span>type</span>
    PyObject <span>*</span>ob_item<span>[</span><span>1</span><span>]</span><span>;</span>  <span>//</span> embedded <span>in</span> the tail<span>,</span> the count matches <span>len</span><span>(</span><span>)</span>
<span>}</span> ApgRecordObject<span>;</span>

<span>#define ApgRecord_GET_ITEM(op, i) (((ApgRecordObject *)(op))-&gt;ob_item[i])</span></code></pre></div>
<p>Depending on what the type <code>value</code> has, the <code>nogil</code> hack may be handy or appear useless. For example, if <code>value</code> is a string and your CPython stores Unicode strings in UTF-8 internally, <code>&lt;const char *&gt;PyUnicode_Data(value)</code> will work. If <code>value</code> is an integer, <code>PyLong_AsLong(value)</code> will work, too. But working with complex classes will require taking the GIL.</p>
<p>The speedup should be <strong>~10x</strong>.</p>
<p>In case we work with tuples instead of <code>asyncpg.Record</code>-s, we can slightly change the code above to remain functional:</p>
<div data-language="python"><pre><code>cdef extern <span>from</span> <span>&#34;Python.h&#34;</span><span>:</span>
    <span># added nogil -&gt; from cpython cimport ...</span>
    <span># these are the macros that read from the internal ob_items</span>
    PyObject <span>*</span>PyList_GET_ITEM<span>(</span>PyObject <span>*</span><span>,</span> Py_ssize_t<span>)</span> nogil
    PyObject <span>*</span>PyTuple_GET_ITEM<span>(</span>PyObject <span>*</span><span>,</span> Py_ssize_t<span>)</span> nogil
cdef nogil_iter<span>(</span>rows<span>:</span> <span>list</span><span>[</span><span>tuple</span><span>]</span><span>)</span><span>:</span>
    cdef<span>:</span>
        Py_ssize_t i<span>,</span> size
        PyObject <span>*</span>record
        PyObject <span>*</span>value
    size <span>=</span> <span>len</span><span>(</span>rows<span>)</span>
    <span>with</span> nogil<span>:</span>
        <span>for</span> i <span>in</span> <span>range</span><span>(</span>size<span>)</span><span>:</span>
            record <span>=</span> PyList_GET_ITEM<span>(</span><span>&lt;</span>PyObject <span>*</span><span>&gt;</span>rows<span>,</span> i<span>)</span>
            value <span>=</span> PyTuple_GET_ITEM<span>(</span>record<span>,</span> <span>0</span><span>)</span></code></pre></div>
<p>You’d better not mistake with indexing both <code>asyncpg.Record</code>-s and tuples because you’ll otherwise immediately catch a dragon in native code.</p>
<h2 id="zero-copy-deserialization"><a href="#zero-copy-deserialization" aria-label="zero copy deserialization permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Zero-copy (de)serialization</h2>
<p>We currently store various precomputed data in PostgreSQL. We fetch it according to many filters coming from the application logic. The collected profile and traces in <a href="https://sentry.io/">Sentry</a> explicitly showed that we sometimes spent too much time in data serialization during <code>INSERT INTO … VALUES</code> and deserialization — the creation of Python objects while parsing pgproto that I mentioned in one of the previous sections.</p>
<p>We were able to optimize that hot spot by employing a special, limited, immutable data structure based on <a href="https://numpy.org/doc/stable/user/basics.rec.html">structured numpy arrays</a>. In a nutshell, it is an array wrapper around <code>bytes</code>. That’s the only item in <code>__slots__</code>, really.</p>
<p>When we want to extract some field <code>&#34;foobar&#34;</code> from the structure, we execute:</p>
<p>When we want to extract some field <code>&#34;foobar&#34;</code> from the structure, we execute:</p>
<div data-language="python"><pre><code><span>@property</span>
<span>def</span> <span>foobar</span><span>(</span>self<span>)</span><span>:</span>
    <span>return</span> self<span>.</span>_array<span>[</span><span>&#34;foobar&#34;</span><span>]</span><span>[</span><span>0</span><span>]</span></code></pre></div>
<p>Our serialization is zero copy:</p>
<div data-language="python"><pre><code><span>def</span> <span>serialize</span><span>(</span>self<span>)</span><span>:</span>
    <span>return</span> self<span>.</span>_array<span>.</span>view<span>(</span>np<span>.</span>uint8<span>)</span><span>.</span>data</code></pre></div>
<p>And the deserialization is nothing, too:</p>
<div data-language="python"><pre><code><span>def</span> <span>__init__</span><span>(</span>self<span>,</span> data<span>:</span> <span>bytes</span><span>)</span><span>:</span>
    self<span>.</span>_array <span>=</span> np<span>.</span>frombuffer<span>(</span>data<span>,</span> dtype<span>=</span>self<span>.</span>dtype<span>,</span> count<span>=</span><span>1</span><span>)</span></code></pre></div>
<p><code>dtype</code> looks like <code>np.dtype([(&#34;foobar&#34;, int), (&#34;baz&#34;, &#34;datetime64[ns]&#34;)])</code></p>
<p>The secret weapon of our structure is very efficient conversion to Pandas DataFrame:</p>
<div data-language="python"><pre><code>concat_bytes <span>=</span> <span>b&#34;&#34;</span><span>.</span>join<span>(</span><span>[</span>x<span>.</span>serialize<span>(</span><span>)</span> <span>for</span> x <span>in</span> rows<span>]</span><span>)</span>
boss <span>=</span> np<span>.</span>frombuffer<span>(</span>concat_bytes<span>,</span> dtype<span>=</span>dtype<span>,</span> count<span>=</span><span>len</span><span>(</span>rows<span>)</span><span>)</span>
pd<span>.</span>DataFrame<span>(</span><span>{</span><span>&#34;foobar&#34;</span><span>:</span> boss<span>[</span><span>&#34;foobar&#34;</span><span>]</span><span>,</span> <span>&#34;baz&#34;</span><span>:</span> boss<span>[</span><span>&#34;baz&#34;</span><span>]</span><span>}</span><span>)</span></code></pre></div>
<p>The concatenation of bytes can be further optimized with nogil in Cython.</p>
<p>The actual implementation is more complex. It supports:</p>
<ul>
<li>Scalar non-<code>object</code> fields that numpy has, including unicode strings and blobs.</li>
<li>Variadic length arrays of those types.</li>
<li>Properties generate automatically.</li>
<li>Optional mutable addon fields (not serialized).</li>
</ul>
<p>This is an example:</p>
<div data-language="python"><pre><code><span>@numpy_struct</span>
<span>class</span> <span>PullRequestFacts</span><span>:</span>
    <span>class</span> <span>Immutable</span><span>:</span>
        created<span>:</span> <span>&#34;datetime64[s]&#34;</span>
        first_commit<span>:</span> <span>&#34;datetime64[s]&#34;</span>
        <span>.</span><span>.</span><span>.</span>

    <span>class</span> <span>Optional</span><span>:</span>
        repository_full_name<span>:</span> <span>str</span>
        <span>.</span><span>.</span><span>.</span></code></pre></div>
<p>It’s hard to be faster than zero copy and O(1). <code>@numpy_struct</code> gave us at least <strong>10–50x</strong> performance improvement compared to <code>pickle</code> and storing fields in individual SQL table columns.</p>
<p>There are drawbacks, however:</p>
<ul>
<li>We cannot work with arbitrary types.</li>
<li>We cannot push down filters over the fields to SQL.</li>
</ul>
<p>So <code>@numpy_struct</code> is not a universal solution to all the problems.</p>
<h2 id="pandas-without-pandas"><a href="#pandas-without-pandas" aria-label="pandas without pandas permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Pandas without Pandas</h2>
<p>Pandas 1.x is a microperformance dumpster fire. That’s <a href="https://dev.pandas.io/pandas2/internal-architecture.html#removal-of-blockmanager-new-dataframe-internals">official</a>. At the same time pandas is very convenient and overall is a great, well-documented tool.</p>
<p>We had to rewrite certain parts of the API code in favor of low-level numpy array manipulation. Let me give a few examples. The first is the trivial extraction of sub-dataframe by some condition on the columns.</p>
<div data-language="python"><pre><code>df <span>=</span> pd<span>.</span>DataFrame<span>(</span><span>{</span><span>&#34;a&#34;</span><span>:</span> <span>[</span><span>.</span><span>.</span><span>.</span><span>]</span><span>,</span> <span>&#34;i&#34;</span><span>:</span> <span>[</span><span>.</span><span>.</span><span>.</span><span>]</span><span>}</span><span>)</span><span>.</span>set_index<span>(</span><span>&#34;i&#34;</span><span>)</span>
df<span>[</span>df<span>[</span><span>&#34;b&#34;</span><span>]</span> <span>&gt;</span> <span>10</span><span>]</span></code></pre></div>
<p>We do it more verbose but more efficient:</p>
<div data-language="python"><pre><code>df<span>.</span>take<span>(</span>np<span>.</span>flatnonzero<span>(</span>df<span>[</span><span>&#34;a&#34;</span><span>]</span><span>.</span>values <span>&gt;</span> <span>10</span><span>)</span><span>)</span></code></pre></div>
<p>If we call this in a loop with a few hundred repetitions, and the dataframe size is less than a hundred rows, our extraction runs an order of magnitude faster. It happens because <code>df[...]</code> selects by index values and therefore performs unnecessary index lookups, and also because we simply do not execute a lot of underlying glue code.</p>
<p>The second example is executing some <code>function</code> on the values of column “b” grouped by the values of column “a”.</p>
<div data-language="python"><pre><code>df <span>=</span> pd<span>.</span>DataFrame<span>(</span><span>{</span><span>&#34;a&#34;</span><span>:</span> <span>[</span><span>.</span><span>.</span><span>.</span><span>]</span><span>,</span> <span>&#34;b&#34;</span><span>:</span> <span>[</span><span>.</span><span>.</span><span>.</span><span>]</span><span>}</span><span>)</span>
df<span>.</span>groupby<span>(</span><span>&#34;a&#34;</span><span>)</span><span>[</span><span>&#34;b&#34;</span><span>]</span><span>.</span><span>apply</span><span>(</span>function<span>)</span></code></pre></div>
<p>This is an alternative, much faster way to do the same:</p>
<div data-language="python"><pre><code>arr_a <span>=</span> df<span>[</span><span>&#34;a&#34;</span><span>]</span><span>.</span>values
arr_b <span>=</span> df<span>[</span><span>&#34;b&#34;</span><span>]</span><span>.</span>values
keys<span>,</span> indexes<span>,</span> counts <span>=</span> np<span>.</span>unique<span>(</span>
    arr_a<span>,</span> return_inverse<span>=</span><span>True</span><span>,</span> return_counts<span>=</span><span>True</span><span>)</span>
order <span>=</span> np<span>.</span>argsort<span>(</span>indexes<span>)</span>  <span># better when arr_a&#39;s dtype is S or U</span>
offsets <span>=</span> np<span>.</span>zeros<span>(</span><span>len</span><span>(</span>keys<span>)</span> <span>+</span> <span>1</span><span>,</span> dtype<span>=</span><span>int</span><span>)</span>
np<span>.</span>cumsum<span>(</span>counts<span>,</span> out<span>=</span>offsets<span>[</span><span>1</span><span>:</span><span>]</span><span>)</span>
<span>for</span> i<span>,</span> key <span>in</span> <span>enumerate</span><span>(</span>keys<span>)</span><span>:</span>
    grouped_b <span>=</span> arr_b<span>[</span>offsets<span>[</span>i<span>]</span><span>:</span>offsets<span>[</span>i <span>+</span> <span>1</span><span>]</span><span>]</span>
    function<span>(</span>key<span>,</span> grouped_b<span>)</span></code></pre></div>
<p>This code snippet leverages the power of <code>np.unique</code> that can efficiently count unique values (<code>return_counts=True</code>) in an array, and also find first encounters (<code>return_index=True</code>) or map each value to a unique index (<code>return_inverse=True</code>). We sort the elements of <code>arr_a</code> and iterate the groups knowing the size of each group.</p>
</div><div>
<p>Pandas uses a <a href="https://github.com/pandas-dev/pandas/blob/539d51ce4c1c3be4e13566305f84bae2028648bd/pandas/core/algorithms.py#L556">hash table technique</a> for <code>groupby</code> under the hood and thus has a better big-O than sorting, however, high level of abstraction and poor microperformance add a huge linear penalty. The actual speedup depends on the size of the dataframe and the nature of columns “a” and “b”. In our production, the typical boost is <strong>20 to 50x</strong>.</p>
<p>It is possible to similarly replace many other operations on top of <code>groupby</code> such as <code>idxmin()</code> or <code>count()</code> and even account for missing values via NaN-s and NaT-s.</p>
<p>We used to follow another approach in the past:</p>
<div data-language="text"><pre><code>df.groupby(&#34;a&#34;).grouper.groups.values()</code></pre></div>
<p>The <code>np.unique</code> way avoids materializing the whole list of variable-length array indexes for each group, hence is faster.</p>
<h2 id="was-all-of-those-worth-it"><a href="#was-all-of-those-worth-it" aria-label="was all of those worth it permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Was all of those worth it?</h2>
<p>Instead of comparing performance optimization with shaving yaks, I will compare it with training to run a marathon. You start in a completely awful shape, then slowly progress, week by week, yielding slightly better results every time. Until one day you meet the physical requirements and run a marathon. Each kilometer of the race will remind you of the things you went through to be able to run forward.</p>
<p>Athenian API processes hundreds of thousands of items filtered by ten different properties, logically joining several software development activities in one giant queryable DAG, in milliseconds. We started with a really slow MVP codebase two years ago, only 4 months after the company emerged. I feel shame for that code, and that’s a good thing: we didn’t overkill it. Two years after, the same API queries execute ~1000x faster. I nearly scratched the surface of what we did to reach 1000x, and we by no means have finished! The following blog post should summarize our PostgreSQL query optimization experience. Considering only the Python code performance, <strong>it has improved ~100x</strong>.</p>
<h2 id="tldr"><a href="#tldr" aria-label="tldr permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>TL;DR</h2>
<p>I have considered a few tricks with Python code that helped us improve the analytics backend performance. They were:</p>
<ul>
<li><code>asyncio.gather</code> argument ordering by IO wait time.</li>
<li>Shared filters in SQLAlchemy Core.</li>
<li>Custom construction of Pandas DataFrame from <code>asyncpg.Record</code>-s.</li>
<li>Iterating lists without GIL in Cython.</li>
<li>Zero-copy (de)serialization data structure.</li>
<li>Replacing pandas <code>groupby</code> with pure numpy.</li>
</ul>
<p>Those tricks gave us two orders of magnitude performance improvement on our workload. The sample source code is on <a href="https://github.com/athenianco/athenian-api-open">GitHub</a>.</p>
<p>If the product we’re building sounds like something your engineering org needs, check out <a href="https://athenian.com/">Athenian.com</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/71Q0i090p06pCDqQsj2aH2/34949d67c8f1020955219c8aa07bd26e/python-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Alias: An approach to .NET Assembly Conflict Resolution</title>
      <link>https://blog.sentry.io/2022/02/24/alias-an-approach-to-net-assembly-conflict-resolution/</link>
      <description>Many .NET applications and frameworks support a plugin based model. Also known as “add-in” or “extension” model. A plugin model allows…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Many .NET applications and frameworks support a <a href="https://en.wikipedia.org/wiki/Plug-in_(computing)">plugin based model</a>. Also known as “add-in” or “extension” model. A plugin model allows extension or customization of functionality by adding assemblies and config files to a directory that is scanned at application startup. For example:</p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/visualstudio/msbuild/task-writing">MSBuild tasks</a></li>
<li><a href="https://docs.microsoft.com/en-us/visualstudio/extensibility/starting-to-develop-visual-studio-extensions">Visual Studio extensions</a></li>
<li><a href="https://www.jetbrains.com/resharper/">ReSharper</a>/<a href="https://www.jetbrains.com/rider/">Rider</a> plugins</li>
<li><a href="https://docs.unity3d.com/Manual/Plugins.html">Unity Plugins</a></li>
</ul>
<h2 id="the-problem"><a href="#the-problem" aria-label="the problem permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The problem</h2>
<p>Most plugin based models load all assemblies into a single shared context. This is a common approach because it has better memory usage and startup performance. The history and rules of assembly loading in .NET is convoluted; its current status makes it difficult (and sometimes impossible) to load multiple different versions of the same assembly into a shared context. </p>
<p>For example, it isn’t possible to load both versions 12.0.2 and 12.0.3 of <code>Newtonsoft.Json.dll</code> into the same context. In a plugin environment, the resulting behavior is often based on the load order of plugins. At runtime, the reference used in the first loaded plugin is then used by every subsequent plugin. So if a plugin relies on a later version of a reference than the one initially loaded, that plugin will fail either at load time or at runtime. A similar conflict can occur at compile time if the build tooling had conflict detection in place.</p>
<p>More specifically in the Unity world, <a href="https://docs.unity3d.com/Manual/upm-ui.html">UPM (Unity Package Manager)</a> packages can include one or more DLLs that can cause such conflicts when used together. With Unity adding support for .NET Standard 2.0, different package developers (including Unity themselves) began bundling some <code>System</code> DLLs such as <code>System.Runtime.CompilerServices.dll</code>, <code>System.Memory.dll</code>, and <code>System.Buffers.dll</code>. </p>
<p>Since the release of .NET 5.0, many of these DLLs have become part of the standard library—meaning, now there’s no need to bring them in via NuGet or bundle in a UPM package. The Sentry SDK for .NET is dependency-free when targeting .NET 5 or higher, so no conflict would happen if we could use that instead of .NET Standard 2.0. Unity is <a href="https://forum.unity.com/threads/unity-future-net-development-status.1092205/">skipping .NET 5 but is working towards supporting .NET 6</a>. Unfortunately though, it will take years until all Unity LTS versions are running .NET 6, and we required a solution to unblock a growing number of users hitting issues caused by more than one UPM package bundling the same DLLs, often with different versions.</p>
<h2 id="options-we-considered-and-ruled-out"><a href="#options-we-considered-and-ruled-out" aria-label="options we considered and ruled out permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Options we considered and ruled out</h2>
<h3 id="costura"><a href="#costura" aria-label="costura permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a><a href="https://github.com/Fody/Costura">Costura</a></h3>
<p>Costura merges dependencies into a target assembly as resources. We add custom assembly loading logic to the target assembly, so that dependencies are loaded from resources instead of from disk. </p>
<p>The important point here is that the assemblies are not changed. Therefore, those assemblies each still have the same assembly name and, when loaded, will respect the standard assembly loading logic. So in a plugin environment, using Costura will still result in a conflict.</p>
<h3 id="ilmerge--ilrepack"><a href="#ilmerge--ilrepack" aria-label="ilmerge  ilrepack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a><a href="https://github.com/dotnet/ILMerge">ILMerge</a> / <a href="https://github.com/gluck/il-repack">ILRepack</a></h3>
<p>ILMerge and ILRepack work by copying the IL from dependencies into the target assembly. So the resulting assembly has duplicates of all the types from all the dependencies and no longer references those dependencies. This approach does resolve the conflict—however, both these projects are not currently being actively maintained. For example, both have known bugs related to .NET Core and portable PDBs.</p>
<h2 id="the-solution"><a href="#the-solution" aria-label="the solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The solution</h2>
<p>With the other existing options exhausted, we decided to build a new tool: Alias.</p>
<h3 id="alias"><a href="#alias" aria-label="alias permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a><a href="https://github.com/getsentry/dotnet-assembly-alias/">Alias</a></h3>
<p>Alias performs the following steps:</p>
<ul>
<li>Given a directory containing the target assembly and its dependencies.</li>
<li>Rename all the dependencies with a unique key. The rename applies to both the file name and the assembly name in IL.</li>
<li>Patch the corresponding references in the target assembly and dependencies.</li>
</ul>
<p>The result is a group of files that will not conflict with any assemblies loaded in the plugin context.</p>
<p>One point of interest is that the result is not a single file, which is the approach used by ILRepack, ILMerge, and Costura. This is because the reviewed plugin scenarios all supported a plugin that was deployed to its own directory as a group of files. Because of that, having a ‘single assembly’ was not a problem we needed to solve.</p>
<p>This allowed the Sentry UPM package to include “its own version” of the supporting <code>System</code> DLLs needed  to work in a .NET Standard 2.0 target. IL2CPP’s linker still takes care of dropping any unused code in the final application. </p>
<p>Given Sentry’s commitment to support Unity’s LTS version from 2019.4 onwards, we expect to rely on this solution for a few years—until the lowest-supported Unity version allows us to include only <code>Sentry.dll</code> without any transient dependencies.</p>
<h2 id="how-to-use"><a href="#how-to-use" aria-label="how to use permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>How to use</h2>
<p>Alias is shipped as a <a href="https://docs.microsoft.com/en-us/dotnet/core/tools/">dotnet CLI tool</a>. So the <a href="https://nuget.org/packages/Alias/">Alias tool</a> needs to be installed:</p>
<div data-language="ps"><pre><code>dotnet tool install --global Alias</code></pre></div>
<p>Alias can then be used from the command line:</p>
<div data-language="ps"><pre><code>assemblyalias --target-directory &#34;C:/Code/TargetDirectory&#34;
              --suffix _Alias
              --assemblies-to-alias &#34;Newtonsoft.Json.dll;Serilog*&#34;</code></pre></div>
<p>The <code>--suffix</code> should be a value that is unique enough to prevent conflicts. A good candidate is the name of the plugin or some derivative thereof.</p>
<p>You can use Alias to resolve conflicts in your UPM packages too. Like the <a href="https://github.com/getsentry/sentry-unity">Sentry SDK for Unity</a>, our tools are open source.</p>
<h2 id="better-msbuild-integration"><a href="#better-msbuild-integration" aria-label="better msbuild integration permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Better MSBuild integration</h2>
<p>Currently, Alias is only a dotnet tool (command line). You can use it as part of the bundling/packaging step of the development life-cycle. However, it using as part of the bundling/packaging step can make it difficult to debug if something goes wrong, as unit tests and running a project from the IDE don’t automatically use the aliased assembly. </p>
<p>Interested in working with us? We’re <a href="https://sentry.io/careers/">hiring across several roles</a>. At the very least, drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6L8G5xKVLlbfRGF3BcVb6Z/222282ceff456d9020f9a7cd0cc87d14/Errors2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Tracking Stability in a Bluetooth Low Energy-Based React-Native App</title>
      <link>https://blog.sentry.io/2022/02/22/tracking-stability-in-a-bluetooth-low-energy-based-react-native-app/</link>
      <description>Daniel is an Agile Software Developer specializing in all forms of mobile development, Native iOS, React-Native, and beyond</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>For most of my career I’ve worked with health and wellness startups. Most of these companies have a wearable that tracks movement, heart rate, body weight or stimulates a body part. The common denominator between these apps is their use of sensor data to determine physiological progress an athlete is making. Problem is, your Bluetooth Low Energy (BLE) device does not have an internet connection and cannot send diagnostics anywhere if there are errors. This is actually quite a big problem when you consider your firmware engineers need error information to debug the Bluetooth device in production.</p>
<p>Never fear, the solution is to forward error information from the device to an error tracking service. In this article I’ll be walking you through how I would add error tracking to an app to get my firmware team the data they need to do their job. Some optional reading is an article I wrote a while ago about how to <a href="https://medium.com/tribalscale/building-an-app-with-react-native-bluetooth-low-energy-and-redux-saga-c75d9214179c">build a Bluetooth Low Energy app with React-Native</a>. The code snippets I show here are modifications to that project. It’s not required to read that article, the code samples should stand alone, but it does help to provide additional context. I’ll be using <a href="https://sentry.io/welcome/">Sentry.io</a> to track errors because it does an excellent job of keeping debugging information in one place.</p>
<h3 id="detecting-connection-failures"><a href="#detecting-connection-failures" aria-label="detecting connection failures permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Detecting Connection Failures</h3>
<p>The first thing you’ll want to track is BLE connection failures. This is generally simple because the <code>react-native-ble-plx</code> library, which we use for Bluetooth in React-Native, exposes platform independent error codes 🔥. In the TypeScript below, I forward the <code>errorCode</code> and <code>errorName</code> to Sentry. Because the BLE error codes and error names are standardized, firmware developers can interpret that information to debug connection issues. In my <code>BluetoothLeManager.ts</code> class I would add the following code to the <code>scanForPeripherals</code> method to make this possible:</p>
<div data-language="typescript"><pre><code><span>logConnectionError</span> <span>=</span> <span>(</span>error<span>:</span> BleError<span>)</span> <span>=&gt;</span> <span>{</span>
  Sentry<span>.</span><span>captureEvent</span><span>(</span><span>{</span>
    message<span>:</span> <span>FAILED_TO_CONNECT</span><span>,</span>
    extra<span>:</span> <span>{</span>
      streaming_error<span>:</span> <span>{</span>
        plx_error<span>:</span> error<span>.</span>errorCode<span>,</span>
        error_name<span>:</span> error<span>.</span>name<span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>scanForPeripherals</span> <span>=</span> <span>(</span>
  <span>onDeviceFound</span><span>:</span> <span>(</span>arg0<span>:</span> <span>{</span>
    type<span>:</span> <span>string</span><span>;</span>
    payload<span>:</span> BleError <span>|</span> Device <span>|</span> <span>null</span><span>;</span>
  <span>}</span><span>)</span> <span>=&gt;</span> <span>void</span><span>,</span>
<span>)</span> <span>=&gt;</span> <span>{</span>
  <span>this</span><span>.</span>bleManager<span>.</span><span>startDeviceScan</span><span>(</span><span>null</span><span>,</span> <span>null</span><span>,</span> <span>(</span>error<span>,</span> scannedDevice<span>)</span> <span>=&gt;</span> <span>{</span>
    <span>if</span> <span>(</span>error<span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>logConnectionError</span><span>(</span>error<span>)</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span>
    <span>onDeviceFound</span><span>(</span><span>{</span>type<span>:</span> <span>&#39;SAMPLE&#39;</span><span>,</span> payload<span>:</span> scannedDevice <span>??</span> error<span>}</span><span>)</span><span>;</span>
    <span>return</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
  <span>return</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
    <span>this</span><span>.</span>bleManager<span>.</span><span>stopDeviceScan</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<h3 id="detecting-streaming-failures"><a href="#detecting-streaming-failures" aria-label="detecting streaming failures permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Detecting Streaming Failures</h3>
<p>If you subscribe to a characteristic on a BLE device, it will continuously notify you of changes to data in its sensors. In the case below, we are using a heart rate monitor where data on a user’s heart rate is updated every few seconds. Every notification that comes in has a chance it could fail. This means we need to check for errors every time we get a packet from the device. You can see a code example of this below:</p>
<div data-language="typescript"><pre><code><span>logStreamError</span> <span>=</span> <span>(</span>error<span>:</span> BleError<span>)</span> <span>=&gt;</span> <span>{</span>
  Sentry<span>.</span><span>captureEvent</span><span>(</span><span>{</span>
    message<span>:</span> <span>FAILED_TO_STREAM_DATA</span><span>,</span>
    tags<span>:</span> <span>{</span>
      <span>&#39;firmware.version.number&#39;</span><span>:</span> firmwareVersion<span>,</span>
      <span>&#39;firmware.build.version&#39;</span><span>:</span> buildNumber<span>,</span>
    <span>}</span><span>,</span>
    extra<span>:</span> <span>{</span>
      streaming_error<span>:</span> <span>{</span>
        characteristic_uuid<span>:</span> <span>HEART_RATE_CHARACTERISTIC</span><span>,</span>
        service_uuid<span>:</span> <span>HEART_RATE_UUID</span><span>,</span>
        plx_error<span>:</span> error<span>.</span>errorCode<span>,</span>
        error_name<span>:</span> error<span>.</span>name<span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>startStreamingData</span> <span>=</span> <span>async</span> <span>(</span>
  <span>emitter</span><span>:</span> <span>(</span>arg0<span>:</span> <span>{</span>payload<span>:</span> <span>number</span> <span>|</span> BleError<span>}</span><span>)</span> <span>=&gt;</span> <span>void</span><span>,</span>
<span>)</span> <span>=&gt;</span> <span>{</span>
  <span>await</span> <span>this</span><span>.</span>device<span>?.</span><span>discoverAllServicesAndCharacteristics</span><span>(</span><span>)</span><span>;</span>
  <span>this</span><span>.</span>device<span>?.</span><span>monitorCharacteristicForService</span><span>(</span>
    <span>HEART_RATE_UUID</span><span>,</span>
    <span>HEART_RATE_CHARACTERISTIC</span><span>,</span>
    <span>(</span>error<span>,</span> characteristic<span>)</span> <span>=&gt;</span> <span>{</span>
      <span>if</span> <span>(</span>error<span>)</span> <span>{</span>
        <span>this</span><span>.</span><span>logStreamError</span><span>(</span>error<span>)</span><span>;</span>
        <span>return</span><span>;</span>
      <span>}</span>

      <span>this</span><span>.</span><span>onHeartRateUpdate</span><span>(</span>error<span>,</span> characteristic<span>,</span> emitter<span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<p>Notice in lines 8–14 I’ve added information to the tags and extras. I add the firmware version and build number to tags because I want this information to show up in the “trace” section of the error report. I use extras to pass the UUID of the characteristic and the service so that the firmware team is able to see exactly which characteristic or service is the problem. Information from the extras section will show up in the additional data section of the error report.</p>
<h3 id="detecting-bad-sensor-data"><a href="#detecting-bad-sensor-data" aria-label="detecting bad sensor data permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Detecting Bad Sensor Data</h3>
<p>The final example I’ll demonstrate is invalid data being retrieved from the BLE device. Any sensor has a threshold of values that are sensible for the app to process. For example, a human heart rate is generally between 40–150 bpm. If you suddenly get a value of 500bpm, that’s obviously unreasonable and should be reported to the firmware team. In the Sentry event, it’s best to send the service and characteristic that failed as well as the invalid data that came from the sensor. The code looks like this:</p>
<div data-language="typescript"><pre><code><span>logStreamThresholdError</span> <span>=</span> <span>(</span>data<span>:</span> <span>number</span><span>)</span> <span>=&gt;</span> <span>{</span>
  Sentry<span>.</span><span>captureEvent</span><span>(</span><span>{</span>
    message<span>:</span> <span>VALUE_THRESHOLD_EXCEEDED</span><span>,</span>
    tags<span>:</span> <span>{</span>
      <span>&#39;firmware.version.number&#39;</span><span>:</span> firmwareVersion<span>,</span>
      <span>&#39;firmware.build.version&#39;</span><span>:</span> buildNumber<span>,</span>
    <span>}</span><span>,</span>
    extra<span>:</span> <span>{</span>
      streaming_error<span>:</span> <span>{</span>
        bad_value<span>:</span> data<span>,</span>
        characteristic_uuid<span>:</span> <span>HEART_RATE_CHARACTERISTIC</span><span>,</span>
        service_uuid<span>:</span> <span>HEART_RATE_UUID</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>onHeartRateUpdate</span> <span>=</span> <span>(</span>
  error<span>:</span> BleError <span>|</span> <span>null</span><span>,</span>
  characteristic<span>:</span> Characteristic <span>|</span> <span>null</span><span>,</span>
  <span>emitter</span><span>:</span> <span>(</span>arg0<span>:</span> <span>{</span>payload<span>:</span> <span>number</span> <span>|</span> BleError<span>}</span><span>)</span> <span>=&gt;</span> <span>void</span><span>,</span>
<span>)</span> <span>=&gt;</span> <span>{</span>
  <span>if</span> <span>(</span>error<span>)</span> <span>{</span>
    <span>emitter</span><span>(</span><span>{</span>payload<span>:</span> error<span>}</span><span>)</span><span>;</span>
  <span>}</span>

  <span>const</span> data <span>=</span> base64<span>.</span><span>decode</span><span>(</span>characteristic<span>?.</span>value <span>??</span> <span>&#39;&#39;</span><span>)</span><span>;</span>

  <span>let</span> heartRate<span>:</span> <span>number</span> <span>=</span> <span>-</span><span>1</span><span>;</span>

  <span>const</span> firstBitValue<span>:</span> <span>number</span> <span>=</span> <span>(</span><span>&lt;</span><span>any</span><span>&gt;</span>data<span>[</span><span>0</span><span>]</span><span>)</span> <span>&amp;</span> <span>0x01</span><span>;</span>

  <span>if</span> <span>(</span>firstBitValue <span>===</span> <span>0</span><span>)</span> <span>{</span>
    heartRate <span>=</span> data<span>[</span><span>1</span><span>]</span><span>.</span><span>charCodeAt</span><span>(</span><span>0</span><span>)</span><span>;</span>
  <span>}</span> <span>else</span> <span>{</span>
    heartRate <span>=</span>
      <span>Number</span><span>(</span>data<span>[</span><span>1</span><span>]</span><span>.</span><span>charCodeAt</span><span>(</span><span>0</span><span>)</span> <span>&lt;&lt;</span> <span>8</span><span>)</span> <span>+</span> <span>Number</span><span>(</span>data<span>[</span><span>2</span><span>]</span><span>.</span><span>charCodeAt</span><span>(</span><span>2</span><span>)</span><span>)</span><span>;</span>
  <span>}</span>

  <span>if</span> <span>(</span>heartRate <span>&gt;</span> <span>HEARTRATE_THRESHOLD</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span><span>logStreamThresholdError</span><span>(</span>heartRate<span>)</span><span>;</span>
  <span>}</span>

  <span>emitter</span><span>(</span><span>{</span>payload<span>:</span> heartRate<span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<p>We just saw how easy it was to add BLE error tracking to our app, but this isn’t even the best part! You can actually build <a href="https://sentry.io/features/dashboards/">dashboards</a> in Sentry to present this data in a form that’s easily digestible to your firmware team. You can start by navigating to the “Discover” section of the web app.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png?w=54&amp;fm=webp 54w,
https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png?w=108&amp;fm=webp 108w,
https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png?w=215&amp;fm=webp 215w" sizes="(max-width: 215px) 100vw, 215px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png?w=54 54w,
https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png?w=108 108w,
https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png?w=215 215w" sizes="(max-width: 215px) 100vw, 215px"/>
          <img alt="discover" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2mR74uKdnATt8kXSf8CnAj/2ddd4705aebc43cd775e60a1c019be1c/discover.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Next, click “Build a new query” in the top right hand corner of the screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png?w=62&amp;fm=webp 62w,
https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png?w=123&amp;fm=webp 123w,
https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png?w=246&amp;fm=webp 246w" sizes="(max-width: 246px) 100vw, 246px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png?w=62 62w,
https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png?w=123 123w,
https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png?w=246 246w" sizes="(max-width: 246px) 100vw, 246px"/>
          <img alt="build query" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3THHgQR5t1mnPU7OsEkQyO/d7ddfe0d2f7dc48723cbb78069cb6a60/build_query.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Next, type the message from any of the <code>message</code> properties you used above into the search for events, users, tags and more search bar. It will look something like this:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png?w=108&amp;fm=webp 108w,
https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png?w=433&amp;fm=webp 433w" sizes="(max-width: 433px) 100vw, 433px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png?w=108 108w,
https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png?w=433 433w" sizes="(max-width: 433px) 100vw, 433px"/>
          <img alt="value drop" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4N3QC1b7hg0ydFf1mYIbbo/9e17c542f005a43ab7e148e068fe18e0/value_drop.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Click “Add to Dashboard” and fill in the following information:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png?w=168&amp;fm=webp 168w,
https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png?w=336&amp;fm=webp 336w,
https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png?w=671&amp;fm=webp 671w" sizes="(max-width: 671px) 100vw, 671px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png?w=168 168w,
https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png?w=336 336w,
https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png?w=671 671w" sizes="(max-width: 671px) 100vw, 671px"/>
          <img alt="add widget" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5mCUXVGYmsTBWWvW4BWjL9/deb67a4fa56661dac7d5092859a6360b/add_widget.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now the magic happens 🪄! Click “Add to Dashboard” after saving your changes and you can view the number of times your data dropped below the threshold.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png?w=241&amp;fm=webp 241w,
https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png?w=483&amp;fm=webp 483w,
https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png?w=965&amp;fm=webp 965w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png?w=241 241w,
https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png?w=483 483w,
https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png?w=965 965w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="bad values" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1dXdyIlOwLJnKANN4ayCU9/60c23c16b831254bd4a04c879b7542b2/bad_values.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Finally, your firmware engineers can visualize any errors that come in from a Bluetooth device! You can repeat this process with any of the analytics tracked in this article as needed to create as many charts and visualizations as your project requires.</p>
<h3 id="final-thoughts"><a href="#final-thoughts" aria-label="final thoughts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Final Thoughts</h3>
<p>There you have it. A strategy to track device stability in apps that use Bluetooth Low Energy. I hope these tips and tricks were useful to you and make the difference on your next Bluetooth project.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3MhNdOsOPmfKGL5ulkjaeN/5125fda43b5da0d05d156319aaed0ccb/meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Join Sentry at Game Developers Conference 2022</title>
      <link>https://blog.sentry.io/2022/02/17/sentry-at-gdc-2022/</link>
      <description>In just a few short weeks, nearly 17,000 game developers will embark—potentially for the first time in a couple of years—to San Francisco…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In just a few short weeks, nearly 17,000 game developers will embark—potentially for the first time in a couple of years—to San Francisco, CA. The reason? The gaming industry’s premier event: <strong><a href="https://gdconf.com/">Game Developers Conference</a> (GDC)</strong>.</p>
<p>Filled with technical sessions, virtual and physical networking, an expo floor with 200+ exhibitors, special events, and more, GDC is bound to have something for everyone. And one way to make your GDC extra special? Spending time with Sentry, of course. </p>
<h2 id="attend-our-speaking-session-mobile-games-are-living-organisms-too"><a href="#attend-our-speaking-session-mobile-games-are-living-organisms-too" aria-label="attend our speaking session mobile games are living organisms too permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Attend our speaking session, “Mobile Games are Living Organisms, Too”</h2>
<p>Come hear some pretty smart Sentry folks, <a href="https://twitter.com/mitsuhiko">Armin Ronacher</a> and <a href="https://twitter.com/brungarc">Bruno Garcia</a>, share some of their own gaming war stories and why error and performance monitoring is essential for game development. You’ll also hear about how we can make your lives easier—so that you can get back to gaming, eating, napping, or whatever else it is you’d prefer to do. <a href="https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=M2Y0a2ljN3Bja2E3N2I3MnR2dHFsbmczNTUgY182dmlnZ3B1bDdxNjRyamttam9xZWpydXVvMEBn&amp;tmsrc=c_6viggpul7q64rjkmjoqejruuo0%40group.calendar.google.com">Save the date</a> for March 23rd at 2:00 PM PST in West Hall #2000.</p>
<h2 id="mingle-with-us-at-joyride-pizza"><a href="#mingle-with-us-at-joyride-pizza" aria-label="mingle with us at joyride pizza permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mingle with us at Joyride Pizza</h2>
<p>We know you’ll be wired and hungry after a long, exciting day at the conference. So, what better way to relax and refuel than with some pizza at <a href="https://goo.gl/maps/jFF2j6StwvuzsWGk8">Joyride Pizza</a>? Just a few minutes’ walk from the convention center, it couldn’t be easier (or more worth it) to stop by for free food, drinks, and polite laughter at  gaming puns. <strong><a href="https://sentry.io/resources/gdc-sentry-happy-hour?utm_medium=website&amp;utm_source=blog&amp;utm_campaign=gaming-gdc-happy-hour">Register today</a> by March 15th</strong>, before it’s too late.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg?w=2000&amp;fm=webp 2000w,
https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg?w=4000&amp;fm=webp 4000w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg?w=2000 2000w,
https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg?w=4000 4000w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="GDCAnnouncement hero" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6QrY5sDUI2NRLv4EcivEAU/ed69937768a4d225e24487a1d8b5aaab/GDCAnnouncement_hero.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="schedule-a-meeting"><a href="#schedule-a-meeting" aria-label="schedule a meeting permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Schedule a meeting</h2>
<p>If you’d like to meet individually, or want to reserve some extra 1:1 time to ask us deeper questions, we’ll make sure to get you in front of the right people. Fill out a <a href="https://sentry.io/resources/gdc-sentry-meetings?utm_medium=website&amp;utm_source=blog&amp;utm_campaign=gaming-gdc-happy-hour&amp;utm_content=&amp;utm_term=">meeting request</a> with your details, and we’ll be in touch shortly to set something up.</p>
<h2 id="stop-by-our-booth-1770"><a href="#stop-by-our-booth-1770" aria-label="stop by our booth 1770 permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Stop by our booth, #1770</h2>
<p>Our 10x20 booth will be in Moscone Center, Center Hall. Come chat with a technical Sentaur (sounds like the mythical creature, yes, but also a member of the Sentry team —and no, it’s shockingly not that much of a stretch). They’ll (nicely) walk you through a tailored demo on how to track exceptions and improve performance of your game, or whatever else it is you’d like to talk about.</p>
</div><div>
<p>If you’re not up for chatting about how to solve some of your most critical game development issues, that’s also fine. We’ll have a couple of hand-picked games you probably won’t hate at the booth, so stay for a round or two. And hey, this is a conference, after all—so grab some custom swag (warning: our swag provokes fond memories and occasional chuckles). </p>
<p>And finally, don’t forget: <a href="https://sentry.io/for/gaming/?utm_medium=website&amp;utm_source=blog&amp;utm_campaign=gaming-gdc-happy-hour&amp;utm_content=&amp;utm_term=">Sentry for Gaming</a> helps game developers see what actually matters, solve quicker, and learn continuously about their games. See how for yourself at GDC 2022. </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6QUO1d7fV36vgqTReT44iK/33bb345b8f9769f15f2b7f2d11dd9212/GDC-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 17 Feb 2022 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Get Insights Into Project Health with Updates to Dashboards and Stats</title>
      <link>https://blog.sentry.io/2022/02/16/updates-to-dashboards-and-stats/</link>
      <description>We made a few updates to Dashboards and Stats so you can spend less time manually building reports and more time getting insights.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2022-02-16T09:00">February 16, 2022</time></p><ul><li><a href="https://blog.sentry.io/performance/"><span>Dashboards</span></a></li></ul><div><p>Between planning, triaging tickets, negotiating requirements with external stakeholders, and actually building software, it’s hard to take the time to make dashboards or even think about the most important metrics your team needs to track. </p>
<p>To make it easier for you to get insights into your team effectiveness and project health, we made a few updates to <a href="https://sentry.io/orgredirect/organizations/:orgslug/dashboards/">Dashboards</a> and <a href="https://sentry.io/orgredirect/organizations/:orgslug/stats/">Stats</a> that you just might like. These updates include <a href="https://docs.sentry.io/product/dashboards/widget-library/">out-of-the-box widgets</a> and <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/#create-dashboards-from-templates">dashboard templates</a>, <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/#data-set-selection">unlocked issue data for dashboard queries</a>, and <a href="https://docs.sentry.io/product/stats/">issue stats</a>.</p>

<p>Whether you’re asking, “What are the most critical issues to review?” or, “What are the top page load times by country?”, we want you to get the answers to your questions quickly—without having to even think about it.</p>
<p>We compiled some of the most popular queries into <a href="https://docs.sentry.io/product/dashboards/widget-library/">pre-built widgets</a> that you can add to your customized dashboard. You can change the title, queries, fields, visualization types, and sort the order of each widget to suit your use case. </p>
</div><p>Plus, with our newest dashboard layout options, you can update your widget’s height, width, and location to customize your dashboards for any screen or scenario. That way,  you can highlight the insights you want your boss to see and downplay the rest. </p><div>
<p>Continuing with the theme of not making you think, here’s a catalog of <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/#create-dashboards-from-templates">custom dashboard templates</a> for your mobile, frontend, and backend projects so that you can get project-specific visibility, instantly. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Dashboard Templates Image" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3rSsU6NpV2OwM0nzb2cdpG/5a625b0e81de02c7f193de4fa267d206/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>These dashboard templates are curated to address the needs of a specific project. For instance, the mobile dashboard template includes details such as the total number of crashes, the issues causing each crash, and total throughput—to help you understand the critical details and performance vitals related to your mobile application. </p>
<h2 id="query-issue-data-in-dashboards"><a href="#query-issue-data-in-dashboards" aria-label="query issue data in dashboards permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Query issue data in Dashboards</h2>
<p>To give you deeper insight into your application health, as well as your team’s performance, we’ve added <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/#data-set-selection">issue data in Dashboards</a>. Now, you can build widgets to stay on top of things like the state of each issue, who it’s assigned to, and when the issue occurred. </p>
<p>You can display and sort by issue fields to surface the most relevant issues for your team. Or, you can sort just the ones assigned to you to help you answer questions like, “Which team has the most unresolved issues?” or, “What are the top regressed or new issues?” With issue data in Dashboards, you’ll get the important context of a problem in your application, making it easier to prioritize and manage your workflow. </p>
</div><div>
<h2 id="measure-team-effectiveness-with-issue-stats"><a href="#measure-team-effectiveness-with-issue-stats" aria-label="measure team effectiveness with issue stats permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Measure team effectiveness with issue stats</h2>
<p>Open issues often live in different places and are worked on by different teams, making it difficult to keep track of team progress. </p>
<p><a href="https://sentry.io/orgredirect/organizations/:orgslug/stats/issues">Issue stats</a> lets you see developer velocity. It also helps you uncover potential bottlenecks with a view into things like the number of new issues that happened this week, how that affected the backlog of unresolved issues, and which issues your team resolved. If you see something unexpected and have more questions, you can use <a href="https://sentry.io/orgredirect/organizations/:orgslug/discover/">Discover</a>—and now, <a href="https://sentry.io/orgredirect/organizations/:orgslug/dashboards/">Dashboards</a> —to spelunk further.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png?w=564&amp;fm=webp 564w,
https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png?w=1128&amp;fm=webp 1128w,
https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png?w=2256&amp;fm=webp 2256w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png?w=564 564w,
https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png?w=1128 1128w,
https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png?w=2256 2256w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Issue stats image" title="" src="https://images.ctfassets.net/em6l9zw4tzag/336nMDZU56rySqmKAIbokK/fb0a1db67ec0ca155ef8d73ee010e308/Screen_Shot_2022-02-16_at_7.29.22_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With pre-built widgets, dashboard templates, and issue data in <a href="https://sentry.io/orgredirect/organizations/:orgslug/dashboards/">Dashboards</a> and <a href="https://sentry.io/orgredirect/organizations/:orgslug/stats/">Stats</a>, we’re making it easier than ever to get insights into team and project health. Spend less time manually building reports and more time learning about your application and team’s performance, so you and your team can build better, faster. </p>
<p>If you currently use Sentry and are a Business Plan customer, <a href="https://sentry.io/auth/login/">sign in</a> to use these features today. New to Sentry and want to learn more? Request a <a href="https://sentry.io/demo/">demo</a> or check out our <a href="https://sentry.io/resources/alerts-workshop-best-practices/">latest webinar</a> to see it all in action.</p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1BnalPunBpIwKVOPvS0gED/76ca6d66e601d53de60674361819e76a/DashboardsDiscovery1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 16 Feb 2022 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Why is Python so Popular?</title>
      <link>https://blog.sentry.io/2022/02/15/guest-post-why-is-python-so-popular/</link>
      <description>Nahla Davies is a software developer and tech writer. Before devoting her work full time to technical writing, she managed—among other intriguing things—to serve as a lead programmer at an Inc. 5,000 experiential branding organization whose clients include Samsung, Time Warner, Netflix, and Sony.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Despite several widely acknowledged flaws, Python remains one of the most popular development languages worldwide. The sole fact that for years Python <a href="https://blog.sentry.io/2021/02/25/python-3-compatibility-what-to-know/#retiring-python-2">had two different and incompatible versions</a> existing in parallel should have spelled the end for Python given the numerous alternatives available in the market. But Python overcame this conflict.</p>
<p>Developers also criticized Python’s design and functionalities. Python is known to be slow and inadequate at dealing with memory-intensive operations. It also is lacking in its ability to deal with databases, and it suffers from more runtime errors than other languages. </p>
<p>But even in the face of these limitations, Python not only survived but thrived. Indeed, <a href="https://www.statista.com/statistics/793628/worldwide-developer-survey-most-used-languages/">nearly 50% of developers</a> use Python in some fashion, a number exceeded only by JavaScript and HTML/CSS. And just last year, Python was named the Programming Language of the Year in the TIOBE Programming Community Index, moving up from the third spot in 2020. </p>
<p>So why is Python so popular?</p>
<h2 id="1-it-has-a-low-entry-barrier"><a href="#1-it-has-a-low-entry-barrier" aria-label="1 it has a low entry barrier permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>1. It has a low entry barrier</h2>
<p>The number of new developers continues to rise quickly. Between 2018 and 2021, <a href="https://www.daxx.com/blog/development-trends/number-software-developers-world">3 million new developers</a> entered the market, bringing the total to just under 27 million. Estimates suggest that this number will reach nearly 30 million in the next two years and 45 million by the end of the decade. And Python is extremely friendly for new and inexperienced programmers alike. </p>
<p>What makes Python so simple for novice programmers? First, its syntax is simple and easy to learn. Python is a high-level, object-oriented programming language whose commands are syntactically close to everyday English.</p>
<p>One Python characteristic that simplifies programming is that it is dynamically typed. Dynamically-typed languages do not require programmers to declare variable data types before using them. Developers can therefore use fewer lines of code. </p>
<p>Another benefit of dynamic typing is that it requires indentation (whitespace has syntactic meaning). This enhances the readability of Python code for beginners. </p>
<p>However, dynamic typing is also one of Python’s more criticized features. Because dynamically-typed languages do not perform error checking until runtime (rather than during compilation), they are subject to more runtime errors and can require more debugging.</p>
<p>Python is also popular because it does not require as many additional tools as other languages, so <a href="https://fi.co/insight/no-code-and-low-code-tools-vs-human-developers-which-is-best-for-startup-app-development">new developers have fewer things to learn</a> before getting going.</p>
<h2 id="2-its-portable"><a href="#2-its-portable" aria-label="2 its portable permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>2. It’s portable</h2>
<p>Cross-platform functionality is crucial in today’s development environment. Python applications are platform agnostic, requiring no modification to run on any of the primary operating systems (Windows, MacOS, Linux, Unix). It is therefore ideal for cross-platform application development.</p>
<p>Python has also become an acceptable alternative for mobile application development. However, because neither Android nor iOS can process Python, developers must use other tools to bridge between Python and mobile operating systems.</p>
<h2 id="3-its-flexible"><a href="#3-its-flexible" aria-label="3 its flexible permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>3. It’s flexible</h2>
<p>Python is useful in a wide range of real-world applications, including:</p>
<ul>
<li>Web development</li>
<li>Scientific computing</li>
<li>Game development</li>
<li><a href="https://dataconomy.com/2021/05/machine-learning-vs-artificial-intelligence-future-data-science/">AI and machine learning</a></li>
<li>E-commerce and ERP systems</li>
<li>Image processing and graphic design</li>
</ul>
<p>Python’s broad applicability enhances its popular appeal for developers, particularly less experienced developers.</p>
<p>Python’s flexibility can also be a cost-benefit for small organizations and startups with limited budgets. Developers are in high demand, and salaries can be substantial. Even for freelance backend developers, companies can expect to <a href="https://www.waveapps.com/freelancing/web-development/back-end-web-developer-salary">pay at least $60 an hour on average</a>. The more a single developer can do, the better.</p>
<h2 id="4-its-interpreted-rather-than-compiled"><a href="#4-its-interpreted-rather-than-compiled" aria-label="4 its interpreted rather than compiled permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>4. It’s interpreted rather than compiled</h2>
<p>Python applications interpret code line by line at runtime, rather than requiring pre-runtime compilation. With fewer intermediate steps, developers can more quickly get an application running. And because Python executes line by line, it is easier to identify the source of runtime errors, which in turn simplifies debugging.</p>
<h2 id="5-its-easy-to-debug"><a href="#5-its-easy-to-debug" aria-label="5 its easy to debug permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>5. It’s easy to debug</h2>
<p>Python has built-in functionality that makes debugging relatively simple. But there are also third-party tools, like <a href="https://sentry.io/for/python/">Sentry</a>, that provide <a href="https://docs.sentry.io/platforms/python/">far more extensive</a> performance monitoring, tracing, and error handling features. </p>
<p>Basic Python debugging relies on exception handling. During runtime code interpretation, code issues generate syntax and error exceptions which, in turn, may terminate program execution. Developers can then use these exceptions to pinpoint the location of the code error and quickly correct it.</p>
<p>Developers can deal with exceptions proactively by including error handling conditions in the code. Python’s built-in exception handling statements, including try, except and raise to debug code allows developers to raise exceptions, quickly test functionality, and immediately rectify any program errors.</p>
<p>Developers can also insert a temporary print statement to display the values of variables and check them against expected values. If the values are consistent with expectations, developers can then remove the print statement.</p>
<p>Python also has a built-in logging module that monitors program execution and supports debugging efforts. Developers can use the logging module to display warnings and error messages during program execution or output the message to a file for later review. Developers can create logging messages that help them identify where in the code exceptions are arising. </p>
<p>Python also includes a built-in command-line debugging tool, pdb. With pdb, developers can run applications line by line from the command-line and see where output does not match expectations. </p>
<p>Finally, Python has numerous available integrated development environments (IDEs) and <a href="https://sentry.io/for/python/">software development kits (SDKs)</a> that provide more advanced monitoring and debugging than the logger. IDEs and SDKs give developers the ability to perform line-by-line execution as with pdb, and also conduct remote debugging.</p>
<p>In short, Python offers developers a wide range of simple and effective debugging tools that even the most novice programmers can quickly understand and apply, making Python even more popular and easy to use.</p>
<h2 id="6-its-open-source-read-as-free"><a href="#6-its-open-source-read-as-free" aria-label="6 its open source read as free permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>6. It’s open-source (read as free)</h2>
<p>All developers like free tools, particularly ones with a large, well-tested and widely adopted feature set. Python is an excellent development alternative for new developers and startups who are extremely cost-conscious. There is no cost to download or use Python, nor are there licensing fees for commercial applications that use Python.</p>
<h2 id="7-it-has-a-robust-support-structure"><a href="#7-it-has-a-robust-support-structure" aria-label="7 it has a robust support structure permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>7. It has a robust support structure</h2>
<p>Python’s low cost, ease of use and long history have led to the creation of an extensive support community. Python comes with <a href="https://docs.python.org/3/library/">its own impressive library collection</a>, adding functionalities from  web browsing to database manipulation to testing to email. And the third-party ecosystem is even larger, with libraries addressing an even broader range of functionalities.</p>
<p>Python also has many popular online communities where developers can seek the assistance of experienced users. The Python community has also created numerous learning resources such as online tutorials, documentation and videos.</p>

<p>Python can be easily used with other languages such as C/C++ and Java to build applications. In addition, there are several full-stack and micro frameworks that work well with Python, including Django, BeeWare, Kivy, Flask, Pyramid and Turbo Gears. Interactivity extends the utility of Python as a development tool. </p>
<h2 id="conclusion"><a href="#conclusion" aria-label="conclusion permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Conclusion</h2>
<p>For the increasing number of novice developers, Python provides a simple path into the world of application development. Python’s popularity shows no signs of slowing, and it looks to continue as a language of choice for the foreseeable future.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/71Q0i090p06pCDqQsj2aH2/34949d67c8f1020955219c8aa07bd26e/python-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Usual Performance Suspects: Introducing Suspect Spans</title>
      <link>https://blog.sentry.io/2022/02/10/usual-performance-suspects-introducing-suspect-spans/</link>
      <description>A trace is the end-to-end journey of one or more connected spans and a span is an operation or “work” taking place on a service. So when it…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A <a href="https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers">trace</a> is the end-to-end journey of one or more connected spans and a span is an operation or “work” taking place on a service. So when it comes to debugging a performance issue, being able to pick out slow spans out of a line up is the fastest way to seeing the root cause and knowing how to solve it.  </p>
<p><a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-spans">Suspect Spans</a> surfaces a list of spans that correspond to where the most time in a transaction is spent. Instead of clicking into every trace in an attempt to identify the bad actor, check out the Spans tab or Suspect Spans section in every transaction summary and jump directly to the span that needs your attention. </p>
</div><div>
<p>But, this isn’t your uncle’s performance monitoring. We don’t just show you when your service or application is slow, we show you where and how to solve it. While our newest addition, <a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-spans">Suspect Spans</a>, helps you address the slowest spans, not all <a href="https://docs.sentry.io/product/sentry-basics/tracing/distributed-tracing/">transactions</a> are the same. That’s why we built <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> and <a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-tags">Suspect Tags</a>, to give you a different level of granularity to help you solve any performance problem.</p>
<h2 id="using-suspect-spans-to-eliminate-redundant-queries"><a href="#using-suspect-spans-to-eliminate-redundant-queries" aria-label="using suspect spans to eliminate redundant queries permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Using Suspect Spans to eliminate redundant queries</h2>
<p>A few weeks ago, one of our Product Managers noticed a slow loading table on  one of Sentry’s pages. Because we knew the endpoint and transaction behind that table, we could easily locate the transaction in our <a href="https://sentry.io/orgredirect/organizations/:orgslug/performance/">performance monitoring tool</a>. We opened up the transaction in Performance and then clicked on the Span tab. </p>
<p>Suspect Spans identified four redundant database queries. The table queried the database 17 times to pull the exact same data. Since the value from the query was always the same, we reduced the cost of running that query by caching the value.</p>
<h3 id="before"><a href="#before" aria-label="before permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Before</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png?w=547&amp;fm=webp 547w,
https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png?w=1094&amp;fm=webp 1094w,
https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png?w=2187&amp;fm=webp 2187w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png?w=547 547w,
https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png?w=1094 1094w,
https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png?w=2187 2187w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="spans-before" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2O05URkBWYJQJsxGj43PfG/b7e9dc39e696c5489e70634b48584653/spans-before.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="after"><a href="#after" aria-label="after permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>After</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png?w=545&amp;fm=webp 545w,
https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png?w=1091&amp;fm=webp 1091w,
https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png?w=2181&amp;fm=webp 2181w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png?w=545 545w,
https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png?w=1091 1091w,
https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png?w=2181 2181w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="spans-after" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4iRFR1MCi2oBL20mZ0HMPm/8831f1b1e19719c77bdf602829e37737/spans-after.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Making this change resulted in a reduction in the number of queries from 4 * 17 = 68 to just 4 per request, reducing the overall response by ~35%.</p>
<p>Suspect Spans points you to the transactions with spans that are likely responsible for slowing it down. We summed up the time spent inside a span using Total Exclusive Time. With this filter,  you can sort the transaction table by count and P50/75/95 or 99 exclusive times — so you can focus your time and energy on high-impact transactions. Use Total Count and Total Exclusive Time to see the example spans that occur frequently and take up the most time. You can also use Average Count to spot N+1 problems faster or use Operations Breakdown to show you how much time was spent in each operation within a transaction.</p>
<h2 id="spotting-outliers-with-operations-breakdown"><a href="#spotting-outliers-with-operations-breakdown" aria-label="spotting outliers with operations breakdown permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Spotting Outliers with Operations Breakdown</h2>
<p>Most transactions have variations, especially if something isn’t working right. When variations happen, you can sort how much time was spent on each operation. In these situations (like the first user below), you can use <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> to see why those transactions differed from the performant ones.</p>
<p>In this case, the transaction didn’t even get to the query or resource span. Instead, all of the time was consumed on the HTTP span, where it probably errored out. You can use Operations Breakdown with Suspect Spans to see which transactions have the greatest impact on your user’s experience. So, when you understand which transactions to prioritize, you can focus your efforts on the issues that impact your users most. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299&amp;fm=webp 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196&amp;fm=webp 1196w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196 1196w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>

<p>Sometimes when you’re dealing with lots of data, it’s hard to investigate an issue when there is so much noise. When a problem arises, the distribution of event tags can provide clues to help you uncover the cause of the issue. Using the heat map, you can explore tags that are disproportionately represented in your slow transactions.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="HeatMap" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>When you look at the transaction summary, you can see a list of <a href="https://docs.sentry.io/product/performance/transaction-summary/#tags">suspect tags</a> that correspond to slower transactions. You can click on the tag value to filter out transactions that match to slow performance. Alternatively, you can add custom tags, which make it easy to find and visualize performance groups within your transactions.</p>
<p>Get started with <a href="https://sentry.io/orgredirect/organizations/:orgslug/performance/">Performance</a> and drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5eIq8lxkCDD57VQDq4wlTV/f4ce4d616eda41aaa3905a74412aa04b/suspectSpans-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 10 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>UI Breadcrumbs for Android Error Events</title>
      <link>https://blog.sentry.io/2022/02/08/ui-breadcrumbs-for-android-error-events/</link>
      <description>In many cases, when a crash happens in your Android application, you want more context on what occured before the issue — kind of like…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In [many] cases, when a crash happens in your Android application, you want more context on what occured before the issue — kind of like following breadcrumbs to the exception. Our SDKs automatically report breadcrumbs for activity lifecycle events, system events, HTTP requests, and many more. Now, Android developers will also see UI events listed as breadcrumbs and get the full picture of what happened without ever having to recreate the issue.</p>

<p><a href="https://sentry.io/features/breadcrumbs/">Breadcrumbs are the trail of events</a> that your user fired prior to experiencing the error. These events can be as simple as generic logging messages. But, they can also contain rich metadata about the state of your application: network requests, database queries, UI events, navigation changes, or even earlier occurring errors.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png?w=334&amp;fm=webp 334w,
https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png?w=668&amp;fm=webp 668w,
https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png?w=1336&amp;fm=webp 1336w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png?w=334 334w,
https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png?w=668 668w,
https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png?w=1336 1336w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/V8VrR9x7Nh2cceXboNu6R/9ba96d4e746bb40236827e7fd9e845f4/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><strong>Breadcrumbs</strong> can be incredibly helpful in reproducing the steps that led to the error you’re debugging. We’ve been dogfooding them at Sentry for some time at this point, and they add critical context to errors that a <a href="https://sentry.io/features/stacktrace/">stack trace</a> alone can’t provide. </p>

<p>To get started with automated breadcrumbs capturing for UI events, make sure to use <a href="https://docs.sentry.io/platforms/android/#install">Sentry Android SDK version <code>5.6.0</code></a> or above:</p>
<div data-language="groovy"><pre><code><span>// Make sure mavenCentral is there.</span>
repositories <span>{</span>
    <span>mavenCentral</span><span>(</span><span>)</span>
<span>}</span>

dependencies <span>{</span>
    implementation <span>&#39;io.sentry:sentry-android:5.6.0&#39;</span>
<span>}</span></code></pre></div>
<p>Once the SDK is installed, it will start automatically capturing breadcrumbs for different UI events (clicks, scrolls, swipes, etc.), as the integration is enabled by default.</p>
<h3 id="verify"><a href="#verify" aria-label="verify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Verify</h3>
<p>Now, when your application crashes — in addition to already existing breadcrumbs — you also will see the trace of UI events that happened prior to the crash event.It’ll look similar to this:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png?w=333&amp;fm=webp 333w,
https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png?w=665&amp;fm=webp 665w,
https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png?w=1330&amp;fm=webp 1330w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png?w=333 333w,
https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png?w=665 665w,
https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png?w=1330 1330w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-ui-breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3SaBtfdcz6HdDrx0enVwDJ/8b2c7e4a7d8189df7c7ff986201da7c5/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>When we record breadcrumbs, we capture some useful metadata of the target view; information like view id, view class, and scroll direction (in case the view is scrollable). This can help tremendously in understanding the root cause of an issue because you can analyze and even reproduce user actions prior to the crash event.</p>
<h3 id="r8proguard"><a href="#r8proguard" aria-label="r8proguard permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>R8/Proguard</h3>
<p>If you’re using R8/Proguard for minifying your application, the view class might be obfuscated, depending on where it comes from. Standard Android SDK views will not be obfuscated, whereas Jetpack/AndroidX views will be. This behavior can be customized through <code>BeforeBreadcrumbCallback</code> as follows:</p>
<div data-language="kotlin"><pre><code>SentryAndroid<span>.</span><span>init</span><span>(</span><span>this</span><span>)</span> <span>{</span> options <span>-&gt;</span>
    options<span>.</span>beforeBreadcrumb <span>=</span> SentryOptions<span>.</span><span>BeforeBreadcrumbCallback</span> <span>{</span> breadcrumb<span>,</span> _ <span>-&gt;</span>
        <span>if</span> <span>(</span>breadcrumb<span>.</span>category<span>?</span><span>.</span><span>startsWith</span><span>(</span><span>&#34;ui.&#34;</span><span>)</span> <span>==</span> <span>true</span><span>)</span> <span>{</span>
            <span>val</span> viewId <span>=</span> breadcrumb<span>.</span><span>getData</span><span>(</span><span>&#34;view.id&#34;</span><span>)</span>
            <span>if</span> <span>(</span>viewId <span>is</span> String<span>)</span> <span>{</span>
                <span>val</span> id <span>=</span> resources<span>.</span><span>getIdentifier</span><span>(</span>viewId<span>,</span> <span>&#34;id&#34;</span><span>,</span> packageName<span>)</span>
                <span>val</span> viewClass <span>=</span> <span>when</span><span>(</span>id<span>)</span> <span>{</span>
                    R<span>.</span>id<span>.</span>lyrics <span>-&gt;</span> <span>&#34;TextView&#34;</span>
                    R<span>.</span>id<span>.</span>edit_track <span>-&gt;</span> <span>&#34;Button&#34;</span>
                    <span>else</span> <span>-&gt;</span> <span>&#34;undefined&#34;</span>
                <span>}</span>
                breadcrumb<span>.</span><span>setData</span><span>(</span><span>&#34;view.class&#34;</span><span>,</span> viewClass<span>)</span>
            <span>}</span>
        <span>}</span>
        breadcrumb
    <span>}</span>
<span>}</span></code></pre></div>
<p>Here, we check that the breadcrumb is of the UI <code>category</code>, retrieve the supplied <code>viewId</code>, convert it to an integer, and map that using the <code>R</code> class to an appropriate view class name.</p>

<p>If you wish to disable the automated collection of UI breadcrumbs, Sentry exposes a configuration option through the Android manifest:</p>
<div data-language="xml"><pre><code><span><span><span>&lt;</span>application</span><span>&gt;</span></span>
   <span>&lt;!-- To disable the user interaction breadcrumbs integration --&gt;</span>
    <span><span><span>&lt;</span>meta-data</span> <span><span>android:</span>name</span><span><span>=</span><span>&#34;</span>io.sentry.breadcrumbs.user-interaction<span>&#34;</span></span> <span><span>android:</span>value</span><span><span>=</span><span>&#34;</span>false<span>&#34;</span></span> <span>/&gt;</span></span>
<span><span><span>&lt;/</span>application</span><span>&gt;</span></span></code></pre></div>
<h2 id="other-platforms"><a href="#other-platforms" aria-label="other platforms permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Other platforms</h2>
<p>Most of our client SDKs already support automated breadcrumbs for UI events. Check out our docs for <a href="https://docs.sentry.io/platforms/apple/enriching-events/breadcrumbs/">iOS</a>, <a href="https://docs.sentry.io/platforms/react-native/enriching-events/breadcrumbs/">React Native</a>, <a href="https://docs.sentry.io/platforms/dart/enriching-events/breadcrumbs/">Dart</a>, <a href="https://docs.sentry.io/platforms/javascript/enriching-events/breadcrumbs/">JavaScript</a>, <a href="https://docs.sentry.io/platforms/native/enriching-events/breadcrumbs/">Native</a>, and <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/enriching-events/breadcrumbs/">Xamarin</a> for more details.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/xDM6ane0gPtdwxUa2oZnH/d13547ebfad87cb7587c1f5d630795d4/meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: How to monitor Lambda functions in your SST application</title>
      <link>https://blog.sentry.io/2022/02/03/guest-post-how-to-monitor-lambda-functions-in-your-sst-application/</link>
      <description>Jay V is one of the founders of Serverless Stack (SST), an open-source framework that makes it easy to build serverless apps. He spends his…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/jayair/">Jay V</a> is one of the founders of <a href="https://serverless-stack.com">Serverless Stack (SST)</a>, an open-source framework that makes it easy to build serverless apps. He spends his time trying to figure out what the future of the cloud will look like. And liking memes on <a href="https://twitter.com/jayair/likes">Twitter</a>.</em></p>
<h2 id="meet-sst"><a href="#meet-sst" aria-label="meet sst permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Meet SST</h2>
<p><a href="https://serverless-stack.com/">SST (Serverless Stack)</a> is an open-source serverless application platform that makes it easy to build full-stack apps. It features a <a href="https://docs.serverless-stack.com/live-lambda-development">local development environment</a> that lets you set breakpoints and test your Lambda functions locally. It’s also based on <a href="https://aws.amazon.com/cdk/">AWS CDK</a> and allows you to use any AWS service in your app. </p>
<p>In an SST app, you can define a React frontend that connects to a GraphQL API, backed by a PostgreSQL database; all with a few lines of code. SST also makes it easy to share environment variables between your frontend and backend, so you can deploy your application to multiple environments with ease. </p>
<p>By integrating Sentry and the <a href="https://blog.sentry.io/2021/05/24/no-code-aws-lambda-monitoring">recently released Lambda monitoring</a>, developers can now easily monitor their entire full-stack app. In addition to errors and issues in your Lambda functions, you can also see performance metrics; including the execution duration and transactions per minute. </p>
<p>Let’s look at how to monitor your Lambda functions with Sentry in your SST apps. </p>
<h2 id="adding-sentry-to-an-sst-app"><a href="#adding-sentry-to-an-sst-app" aria-label="adding sentry to an sst app permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Adding Sentry to an SST App</h2>
<p>Start by grabbing your Sentry DSN.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png?w=117&amp;fm=webp 117w,
https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png?w=234&amp;fm=webp 234w,
https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png?w=468&amp;fm=webp 468w" sizes="(max-width: 468px) 100vw, 468px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png?w=117 117w,
https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png?w=234 234w,
https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png?w=468 468w" sizes="(max-width: 468px) 100vw, 468px"/>
          <img alt="grab-sentry-dsn" title="" src="https://images.ctfassets.net/em6l9zw4tzag/53h90QCXXWmJ8cafvEPSeH/a230a237c7e7291685ea4d99467b303a/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Then, <a href="https://docs.sentry.io/platforms/node/guides/aws-lambda/layer/">get the Lambda layer for your region</a>.</p>
<p>Now you can set this for the functions in your SST app:</p>
<div data-language="javascript"><pre><code><span>// Configure Sentry </span>
<span>if</span> <span>(</span><span>!</span>scope<span>.</span>local<span>)</span> <span>{</span> 
    <span>const</span> sentry <span>=</span> LayerVersion<span>.</span><span>fromLayerVersionArn</span><span>(</span> 
      <span>this</span><span>,</span> 
      <span>&#34;SentryLayer&#34;</span><span>,</span>
      <span><span>`</span><span>arn:aws:lambda:</span><span><span>${</span>scope<span>.</span>region<span>}</span></span><span>:943013980633:layer:SentryNodeServerlessSDK:35</span><span>`</span></span> <span>)</span><span>;</span> 

    <span>this</span><span>.</span><span>addDefaultFunctionLayers</span><span>(</span><span>[</span>sentry<span>]</span><span>)</span><span>;</span> 
    <span>this</span><span>.</span><span>addDefaultFunctionEnv</span><span>(</span><span>{</span> 
      <span>SENTRY_DSN</span><span>:</span> process<span>.</span>env<span>.</span><span>SENTRY_DSN</span><span>,</span> 
      <span>SENTRY_TRACES_SAMPLE_RATE</span><span>:</span> <span>&#34;1.0&#34;</span><span>,</span> 
      <span>NODE_OPTIONS</span><span>:</span> <span>&#34;-r @sentry/serverless/dist/awslambda-auto&#34;</span><span>,</span> 
    <span>}</span><span>)</span><span>;</span> 
<span>}</span> </code></pre></div>
<p>We are using the <code>addDefaultFunctionLayers</code> and <code>addDefaultFunctionEnv</code> methods to apply this to all the functions in your stack. </p>
<p>And finally, wrap the Lambda functions with the Sentry Lambda handler:</p>
<div data-language="javascript"><pre><code><span>import</span> Sentry <span>from</span> <span>&#34;@sentry/serverless&#34;</span><span>;</span>

  <span>export</span> <span>const</span> handler <span>=</span> Sentry<span>.</span>AWSLambda<span>.</span><span>wrapHandler</span><span>(</span><span>async</span> <span>(</span><span>event</span><span>)</span> <span>=&gt;</span> <span>{</span> 
    <span>return</span> <span>{</span> 
      statusCode<span>:</span> <span>200</span><span>,</span> 
      headers<span>:</span> <span>{</span> <span>&#34;Content-Type&#34;</span><span>:</span> <span>&#34;text/plain&#34;</span> <span>}</span><span>,</span> 
      body<span>:</span> <span><span>`</span><span>Hello, World! Your request was received at </span><span><span>${</span>event<span>.</span>requestContext<span>.</span>time<span>}</span></span><span>.</span><span>`</span></span><span>,</span> <span>}</span><span>;</span> 
<span>}</span><span>)</span><span>;</span> </code></pre></div>
<p>Now you should be able to see errors and performance metrics over on Sentry. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png?w=117&amp;fm=webp 117w,
https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png?w=234&amp;fm=webp 234w,
https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png?w=468&amp;fm=webp 468w" sizes="(max-width: 468px) 100vw, 468px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png?w=117 117w,
https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png?w=234 234w,
https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png?w=468 468w" sizes="(max-width: 468px) 100vw, 468px"/>
          <img alt="errors-pm-live" title="" src="https://images.ctfassets.net/em6l9zw4tzag/32wHj4W9XCBLBxlmCI5uYi/c6be446657cd32e126ae2ad9e717c559/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>For more details, you can <a href="https://serverless-stack.com/examples/how-to-use-sentry-to-monitor-your-serverless-app.html">follow this step-by-step tutorial</a> and <a href="https://docs.serverless-stack.com/advanced/monitoring#sentry">check out the SST docs</a>. </p>
<h2 id="wrapping-up"><a href="#wrapping-up" aria-label="wrapping up permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Wrapping up</h2>
<p>The tutorial above helps you enable Lambda monitoring in your SST apps with Sentry. You can also monitor the frontend portion of your SST app; head over to <a href="https://sentry.io/for/frontend/">Sentry’s Frontend Monitoring page</a> for more details.</p>
<p>Being able to monitor your SST apps is a critical step before going into production and the Sentry integration helps with just that.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5hp8ZF4c5sbvtEO28Ejx2v/009df22d138d6fc0644fe32e31938ea2/continuous-shipping-og.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>2021: A Year in Review</title>
      <link>https://blog.sentry.io/2022/01/31/2021-a-year-in-review/</link>
      <description>As we (happily) leave 2021 in the dust, humor us one more retrospective. After thousands of bug fixes, feature enhancements, and performance improvements, here&#39;s a snapshot of what we shipped to help you see what actually matters, solve quicker, and learn continuously about your applications.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><article><p><time datetime="2022-01-31T00:00">January 31, 2022</time></p><ul><li><a href="https://blog.sentry.io/changelog/"><span>Changelog</span></a></li></ul><div><p>The last year has undoubtedly been a challenge for all of us. But humor us one final retrospective as we (happily) leave 2021 in the dust. </p>
<p>Our mission remains to help you see what actually matters, solve quicker, and learn continuously about your applications. So here’s what we did last year to make that happen.</p>
<h2 id="product-launches"><a href="#product-launches" aria-label="product launches permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Product Launches</h2>
<ul>
<li>Mobile Performance Monitoring, including <a href="https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about#mobile-vitals">4 mobile vitals every mobile developer should care about</a>. To catch the most frustrating performance issues, you need to see what’s happening on your users’ devices. That means visibility into how fast your app starts, duration of HTTP requests, number of slow and frozen frames, how fast your views are loading, and more. With Sentry for Mobile, you can now easily monitor your <a href="https://docs.sentry.io/platforms/react-native/performance/">React Native</a>, <a href="https://docs.sentry.io/platforms/apple/guides/ios/performance/">iOS</a>, and <a href="https://docs.sentry.io/platforms/android/performance/">Android</a> app’s performance in real-time without additional setup (or accumulating a pile of testing devices).</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="mobile vitals" title="" src="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li><a href="https://blog.sentry.io/2021/04/20/silencing-distractions-with-review-list-and-automations">Review List</a>, introduced the “Mark as Reviewed” workflow. Our world revolves around robots telling us everything is important, critical, and urgent. Now, you can <a href="https://docs.sentry.io/product/issues/issue-owners/">filter by ownership</a> and <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">group/merge issues</a> so you can focus on what’s actually critical to your code health and users.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309&amp;fm=webp 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618&amp;fm=webp 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236&amp;fm=webp 1236w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236 1236w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ReviewList" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li>Now, <a href="https://docs.sentry.io/product/integrations/integration-platform/ui-components/#stack-trace-link">Stack Trace Linking</a> in Sentry links out to corresponding source code in GitHub or Gitlab repositories so you can see exactly where the code lives in your codebase. <a href="https://docs.sentry.io/product/issues/issue-owners/#code-owners">CODEOWNERS support</a> helps teams auto-assign issues to users defined in their <a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners">GitHub code owner</a> files.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153&amp;fm=webp 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307&amp;fm=webp 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613&amp;fm=webp 613w" sizes="(max-width: 613px) 100vw, 613px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613 613w" sizes="(max-width: 613px) 100vw, 613px"/>
          <img alt="StackTraceLinking" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li><a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace Views</a>. Drill down into the details of a single trace and traverse every transaction in that trace. This will accelerate your ability to debug slow services, identify related errors, and root out other bottlenecks. </li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=581&amp;fm=webp 581w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=1162&amp;fm=webp 1162w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=2324&amp;fm=webp 2324w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=581 581w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=1162 1162w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=2324 2324w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Trace View" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li>The <a href="https://sentry.io/demo/sandbox/">Sentry Sandbox</a> lets you try out the product without having to configure anything. Go ahead, kick our proverbial tires.</li>
</ul>
<hr/>
<ul>
<li>Full <a href="https://docs.sentry.io/platform-redirect/?next=/configuration/releases/%23bind-the-version">Semantic versioning</a> (SemVer) support. This change is particularly important to mobile developers, who often manage multiple simultaneous live versions of their production apps.</li>
</ul>
<hr/>
<ul>
<li><a href="https://blog.sentry.io/2021/11/02/change-happens-get-alerted">Change and Crash Rate Alerts</a>. You can now be alerted when crash-free sessions happen or when crash-free users drop below a certain threshold. These features are just two milestones in our roadmap towards more dynamic alerting capabilities. Flip on the early adopter flag in your settings menu to get alerted as we add new features.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=255&amp;fm=webp 255w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=511&amp;fm=webp 511w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=1021&amp;fm=webp 1021w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=255 255w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=511 511w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=1021 1021w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="issue-change-alert" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li><a href="https://docs.sentry.io/platforms/unity/">Unity SDK</a>. Whether you’re building the latest FPS or a turn-based classic, Unity is arguably the most popular engine used to develop games so there’s a pretty good chance you, the game developer, are using it. Check out the on-demand workshop with Unity themselves, <a href="https://sentry.io/resources/cheat-codes-for-game-development-with-sentry-and-unity/">Cheat Codes for Game Development</a>.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=200&amp;fm=webp 200w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=401&amp;fm=webp 401w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=801&amp;fm=webp 801w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=200 200w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=401 401w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=801 801w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-sentry-sdk-added-dark-0.6.0" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li><a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">Next.js SDK</a>. Next.js was one of the fastest-growing platforms on Sentry in 2021. Now you can capture errors, measure performance, manage releases, configure suspect commits, and automatically upload sourcemaps to view unminified JavaScript and TypeScript with zero(-ish) configuration.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li><a href="https://docs.sentry.io/platforms/java/performance/">Java</a> and <a href="https://docs.sentry.io/platforms/dotnet/performance/">.NET</a> SDKs received performance support, including auto instrumentation for Spring and ASP.NET with spans for DB queries and HTTP requests.</li>
</ul>
<hr/>
<ul>
<li><a href="https://docs.sentry.io/product/integrations/cloud-monitoring/aws-lambda/">No Code AWS Lambda Monitoring</a>. Users can add Sentry to AWS Lambda projects with a single click (vs. manually installing and initializing Sentry’s SDKs).</li>
</ul>
<hr/>
<ul>
<li>Dozens of improvements for <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> &amp; <a href="https://sentry.io/features/dashboards/">Dashboards</a>: including chart unfurling in Slack, new visualizations, and chart types so you can keep a pulse on the most critical parts of your business. Track release frequency, version quality over time, issues by customer or region – literally anything you can query.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588&amp;fm=webp 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176&amp;fm=webp 1176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176 1176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-custom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li><a href="https://www.youtube.com/watch?v=Cq4W9Q8qJYo">Automatic Ticket Creation</a> lets users automatically create tickets in <a href="https://sentry.io/integrations/jira/">Jira</a> and other platforms as a result of triggered alert conditions.</li>
</ul>
<hr/>
<ul>
<li><a href="https://docs.sentry.io/product/stats/#team-stats">Team Stats</a>, helps you better prioritize time spent on new feature development vs. resolving issues.</li>
</ul>
<hr/>
<ul>
<li><a href="https://docs.sentry.io/api/scim/">SCIM provisioning</a> for both Okta and Azure. This allows organizations to not just automatically create new user accounts via SSO/SAML but de-provision them too.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Okta-SCIM" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li>You can now self-serve <a href="https://sentry.io/legal/baa/">HIPAA BAAs</a> (Business Associate Amendments) from inside Sentry. Any Owner or Billing Contact can be accepted in the Legal &amp; Compliance section of your navigation menu.</li>
</ul>
<hr/>
<ul>
<li><a href="https://blog.sentry.io/2021/03/16/building-dark-mode">Dark Mode</a>. Head on over to User Settings &gt; Theme to toggle Dark Mode on. We also added an option where you can switch it based on your default system theme.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="darkmode-hero" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Gg67PmYRc6t2jjctOjBHr/9da191528d3cd0cd7e866b83e2f2560f/DarkMode.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="technical-investments"><a href="#technical-investments" aria-label="technical investments permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Technical Investments</h2>
<ul>
<li><a href="https://blog.sentry.io/2021/11/24/bringing-specto-into-the-sentry-family/">We acquired Specto</a>, a powerful mobile profiling tool from ex-Facebook mobile experts who share our determination for building developer-first performance monitoring products that actually suit the modern dev stack.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="sentry-plus-specto-meta" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li><a href="https://blog.sentry.io/2021/10/21/we-just-gave-154-999-dollars-and-89-cents-to-open-source-maintainers">We gave $155,000 directly to open source maintainers</a>. Besides directly supporting our dependencies, the Open Source team engaged the entire engineering team to identify and support worthy projects.</li>
</ul>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="weOss-meta" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<hr/>
<ul>
<li>We converted 100% of <a href="https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript/">Sentry’s OSS front-end code to TypeScript</a>. With TypeScript, we now have an extra layer of protection in our code, which means we’re able to ship with greater confidence, higher productivity, and most importantly, fewer bugs.</li>
</ul>
<hr/>
<ul>
<li>In early 2021 we launched globally distributed Points-of-Presence (PoPs) for event ingestion, <a href="https://github.com/getsentry/relay">powered by Relay</a>. This massively reduced the end-to-end latency when sending events from browser, mobile apps, games and even servers, particularly for our customers outside North America.</li>
</ul>
<hr/>
<p>Trying to assemble a year of work by over a dozen teams and nearly 100 engineers, product managers, and designers into a single semi-coherent post is tough. </p>
<p>The reality is, we did a lot more than what’s written here. All for you — well, for the good of developers everywhere. Thousands of bug fixes, feature enhancements, performance improvements, and other changes against dozens of active open source repositories.</p>
<p>There’s even more to come in 2022. </p>
<p>Let’s go into the new year sleeping better, knowing that performance monitoring, error tracking, and finding root causes are that much easier. Hallelujah. <em>cue Leonard Cohen</em></p></div></article></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Deprecation From U2F API to WebAuthn</title>
      <link>https://blog.sentry.io/2022/01/18/deprecation-from-u2f-api-to-webauthn/</link>
      <description>If you’re using the U2F API for registration and authentication of your U2F devices, you will notice a dire situation is coming soon: Google…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>If you’re using the U2F API for registration and authentication of your U2F devices, you will notice a dire situation is coming soon: Google Chrome will no longer support U2F API after February 2022:</p>
<p><img src="https://images.ctfassets.net/em6l9zw4tzag/uSlUcXwqq05dFcOqLGemG/64d1f8d8145a076d8187b1de0a77a920/u2fwarning.png" alt="u2f-api warning"/></p>
<p>For anyone using U2F API in their web apps, like us at Sentry, their users who had 2FA enabled with U2F devices would not be able to sign in. To remedy this, there’s a shiny new specification written by the World Wide Web Consortium (W3C) and the Fast IDentity Online Alliance (FIDO) that will solve all our problems. </p>
<p>In this blog post, we will go into the weeds on migrating from U2F API to WebAuthn.</p>
<h2 id="webauthn"><a href="#webauthn" aria-label="webauthn permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>WebAuthn</h2>
<p>WebAuthn is an API that allows web services to seamlessly integrate strong authentication into applications. With WebAuthn, web services can offer the user a choice of authenticators, such as security keys (Yubikeys, Titan Keys, for example) or built-in platform authenticators (biometric readers). In addition, it is supported by all the leading browsers — including Safari, which U2F API was not — and web platforms, which standardizes the integration of strong authentication. You can read more on <a href="https://webauthn.io/">WebAuthn’s</a> website.</p>
<h2 id="migrating-to-webauthn-from-u2f-api"><a href="#migrating-to-webauthn-from-u2f-api" aria-label="migrating to webauthn from u2f api permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Migrating to WebAuthn From U2F API</h2>
<p>Now, here’s the part you’re all here for, the migration to WebAuthn. Let’s break this down into two main parts:</p>
<h4 id="part-1-authenticating-existing-u2f-and-new-webauthn-devices-with-webauthn"><a href="#part-1-authenticating-existing-u2f-and-new-webauthn-devices-with-webauthn" aria-label="part 1 authenticating existing u2f and new webauthn devices with webauthn permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a><a href="#part-1-authentication">Part 1: Authenticating existing U2F and new WebAuthn devices with WebAuthn</a></h4>
<ul>
<li><a href="#step-1-generating-the-challenge-and-state">Step 1: Generating the challenge and state</a></li>
<li><a href="#step-2-creating-publickeycredential-for-authentication">Step 2: Creating PublicKeyCredential data</a></li>
<li><a href="#step-3-verifying-the-device">Step 3: Verifying the device</a></li>
</ul>
<h4 id="part-2-registering-new-devices-with-webauthn"><a href="#part-2-registering-new-devices-with-webauthn" aria-label="part 2 registering new devices with webauthn permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a><a href="#part-2-registration">Part 2: Registering new devices with WebAuthn</a></h4>
<ul>
<li><a href="#step-1-generating-the-publickeycredentialrpentity-and-state">Step 1: Generating the PublicKeyCredentialRpEntity and state</a></li>
<li><a href="#step-2-creating-publickeycredential-for-registration">Step 2: Creating PublicKeyCredential data</a></li>
<li><a href="#step-3-registering-the-device">Step 3: Registering the device</a></li>
</ul>
<h2 id="part-1-authentication"><a href="#part-1-authentication" aria-label="part 1 authentication permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Part 1: Authentication</h2>
<p>Let’s start with authentication so existing users can continue to log in. This is also important because newly registered WebAuthn devices can’t log in without a working WebAuthn login.</p>
<p>To understand the authentication flow, we can look at the following diagrams:</p>
</div><div>
<p>We’ll be using Python for the backend APIs. The <a href="https://github.com/Yubico/python-u2flib-server">U2F API</a> sequence (left) is very similar to the <a href="https://github.com/Yubico/python-fido2">WebAuthn</a> sequence (on the right). We simply have to replace three API calls: <span>u2f.start_authentication()</span> and <span>u2f.finish_authentication()</span> in the backend, and <span>u2f.sign()</span> in the frontend.   </p>
<p>Let’s start with <span>u2f.start_authentication()</span>, which takes in the browser’s application ID and the currently registered devices. </p>
<p>The U2F API authentication process starts with the backend generating a challenge, an example of which is shown below:</p>
<div data-language="text"><pre><code>{
  &#34;appId&#34;: &#34;https://your-webauthn-app.io/2fa/u2fappid.json&#34;,
  &#34;challenge&#34;: &#34;VwmGI-4…&#34;,
  &#34;registeredKeys&#34;: [
      {
          &#34;appId&#34;: &#34;https://your-webauthn-app.io/2fa/u2fappid.json&#34;,
          &#34;keyHandle&#34;: &#34;cxSl4oQ…&#34;,
          &#34;publicKey&#34;: &#34;BP4Q8MR…&#34;,
          &#34;transports&#34;: [
                &#34;usb&#34;
          ],
          &#34;version&#34;: &#34;U2F_V2&#34;
      }
  ]
}</code></pre></div>
<p>This challenge is sent to the browser where <span>u2f.sign()</span> takes the challenge as an input and returns a promise that is the result of:
</p><ul>
<li>verifying the application identity of the caller</li>
<li>creating a client data object and using the client data</li>
<li>the application ID</li>
<li>the key handle </li>
</ul>
<p>This creates a raw authentication request message and sends it to the U2F device. The result of the promise should look like this:</p>
<div data-language="text"><pre><code>{
    &#34;keyHandle&#34;: &#34;cxSl4oQ…&#34;,
    &#34;clientData&#34;: &#34;eyJ0eXA…&#34;,
    &#34;signatureData&#34;: &#34;AQAAAQ4…&#34;
}</code></pre></div>
<p>Once the result of the promise is sent to the server, we call U2f.complete_authentication() with the following two parameters: the original challenge data and the newly generated client data object passed in. This method will verify the device with the parameters and return the device info if it succeeded. From there, the server can allow the user to pass through the 2FA process.
</p><h3 id="step-1-generating-the-challenge-and-state"><a href="#step-1-generating-the-challenge-and-state" aria-label="step 1 generating the challenge and state permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Step 1: Generating the challenge and state</h3>
<p>To start the migration process, let’s first replace <span>u2f.start_authentication()</span> with its counterpart. The data types that the <a href="https://github.com/Yubico/python-fido2">WebAuthn API</a> takes are not quite the same ones used in U2F API. In fact, one of the main pain points was converting the necessary fields into the correct data type. </p>
<p>We want to authenticate users on legacy U2F API and WebAuthn, so we will create an authentication server first. The following will create an authentication server using WebAuthn that is backwards compatible with U2F API:</p>
<div data-language="text"><pre><code>webauthn_authentication_server = U2FFido2Server(
    app_id=u2f_app_id, 
    rp={
        &#34;id&#34;: “sentry-webauthn.io”, 
        &#34;name&#34;: &#34;Sentry with WebAuthn&#34;}
)</code></pre></div>
<p>Your <span>app_id</span> will be the same value as before. The <span>rp</span>, or Relying Party, is an object that contains an ID, which is the hostname of the URL, and the name of your Relying Party.
</p><p>Next, we need to generate a list of credentials, which is the same as the list of devices for U2F API. Keep in mind that the list of credentials will contain both WebAuthn and U2F API registered devices and that list needs to be manipulated. </p>
<div data-language="text"><pre><code>credentials = []

for device in self.get_u2f_devices():
    if type(device) == AuthenticatorData:
        credentials.append(device.credential_data)
    else:
        credentials.append(create_credential_object(device))</code></pre></div>
<p>The devices that are registered with WebAuthn have the type AuthenticatorData. For devices registered with U2F API, we need to create an AttestedCredentialData object for them to be compatible with WebAuthn. The following is the function we wrote that decodes the necessary parameters and creates the credential data:
</p><div data-language="text"><pre><code>def create_credential_object(registeredKey):
    return base.AttestedCredentialData.from_ctap1(
        websafe_decode(registeredKey[&#34;keyHandle&#34;]),
        websafe_decode(registeredKey[&#34;publicKey&#34;]),
    )</code></pre></div>
<center>[Source of function][16]</center>
<p>With that, we can begin the registration process by calling <span><a href="https://developers.yubico.com/WebAuthn/">register_begin()</a></span> on the WebAuthn server that we created earlier, with credentials as its parameter. This will return a challenge and state. </p>
<p>The challenge is needed for the browser to perform authentication, but we will only use the PublicKey object within the challenge. In addition, you should store the state in your sessions, as it will be needed later. </p>
<div data-language="text"><pre><code>challenge, state = self.webauthn_authentication_server.authenticate_begin(
    credentials=credentials
)
request.session[&#34;webauthn_authentication_state&#34;] = state
return ActivationChallengeResult(
    challenge=cbor.encode(challenge[&#34;publicKey&#34;])
)</code></pre></div>
<p>We also encoded the challenge using the [FIDO2 CBOR][18] library, as we will be sending it to the frontend using JSON, which does not handle binary representation well on its own. On the frontend, we convert the JSON string back into a byte array and decode it to return the challenge to its original form. 
</p><h3 id="step-2-creating-publickeycredential-for-authentication"><a href="#step-2-creating-publickeycredential-for-authentication" aria-label="step 2 creating publickeycredential for authentication permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Step 2: Creating PublicKeyCredential for authentication</h3>
<p>To replace <span>u2f.sign()</span>, we can call its WebAuthn equivalent <span>navigator.credentials.get()</span> with the challenge data. This library is now native to modern browsers, so don’t worry about importing any libraries. </p>
<div data-language="text"><pre><code>const challengeArray = base64urlToBuffer(
    challengeData.webAuthnAuthenticationData
);
const challenge = cbor.decodeFirst(challengeArray);

challenge.then(data =&gt; {
    webAuthnSignIn(data);
}).catch(err =&gt; {
    const failure = &#39;DEVICE_ERROR&#39;;
    Sentry.captureException(err);
    this.setState({
        deviceFailure: failure,
        hasBeenTapped: false,
    });
});

function webAuthnSignIn(publicKeyCredentialRequestOptions) {
    return navigator.credentials.get({
        publicKey: publicKeyCredentialRequestOptions,
    }).then(data =&gt; {
        // Send to backend
    })
}</code></pre></div>
<p>When the promise is resolved after calling <span>navigator.credentials.get()</span>, we need to send the appropriate data to the backend to finish authentication. To convert the PublicKeyCredential that was obtained from <span>navigator.credentials.get()</span>, we can run it through the following function:
</p><div data-language="text"><pre><code>getU2FResponse(data) {
    if (data.response) {
        const authenticatorData = {
          keyHandle: data.id,
          clientData: bufferToBase64url(data.response.clientDataJSON),
          signatureData: bufferToBase64url(data.response.signature),
          authenticatorData: bufferToBase64url(data.response.authenticatorData),
        };
        return JSON.stringify(authenticatorData);
    }

    return JSON.stringify(data);
}</code></pre></div>
<h3 id="step-3-verifying-the-device"><a href="#step-3-verifying-the-device" aria-label="step 3 verifying the device permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Step 3: Verifying the device</h3>
<p>For the final step, we can pass the original challenge and this new response to the backend. We need to create a list of credentials to validate the device, then call <span>authenticate_complete</span> on the authentication server that was made earlier with the following parameters:</p>
<ul>
<li><strong>state</strong>: the value which we stored in session from start_authentication</li>
<li><strong>credentials</strong>: list which we just generated</li>
<li>
<p>A websafe_decode for the following:</p>
<ul>
<li><strong>credential_id</strong>: a “keyHandle” of the response object</li>
<li><strong>client_data</strong>: a “clientData” of the response object passed through  fido2.client.ClientData</li>
<li><strong>auth_data</strong>: an “authenticatorData” of the response object passed through fido2.ctap2.authenticatorData</li>
<li><strong>signature</strong>: a “signatureData” of the response object</li>
</ul>
</li>
</ul>
<div data-language="text"><pre><code>self.webauthn_authentication_server.authenticate_complete(
    state=request.session[&#34;webauthn_authentication_state&#34;],
    credentials=credentials,
    credential_id=websafe_decode(response[&#34;keyHandle&#34;]),
    client_data=ClientData(websafe_decode(response[&#34;clientData&#34;])),
    auth_data=AuthenticatorData(websafe_decode(response[&#34;authenticatorData&#34;])),
    signature=websafe_decode(response[&#34;signatureData&#34;]),
)</code></pre></div>
<p>If this function returns true, you are now fully authenticated and good to go! 
</p><p>For our deployment, this feature was behind a flag to manage the rollout and for error monitoring. (We recommend using Sentry 😉.)  We deployed this feature independently from registration because the area of effect is limited in the event of an incident.</p>
<p>Congrats! The authentication part of the migration is finished.</p>
<h2 id="part-2-registration"><a href="#part-2-registration" aria-label="part 2 registration permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Part 2: Registration</h2>
<p>Similar to authentication, first, let’s take a look at the flow: </p>
</div><div>
<p>The flow of registration is almost identical to that of the authentication process. The three components we need to deprecate in order to migrate to WebAuthn are <span>u2f.begin_registration()</span> and <span>u2f.complete_registration()</span> in the backend, and <span>u2f.register()</span> in the frontend. </p>
<p>Once again, we will start with <span>u2f.begin_registration()</span>. This API call takes in the u2f application ID and list of registered devices. This results in the following data being sent to the browser to begin the registration process:</p>
<div data-language="text"><pre><code>{
    &#34;appId&#34;: &#34;https://your-webauthn-app/2fa/u2fappid.jso&#34;,
    &#34;registerRequests&#34;: [
        {
            &#34;challenge&#34;: &#34;uexgFSl…&#34;,
            &#34;version&#34;: &#34;U2F_V2&#34;
        }
    ],
    &#34;registeredKeys&#34;: []
}</code></pre></div>
<p>Similar to <span>u2f.sign()</span>, <span>u2f.register()</span> will take the previously generated results and return a promise that will look like the following if the device is registrable: 
</p><div data-language="text"><pre><code>{
    &#34;registrationData&#34;: &#34;BQQ1xlC…&#34;,
    &#34;version&#34;: &#34;U2F_V2&#34;,
    &#34;challenge&#34;: &#34;Jkh_Tfo…&#34;,
    &#34;appId&#34;: &#34;https://your-webauthn-app.io/2fa/u2fappid.json&#34;,
    &#34;clientData&#34;: &#34;eyJ0eXA…&#34;
}  </code></pre></div>
<p>Along with the previously generated challenge, this result is sent to the backend where <span>u2f.complete_registration()</span> takes in both parameters and generates the following data object:  
</p><div data-language="text"><pre><code>{
    &#34;appId&#34;: &#34;https://your-webauthn-app.io/2fa/u2fappid.json&#34;,
    &#34;keyHandle&#34;: &#34;SnllNGC…&#34;,
    &#34;publicKey&#34;: &#34;BIs-gsW…&#34;,
    &#34;transports&#34;: [
        &#34;usb&#34;
    ],
    &#34;version&#34;: &#34;U2F_V2&#34;
}</code></pre></div>
<p>You can save this dictionary and name of the device. They will be used for authentication.
</p><p>Just like before, let’s replace <span>u2f.begin_registration()</span> with its counterpart. We need to create a FIDO2Server and import it from <span>fido2.server</span>. We don’t need to make it backward compatible, as all new devices will be registered with WebAuthn.</p>
<h3 id="step-1-generating-the-publickeycredentialrpentity-and-state"><a href="#step-1-generating-the-publickeycredentialrpentity-and-state" aria-label="step 1 generating the publickeycredentialrpentity and state permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Step 1: Generating the PublicKeyCredentialRpEntity and state</h3>
<p>We start with importing the <a href="https://github.com/Yubico/python-fido2"><span>fido2.webauthn</span> library</a> to create a PublicKeyCredentialRpEntity. To create the entity, we need to pass in the Relying Party’s ID and name. With the entity, we pass it into Fido2Server to set things up.</p>
<div data-language="text"><pre><code>from fido2.server import Fido2Server
from fido2.webauthn import PublicKeyCredentialRpEntity

rp = PublicKeyCredentialRpEntity(rp_id, &#34;Sentry&#34;)
webauthn_registration_server = Fido2Server(rp)  </code></pre></div>
<p>When the server is created, we can optionally pass in a list of registered devices to avoid duplicate registrations.
</p><p>Next, we call <span>register_begin()</span> with:</p>
<ul>
<li><strong>user</strong>: dictionary with the user’s id, name, and display name</li>
<li><strong>credentials</strong>: the list we just generated </li>
<li><strong>user_verification</strong>: normally defaulted to discouraged</li>
</ul>
<p>You should get a result similar to this:</p>
<div data-language="text"><pre><code>  &#34;publicKey&#34;: {
    &#34;authenticatorSelection&#34;: {
      &#34;userVerification&#34;: &lt;UserVerificationRequirement.DISCOURAGED: &#34;discouraged&#34;&gt;},
      &#34;challenge&#34;: b&#34;\xe9)#\x86\xfa.\xa9\x82r\x86\xf7\x15e\xb5m\xdc&#34;
                   b&#34;\x1dR\xc4\x1b\xdb\xab\x94\x88\xb8\x94\xf43&#34;
                   b&#34;b\x03\xab\n&#34;,
      &#34;excludeCredentials&#34;: [],
      &#34;pubKeyCredParams&#34;: [
        {&#34;alg&#34;: -7,
         &#34;type&#34;: &lt;PublicKeyCredentialType.PUBLIC_KEY: &#34;public-key&#34;&gt;},
        {&#34;alg&#34;: -8,
         &#34;type&#34;: &lt;PublicKeyCredentialType.PUBLIC_KEY: &#34;public-key&#34;&gt;},
        {&#34;alg&#34;: -37,
         &#34;type&#34;: &lt;PublicKeyCredentialType.PUBLIC_KEY: &#34;public-key&#34;&gt;},
        {&#34;alg&#34;: -257,
         &#34;type&#34;: &lt;PublicKeyCredentialType.PUBLIC_KEY: &#34;public-key&#34;&gt;}],
      &#34;rp&#34;: {&#34;id&#34;: &#34;&lt;$YOUR_APP&gt;&#34;,
      &#34;name&#34;: &#34;Sentry&#34;},
      &#34;user&#34;: {&#34;displayName&#34;: &#34;&lt;$YOUR_NAME&gt;&#34;,
      &#34;id&#34;: b&#34;\x00&#34;,
      &#34;name&#34;: &#34;&lt;$YOUR_APP&gt;&#34;
    }
  }
}</code></pre></div>
<p>The registration data as seen above will be returned. Encode the registration data with the <span>cbor.encode()</span> method and base64 encode that to a string. 
</p><div data-language="text"><pre><code>publicKeyCredentialCreate = cbor.encode(registration_data)
return b64encode(publicKeyCredentialCreate)</code></pre></div>
<p>Set the state for later use in the session. 
</p><p>Interestingly, the data from WebAuthn is exactly the same from U2F API, despite looking different on first glance. WebAuthn sets the challenge in a byte array and the clientData in a COSE key object (which is a <a href="https://www.jacobcasper.com/u2f2webauthn.html">CBOR map</a>), while U2F API uses an encoded string. </p>
<h3 id="step-2-creating-publickeycredential-for-registration"><a href="#step-2-creating-publickeycredential-for-registration" aria-label="step 2 creating publickeycredential for registration permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Step 2: Creating PublicKeyCredential for registration</h3>
<p>Once the registration data is received by the browser, we convert the string into a buffer and decode it with <a href="https://github.com/hildjj/node-cbor/tree/main/packages/cbor-web">this library</a>. This gives us the data that will be used as  the input parameter of <a href="https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create"><span>navigator.credentials.create()</span></a>:</p>
<div data-language="text"><pre><code>challenge, state = self.webauthn_authentication_server.authenticate_begin(
    credentials=credentials
)
request.session[&#34;webauthn_authentication_state&#34;] = state

return ActivationChallengeResult(challenge=cbor.encode(challenge[&#34;publicKey&#34;]))

webAuthnRegister(publicKey) {
    const promise = navigator.credentials.create({publicKey});
    this.submitU2fResponse(promise);
}</code></pre></div>
<p>  When the promise from <span>navigator.credentials.create()</span> is resolved, we need to run it through <span>getU2FResponse()</span> before returning it to the server again. 
</p><h3 id="step-3-registering-the-device"><a href="#step-3-registering-the-device" aria-label="step 3 registering the device permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Step 3: Registering the device</h3>
<p>We have reached the final step where we need to extract some data from the response from <span>navigator.credentials.create()</span>. The following are needed for <span>register_complete()</span>:</p>
<ul>
<li><strong>state</strong>: from user sessions, set earlier after <span>begin_registration()</span></li>
<li><strong>client_data</strong>: from decoding the data’s cliendDataJSON and creating a ClientData Object with it </li>
<li><strong>AttestationObject</strong>:  from decoding the data’s attestationObject and creating an AttestationObject Object with it </li>
</ul>
<div data-language="text"><pre><code>data = json.loads(response_data)
client_data = ClientData(
    websafe_decode(data[&#34;response&#34;][&#34;clientDataJSON&#34;])
)
att_obj = base.AttestationObject(
    websafe_decode(data[&#34;response&#34;][&#34;attestationObject&#34;])
)

binding = webauthn_registration_server.register_complete(
    state, client_data, att_obj
)  </code></pre></div>
<p>ClientData should look like this:
</p><div data-language="text"><pre><code>{
    &#34;type&#34;: &#34;webauthn.create&#34;,
    &#34;challenge&#34;: &#34;_Uas89Y…&#34;,
    &#34;origin&#34;: &#34;https://&lt;$YOUR_APP&gt;&#34;,
    &#34;crossOrigin&#34;: false
}</code></pre></div>
<p>AttestationObject should look like this: 
</p><div data-language="text"><pre><code>AttestationObject(
    fmt: &#39;none&#39;, 
    auth_data: AuthenticatorData(
        rp_id_hash: h&#39;74cb1ce…5&#39;,
        flags: 0x41, 
        counter: 281, 
        credential_data: AttestedCredentialData(
            aaguid: h&#39;0000000…&#39;, 
            credential_id: h&#39;63af2c9…&#39;, 
            public_key: {...}
        ), 
        att_statement: {}, 
        ep_attr: None, 
        large_blob_key: None
    )
)</code></pre></div>
<p>Registered device data:
</p><div data-language="text"><pre><code>AuthenticatorData(
    rp_id_hash: h&#39;74cb1ce…&#39;,
    flags: 0x41, 
    counter: 281, 
    credential_data: AttestedCredentialData(
        aaguid: h&#39;0000000…&#39;, 
        credential_id: h&#39;63af2c9…&#39;, 
        public_key: {...}
    )
)</code></pre></div>
<p>With that, you can save the registered device data. The registration process is complete.
</p><p>Just like authentication, the deployment of this feature was behind a feature flag to manage the rollout. There were no database migrations needed as WebAuthn is backward compatible with U2F API.</p>
<h2 id="thats-a-wrap"><a href="#thats-a-wrap" aria-label="thats a wrap permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>That’s a wrap</h2>
<p>With that, WebAuthn should be set up and you can purge U2F API from your codebase. If you have made it this far, we hope that this guide was useful to you. With some planning, you will make it in time before Chrome locks out users from your application. All the best!</p>
<p>—</p>
<p>Everything we do at Sentry is built in the open. Find us on <a href="https://github.com/getsentry/sentry-mobile">GitHub</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/55gvYs2TqvaBJABtAVdHsC/4b8b7e8b2129f3b9bc64289fd2958925/WebAuth-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Yes, Open Source Is Sustainable</title>
      <link>https://blog.sentry.io/2021/12/16/yes-open-source-is-sustainable/</link>
      <description>Two months ago, we announced our annual investment in open source maintainers, mostly folks whose work we depend on to deliver Sentry to you…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Two months ago, we announced <a href="https://blog.sentry.io/2021/10/21/we-just-gave-154-999-dollars-and-89-cents-to-open-source-maintainers">our annual investment in open source maintainers</a>, mostly folks whose work we depend on to deliver Sentry to you, plus a few research and hobby projects that our employees put on our radar. Two days ago, six of these maintainers joined us for a one-hour panel called “<a href="https://sentry.io/resources/the-future-of-open-source-is-it-sustainable/">The Future of Open Source: Is It Sustainable?</a>” I co-hosted with <a href="https://twitter.com/jllord">Jessica Lord</a>, Product Manager of <a href="https://github.com/sponsors">GitHub Sponsors</a>. Our panelists were:</p>
<ul>
<li><a href="https://twitter.com/clauderic_d">Claudéric Demers</a>, author and maintainer of <a href="https://dndkit.com/">dnd kit</a></li>
<li><a href="https://twitter.com/carllerche">Carl Lerche</a>, author and maintainer of <a href="https://tokio.rs/">Tokio</a></li>
<li><a href="https://twitter.com/bagder">Daniel Stenberg</a>, author and maintainer of <a href="https://curl.se/">cURL</a></li>
<li><a href="https://twitter.com/starletdreaming">Tom Christie</a>, director of <a href="https://www.encode.io/">Encode</a></li>
<li><a href="https://twitter.com/left_pad">Henry Zhu</a>, maintainer of <a href="https://babeljs.io/">Babel</a></li>
<li><a href="https://twitter.com/mfonism">Mfon Eti-mfon</a>, member of the Board of Directors of <a href="https://www.djangoproject.com/foundation/">Django</a></li>
</ul>
<p>The purpose of the event was to <strong>inspire maintainers</strong> to pursue a community-supported open source career, and to <strong>inspire companies</strong> to pay for the community-supported open source software they use.</p>
</div><p>The conversation started with three models to get us thinking: a definition of an ideal open source career, a framework for ways to relate economically to our open source work, and a model for categorizing open source projects (borrowed, with permission, from Nadia Eghbal’s book, <a href="https://www.amazon.com/dp/0578675862"><em>Working in Public</em></a>).</p><div>
<p>What was our conclusion? Though there are many challenges and different approaches, the fact is that <strong>yes, open source is sustainable</strong>. We have clear existence proofs of maintainers making a living from community-sponsored open source through platforms such as GitHub Sponsors. We also have existence proofs of companies like Sentry stepping up to the plate, out of enlightened self-interest, to make such careers possible.</p>
<p>Daniel shared with us that he just celebrated his 25-year anniversary “<a href="https://www.youtube.com/watch?v=dodos1n1-As#t=16m28s">doing HTTP client code</a>,” and towards the end of the session he drove home the point that “<a href="https://www.youtube.com/watch?v=dodos1n1-As#t=58m05s">it’s absolutely better and easier to do now, than <em>ever</em> before</a>.” Tom followed up to emphasize that “<a href="https://www.youtube.com/watch?v=dodos1n1-As#t=58m13s">even five years ago</a>,” the idea of a community-supported open-source career was an unrealized dream. But today here we are with multiple examples of people who are living the dream, including some of our panelists.</p>
<p>There were many great moments and insights during the conversation, so <a href="https://www.youtube.com/watch?v=dodos1n1-As">watch it</a> if you haven’t yet. Thank you to everyone who joined us live, participated in the chat, and engaged on Twitter. Thank you to all of our esteemed panelists, to the event and marketing teams at GitHub and Sentry for making this possible, and to Jessica for co-hosting.</p>
<p>Open source is not perfect, but the overall trend in sustainability is positive. Just imagine where we will be five or twenty five years from now. Keep up the good work!</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1St09B0nPF4rzMpSR9XbaQ/fb31322a2a8ba91294af8fe4c95eb897/HolidayOpenSource-Meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 16 Dec 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Sentry&#39;s response to Log4j vulnerability CVE-2021-44228</title>
      <link>https://blog.sentry.io/2021/12/15/sentrys-response-to-log4j-vulnerability-cve-2021-44228/</link>
      <description>Sentry is not impacted by the log4j vulnerabilities, CVE-2021-44228 or CVE-2021-45046, also known as log4shell.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><strong>Sentry is not impacted by the log4j vulnerabilities, <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228">CVE-2021-44228</a> or <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45046">CVE-2021-45046</a>, also known as log4shell.</strong></p>
<p>On December 9th, 2021 <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228">CVE-2021-44228</a> was announced, impacting versions 2.x of log4j (also known as log4j2). This issue was believed to be fixed in log4j 2.15.0, however on December 14th, 2021 <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45046">CVE-2021-45046</a> was announced, and log4j 2.16.0 was released, fixing the additional exploitation vectors. </p>
<p><a href="https://github.com/getsentry/sentry">Sentry is written in Python</a> and <a href="https://blog.sentry.io/2016/10/19/fixing-python-performance-with-rust">Rust</a>, and therefore does not make use of the Java logging library, log4j. There are two components, Kafka and Zookeeper, used by Sentry that are written in Java, and make use of the unimpacted log4j 1.x series. These products are also not impacted by the log4j vulnerabilities (<a href="https://issues.apache.org/jira/browse/KAFKA-13534">Kafka</a>, <a href="https://issues.apache.org/jira/browse/ZOOKEEPER-4423">Zookeeper</a>).</p>
<h2 id="saas"><a href="#saas" aria-label="saas permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>SaaS</h2>
<p>Sentry’s SaaS platform was not impacted by the log4j vulnerabilities. As a Python application, we do not make use of log4j directly. While thoroughly examining our cloud environment, we determined that we are not running any impacted software in a way that is publicly available. An internal-only ElasticSearch cluster was the only impacted software and has already undergone updates to mitigate the issue.</p>
<h2 id="self-hosted"><a href="#self-hosted" aria-label="self hosted permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Self Hosted</h2>
<p>Self hosted Sentry, in its default configuration, is not impacted by the log4j vulnerabilities. Self hosted does make use of Kafka and Zookeeper, which as mentioned above are not vulnerable. If running self hosted Sentry in a non-default setup, you may need to evaluate if you are at risk of these vulnerabilities impacting your specific environment.</p>
<h2 id="sdks"><a href="#sdks" aria-label="sdks permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>SDKs</h2>
<p>The <a href="https://github.com/getsentry/sentry-java/">sentry-java</a> SDK does not make use of log4j directly, however Sentry offers an integration with log4j2 through <code>sentry-log4j2</code>. You should control which version of log4j2 your project is using by directly adding a dependency to your Maven or Gradle project with the unaffected version 2.16.0. Sentry’s integration with log4j was updated to require that version or higher, to help avoid situations where users are bringing log4j2 as a transient dependency of Sentry’s integration instead of a direct dependency.</p></div></div>]]></content:encoded>
      <enclosure url="/static/default-d67da2ea09ea16fc9b3d2f3fb5636422.png" length="0" type="image/png"></enclosure>
      <pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Bytecode transformations: The Android Gradle Plugin</title>
      <link>https://blog.sentry.io/2021/12/14/bytecode-transformations-the-android-gradle-plugin/</link>
      <description>The first part of a blog post series about bytecode transformations on Android, where we talk about different approaches to bytecode manipulation in Java as well as how to make it work with Android and the Android Gradle plugin.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>This is the first part of a blog post series about bytecode transformations on Android. In this part we’ll cover different approaches to bytecode manipulation in Java as well as how to make it work with Android and the Android Gradle plugin. In the next two parts we’ll dive into the actual bytecode, bytecode instructions and how we can modify the bytecode and inject our own instructions, using <a href="https://developer.android.com/jetpack/androidx/releases/room">Room</a> as an example. In the last part we’ll see how we can test our transformations and how it can influence Gradle build speed.</em></p>
<p>Detecting the slow spots in your app without having to write a single line of code is an intriguing idea, but is also not that easy to implement. At Sentry we wanted to provide the capability for Android users to automatically measure the execution time of database queries because oftentimes they can become a hidden bottleneck for app performance. <a href="https://developer.android.com/jetpack/androidx/releases/room">Room</a> is a widely-adopted ORM solution built by Google and is a go-to library for persistence for the majority of the Android developers, so it was an obvious choice for us to start with.</p>
<p>If we want database operations to show up in Sentry, we need to wrap them into special objects called Spans. In short, Spans are application events that have a start and end time and some metadata like operation name, description, etc. For example, this is how the performance breakdown looks for a popular open-source app <a href="https://github.com/chrisbanes/tivi">tivi</a>:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png?w=584&amp;fm=webp 584w,
https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png?w=1168&amp;fm=webp 1168w,
https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png?w=2336&amp;fm=webp 2336w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png?w=584 584w,
https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png?w=1168 1168w,
https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png?w=2336 2336w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tivi performance" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7krxfW7ccZP0lfqBvE2Z2n/036dccc0b43893b94341f70e2efcb514/Screenshot_2021-11-11_at_11.32.28.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>On the screenshot above, there’s a parent span <code>ui.screen.interaction</code> that contains multiple child spans, for instance, the network request span with a <code>http.client</code> operation, duration 225ms and a request url as a description. If you want to learn more about performance @ Sentry, check <a href="https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about#mobile-performance-monitoring">this</a> post out.</p>
<p>Back to the topic, this all means we need to find a way to inject our code before and after Room executes its queries to measure their execution time. There’s a <a href="https://developer.android.com/reference/androidx/room/RoomDatabase.QueryCallback">QueryCallback</a> available in the Room API, but it’s invoked only before a query gets executed, so we couldn’t really utilize it.</p>
<h2 id="options"><a href="#options" aria-label="options permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Options</h2>
<p>Since there’s no way to know when a SQL query starts and finishes at runtime, we started looking into compile-time solutions. There are a few well-known options in the JVM world available for bytecode weaving:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/AspectJ">AspectJ</a>: an AOP framework, which allows extending methods and plugging into their execution from outside of the target codebase.</li>
<li><a href="https://asm.ow2.io/">ASM</a>: a bytecode manipulation framework, which allows dealing with bytecode directly. For example, it’s used by R8 and D8 on Android for <a href="https://jakewharton.com/digging-into-d8-and-r8/">optimizing and dexing</a> the bytecode.</li>
<li>Other higher-level abstractions like <a href="https://www.javassist.org/">Javassist</a>: are all based on ASM, but have a nicer and easier-to-understand APIs to deal with.</li>
</ul>
<p>While it would be logical to pick something higher-level, considering we had no expertise in any of those, we’ve decided to look into how we could marry those with the Android Gradle plugin (AGP), as we are aiming to transform Android apps and need to support things like differe build types, flavours and so on. A quick search revealed that we could go with:</p>
<ol>
<li><a href="https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.transform.TransformAction.html">Gradle’s TransformAction</a>: a plain Gradle API for transforming outputs. This is used, for example, for <a href="https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:build-system/gradle-core/src/main/java/com/android/build/gradle/internal/dependency/DexingTransform.kt">dexing</a>, <a href="https://cs.android.com/android-studio/platform/tools/base/+/mirror-goog-studio-main:build-system/gradle-core/src/main/java/com/android/build/gradle/internal/dependency/JetifyTransform.kt">jetifying</a>, and many other things that the Android Gradle plugin does. </li>
<li><a href="https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/transform/Transform">AGP’s Transform</a>: an old API from AGP that gives a list of inputs to be transformed, depending on the options provided. It also handles full/incremental builds automatically. Now deprecated in favor of the new API.</li>
<li><a href="https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/variant/Component.html#transformclasseswith">AGP’s transformClassesWith</a>: the new API from AGP that allows registering an ASM <a href="https://asm.ow2.io/javadoc/org/objectweb/asm/ClassVisitor.html">ClassVisitor</a> for visiting bytecode instructions and instrumenting <code>.class</code> files. It utilizes the aforementioned <a href="https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.transform.TransformAction.html">TransformAction</a> to transform dependencies and provides a Gradle task that handles full/incremental builds automatically. Available from AGP version 4.2.0 and above.</li>
</ol>
<p>The first option would require us to manually hook into the AGP process and deal with its artifacts, so we decided to look into options 2 and 3 and compare them, as they come directly from the vendor.</p>
<p>Previously, in the old AGP versions (pre-4.2.0), if one would like to instrument compiled classes, they would need to register their own <a href="https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/transform/Transform">Transform</a>, traverse the input files and perform instrumentation for each of those files using <a href="https://asm.ow2.io/javadoc/org/objectweb/asm/ClassWriter.html">ClassWriter</a> from ASM. For each such <code>Transform</code> AGP would register a new Gradle task, so if you happen to have 10 transforms instrumenting your application, you would end up with 10 additional Gradle tasks doing almost the same thing - iterating over the changed files, reading the bytecode, applying their own transformations and writing the bytecode back. </p>
<p>This is horrible for the build speed and most of that can be commonized up until the point of actually instrumenting the bytecode.</p>
<p>The new <code>transformClassesWith</code> API tackles exactly that by providing a single API for registering <code>ClassVisitor</code>s and abstracting away file iteration and reading/writing the bytecode. It collects all visitors in a single list and then, for each file, runs all of them in order of registering, meaning there’s just a single Gradle task running for all transformations.</p>
<p>We’ve decided to go with ASM + <code>transformClassesWith</code> pack, deliberately supporting only the new versions of AGP.</p>
<p><em>Note, that if you want to support bytecode transformations in lower AGP versions (below 4.2.0) you still need to use the old Transform API. However, you can perform an AGP version check at runtime and choose either a new or an old API depending on it. An example can be seen in the <a href="https://cs.android.com/android/platform/superproject/+/master:external/dagger2/java/dagger/hilt/android/plugin/src/main/kotlin/dagger/hilt/android/plugin/HiltGradlePlugin.kt;l=69-82">Hilt</a> Gradle plugin.</em></p>
<h2 id="using-new-transform-apis"><a href="#using-new-transform-apis" aria-label="using new transform apis permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Using new transform APIs</h2>
<h3 id="registering-asmclassvisitorfactory"><a href="#registering-asmclassvisitorfactory" aria-label="registering asmclassvisitorfactory permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Registering AsmClassVisitorFactory</h3>
<p>As this post is not about how to create Gradle plugins, I will skip the setup part, but in a nutshell, we have to implement the <code>Plugin</code> interface from Gradle and override a single method called <code>apply</code>, which is called when the Gradle plugin is applied to a project:</p>
<div data-language="kotlin"><pre><code><span>class</span> SentryPlugin <span>:</span> Plugin<span>&lt;</span>Project<span>&gt;</span> <span>{</span>

	<span>override</span> <span>fun</span> <span>apply</span><span>(</span>project<span>:</span> Project<span>)</span> <span>{</span>
		<span>..</span><span>.</span>
	<span>}</span>
<span>}</span></code></pre></div>
<p>After that we have to listen when the Android Gradle plugin is applied to the project and retrieve the new <a href="https://developer.android.com/reference/tools/gradle-api/4.2/com/android/build/api/extension/AndroidComponentsExtension">AndroidComponentsExtension</a> like this:</p>
<div data-language="kotlin"><pre><code>project<span>.</span>pluginManager<span>.</span><span>withPlugin</span><span>(</span><span>&#34;com.android.application&#34;</span><span>)</span> <span>{</span>
	<span>val</span> androidComponentsExtension <span>=</span>
    project<span>.</span>extensions<span>.</span><span>getByType</span><span>(</span>AndroidComponentsExtension<span>::</span><span>class</span><span>.</span>java<span>)</span>
	<span>..</span><span>.</span>
<span>}</span></code></pre></div>
<p>The extension has a special <code>onVariants</code> method that configures the build variants:</p>
<div data-language="kotlin"><pre><code>androidComponentsExtension<span>.</span><span>onVariants</span> <span>{</span> variant <span>-&gt;</span>
	<span>..</span><span>.</span>
<span>}</span></code></pre></div>
<p>Finally we can register our custom <code>AsmClassVisitorFactory</code> for the <code>variant</code> through <code>transformClassesWith</code>:</p>
<div data-language="kotlin"><pre><code>variant<span>.</span><span>transformClassesWith</span><span>(</span>
  SpanAddingClassVisitorFactory<span>::</span><span>class</span><span>.</span>java<span>,</span>
  InstrumentationScope<span>.</span>ALL
<span>)</span> <span>{</span> params <span>-&gt;</span>
  <span>if</span> <span>(</span>extension<span>.</span>tracingInstrumentation<span>.</span>forceInstrumentDependencies<span>.</span><span>get</span><span>(</span><span>)</span><span>)</span> <span>{</span>
    params<span>.</span>invalidate<span>.</span><span>setDisallowChanges</span><span>(</span>System<span>.</span><span>currentTimeMillis</span><span>(</span><span>)</span><span>)</span>
  <span>}</span>
  params<span>.</span>debug<span>.</span><span>setDisallowChanges</span><span>(</span>
    extension<span>.</span>tracingInstrumentation<span>.</span>debug<span>.</span><span>get</span><span>(</span><span>)</span>
  <span>)</span>
  params<span>.</span>tmpDir<span>.</span><span>set</span><span>(</span>tmpDir<span>)</span>
<span>}</span></code></pre></div>
<p><code>transformClassesWith</code> accepts 3 parameters:</p>
<ul>
<li><code>ClassVisitorFactory</code>: a factory, which provides a <code>ClassVisitor</code> implementation and defines whether this visitor is interested in instrumenting a given class</li>
<li><code>InstrumentationScope</code>: either <code>ALL</code> or <code>PROJECT</code>. Defines whether the instrumentation applies only for project files or for project files and their dependencies (e.g. jars). In our case, we were interested in instrumenting all Room queries, regardless of their origin, so we set it to <code>ALL</code></li>
</ul>
<p><em>If you’re using <code>InsrumentationScope.ALL</code>, beware that Gradle will cache the transformed artifacts across builds as long as the <code>InstrumentationParameters</code> do not change. This may come as a surprise while developing, as some of the classes coming from the dependencies might not show up for instrumentation. We found it useful to have a boolean parameter, which would invalidate the transform caches by simply setting <code>System.currentTimeMillis</code> and allow us to always receive all classes for instrumentation.</em></p>
<ul>
<li>Configuration function to be applied before passing the necessary parameters for the <code>ClassVisitorFactory</code></li>
</ul>
<p>The <a href="https://developer.android.com/reference/tools/gradle-api/7.0/com/android/build/api/instrumentation/InstrumentationParameters">InstrumentationParameters</a> are the way to pass information from the plugin to the <code>ClassVisitorFactory</code>. They are being used as Gradle inputs, this means they contribute to the up-to-date checks of the task and should be properly <a href="https://docs.gradle.org/current/userguide/more_about_tasks.html#sec:up_to_date_checks">annotated</a>. For example, here we are setting a <code>debug</code> boolean as well as a <code>tmpDir</code> to use this information later and stream debug output of instrumentation into a file under the <code>tmpDir</code>.</p>
<h3 id="implementing-asmclassvisitorfactory"><a href="#implementing-asmclassvisitorfactory" aria-label="implementing asmclassvisitorfactory permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Implementing AsmClassVisitorFactory</h3>
<p>For the <code>ClassVisitorFactory</code> it’s necessary to implement 2 methods:</p>
<ul>
<li><code>createClassVisitor</code> which provides a custom <code>ClassVisitor</code> from ASM that does the actual visiting of bytecode instructions and transformation</li>
<li><code>isInstrumentable</code> which defines whether a given class is applicable for instrumentation or not</li>
</ul>
<p>It is also necessary to specify an implementation of <code>InstrumentationParameters</code> as a type for <code>AsmVisitorFactory</code> or use <code>InstrumentationParameters.None</code> in case there are no params.</p>
<div data-language="kotlin"><pre><code><span>abstract</span> <span>class</span> SpanAddingClassVisitorFactory <span>:</span>
    AsmClassVisitorFactory<span>&lt;</span>SpanAddingClassVisitorFactory<span>.</span>SpanAddingParameters<span>&gt;</span> <span>{</span>

    <span>interface</span> SpanAddingParameters <span>:</span> InstrumentationParameters <span>{</span>

        <span>@get:Input</span>
        <span>@get:Optional</span>
        <span>val</span> invalidate<span>:</span> Property<span>&lt;</span>Long<span>&gt;</span>

        <span>@get:Input</span>
        <span>val</span> debug<span>:</span> Property<span>&lt;</span>Boolean<span>&gt;</span>

        <span>@get:Internal</span>
        <span>val</span> tmpDir<span>:</span> Property<span>&lt;</span>File<span>&gt;</span>
    <span>}</span>

    <span>override</span> <span>fun</span> <span>createClassVisitor</span><span>(</span>
        classContext<span>:</span> ClassContext<span>,</span>
        nextClassVisitor<span>:</span> ClassVisitor
    <span>)</span><span>:</span> ClassVisitor <span>=</span>
        <span>TODO</span><span>(</span><span>&#34;If we return true from the isInstrumentable below, we should return a ClassVisitor that will inject our code for measuring the execution time&#34;</span><span>)</span>

    <span>override</span> <span>fun</span> <span>isInstrumentable</span><span>(</span>classData<span>:</span> ClassData<span>)</span><span>:</span> Boolean <span>=</span>
        <span>TODO</span><span>(</span><span>&#34;Determine if we are interested in instrumenting the given ClassData. For us it would mean a class annotated with @Dao&#34;</span><span>)</span>
<span>}</span></code></pre></div>
<p>Inside the <code>isInstrumentable</code> method, we determine whether we are interested in instrumenting the given <code>ClassData</code> and later return our custom <code>ClassVisitor</code> from the <code>createClassVisitor</code> method in case we are. Note, however, that it’s always a good practice to fall back to <code>nextClassVisitor</code> in case there’s no <code>ClassVisitor</code> for the given class, otherwise the Gradle build will fail.</p>
<p>Last, let’s look at the <code>ClassData</code> structure:</p>
<div data-language="kotlin"><pre><code><span>interface</span> ClassData <span>{</span>
    <span>/**
     * Fully qualified name of the class.
     */</span>
    <span>val</span> className<span>:</span> String

    <span>/**
     * List of the annotations the class has.
     */</span>
    <span>val</span> classAnnotations<span>:</span> List<span>&lt;</span>String<span>&gt;</span>

    <span>/**
     * List of all the interfaces that this class or a superclass of this class implements.
     */</span>
    <span>val</span> interfaces<span>:</span> List<span>&lt;</span>String<span>&gt;</span>

    <span>/**
     * List of all the super classes that this class or a super class of this class extends.
     */</span>
    <span>val</span> superClasses<span>:</span> List<span>&lt;</span>String<span>&gt;</span>
<span>}</span></code></pre></div>
<p>It may seem to have everything to help us determine whether a class is suitable for instrumentation or not, but there’s a setback which we’ll cover in the following post.</p>
<hr/>
<p>Using the new AGP transform APIs with ASM looks like an obvious choice for bytecode manipulation for Android as it affects the build speed almost unnoticeable (we’ll cover that later),  handles full/incremental builds on its own, and offers a great API surface via ASM at the same time.</p>
<p>In the next part, we’ll talk about Room internals, how we collected the methods for instrumentation, and what tools are available out there for dealing with ASM.</p>
<p>The code is available in the <a href="https://github.com/getsentry/sentry-android-gradle-plugin">sentry-android-grade-plugin</a> repo, specifically:</p>
<ul>
<li><a href="https://github.com/getsentry/sentry-android-gradle-plugin/blob/37eff955853fd395c0c6bf4c633518ce35dd508c/plugin-build/src/main/kotlin/io/sentry/android/gradle/SentryPlugin.kt#L62-L86">Registering a ClassVisitorFactory</a></li>
<li><a href="https://github.com/getsentry/sentry-android-gradle-plugin/blob/37eff955853fd395c0c6bf4c633518ce35dd508c/plugin-build/src/main/kotlin/io/sentry/android/gradle/instrumentation/SpanAddingClassVisitorFactory.kt">ClassVisitorFactory</a></li>
</ul>
<p>By the way, if you are already using the <a href="https://docs.sentry.io/platforms/android/proguard/#gradle-configuration">Sentry Android Gradle plugin</a>, give this new Room instrumentation a try in version <code>3.0.0-beta.1</code> , we would appreciate your feedback via <a href="https://github.com/getsentry/sentry-android-gradle-plugin/issues">GitHub issues</a>. If not, it’s time to start using Sentry — <a href="https://sentry.io/demo">request a demo</a> and <a href="https://sentry.io/signup/">try it out for free</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/FdF5nmvSvD0iyblfhnywP/bab558ea322c9ca897125d684dd4c60d/mobile-meta.jpeg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Prioritize the Right Performance Monitoring Metrics</title>
      <link>https://blog.sentry.io/2021/12/09/prioritize-the-right-performance-monitoring-metrics/</link>
      <description>We can all agree that one of the great pleasures in life is seeing the exact performance monitoring chart you want - exactly where you want it on the Sentry Performance home page. No? Ok. Well, at least we agree it&#39;s better than not having the chart you want where you want it, right? I thought so. That&#39;s why we made our main performance monitoring view modular.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Now every developer can customize the performance monitoring charts and data views on the Performance page to see what is most important to them and their team, helping prioritize relevant performance monitoring metrics so they can take action faster. And when you jump back into Sentry Performance, the page is saved right where you left off.  </p>
<p>Say you’re working on a new release. You can edit your Performance page to include User Misery, Transaction Throughput, and Failure Rate. That way, if users are disengaging and failure rates are increasing, you have the data to roll back a release and resolve the performance regression.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png?w=698&amp;fm=webp 698w,
https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png?w=1396&amp;fm=webp 1396w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png?w=698 698w,
https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png?w=1396 1396w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Performance Landing v3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1wmyEQsGFCJqPxdEFvRAWp/2c48822f0cf53824e2fcd48f6927f462/Screen_Shot_2021-11-16_at_1.39.01_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Alternatively, if you’re working on a mobile app, you may want to focus on Startup Times, Slow Frames, and Throughput. Studies show that users are likely to abandon applications where startup times are <a href="https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about">longer than 2 seconds</a>. We figured you’d want to keep bounce numbers down, so we made it easy for you to optimize <a href="https://docs.sentry.io/product/performance/mobile-vitals/">mobile vitals</a> with the trace context. I’m sure you can think of many different use cases, and the permutations are endless.</p>
<h2 id="trends"><a href="#trends" aria-label="trends permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trends</h2>
<p>We know your codebase is constantly changing. You’re adding new features, paying down technical debt, or you’re instrumenting an analytics tool because your PM needs to measure conversion; whatever the case may be, these changes can affect reliability and performance.</p>
<p>To keep tabs on fluctuations in performance, Sentry shows you your most improved and regressed transactions. That way, you can learn from recent releases and address reintroduced regressions right away in a view we call <a href="https://docs.sentry.io/product/performance/#analyze-performance-trends">Trends</a>. Trends helps you quickly see which transactions had the highest % increase in latency in the last week, or since your last release. Conversely, it can also show you which transactions have actually improved the most. This is a great way to see whether a fix you made in your last release actually resulted in improved performance metrics.</p>
<p>While Trends is accessible from the Performance page, you may want to have it front and center. So, we widgetized the graphs so you can add them to your custom Performance view.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="Performance UI" title="" src="https://images.ctfassets.net/em6l9zw4tzag/DAZdmC3YkRH4iTNsZPIQl/23e5d5951ecf4052075d63a7627f9575/ezgif.com-gif-maker__15_.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="checklists"><a href="#checklists" aria-label="checklists permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Checklists</h2>
<p>Don’t have <a href="https://sentry.io/for/performance">performance monitoring</a> set up yet? This is not fine. We added checklists to guide you through the setup, with instructions tailored to the language you’re using so set up Performance without having to read through our <a href="https://docs.sentry.io/product/performance/getting-started/">docs</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png?w=332&amp;fm=webp 332w,
https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png?w=665&amp;fm=webp 665w,
https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png?w=1329&amp;fm=webp 1329w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png?w=332 332w,
https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png?w=665 665w,
https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png?w=1329 1329w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Performance - Checklists" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6R0DDf3dydV8e8qZSxhtwF/1c8f19d986a909368bb81b32c9b53f58/Screen_Shot_2021-11-08_at_9.41.17_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://sentry.io/auth/login/">Log in</a> to your account to customize your performance experience or if you’re new to Sentry <a href="https://sentry.io/demo">request a demo</a> and <a href="https://sentry.io/signup/">try it out for free</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1aJZCx78Fbhi1G5Wjde0oC/f7ed0d10764b6bc489bcef7dd9ed56be/performance3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Bringing Specto into the Sentry Family</title>
      <link>https://blog.sentry.io/2021/11/24/bringing-specto-into-the-sentry-family/</link>
      <description>We’re delighted to announce that we’ve acquired Specto, a powerful mobile profiling tool from ex-Facebook mobile experts who share our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>We’re delighted to announce that we’ve acquired Specto, a powerful mobile profiling tool from ex-Facebook mobile experts who share our determination for building developer-first performance monitoring products that actually suit the modern dev stack.</p>
<p>Much of Sentry’s power from frontend app owners to backend services has been in our expertise in code observability — this ability to not only see only what production issues really matter, but in our unparalleled ability to empower application developers to solve these issues rapidly from the root cause, with the insights and learning to move faster.</p>
</div><div>
<p>Over the past year and a half, we’ve seen this trend accelerate at an unprecedented pace. Everything we interact with from morning to evening is now an application - from the smart speaker and home gym to the latest podcast or TV show. Not only are we surrounded, but consumers and businesses alike now demand near-perfection from every interaction. And every development team needs to deliver near-perfect product experiences in order to retain users and grow their businesses. </p>
<p>Nowhere is this more needed than in mobile, where modern development teams have historically been neglected, and then elated to find one or two “mobile-first” solutions in the past decade. But mobile is no longer a standalone platform for most companies. Instead, these tools increase the silos that already exist between engineering teams, and more importantly, don’t encourage a consistent nor holistic product experience that companies like Disney, Riot, Klarna, Peloton and others need to across every device, and every platform. We’ve also seen the power of a singular workflow and the efficiency gains that development teams see when they have a cohesive platform for error monitoring, performance monitoring, release health, and robust analytics in one place. We believe the depth that mobile profiling brings to developers aligns closely with our goal to empower developers to own their application health.</p>
<p>Our acquisition today of Specto is part of our commitment to bring Performance Monitoring and code observability to a whole new level. Moreover, the Specto team shares our vision for the modern developer experience and it’s this first-class commitment to developers that we can’t wait to share with you over the coming months.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4pEVop3sXrzNeDhtFIEpam/151df99d04a05712a2ac780c133a5fc2/sentry-plus-specto-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 24 Nov 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Monitoring our Local Development Environment with Sentry</title>
      <link>https://blog.sentry.io/2021/11/18/monitoring-our-local-development-environment-with-sentry/</link>
      <description>Is your organization&#39;s local development environment plagued with issues? Read on how you can use Sentry to monitor it and help you solve issues quickly.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>At Sentry, we’re always looking for innovative ways to dogfood our product. Over the last year we added Sentry’s error monitoring to our developer environment so that we could better understand the health of it.</p>
<p>In this blog post I’m going to touch on how fragile local development environments can be, how we brought observability into what’s happening by introducing Sentry, and what outcomes it has driven for our engineering organization.</p>
<h2 id="development-environments-are-fragile"><a href="#development-environments-are-fragile" aria-label="development environments are fragile permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Development environments are fragile</h2>
<p>As programmers, we typically spend a lot of time getting our local development environment set up: installing dependencies, managing multiple versions of an SDK or supporting tools, and so on.</p>
<p>Getting set up can take some time, however it’s usually straightforward because you’re starting from a clean slate. What becomes more challenging is when a previously good environment gets into a bad state. For example, you need a newer Python version for your virtualenv, a new library is missing, or your pre-commit hooks are out of date.</p>
<p>When things go wrong, it’s frustrating because your real work – building software – stops and you instead have to invest your time trying to unstick your environment. When the answer isn’t obvious, you have to go into Slack, ask for help, and hope that someone is around who can help you troubleshoot. And now you’ve interrupted their regular work too.</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/2onnmg0LDakW2E92DmWkuh/caed0e8697078f46e96e29829cc84bab/Screen_Shot_2021-11-15_at_10.08.32_AM.png" alt="Engineer facing development environment issue"/></p>
<h2 id="getting-alerted-to-problems-during-development"><a href="#getting-alerted-to-problems-during-development" aria-label="getting alerted to problems during development permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Getting alerted to problems during development</h2>
<p>Typically, Sentry is used for monitoring software in production. When your software goes live in front of users, you want visibility to understand whether that software is operating successfully. Are there any errors? Is the performance acceptable?</p>
<p>However, for our Developer Productivity team, the local development environment used by our engineers is our production environment. Software engineers at Sentry are our users, and we similarly want to understand if the development tools we’re shipping are working successfully. For instance, are Python packages failing to install for some users? </p>
<p>What if we could be alerted when a developer’s environment goes bad? To figure this out, we instrumented Sentry into our local development toolchain.</p>
</div><div>
<h2 id="instrumenting-bash-scripts-with-sentry"><a href="#instrumenting-bash-scripts-with-sentry" aria-label="instrumenting bash scripts with sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting Bash scripts with Sentry</h2>
<p>Our development environment is generally powered by a lot of Bash scripts (If you have other environments go to <a href="https://docs.sentry.io/platforms/" title="Sentry supported platforms">the platforms page</a> and see if yours is supported). Those scripts do everything from <a href="https://github.com/getsentry/sentry/blob/6fd2793e9131c8062dc70be6a0ade8346280ef03/scripts/pyenv_setup.sh#L82-L98">installing Python versions</a>, <a href="https://github.com/getsentry/sentry/blob/6fd2793e9131c8062dc70be6a0ade8346280ef03/scripts/lib.sh#L134-L146">setting up Git commit hooks</a>, <a href="https://github.com/getsentry/sentry/blob/6fd2793e9131c8062dc70be6a0ade8346280ef03/config/hooks/post-merge#L20-L26">prompting developers to update their dependencies</a>, and so on.</p>
<p>To have visibility into what was happening in our Bash scripts, we turned to <a href="https://docs.sentry.io/product/cli/send-event/">sentry-cli</a>. Sentry-cli is a command line executable written in Rust that communicates with the Sentry API. Typically it’s used for administrative tasks like sending a test event from the shell, uploading source maps, or letting Sentry know about a new version of your software.</p>
<p>Sentry-cli also has an interesting feature: it provides a bash hook that detects unhandled failures in a bash script and automatically reports those failures to Sentry. In the example below, sentry-cli is initialized in a Bash script (see <a href="https://docs.sentry.io/product/cli/send-event/#bash-hook">docs</a>):
<img src="https://images.contentful.com/em6l9zw4tzag/6vj3fjYVWDuLD9wTZtqGiN/603b2754446679710faa8114bb43af24/Screen_Shot_2021-11-15_at_10.19.51_AM.png" alt="Code snippet to use Sentry CLI in Bash script"/></p>
<p>If the Bash script fails, an error event is sent to Sentry with a traceback, the values of any active environment variables, and the console output is captured as breadcrumbs.</p>
</div><div>
<h2 id="monitoring-our-development-environment-users"><a href="#monitoring-our-development-environment-users" aria-label="monitoring our development environment users permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Monitoring our development environment users</h2>
<p>Let’s fast forward: at this point we instrumented most of our development environment scripts with Sentry. Let’s look at what the flow for helping a co-worker bootstrapping their development environment is like.</p>
<p>As mentioned earlier, if a script failure is encountered, sentry-cli sends an error event to Sentry’s servers. This has the effect of creating an alert within Sentry, which gets broadcasted to our team channel on Slack.</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/6rdGcXMGcayHQaGDPT00tR/75891df9e5d8c0a8e3754a00b3adf9c3/Screen_Shot_2021-11-15_at_11.13.51_AM.png" alt="Sentry Slack alert of missing dependency"/></p>
<p>From there, we click through the Slack link which takes us to the event inside Sentry. Then we can determine which engineer is facing the issue (this is taken from the $USER environment variable) as well as what the issue is from the console output.</p>
<p>Since we know who’s facing the issue and what kind of problem they’re facing, we can get in touch with the developer armed with some context and a readiness to help!</p>
<p>We can easily find the root cause of an issue that may be difficult to reproduce because we reached out to the engineer near the moment of occurrence and are invested in getting it fixed.</p>
</div><div>
<h2 id="the-impact"><a href="#the-impact" aria-label="the impact permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The impact</h2>
<p>Instrumenting our development environment with Sentry has allowed us to monitor the health of our development environment and respond more quickly when someone faces an issue. Over the last year, we’ve seen the following positive outcomes for the engineering organization:</p>
<ol>
<li>We can help an engineer that is currently investigating an ongoing issue. This increases the chances of fixing the root cause of the issue and preventing others from facing the same problem rather than the issue being worked around (Not all engineers are comfortable solving their own dev env problems).</li>
<li>We can be notified of tooling regressions. It’s easier to fix a regression when you’re notified soon after having merged your code. Without alerting, a regression might take a while to be reported. For instance, a developer may work around the issue on multiple occasions a few weeks after the code at fault has landed.</li>
</ol>
</div><div>
<h2 id="wrapping-up"><a href="#wrapping-up" aria-label="wrapping up permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Wrapping up</h2>
<p>We have covered how instrumenting a development environment with Sentry can positively impact the productivity of your engineering organization by increasing the observability and decreasing the response time to issues.</p>
<p>Thanks for reading this post. If you want to try out Sentry without creating an account, visit <a href="https://sentry.io/demo/sandbox/">the Sentry Sandbox</a> and feel free to play with it!</p>
<p>Thanks to <a href="https://github.com/billyvg">Billy Vong</a> for paving the way with the bootstrapping code, <a href="https://benv.ca/">Ben Vinegar</a> for encouraging me to write this post, and for <a href="https://github.com/logicalbomb">Zac Propersi</a>’s managerial support.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5HiwVLXePFUDh53vwTPDfD/9e6e3fbf92c1ff6b52b22acf1af63059/DogFood1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 18 Nov 2021 03:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measure, Track, Improve: Streamlined event exploration and increased visibility into team health</title>
      <link>https://blog.sentry.io/2021/11/16/measure-track-improve-dashboards-and-discover/</link>
      <description>For many engineering leaders, measuring their team’s impact can be hard to quantify and a face:palm process, filled with searching through logs and exporting data sets to cobble together a report that most people won&#39;t even look at twice. And let&#39;s be honest, if you wanted to spend time making reports, you wouldn&#39;t have become a developer.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>For many engineering leaders, measuring their team’s impact can be hard to quantify and a face:palm process, filled with searching through logs and exporting data sets to cobble together a report that most people won’t even look at twice. And let’s be honest, if you wanted to spend time making reports, you wouldn’t have become a developer.</p>
<p>That’s why we made updates to Dashboards, Discover, and Stats for a simpler way to explore your raw event data so you can see how events are impacting users, learn how your team is taking action on those issues to improve overall application health, and then share those view across your team–even with someone who doesn’t use Sentry today.</p>
<h2 id="improved-dashboard-and-discover-compatibility"><a href="#improved-dashboard-and-discover-compatibility" aria-label="improved dashboard and discover compatibility permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Improved Dashboard and Discover compatibility</h2>
<p>Dashboards and Discover go hand in hand. Discover is our query engine that helps you answer anything about changes in your code. Dashboards help visualize those answers and much more. </p>
<p>Sure, you can quickly answer questions in Discover like, “did signups drop in Europe?” or “which pages have the most errors?” and save that query. But these are questions that your leads may also want to track consistently in a single view. </p>
<p>We’ve connected Discover and Dashboards so you can add any Discover query as a widget to your custom dashboards (and vice versa), making it easier to uncover trends and anomalies and use that information to prioritize and track the investments you are making in your team and product.
<img src="https://images.contentful.com/em6l9zw4tzag/2DKyEBHLWCUZMGJfGFkMLR/6734947437d762080b6ed8304c67d514/Save_to_dashboard.png" alt="save to dashboards"/>
Because this functionality works both ways, if you have additional questions after looking at a widget in your dashboard, you can drill deeper into your underlying event data and investigate it within Discover. </p>
<blockquote>
<p>Dashboards have accelerated our time to resolution significantly. The first time I opened up our performance Dashboard, I identified two data points that helped me solve an arcane issue we had been troubleshooting within 1 minute. </p>
</blockquote>
<p><em>Ryan Beal, Engineer at CBS</em></p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/6AdxenjiFBKkkk7AcL9uEJ/7ed77bb47d5ae4e8dcf2a901306073dc/open_in_discover__1_.png" alt="Open in discover"/>
Additionally, you can display and plot up to three different Y-axis series for easy comparison in Discover. For example, you can monitor how a new release impacts frontend performance by adding <a href="https://docs.sentry.io/product/releases/">release</a> tags alongside your <a href="https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals">core Web Vitals</a> - Largest Contentful Paint, First Input Delay, and Cumulative Layoutshift - to view layout shifts or latency spikes that impact the user experience.
<img src="https://images.contentful.com/em6l9zw4tzag/44qZAfDj51q6CS0uM50FCY/f6ff423efaf2398c37ad230c55a55d8b/web_vitals__1_.png" alt="web vitals"/>
With Sentry Performance and Discover, you can look at each event and determine the exact operations causing your Web Vitals to lag and whether that extra call is worth doing before the LCP.</p>
<h2 id="see-the-issues-and-charts-you-care-about-most"><a href="#see-the-issues-and-charts-you-care-about-most" aria-label="see the issues and charts you care about most permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See the issues and charts you care about most</h2>
<p>In addition to connecting Discover and Dashboards, we made some common sense UX improvements to our query displays and dashboard and chart sorting options so you can filter the top issues, queries, and dashboards relevant to your team.
<img src="https://images.contentful.com/em6l9zw4tzag/d14pFseixT4grajpIonND/77549c006c941ca78e410c3bbc9b86ab/top10__2_.png" alt="top10"/>
You can filter your chart down to the top 10 results according to fields like projects, transactions, issues, or even browsers within a given period by adding a <a href="https://docs.sentry.io/product/discover-queries/query-builder/#stacking-functions">stacking function</a> to your query. By visualizing the top errors, for example, and how they compare to the rest of the results, you can quickly identify critical issues and anomalies across the organization and ensure the right team or individual takes action accordingly. </p>
<blockquote>
<p>The ‘top exceptions by volume’ chart has been critical in our bi-weekly departmental meetings to raise awareness and urgency to issues across the engineering org. Some of these can highlight problems with our codebase or reflect service outages where we can learn how those services impacted our code and then analyze how to lessen the impact of those outages in the future, which has saved us potentially millions.</p>
</blockquote>
<p><em>Wade Winningham, Principal Engineer at Power Home Remodeling</em></p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/5oLASQOOR6zxZJQVHHW1lu/4db9dc557e00ae7543c076d89aef9d47/sort__3_.png" alt="sort"/>
Plus, for large teams and those who live in Discover, we’ve added additional sorting options–‘Recently Viewed’ or by ‘Most Popular’–so you can filter on the queries or dashboards that are most relevant to you or your organization.</p>
<h2 id="unfurl-discover-charts-in-slack"><a href="#unfurl-discover-charts-in-slack" aria-label="unfurl discover charts in slack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Unfurl Discover charts in Slack</h2>
<p>Whether it’s the most critical issues, the users most impacted by slow API calls, or if a release is trending poorly (or well), we want you to get the answers to your (or your boss’) questions quickly, without having to leave the conversation.</p>
<p>That’s why while we were busy making all the improvements outlined above, we also made it so Discover queries will unfurl in Slack. With chart unfurls, your team members can see and comment on charts directly in Slack without logging in to Sentry, adding context and continuity to your conversations. <em>(From our dev team: Look, this was technically scope creep. So don’t tell our PM that we’ve been sandbagging story points, or we won’t be able to ship more little improvements like this.)</em></p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/bHSbFoYs60cSOmUEbfIjR/ea210c1bd41fc0a5477d477da0ad4a04/unfurl__1_.png" alt="Unfurl"/>
So the next time your manager, who can’t log in to Sentry because they let their invite expire, asks you to send them the top ten performance issues, Slack them the query and remind them to configure SSO. </p>
<h2 id="get-a-curated-report-of-your-team-health-in-stats"><a href="#get-a-curated-report-of-your-team-health-in-stats" aria-label="get a curated report of your team health in stats permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Get a curated report of your team health in Stats</h2>
<p>Measuring team effectiveness can be difficult. That’s why we’ve created a summarized report of your project health and team activity, so you can better identify where to prioritize your team’s time and track how effective they are in improving app stability.
<img src="https://images.contentful.com/em6l9zw4tzag/7fR7j3BSwc4dAyVTNFfnjg/75dfdfac8e07f8db0f36e981c30d1927/stats__1_.png" alt="Stats"/>
Team Stats gives you a cross-project view into your application health while tracking how your team’s projects affect users with stats such as crash-free sessions and <a href="https://docs.sentry.io/product/performance/metrics/#user-misery">User Misery</a>. You can also see how your team takes action on issues with stats like issues reviewed by project, the overall time to resolution, and the number of releases over time.</p>
<p>As you track releases over time and in the event there’s a spike in users experiencing slow page loads, you can track how quickly your team resolves the issue compared to the previous week (or quarter).</p>
<p>These team-level stats let you zero in on the projects and transactions that might need attention from your team and see how they are improving over time. If you’ve been trying to secure additional resources or need help figuring out where to allocate your current resources, think of these as guiding metrics to track overall team velocity and efficiency.</p>
<h2 id="charts-arent-just-for-ops"><a href="#charts-arent-just-for-ops" aria-label="charts arent just for ops permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Charts aren’t just for Ops</h2>
<p>With custom dashboards, queries, and stats, you can get more visibility into your code health and drill into specific events to uncover opportunities, prioritize investments, and learn how to improve your team’s release quality and velocity over time.</p>
<p>If you currently use Sentry and are a Business Plan customer, sign in to use these features today. New to Sentry and want to learn more? Request a <a href="https://sentry.io/demo">demo</a> or <a href="https://sentry.io/resources/streamline-issue-management-with-powerhrg/">check out our latest webinar</a> to see it all in action. </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4PP7zOwYOeE6p0fUGgV7js/3d04b50c1d74a5ecc334d94ff9d43eff/metrics-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 16 Nov 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Change Happens - Get Alerted</title>
      <link>https://blog.sentry.io/2021/11/02/change-happens-get-alerted/</link>
      <description>To give you enough notice to fix an issue before it escalates, we’re evolving our alerts and making them more proactive with Change and…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>To give you enough notice to fix an issue before it escalates, we’re evolving our alerts and making them more proactive with Change and Crash Rate Alerts. So when your application experiences a change from the norm or a dip in crash-free sessions, Sentry will (smartly) alert you via Slack, Teams, PagerDuty, or old-fashioned email.</p>
<p>Imagine your service typically gets 100 errors a day, but after a <a href="https://docs.sentry.io/product/releases/health/">release</a>, the number of issues jumps to 1000? Internally, if we see errors double after a beta release, we want to roll back and investigate to get ahead of the problem. But, conversely, if the failure rate doubles or the transaction rate drops but we didn’t make any changes to the service,  that would signify a change and something we should investigate.</p>
<h2 id="change-alerts"><a href="#change-alerts" aria-label="change alerts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Change Alerts</h2>
<p><a href="https://docs.sentry.io/product/alerts/alert-types/#change-alerts">Change Alerts</a> help make sure you see how your present code differs from the past’s. We compare metric alerts or issue alerts between periods. Now, if the <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#change-alerts">count</a> or <a href="https://docs.sentry.io/product/alerts/create-alerts/metric-alert-config/#change-alerts-percent-change">percentage</a> change is higher than what’s historically significant, you’ll be alerted.</p>
<p>Once an alert is triggered, you can automatically route the alerts to the individual or team who owns the code via Code Owners or <a href="https://docs.sentry.io/product/issues/issue-owners/#external-teamuser-mappings">Suggested Assignees</a>. Then, with <a href="https://docs.sentry.io/product/integrations/project-mgmt/jira/#issue-notifications">Jira Issue Alerts</a>, a Jira issue is automatically added to the owner’s backlog, reducing notification fatigue and preventing issues from falling through the cracks.</p>
<p>Here’s a quick tutorial on setting up a change alert to get notified when your product is experiencing more issues than normal. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=255&amp;fm=webp 255w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=511&amp;fm=webp 511w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=1021&amp;fm=webp 1021w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=255 255w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=511 511w,
https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif?w=1021 1021w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="issue-change-alert" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3k2RKI5HSQVxxRBirAVZUZ/40528f68a4e1b645f99ab889029e7260/issue-change-alert.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Alternatively, you can also create a change alert to notify you when there is a change in a metric, such as Transaction Duration:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif?w=298&amp;fm=webp 298w,
https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif?w=597&amp;fm=webp 597w,
https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif?w=1193&amp;fm=webp 1193w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif?w=298 298w,
https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif?w=597 597w,
https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif?w=1193 1193w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="metric-change-alert2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2u3UiofRuhMjFBPxVNOGpK/6872854acabb461133c8bee5f533b7cd/metric-change-alert2.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If the alert is triggered, you can easily understand what happened and when, by jumping into the <a href="https://docs.sentry.io/product/alerts/alert-types/#alert-details">Alert Details</a> view. In addition to having all the historical data at your fingertips, we’ll surface a list of suspect issues so you don’t have to go spelunking for the root cause. Now you can correlate historical data with potential causes to root out the line of code triggering the alert and possibly the commit that ruined your day.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png?w=474&amp;fm=webp 474w,
https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png?w=948&amp;fm=webp 948w,
https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png?w=1896&amp;fm=webp 1896w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png?w=474 474w,
https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png?w=948 948w,
https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png?w=1896 1896w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Screen Shot 2021-10-26 at 3.57.27 PM" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2k3QZICWmTMhjk6KKMKIPd/bb798b573790f9c16f8c22fb221926dc/Screen_Shot_2021-10-26_at_3.57.27_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png?w=374&amp;fm=webp 374w,
https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png?w=748&amp;fm=webp 748w,
https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png?w=1496&amp;fm=webp 1496w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png?w=374 374w,
https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png?w=748 748w,
https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png?w=1496 1496w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Screen Shot 2021-11-01 at 11.47.14 AM" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2xbRCQQjfoL5izro29Lz5W/5473370735c8fba4fe8b00377987cdf1/Screen_Shot_2021-11-01_at_11.47.14_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="crash-rate-alerts"><a href="#crash-rate-alerts" aria-label="crash rate alerts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Crash Rate Alerts</h2>
<p>To monitor the stability of every <a href="https://docs.sentry.io/product/releases/health/">release</a>, you can now set an alert when the <a href="https://docs.sentry.io/product/alerts/alert-types/#sessions-crash-rate-alerts">% of crash-free sessions or % of crash-free</a> users falls below your quality threshold. This new alert type lets your team set Service Level Objectives and get notified if a new release reduces the stability of your app. In addition, monitoring the change crash-free rate enables you to roll back changes or stop progressive rollouts before they affect a majority of your customers.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif?w=367&amp;fm=webp 367w,
https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif?w=734&amp;fm=webp 734w,
https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif?w=1467&amp;fm=webp 1467w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif?w=367 367w,
https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif?w=734 734w,
https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif?w=1467 1467w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="crash-rate-alert2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7IrKLXHcJmMx2Bizxo04ar/182b8bafe4919cbffef86ec90840a886/crash-rate-alert2.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With a holistic view of your <a href="https://docs.sentry.io/product/releases/health/">releases</a> and apps across devices, you can see clearer, solve quicker by pinpointing the root cause and getting visibility into the stability of your release with alerts.</p>
<h2 id="build-with-sentry"><a href="#build-with-sentry" aria-label="build with sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Build with Sentry</h2>
<p>Change Alerts and Crash Rate Alerts are just two milestones in our roadmap towards more dynamic alerting capabilities. Flip on the early adopter flag in your <a href="https://sentry.io/orgredirect/organizations/:orgslug/settings/">settings menu</a> to get alerted as we add new features and give us feedback. We’d love to hear your feedback.</p>
<p>If you’re like me and like to learn with videos, check out these videos on setting up <a href="https://vimeo.com/281363551/07477ee068">alert rules</a> and <a href="https://www.youtube.com/watch?v=bQYhl67hu30">issue alerts</a>.   After all, how much Squid Game can you binge? </p>
<p><a href="https://sentry.io/auth/login/">Log in</a> to your account to set up Change Alerts or if you’re new to Sentry <a href="https://sentry.io/demo">request a demo</a> and <a href="https://sentry.io/signup/">try it out for free</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2fzL5GCbLyqG798lHk6nBs/7972a65cab025dc51784439d8c392099/ecosystem2_meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 02 Nov 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Keep Gamers Gaming — Application Monitoring for Unity</title>
      <link>https://blog.sentry.io/2021/10/28/keep-gamers-gaming-application-monitoring-for-unity/</link>
      <description>Given the millions of registered Unity developers worldwide, Unity is arguably the most popular engine used to develop games.  But, whether…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Given the millions of registered Unity developers worldwide, Unity is arguably the most popular engine used to develop games.  But, whether you’re building the latest FPS or a turn-based classic, you need visibility in how your game is performing on a gamer’s device.</p>
<p>More than 800 game development and platform companies rely on Sentry, from <a href="https://sentry.io/customers/outfit7/">OutFit7</a> to <a href="https://sentry.io/customers/riot/">Riot</a>, Epic Games, and Unity. With Sentry, Unity and the rest of these organizations see the events (both errors and performance issues now) that actually matter, solve code issues quickly, and learn how each release performs over time. </p>
<p>To help Unity developers monitor their code across platforms and devices, we updated <a href="http://sentry.io/for/unity">Sentry for Unity</a>. Now when something goes unexpectedly wrong with your game, you won’t have to figure out what device, the OS, if there’s a performance regression, or deal with app version fragmentation — Sentry will tell you everything. This means that while your players are trying to catch them all, Sentry is catching all your errors and performance issues, and telling you how to fix them before they affect the player experience.</p>
<h2 id="performance-monitoring"><a href="#performance-monitoring" aria-label="performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Performance Monitoring</h2>
<p>Now, errors are only half the story. Unity developers also need to see if they’re providing a snappy and responsive gaming experience. That visibility means being able to know that your game is loading objects in a given viewport quickly and responding to user input as intended without any delay. Without this data, untreated performance problems can become serious errors. <a href="https://sentry.io/for/performance">Performance</a>, our aptly named performance monitoring solution, quickly highlights what occurred for a specific error or issue, the conditions that caused the bottleneck or latency issue, and the endpoints or operations that consume the most time.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png?w=588&amp;fm=webp 588w,
https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png?w=1175&amp;fm=webp 1175w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png?w=588 588w,
https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png?w=1175 1175w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-transaction" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1f8pCiEW59vHok44R01tiI/babc06b93f6b461059fe3d73a6055680/image__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If you’re feeling adventurous—and based on how many of you adopted early-access Sentry for Unity (&gt; 500 teams, but who’s counting?), many of you are—you can now try Performance Monitoring for Unity in Early Access. Check out the <a href="https://docs.sentry.io/platforms/unity/performance/">docs</a> or the <a href="https://sentry.io/orgredirect/organizations/:orgslug/performance/">performance tab in product</a> to configure tracing.</p>
<h2 id="native-crash-reporting"><a href="#native-crash-reporting" aria-label="native crash reporting permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Native Crash Reporting</h2>
<p>For you iOS and Android game developers, there are some monitoring services that can report back when your game crashes—but events are usually just listed as an “abnormal session.” With this vague information, you’ll probably end up playing an extra fun round of 21 questions with your code and/or customer support. Alternatively, if you prefer to skip that guesswork, Sentry can tell you if a crash happens in the game or the native layer, like a plugin or native library you could be using. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png?w=530&amp;fm=webp 530w,
https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png?w=1060&amp;fm=webp 1060w,
https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png?w=2120&amp;fm=webp 2120w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png?w=530 530w,
https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png?w=1060 1060w,
https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png?w=2120 2120w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unit-issue-details-1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4I6Odl2SsiIYPOGKpS83P/6d0443d66425d40a457deae6ba3208bc/Screen_Shot_2021-10-25_at_9.38.55_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Along with native iOS and Android crash reporting, you’ll have access to session data in real-time and know how a release impacts your users with metrics like crash-free sessions, crash-free users, and the overall health of a release.  New Release management features like <a href="https://docs.sentry.io/product/releases/usage/sorting-filtering/#filtering-releases">sorting &amp; filtering</a> releases and <a href="https://docs.sentry.io/product/releases/health/#adoption-stages">Adoption Stages</a> give game developers all of the data to decide if the team is ready to push a new release. Did that bug-fix release work? Or are the new characters you added in the latest rev functioning and playable? You’ll know the answer to these questions and more, immediately. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png?w=492&amp;fm=webp 492w,
https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png?w=984&amp;fm=webp 984w,
https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png?w=1968&amp;fm=webp 1968w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png?w=492 492w,
https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png?w=984 984w,
https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png?w=1968 1968w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-releases" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7KMnFB5ORClCNpSQNb1RlL/cb57bca4804f38a641459448fa5b946f/Screen_Shot_2021-10-25_at_9.37.29_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Not everyone is playing your games at the same time, meaning traffic will likely vary and constantly fluctuate as their gameplay changes and increases. So with Sentry, developers can define <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#when-conditions-triggers">percent-based alerts</a> which adjust to changes in traffic,  making sure you get notified of and effectively prioritize the most critical gamer experience issues.</p>
<h2 id="get-started"><a href="#get-started" aria-label="get started permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Get Started</h2>
<p>Install the Unity SDK via the <a href="https://docs.unity3d.com/Manual/upm-ui-giturl.html">Unity Package Manager using a Git URL</a> pointing to <a href="https://docs.sentry.io/platforms/unity/#install">Sentry’s SDK</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=200&amp;fm=webp 200w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=401&amp;fm=webp 401w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=801&amp;fm=webp 801w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=200 200w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=401 401w,
https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png?w=801 801w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-sentry-sdk-added-dark-0.6.0" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2wggQ1pqMdoHf9TW1QBdLI/1c4cb4cc13db922109d21c9d2534a4ac/sentry-sdk-added-dark-0.6.0.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Unity developers can benefit from the rich context that Sentry provides by simply creating a Sentry project and pasting their DSN in Unity. </p>
<p>In the event players hit an unexpected issue—anything from your game failing to instantiate specific objects or simply corrupted <code>savegames</code>—Sentry will report on device type, orientation, battery level (if applicable), GPU state, CPU info, and everything about the software and OS that your game is running on. You may ask, “But what if someone is playing my game offline?” No problem—both with offline gaming and intermittent network connectivity, Sentry will phone home with these events after the connection restores.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png?w=271&amp;fm=webp 271w,
https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png?w=541&amp;fm=webp 541w,
https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png?w=1082&amp;fm=webp 1082w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png?w=271 271w,
https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png?w=541 541w,
https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png?w=1082 1082w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="unity-issue-details-2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/16yKupEOaPjo6VKs1meJGB/0c8f51e7b962fa0313115fa614c9d43f/sentry-defenses-ios-csharp-dark-full-screen.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If one of the best parts of your day is testing your game on nine different platforms to find where your gamers are having sub-optimal experiences—Sentry may, unfortunately, cut it short. But hey, if you still want to debug, that’s fine. Your secret is safe with me. </p>
<p>The number of devices your games run on is growing exponentially. Don’t collect a bunch of random devices and consoles just to recreate a single issue. Instead, use Sentry which automatically reports errors and performance issues as they happen, the platform on which they occur, and all the contexted needed to identify the root cause. Unless your player is complaining of a blurry screen when playing Rad Racer. We don’t have a boolean for <code>isWearing3DGlasses</code>. </p>
<p><a href="https://sentry.io/auth/login/">Log in</a> update your Unity SDK or if you’re new to Sentry <a href="https://sentry.io/demo">request a demo</a> and <a href="https://sentry.io/signup/">try it out for free</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6zQ2RNLHYSJxNi48obecrE/f43be36b11838fe47c71f5b72357f458/gaming1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>We Just Gave $154,999.89 to Open Source Maintainers</title>
      <link>https://blog.sentry.io/2021/10/21/we-just-gave-154-999-dollars-and-89-cents-to-open-source-maintainers/</link>
      <description>Sentry is an open source company. We started out in 2008 as a small open source side project, and we grew within the community for years…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Sentry is an open source company. We <a href="https://github.com/getsentry/sentry/commit/3c2e87573d3bd16f61cf08fece0638cc47a4fc22">started out in 2008</a> as a small open source side project, and we grew within the community for years before commercializing in 2012. We’ve worked hard to keep our full product as open source as possible, while scaling as a business. Considering our commitment to open source, we are grateful to be able to give back to the community (and what better time than <a href="https://hacktoberfest.digitalocean.com/giving">during Hacktoberfest</a>, amirite?).</p>
<p>(P.S. The good folks at <a href="https://sustainoss.org/">Sustain</a> brought us onto their <a href="https://podcast.sustainoss.org/">podcast</a> for a deep dive on this funding initiative. If you like what you’re reading here, mosey on over and <a href="https://podcast.sustainoss.org/96">check out the episode</a>.)</p>
<h2 id="background"><a href="#background" aria-label="background permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Background</h2>
<p>Sentry has a long history of sharing our business success with the open source community. We have supported the Python and Django Software Foundations since 2016 with donations totalling about $75,000. Over the years, we’ve also supported smaller projects like Vue.js, Django Rest Framework, and Psycopg. In 2019, we <a href="https://blog.sentry.io/2019/10/03/scaling-techqueria-with-sentrys-open-source-grant">awarded a $10,000 grant</a> to Techqueria, a nonprofit serving the largest community of Latinx in tech, for open source work on their website. And in 2020, the Sentry team was pleasantly surprised to receive a $10,000 grant from Indeed, which we <a href="https://blog.sentry.io/2020/02/18/funding-open-source">matched and regifted to five projects</a> in the Python and Rust ecosystems.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png?w=188&amp;fm=webp 188w,
https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png?w=376&amp;fm=webp 376w,
https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png?w=752&amp;fm=webp 752w" sizes="(max-width: 752px) 100vw, 752px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png?w=188 188w,
https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png?w=376 376w,
https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png?w=752 752w" sizes="(max-width: 752px) 100vw, 752px"/>
          <img alt="Quote from Daniele Varrazzo (Psycopg)" title="" src="https://images.ctfassets.net/em6l9zw4tzag/56A8myPlm75ePS7wJwPoOW/429783fb05df85180a4c4524923fbcc5/quote-daniele-varrazzo.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Outside of direct financial contributions, Sentry invests in the open source community in many ways: we <a href="https://sentry.io/for/open-source/">donate SaaS credits to open source projects</a>, sponsor conferences and meetups, and contribute patches to upstream projects. Additionally, Sentry has a general employee philanthropic donation-matching program in which open source foundations are eligible.</p>
<h2 id="sentrys-foss-fund-155"><a href="#sentrys-foss-fund-155" aria-label="sentrys foss fund 155 permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry’s FOSS Fund 155</h2>
<p>Indeed’s generous $10,000 donation to us was part of an industry initiative they launched called <a href="https://engineering.indeedblog.com/blog/2019/11/foss-fund-adopters/">FOSS Fund Adopters</a>; <a href="https://github.com/microsoft/foss-fund">Microsoft</a> and <a href="https://engineering.salesforce.com/search?q=foss%20fund">Salesforce</a> are also on board. When we announced our matching regift, we also committed to <a href="https://blog.sentry.io/2020/02/18/funding-open-source">increasing our own giving to open source</a>, which we have now done with our own iteration that we’re calling FOSS Fund 155. We distributed $154,999.89 to 108 recipients, grouped under three line items:</p>
<ol>
<li>Foundation memberships (52%),</li>
<li>Long-tail projects through <a href="https://github.com/sponsors">GitHub Sponsors</a> and <a href="https://opencollective.com/">Open Collective</a> (36%), and </li>
<li>Internships for new contributors through <a href="https://www.outreachy.org/">Outreachy</a> (13%).</li>
</ol>
<p>Why that suspiciously specific amount? Well, <a href="https://gratipay.news/your-company-should-probably-pay-2000-per-person-for-open-source-9205443e209d">napkin math suggests</a> that tech companies receive approximately $2,000 of value from volunteer labor in the open source community, per engineer on staff. Sentry employs approximately 75 engineers, and 75 × $2,000 = $150,000, so that became our target budget. We bumped it up a bit to meet foundation membership fee thresholds. As to the 11¢ offset, we have currency conversion to thank.</p>
<p>One of our goals for FOSS Fund 155 is to <strong>contribute meaningfully</strong>. We believe that contributing $2,000 per engineer is a meaningful amount that fairly compensates the value we receive from open source volunteers.</p>
<p>Another of our goals is to <strong>lead by example</strong> within the industry. We want to raise the bar for how companies in the tech industry think about their financial relationships with the open source community. Transparency into companies’ open source contributions is valuable to the community and the industry, and to individuals making career decisions. Reporting this information per individual engineering contributor makes it easier to compare across companies.</p>
<h2 id="allocating-our-budget"><a href="#allocating-our-budget" aria-label="allocating our budget permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Allocating Our Budget</h2>
<p>All tech companies <a href="https://xkcd.com/2347/">stand on the shoulders of community-supported open source giants</a>, and Sentry is no exception. With this fund we prioritized support for our dependencies in order to strengthen our supply chain. But, more than that—Sentry itself was a volunteer-run project for many years. Yes, we took a commercial route, but we respect the many projects that have chosen a different path. Maintainers should be able to determine their own future, and financially supporting our community-managed dependencies makes that a bit more feasible for them.</p>
<p>By auditing our product architecture, we generated a list of seven major community-led open source projects that are foundational to our success: Python, Django, Rust, JavaScript, PostgreSQL, Apache, and Linux. These projects are all backed by formal non-profit foundations; we added an eighth foundation, the Open Source Initiative, to represent the open source community as a whole. We decided to allocate half of our budget (52%) to these eight foundations.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png?w=188&amp;fm=webp 188w,
https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png?w=376&amp;fm=webp 376w,
https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png?w=752&amp;fm=webp 752w" sizes="(max-width: 752px) 100vw, 752px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png?w=188 188w,
https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png?w=376 376w,
https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png?w=752 752w" sizes="(max-width: 752px) 100vw, 752px"/>
          <img alt="Quote from Robin Ginn (OpenJS)" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2bB5rd3FjdIfF6WOGm8fzu/b152a5737fc57514bbd03f129e354bf2/quote-robin-ginn.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Another way we think about our goal to <strong>contribute meaningfully</strong> is in intentionally welcoming new contributors into the open source community. We ran a <a href="https://blog.sentry.io/2019/10/03/scaling-techqueria-with-sentrys-open-source-grant">diversity-focused open source grant program</a> in-house in 2019, and it was a great experience. However, we think we can make even more of an impact by partnering with an existing organization. <a href="https://www.outreachy.org/">Outreachy</a> has <a href="https://www.outreachy.org/alums/">a great track record</a> of providing internships in open source to individuals from underrepresented backgrounds, so we allocated $19,500 (13%) to sponsor three interns to work on projects in our dependencies. Debian and LLVM were able to use the funds directly. Git asked us to redirect their portion to the Outreachy general fund.</p>
<p>Another of our goals for this funding program is to <strong>reinforce open source as part of Sentry’s company culture</strong>, so we involved our employees in allocating the remainder (36%) of our budget. We did some <a href="https://rawcdn.githack.com/getsentry/deps/fy2022/fundable.html">dependency analysis</a> using the GitHub API to identify the community-led, fundable projects within the ecosystems we inhabit. We asked our employees to influence our contributions to these projects by voting on them, and also to nominate other projects that are meaningful to them. We ended up with a list of 97 projects to support, in addition to the eight foundations and the three internships.</p>
<p>Throughout this exercise, we filtered out open source projects that have strong corporate leadership (Sentry itself would be an example), as well as our employees’ side projects (since we already compensate them financially). This serves our goal to <strong>contribute meaningfully</strong> by directing our money where it can have the most impact. We also tried to balance breadth and depth, focusing larger amounts on some projects, while giving at least a little bit to every maintainer we identified.</p>
<p>In the end, we distributed $154,999.89 to 108 recipients: eight foundations, 97 individual projects, and three internship partners. Visit our <a href="https://github.com/orgs/getsentry/sponsoring">GitHub Sponsors</a> (GHS) and <a href="https://opencollective.com/sentry">Open Collective</a> (OC) profiles for the details; below is a summary (sorry it’s cut off on mobile).</p>
<h3 id="where-the-15499989-went"><a href="#where-the-15499989-went" aria-label="where the 15499989 went permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Where the $154,999.89 Went</h3>
<table>
<thead>
<tr>
<th>Ecosystem (Foundation)</th>
<th>Foundations ($)</th>
<th>Projects (n)</th>
<th>Projects ($)</th>
<th>Internships ($)</th>
<th>Total ($)</th>
<th>%</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://python.org/">Python</a></td>
<td><code>15,000.00</code></td>
<td><code>16</code></td>
<td><code>12,300.00</code></td>
<td></td>
<td><code>27,300.00</code></td>
<td><code>17.6</code></td>
</tr>
<tr>
<td><a href="https://www.djangoproject.com/">Django</a>†</td>
<td><code>12,500.00</code></td>
<td></td>
<td></td>
<td></td>
<td><code>12,500.00</code></td>
<td><code>8.1</code></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
<td><em><code>25.7</code></em></td>
</tr>
<tr>
<td>JavaScript (<a href="https://openjsf.org/">OpenJS</a>)</td>
<td><code>10,000.00</code></td>
<td><code>51</code></td>
<td><code>22,900.00</code></td>
<td></td>
<td><code>32,900.00</code></td>
<td><code>21.2</code></td>
</tr>
<tr>
<td><a href="https://www.rust-lang.org/">Rust</a></td>
<td><code>15,000.00</code></td>
<td><code>8</code></td>
<td><code>8,000.00</code></td>
<td></td>
<td><code>23,000.00</code></td>
<td><code>14.8</code></td>
</tr>
<tr>
<td><a href="https://www.postgresql.org/">PostgreSQL</a> (<a href="https://www.spi-inc.org/">SPI</a>)</td>
<td><code>12,500.00</code></td>
<td></td>
<td></td>
<td></td>
<td><code>12,500.00</code></td>
<td><code>8.1</code></td>
</tr>
<tr>
<td><a href="https://linuxfoundation.org/">Linux</a></td>
<td><code>5,000.00</code></td>
<td></td>
<td></td>
<td><code>6,500.00</code></td>
<td><code>11,500.00</code></td>
<td><code>7.4</code></td>
</tr>
<tr>
<td><a href="https://apache.org/">Apache</a></td>
<td><code>9,000.00</code></td>
<td></td>
<td></td>
<td></td>
<td><code>9,000.00</code></td>
<td><code>5.8</code></td>
</tr>
<tr>
<td><a href="https://opensource.org/">Open Source</a></td>
<td><code>1,000.00</code></td>
<td><code>22</code></td>
<td><code>12,299.89</code></td>
<td><code>13,000.00</code></td>
<td><code>26,299.89</code></td>
<td><code>17.0</code></td>
</tr>
<tr>
<td></td>
<td><code>80,000.00</code></td>
<td><code>97</code></td>
<td><code>55,499.89</code></td>
<td><code>19,500.00</code></td>
<td><strong><code>154,999.89</code></strong></td>
<td></td>
</tr>
<tr>
<td>%</td>
<td><code>51.61</code></td>
<td></td>
<td><code>35.81</code></td>
<td><code>12.58</code></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>⋮</td>
<td>⋮</td>
<td>⋮</td>
<td>⋮</td>
<td>⋮</td>
<td></td>
</tr>
<tr>
<td><strong>By Platform</strong></td>
<td><strong>$</strong></td>
<td><strong>n</strong></td>
<td><strong>$</strong></td>
<td><strong>$</strong></td>
<td><strong>$</strong></td>
<td><strong>n</strong></td>
</tr>
<tr>
<td>GHS†</td>
<td><code>12,500.00</code></td>
<td><code>57</code></td>
<td><code>28,300.00</code></td>
<td></td>
<td><code>40,800.00</code></td>
<td><code>58</code></td>
</tr>
<tr>
<td>OC</td>
<td></td>
<td><code>33</code></td>
<td><code>25,700.00</code></td>
<td></td>
<td><code>25,700.00</code></td>
<td><code>33</code></td>
</tr>
<tr>
<td>Other</td>
<td><code>67,500.00</code></td>
<td><code>7</code></td>
<td><code>1,499.89</code></td>
<td><code>19,500.00</code></td>
<td><code>88,499.89</code></td>
<td><code>17</code></td>
</tr>
<tr>
<td>Counts</td>
<td><code>8</code></td>
<td><code>97</code></td>
<td></td>
<td><code>3</code></td>
<td></td>
<td><strong><code>108</code></strong></td>
</tr>
</tbody>
</table>
<p>† <em>We paid Django on GHS.</em></p>
<h2 id="looking-ahead"><a href="#looking-ahead" aria-label="looking ahead permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Looking Ahead</h2>
<p>Our final goal for Sentry’s open source funding program is to <strong>sustain in a sustainable way</strong>. We feel good about what we were able to put together this year for Sentry’s FOSS Fund 155, and we will continue to iterate on our open source financial support as we continue to scale. <strong>Thank you</strong> to all of the maintainers out there—especially the volunteers. We appreciate you, and we look forward to financially supporting your work for many years.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2Y8vFgJXx1xZr2eokWGGYu/29060a615aafc072239bd8fadfe158ac/weOss-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Automate, Group, and Get Alerted: A Best Practices Guide to Monitoring your Code - Part 2</title>
      <link>https://blog.sentry.io/2021/10/07/automate-group-and-get-alerted-a-best-practices-guide-part-2/</link>
      <description>This is part two of a two-part series on how to monitor code health at scale with Sentry.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Missed part one? Check it out <a href="https://blog.sentry.io/2021/09/28/automate-group-and-get-alerted-a-best-practices-guide-to-monitoring-your/">here</a>.</em></p>
<p>As companies grow, so do their products, teams, and the number of external tools. For engineers, that can mean code sprawl, data silos, notification fatigue, and some “what the…?” moments along the way as they try to make sense of it all.</p>
<p>To help combat the chaos, Sentry provides several ways to manage the volume, noise, and potential team disconnects that come with launching and scaling projects so you can see the issues that actually matter and solve them faster – without the expletives.</p>
<h2 id="3-solve-issues-faster-with-ownership-rules-alerts-and-trace-view"><a href="#3-solve-issues-faster-with-ownership-rules-alerts-and-trace-view" aria-label="3 solve issues faster with ownership rules alerts and trace view permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>3. Solve issues faster with ownership rules, alerts, and trace view</h2>
<p>Teams can take action faster when issues are owned. Sentry provides <a href="https://docs.sentry.io/product/issues/issue-owners/">ownership rules</a> to facilitate finding the who behind the code so you can streamline time to resolution. </p>
<p>For those that currently use GitHub or GitLab CODEOWNERS files, you can now import your existing files in Sentry using <a href="https://docs.sentry.io/product/issues/issue-owners/#code-owners">Code Owners</a>, allowing you to automatically assign issues or route alerts to the responsible individuals or teams. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png?w=612&amp;fm=webp 612w,
https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png?w=1224&amp;fm=webp 1224w,
https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png?w=2448&amp;fm=webp 2448w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png?w=612 612w,
https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png?w=1224 1224w,
https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png?w=2448 2448w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Code Owners" title="" src="https://images.ctfassets.net/em6l9zw4tzag/PCmPHSt5fbcxbxqc9Ua4f/b92b9dec8419699a2dfc958c03654bff/Code_owners_-_true__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry uses ownership rules to surface suggested assignees during the triage process and assign those issues to team members automatically, so developers only see the issues they care about, and product owners spend less time managing the queue.</p>
<p>We also have the concept of <a href="https://docs.sentry.io/product/releases/suspect-commits/">Suspect Commits</a>. Suspect Commits highlights the commit that introduced the error and the person who introduced it, so you can reproduce and solve the issues you own faster. In your release process, add a step to create a release in Sentry and associate it with commits from your linked repository to get started.</p>
<h3 id="set-alerts-and-notifications"><a href="#set-alerts-and-notifications" aria-label="set alerts and notifications permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Set alerts and notifications</h3>
<p>Coupled with Ownership Rules, you can set alerts and notifications to go directly to the corresponding individual or team who owns the code in the tools they use every day like Jira, Slack, email, and Pagerduty. Slack, for example, can send workflow notifications, deploy notifications, and alerts directly to <a href="https://docs.sentry.io/product/integrations/notification-incidents/slack/#personal-notifications">teams and individuals</a> where they can triage and resolve issues directly in chat. </p>
<p>However, it is not enough to alert the right people in the right place. The most effective alerts are also sent at the right time, frequency, and with the right context to take action quickly. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="00-% alerts" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>That’s why we offer <a href="https://docs.sentry.io/product/alerts/alert-types/#issue-alerts">issue</a> and <a href="https://docs.sentry.io/product/alerts/alert-types/#metric-alerts">metric alerts</a>, so you only receive alerts when an issue meets specific <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#when-conditions-triggers">trigger</a> criteria you set, like if a resolved issue is re-appearing or an issue is affecting a percentage of sessions.
Percent-based alerts, for example, adjust to the changes in app usage so you can set alerts to trigger when an issue exceeds a certain percentage of user sessions in a period, allowing you to prioritize issues based on user impact.</p>
<p>Performance-based <a href="https://docs.sentry.io/product/alerts/alert-types/#metric-alerts">metric alerts</a> are another way to leverage aggregates (p50 duration, p75 LCP, etc.) to improve alerting triggers and behavior. Metric alerts tell you when a <a href="https://docs.sentry.io/product/performance/metrics/">metric</a> crosses a threshold, such as a spike in the number of errors in a project, or a change in a performance metric, like <a href="https://docs.sentry.io/product/performance/metrics/#latency">latency</a>, <a href="https://docs.sentry.io/product/performance/metrics/#apdex">Apdex</a>, <a href="https://docs.sentry.io/product/performance/metrics/#failure-rate">failure rate</a>, or <a href="https://docs.sentry.io/product/performance/metrics/#throughput-total-tpm-tps">throughput</a>.</p>
<p>To further control noise, Sentry not only evaluates the specified <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#when-conditions-triggers">“When” trigger criteria</a> each time it receives a new event but also checks the <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#if-conditions-filters">“If” conditions filters</a>, such as if the issue is older than a certain duration or if the event is from your latest release. Last, Sentry will only send a notification after checking the <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#action-interval-rate-limit">Action Interval</a>, which controls how often the alert can be triggered for a particular issue. </p>
<h3 id="triage-performance-issues-with-trace-view-and-trace-navigator"><a href="#triage-performance-issues-with-trace-view-and-trace-navigator" aria-label="triage performance issues with trace view and trace navigator permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Triage performance issues with trace view and trace navigator</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=581&amp;fm=webp 581w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=1162&amp;fm=webp 1162w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=2324&amp;fm=webp 2324w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=581 581w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=1162 1162w,
https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png?w=2324 2324w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Trace View" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2uaCm95dVUR0aHVUa4bIKz/8f75dffc60948a4381e00a807045f034/Trace_view__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Leveraging transactions in addition to errors forms a more complete picture of the interconnectedness of your services as they grow. <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace view</a> and <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#trace-navigator">trace navigator</a> are tools to help accelerate triage at scale. </p>
<p>Trace view provides a broad visualization of the transactions comprising a single trace. This view can be helpful when debugging errors related to slow services or transactions. Trace navigator provides an abbreviated view of the entire trace giving you a relative context to reference as you follow the path of a request across services and into errors that occurred during the journey.</p>
<h2 id="4-collaborate-across-teams-with-project-filters-and-activity-tab"><a href="#4-collaborate-across-teams-with-project-filters-and-activity-tab" aria-label="4 collaborate across teams with project filters and activity tab permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>4. Collaborate across teams with project filters and activity tab</h2>
<p>With a growing and more distributed codebase, issues can often cut across project concerns and time zones.  </p>
<h3 id="a-universal-issue-view-with-cross-project-issues"><a href="#a-universal-issue-view-with-cross-project-issues" aria-label="a universal issue view with cross project issues permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A universal issue view with cross-project issues</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png?w=518&amp;fm=webp 518w,
https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png?w=1035&amp;fm=webp 1035w,
https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png?w=2070&amp;fm=webp 2070w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png?w=518 518w,
https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png?w=1035 1035w,
https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png?w=2070 2070w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Cross-Project Issues" title="" src="https://images.ctfassets.net/em6l9zw4tzag/jnK44ImNGw6loVoLkjevL/a127aa0ad7fdf392f3237d88b72c2f1e/cross-project.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://sentry.io/features/cross-project-issues/">Cross-project issues</a>
within the Issue Stream offer stakeholders the ability to aggregate errors or performance issues across multiple Sentry projects into a single view. </p>
<p>With cross-project issues, you get a unified view of all your projects and environments so you can see what’s impacting your service across any client. You can also drill down into specific projects or environments and sort issues by things like impact, frequency, or priority, so you can quickly see your top issues and triage accordingly. </p>
<h3 id="streamline-issue-chatter-with-activity-tab"><a href="#streamline-issue-chatter-with-activity-tab" aria-label="streamline issue chatter with activity tab permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Streamline issue chatter with activity tab</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png?w=489&amp;fm=webp 489w,
https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png?w=978&amp;fm=webp 978w,
https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png?w=1956&amp;fm=webp 1956w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png?w=489 489w,
https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png?w=978 978w,
https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png?w=1956 1956w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Activity Tab" title="" src="https://images.ctfassets.net/em6l9zw4tzag/GLeBXUnm07hODMJ4j2ujv/9be27ed47e58c465218f65a576e0dd45/Activity_Tab.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Last, consolidate communication either within Sentry using the <a href="https://docs.sentry.io/product/issues/issue-details/#tabs">activity tab</a> where team members can see and comment on their event activity history directly, or sync context from Sentry into the <a href="https://sentry.io/integrations/">project management</a> tools your teams use already.</p>
<h2 id="5-learn-from-issues-to-improve-your-workflow-with-discover-and-releases"><a href="#5-learn-from-issues-to-improve-your-workflow-with-discover-and-releases" aria-label="5 learn from issues to improve your workflow with discover and releases permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>5. Learn from issues to improve your workflow with Discover and Releases</h2>
<p>To understand and share how your application health and stability change over time as event and release volume increase, use <a href="https://docs.sentry.io/product/discover-queries/">Discover Queries</a>, <a href="https://docs.sentry.io/product/dashboards/">Dashboards</a>, and <a href="https://docs.sentry.io/product/releases/">Release Health</a>. Here are a few ways you can incorporate meaningful data into your workflow:</p>
<h3 id="answer-critical-business-issues-with-discover"><a href="#answer-critical-business-issues-with-discover" aria-label="answer critical business issues with discover permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Answer critical business issues with Discover</h3>
<p>Sentry offers a few ways to drill into your raw error, performance, and release data to answer questions like ‘Which issues are persisting across releases?’ or ‘What are my noisiest projects and why?’
<a href="https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png?w=909&amp;fm=webp 909w,
https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png?w=1818&amp;fm=webp 1818w,
https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png?w=3636&amp;fm=webp 3636w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png?w=909 909w,
https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png?w=1818 1818w,
https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png?w=3636 3636w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Discover" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3nrbzvCJH2I3iPflnKCixv/f08e2c3469b76caee7809be183d81eae/Discover__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
You can either write queries in Discover, using the same <a href="https://docs.sentry.io/product/discover-queries/query-builder/#syntax">synta</a>x used for Sentry search, or use <a href="https://docs.sentry.io/product/discover-queries/#pre-built-queries">pre-built queries</a> to give you a starting point from where you can drill down to answer questions like ‘What custom filters should I implement?’ or ‘How can I improve my triage strategy?’ Of course, the pre-built queries only scratch the surface. To help you build custom queries, check out the <a href="https://docs.sentry.io/product/discover-queries/query-builder/#filter-by-search-conditions">available fields</a> and <a href="https://docs.sentry.io/product/discover-queries/query-builder/query-equations/">equations</a>. </p>

<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png?w=1143&amp;fm=webp 1143w,
https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png?w=2286&amp;fm=webp 2286w,
https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png?w=4572&amp;fm=webp 4572w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png?w=1143 1143w,
https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png?w=2286 2286w,
https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png?w=4572 4572w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Dashboards" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6J1NmZIoL6NC9GvvOQxHJi/17c5ddeb00237e065781a2ec9f54e918/Dashboard__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
Dashboards are a visual way to capture and share what matters most across services, geographies, and stakeholders. Like Discover, there are <a href="https://docs.sentry.io/product/dashboards/#default-dashboard">default dashboards</a> available out-of-the-box, or if you want something more customized to your business, you can either edit the default dashboards or build your own from scratch. A dashboard is shareable across the organization and can enhance weekly readouts, standups, or discussions around SLAs.</p>
<h3 id="get-visibility-into-the-stability-of-your-application-with-release-health"><a href="#get-visibility-into-the-stability-of-your-application-with-release-health" aria-label="get visibility into the stability of your application with release health permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Get visibility into the stability of your application with Release Health</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png?w=615&amp;fm=webp 615w,
https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png?w=1229&amp;fm=webp 1229w,
https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png?w=2458&amp;fm=webp 2458w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png?w=615 615w,
https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png?w=1229 1229w,
https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png?w=2458 2458w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Release Health" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2RLwRnzlKXb2bGnNZJHQxI/a03479e1d9dcf9fa382b5e1d2ee414a6/Release_health.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
Sentry has added new options for better navigation of <a href="https://docs.sentry.io/product/releases/release-details/">release data</a> across your workflows. With <a href="https://docs.sentry.io/product/releases/health/">Release Health</a>, you see core metrics like crash-free sessions, version adoption, and failure rate so you can quickly detect bad releases, investigate slowdowns, and prioritize the issues to solve across versions. </p>
<p>Plus, with a real-time view across all releases and <a href="https://docs.sentry.io/product/releases/usage/sorting-filtering/#sorting-releases">semantic versioning</a> support, you can compare active or past versions to understand release trends and learn how your team maintains release quality and version adoption as your platform grows. </p>
<h2 id="getting-started-with-code-observability"><a href="#getting-started-with-code-observability" aria-label="getting started with code observability permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Getting started with code observability</h2>
<p>Whether a Developer, Team Lead, or Product Owner, Sentry is continually working to help optimize your team’s workflow so you can reduce time spent on troubleshooting issues and focus on more important things like building products that customers want.</p>
<p>If you’re a current Sentry user, <a href="https://sentry.io/auth/login/">log in</a> to your account to start implementing these tips today.
New to Sentry and want to learn more? <a href="https://sentry.io/demo">Start your free account</a> or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2UUgA9cGHkdVU8f9cP3WdY/50c7855e5eb5300f8e7542fbaffc51e7/enterpriseLaunch1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Hacktoberfest is Upon Us</title>
      <link>https://blog.sentry.io/2021/10/05/hacktoberfest-is-upon-us/</link>
      <description>Ah, October. Pumpkin spice fills the nostrils of Northern Hemispherians, spring stirs the air in the South, and DigitalOcean &amp; Friends bring…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><article><p><time datetime="2021-10-05T00:00">October 5, 2021</time></p><ul><li><a href="https://blog.sentry.io/sentry/"><span>Sentry</span></a></li></ul><div><p>Ah, October. Pumpkin spice fills the nostrils of Northern Hemispherians, spring stirs the air in the South, and DigitalOcean &amp; Friends bring us yet another installation of the bonanza of open source community that is … <a href="https://hacktoberfest.digitalocean.com/">Hacktoberfest</a>. The main attraction is a challenge to contribute four pull requests to participating open source projects during the month of October. Participants get a t-shirt and/or a warm feeling. <a href="https://hacktoberfest.digitalocean.com/profile">Sign up here</a>.</p>
<p>Sentry is an open source company, so we’re all in on this annual celebration of the open source spirit. Some of our own engineers will be stepping up to the challenge. Who knows? Maybe they will show up in your repo.</p>
<p>We welcome new contributors to Sentry during the ‘fest. Want to see your name in the Sentry commit log? Here are a few pointers:</p>
<ol>
<li>All of <a href="https://open.sentry.io/structure/">our main repos</a> are in scope.</li>
<li>All issues are in scope. Need <a href="https://github.com/search?q=label%3Ahacktoberfest,%22hacktoberfest+%F0%9F%8E%83%22,%22good+first+issue%22,%22up-for-grabs%22+is%3Aopen+repo:getsentry%2Fsentry+repo:getsentry%2Fonpremise+repo:getsentry%2Fsnuba+repo:getsentry%2Fsentry-docs+repo:getsentry%2Frelay+repo:getsentry%2Fsnuba-sdk+repo:getsentry%2Fsentry-python+repo:getsentry%2Fsentry-java+repo:getsentry%2Fsentry-native+repo:getsentry%2Fresponses+repo:getsentry%2Fsymbolic+repo:getsentry%2Fsymbolicator+repo:getsentry%2Fcraft+repo:getsentry%2Farroyo+repo:getsentry%2Fcdc+repo:getsentry%2Fwal2json+&amp;type=Issues">a suggestion</a>?</li>
<li>Let us know in your PR that you are participating in Hacktoberfest.</li>
<li><a href="https://develop.sentry.dev/">Our developer docs</a> will help you get started.</li>
<li>Visit <a href="http://open.sentry.io">open.sentry.io</a> and stop by <a href="https://discord.com/invite/Ww9hbqr">our Discord</a> to chat.</li>
</ol>
<p>Thanks to DigitalOcean for throwing such a great party, and to all of the maintainers and contributors out there for making open source happen. Good luck and happy hacking.</p>
<p>P.S. If you <em>really</em> like hacking on Sentry, we do have a number of <a href="https://sentry.io/careers/">open roles</a>.</p></div></article></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5a8pqQIyhV2zD1A0bHOTm9/4dce4b71a1e327117bce00e600b8ecea/hacktoberfest-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Automate, Group, and Get Alerted: A Best Practices Guide to Monitoring your Code - Part 1</title>
      <link>https://blog.sentry.io/2021/09/28/automate-group-and-get-alerted-a-best-practices-guide-to-monitoring-your/</link>
      <description>This is part one of a two-part series on how to monitor code health at scale with Sentry. Stay tuned for part two.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As companies grow, so do their products, teams, and the number of external tools. For engineers, that can mean code sprawl, data silos, notification fatigue, and some “what the…?” moments along the way as they try to make sense of it all.</p>
<p>To help combat the chaos, Sentry provides several ways to manage the volume, noise, and potential team disconnects that come with launching and scaling projects so you can find the right people at the right time to fix the right issue, without the expletives.</p>
<h2 id="1-automate-sentry-access-with-scim-and-sso"><a href="#1-automate-sentry-access-with-scim-and-sso" aria-label="1 automate sentry access with scim and sso permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>1. Automate Sentry Access with SCIM and SSO</h2>
<p>Managers and IT departments can save time on user management tasks while reducing security risks by setting up <a href="https://docs.sentry.io/product/accounts/sso/">SSO</a> and <a href="https://docs.sentry.io/api/scim/">SCIM</a>. </p>
<p>Automatically provision and deprovision users and teams directly in <a href="https://docs.sentry.io/product/accounts/sso/#smal2-identity-provider">SAML2</a> identity providers like Okta and Azure AD using SCIM. Whether employees change roles, leave the company, or teams experience structural changes, you can programmatically add or remove team members, update team attributes such as name, or replace an entire member set - without leaving your identity provider. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Okta-SCIM" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="2-see-issues-that-matter-with-review-list-grouping-and-filters"><a href="#2-see-issues-that-matter-with-review-list-grouping-and-filters" aria-label="2 see issues that matter with review list grouping and filters permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>2. See Issues that matter with Review List, Grouping, and Filters</h2>
<p>Events in Sentry tend to grow proportional to the organization – with more customers, more products, and more lines of code you’re likely to also see more events. </p>
<h3 id="filter-and-group-events"><a href="#filter-and-group-events" aria-label="filter and group events permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Filter and group events</h3>
<p>To help manage events, Sentry’s <a href="https://docs.sentry.io/product/data-management-settings/event-grouping/">grouping strategy</a> provides a built-in grouping algorithm to join related errors into a single issue, so you don’t receive a deluge of issue notifications.</p>
<p>Grouping works because all events have a fingerprint. Events with the same fingerprint are grouped based on information available within the event, such as stacktrace, exception, and message.
Effective issue management sometimes involves looking across the constellation of these events to fine-tune the signal from the noise with custom grouping. </p>
<p>When customizing <a href="https://docs.sentry.io/product/data-management-settings/event-grouping/fingerprint-rules/">fingerprinting</a> rules, it can be helpful to use <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to explore the projects that create the most Sentry issues relative to absolute error volume. Teams can then combine patterns from event data alongside <a href="https://docs.sentry.io/product/data-management-settings/event-grouping/stack-trace-rules/#matchers">intimate knowledge</a> of their codebase to inform custom fingerprinting or <a href="https://docs.sentry.io/product/data-management-settings/event-grouping/stack-trace-rules/">stack trace</a> rules. These rules are all configured on a per-project basis. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png?w=175&amp;fm=webp 175w,
https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png?w=700&amp;fm=webp 700w" sizes="(max-width: 700px) 100vw, 700px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png?w=175 175w,
https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png?w=700 700w" sizes="(max-width: 700px) 100vw, 700px"/>
          <img alt="Merge (1)" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5rzO0hUkaivH3cxQVgGUQD/584ff480c443a94a583408bc2a0b13f3/Merge__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once you have grouped events, you can also filter events with custom <a href="https://docs.sentry.io/platforms/javascript/configuration/filtering/#filtering-error-events">filter rules</a> using a similar approach above. You can apply filter rules at both the <a href="https://docs.sentry.io/platforms/javascript/configuration/filtering/#filtering-error-events">SDK level</a> and via <a href="https://docs.sentry.io/product/data-management-settings/filtering/#inbound-data-filters">inbound filters</a> within Sentry.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png?w=188&amp;fm=webp 188w,
https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png?w=750&amp;fm=webp 750w" sizes="(max-width: 750px) 100vw, 750px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png?w=188 188w,
https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png?w=750 750w" sizes="(max-width: 750px) 100vw, 750px"/>
          <img alt="Inbound filters (2)" title="" src="https://images.ctfassets.net/em6l9zw4tzag/38P5s19NXH2d7FFsBnNSEa/0f8fbdc574e568ff85710377f2f43370/Inbound_filters.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="access-a-hyper-focused-issue-view"><a href="#access-a-hyper-focused-issue-view" aria-label="access a hyper focused issue view permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Access a hyper-focused issue view</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png?w=175&amp;fm=webp 175w,
https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png?w=700&amp;fm=webp 700w" sizes="(max-width: 700px) 100vw, 700px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png?w=175 175w,
https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png?w=700 700w" sizes="(max-width: 700px) 100vw, 700px"/>
          <img alt="For review" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WfgkbhszQHJYpX0jrnaaJ/d1ad626168a49a5f0fca4a187e95c2e5/For_review.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>To help you see the issues you care most about, <a href="https://docs.sentry.io/product/issues/states-triage/">Review List</a> provides a centralized view of a sub-set of all your unresolved issues. By default, Review List filters to display issues assigned to you or suggested for you. This view offers a more manageable collection of events that team members can review and triage daily.</p>
<h3 id="sample-and-manage-event-quota"><a href="#sample-and-manage-event-quota" aria-label="sample and manage event quota permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sample and manage event quota</h3>
<p>Understanding your events can also inform <a href="https://docs.sentry.io/platforms/javascript/configuration/sampling/">sampling</a> decisions. For example, if a project has many unique issues, using rate limiting to control quota could bias your data toward noisier events, whereas sampling at the SDK level may provide a more representative sample of your errors. Our <a href="https://docs.sentry.io/product/accounts/quotas/">user guide</a> is also a good starting point for exploring available options for sampling events across your Sentry projects.</p>
<h3 id="getting-started-with-code-observability"><a href="#getting-started-with-code-observability" aria-label="getting started with code observability permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Getting started with code observability</h3>
<p>Whether a Developer, Team Lead, or Product Owner, Sentry is continually working to help optimize your team’s workflow so you can reduce time spent on troubleshooting issues and focus on more important things like building products that customers want.</p>
<p>If you’re a current Sentry user, <a href="https://sentry.io/auth/login/">log in</a> to your account to start implementing these tips today.
New to Sentry and want to learn more? <a href="https://sentry.io/orgredirect/try-business/">Start your free account</a> or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2UUgA9cGHkdVU8f9cP3WdY/50c7855e5eb5300f8e7542fbaffc51e7/enterpriseLaunch1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 28 Sep 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Find the right person at the right time to fix the right issue with SCIM for Okta, Code Owners with GitHub, and more</title>
      <link>https://blog.sentry.io/2021/09/16/find-the-right-person-at-the-right-time-to-fix-the-right-issue/</link>
      <description>If you know someone who actually likes managing work across projects, we’d love to meet this mythical being. Because we can’t imagine who…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>If you know someone who actually <em>likes</em> managing work across projects, we’d love to meet this mythical being. Because we can’t imagine who enjoys hand-sifting through digital piles of notifications, prioritizing issues, then tracking down the right developer to assign the issue to. </p>
<p>And once you’re done with that detective work, your engineer-of-the-hour may not even have access to the right tools to resolve the issue. Who’s got time for all this org chart spelunking? Not you, we hope.</p>
<p>To navigate this sprawl and stay mostly sane, we’re introducing <a href="https://docs.sentry.io/product/issues/issue-owners/#code-owners">Code Owners</a> for GitHub and GitLab, <a href="https://docs.sentry.io/product/integrations/notification-incidents/slack/#personal-notifications">personal</a> and <a href="https://docs.sentry.io/product/integrations/notification-incidents/slack/#team-notifications">team</a> notifications in Slack, <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#when-conditions-triggers">percent-based issue alerts</a>, and <a href="https://docs.sentry.io/product/accounts/sso/okta-sso/okta-scim/">SCIM support for Okta</a> so your team can f<strong>ind the right people at the right time to fix the right issue</strong> and save the detective work for something a little less throw-your-phone-at-the-wall inducing.</p>
<h2 id="see-the-issues-that-matter-with-percent-based-issue-alerts"><a href="#see-the-issues-that-matter-with-percent-based-issue-alerts" aria-label="see the issues that matter with percent based issue alerts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See the issues that matter with percent-based issue alerts</h2>
<p>Most applications have variations in their weekly traffic as well as a constantly changing baseline as their usage grows. Count-based alerts are great for getting notified when issues exceed a predefined threshold, but for companies with variable or seasonal usage, it can lead to noisier environments. </p>
<p>To help reduce the noise, we’ve added <a href="https://docs.sentry.io/product/alerts/create-alerts/issue-alert-config/#when-conditions-triggers">percent-based alerts</a> which adjust to the changes in app usage so you can quickly identify the right problem at the right time.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="00-% alerts" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6fbHLJ5j5S3j4MXSuzS7YV/7c622da2cc8561f1f55152dbaa34ed54/00--_alerts__3_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Available to all Sentry users, you can now set alerts when an issue exceeds a certain percentage of user sessions in a period, allowing you to prioritize issues based on user impact.</p>
<p>If, for example, you are an e-commerce platform and it’s Black Friday, you’ll likely see higher traffic than usual. To ensure your team is hyper-focused during this critical time, you can set an alert for when 10% of sessions within 5 minutes experience an issue, which will notify your team only of the most important issues that affect your customers.</p>
<blockquote>
<p>With the new rollout of our app to restaurants across the country, a set number threshold for alerts wasn’t working for us. As our user base grows each week, percent-based alerts adjust with our growth, giving us visibility into the most critical issues so we can take action quickly and confidently continue rollout.</p>
</blockquote>
<p><em>Gareth Trufitt, Web Experience Technical Lead at Nando’s UK</em></p>
<h2 id="solve-issues-faster-with-code-owners-and-slack-notifications"><a href="#solve-issues-faster-with-code-owners-and-slack-notifications" aria-label="solve issues faster with code owners and slack notifications permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Solve issues faster with Code Owners and Slack notifications</h2>
<p>Companies are shipping code faster than ever, resulting in more frequent updates across teams and projects. This additional complexity makes tracking down the who behind the code an important factor in accelerating speed to resolution when issues arise. </p>
<p><a href="https://docs.sentry.io/product/issues/issue-owners/#code-owners">Code Owners</a> allows you to automatically route error notifications to the right person or team without additional configuration. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Code owners" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QQ4VzjBpDMYSpLc3wkF2L/bf58f4f637c0134c31bcffa5ce224cd6/Code_owners_-_true__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Available to customers with Business plans or higher, Code Owners integrates with the CODEOWNERS file in GitHub or GitLab, streamlining issue triage so developers only see the issues they care about and product owners can spend less time managing the queue. Now, everyone can focus on more important things - like shipping products customers want.</p>
<blockquote>
<p>For my team, I try to automate and streamline a lot of our internal processes. However, because we have a monolithic architecture, when there are alerts, accurately assigning issues and triaging them can be very manual. Using Sentry’s Code Owners integration with GitHub has streamlined our workflow by automatically assigning issues to the right team without requiring me to do a lot of manual triage. </p>
</blockquote>
<p><em>Can Zhang, Engineering Manager at Nextdoor</em></p>
<p>Once you have Code Owners or <a href="https://docs.sentry.io/product/issues/issue-owners/#external-teamuser-mappings">Suggested Assignees</a> set up, you can then set issue alerts to go directly to the corresponding individual or team who owns the code. You can do so either with <a href="https://docs.sentry.io/product/integrations/notification-incidents/slack/#personal-notifications">personal</a> and <a href="https://docs.sentry.io/product/integrations/notification-incidents/slack/#team-notifications">team</a> notifications in Slack or using <a href="https://docs.sentry.io/product/integrations/project-mgmt/jira/#issue-notifications">Jira Issue Alerts</a> to create a Jira issue and put it in the issue owner’s backlog, reducing notification fatigue and issues from falling through the cracks. </p>
<blockquote>
<p>As a software developer, having access to Sentry notifications in Slack allows me to see the issues I care about without sifting through a cluttered inbox. What used to take me 15 minutes per issue is now instant, giving me immediate visibility into when something isn’t working so I can fix it as soon as possible and get back to building. </p>
</blockquote>
<p><em>Dillon Hartley, Software Engineer, Medshift</em></p>
<p>Organizations can also send <a href="https://docs.sentry.io/product/alerts/notifications/#workflow-notifications">workflow notifications</a> and <a href="https://docs.sentry.io/product/alerts/notifications/#deploy-notifications">deploy notifications</a> to team Slack channels, streamlining communication and collaboration across the team while also promoting team autonomy.  </p>
<blockquote>
<p>Sentry’s integration with GitHub’s Code Owners has streamlined how we assign issues to our developers and promotes autonomy amongst our Scrum teams. Before, we had a buildup of unassigned issues taking our principal developers 15-20 minutes a few times a week to assign and manage. Now, with Sentry’s Code Owners, issues are assigned instantly, removing these tasks from our principal developer’s workload and allowing our teams to self-manage. The bottom line is that we are fixing issues faster and keeping our error rates low.</p>
</blockquote>
<p><em>Jenny Gray, Senior Director of Application Development, Power Home Remodeling</em></p>
<h2 id="automate-sentry-access-with-scim-support-for-okta"><a href="#automate-sentry-access-with-scim-support-for-okta" aria-label="automate sentry access with scim support for okta permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Automate Sentry access with SCIM support for Okta</h2>
<p>Admins can save time on user management tasks while reducing security risks by automatically provisioning and deprovisioning users and teams directly through Okta.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Okta-SCIM" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3H1PD9KHHcRYgcOuBIBRIA/314a3f6687ca0ea688db20714b156205/Okta-SCIM__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Available to Business and Enterprise plan customers, SCIM not only helps with more efficient Sentry onboarding but also delivers more secure user offboarding coverage for managers and IT departments. SCIM makes it easier for them to remove access from internal or third-party tools in just a few clicks, ensuring employees don’t have access to confidential information after termination. </p>
<blockquote>
<p>Support for SCIM in Okta has significantly cut the wait time for our teams to get up and running in Sentry while delivering consistency to how we activate and deprovision accounts across the org. Whether employees change roles, move teams, or leave the company, being able to programmatically remove accounts with our SaaS management tool is critical in reducing attack surface and staying compliant.</p>
</blockquote>
<p><em>Dave Lavelle, Head of IT, Productiv</em></p>
<h2 id="code-observability-at-scale"><a href="#code-observability-at-scale" aria-label="code observability at scale permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Code observability at scale</h2>
<p>We don’t have to tell you that  growing teams and applications can be complex to manage. That’s why we built these features to help you move faster and reduce operational overhead. </p>
<p>If you currently use Sentry, <a href="https://sentry.io/orgredirect/settings/__orgSlug__/">sign in</a> to configure these new capabilites. New to Sentry and want to learn more? Start your free account today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/aV7ReAEfOETKUBhbSnegC/bff8c24d62754556bf38a40135f406b7/enterpriseLaunch2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Use Suspect Tags to improve App Performance</title>
      <link>https://blog.sentry.io/2021/09/09/use-suspect-tags-to-improve-app-performance/</link>
      <description>When you’re optimizing your application for performance, it helps to understand the user conditions where the slowest transactions occurred…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>When you’re optimizing your application for performance, it helps to understand the user conditions where the slowest transactions occurred, such as OS, browser type, and even connection type. However, with performance data, it can be hard to see the forest through the trees.  <a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-tags%20white_check_mark%20eyes%20raised_hands">Suspect Tags</a> make it easier to find specific performance issues, rule out user conditions outside your control, and in general, have a better grasp of performance within your application. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=313&amp;fm=webp 313w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=625&amp;fm=webp 625w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=1250&amp;fm=webp 1250w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=313 313w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=625 625w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=1250 1250w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="SegmentExplorer" title="" src="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We use <a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-tags%20white_check_mark%20eyes%20raised_hands">Suspect Tags</a> to find slow requests in Sentry. For our frontend project, we wanted to improve <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">LCP</a> to speed up our users’ experience. Adding tags makes it easy to find and visualize performance groups within transactions — you can compare performance without the noise.</p>
<p>To do that, we wanted to focus on the slowest transactions. Once you click on the transactions, you’ll see an overview page with a list of suspect tags. By default, they are sorted by total time lost, helping us quickly shortlist suspicious tags.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="SuspectTags" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we’re looking at tags affecting the largest segment of users. We usually use multiple tags on top of the default ones, such as the user’s effective connection type, filtering out users on older 3G networks or hardware that is no longer supported.</p>
<p>To give you more control when narrowing down transactions, we’ll select filters that correspond to a majority of users. We might also filter out users with the Edge browser since that’s not our typical use case. By eliminating conditions like hardware or battery level, we can focus on conditions that affect our key user base. Once you select the Tags tab, you’ll see a heatmap, filtered by the list of suspect tags.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="HeatMap" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This heatmap shows a list of user conditions and corresponding performance behavior. You can refine the heatmap by changing transaction duration bounds in the filter (eg. transaction.duration:&lt;15m). Now, just click on a purple box to isolate and add filters based on different <a href="https://docs.sentry.io/product/performance/transaction-summary/#tags">suspect tags</a> to create your custom heatmap.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="CustomHeatMap" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-tags%20white_check_mark%20eyes%20raised_hands">Suspect Tags</a> helps you find the issues that affect your customers the most, giving you a clear signal on what broke and how to fix it efficiently.</p>
<p><strong>Next Steps:</strong><br/>
First, watch a demo of this feature from the developer that built it, <a href="https://www.youtube.com/watch?v=a5ShMQVYFIA">watch this video.</a>
Next, start using suspect tags to find latency issues in your app with <a href="https://docs.sentry.io/product/performance/getting-started">Sentry Performance</a>.</p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7LLI0QOFlsyNpnThyXZyFr/51ec12e9014a31639ffb5d8f23641279/Errors3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Use Suspect Tags to improve App Performance</title>
      <link>https://blog.sentry.io/2021/09/09/use-suspect-tags-to-improve-app-performance/</link>
      <description>When you’re optimizing your application for performance, it helps to understand the user conditions where the slowest transactions occurred…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>When you’re optimizing your application for performance, it helps to understand the user conditions where the slowest transactions occurred, such as OS, browser type, and even connection type. However, with performance data, it can be hard to see the forest through the trees.  <a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-tags%20white_check_mark%20eyes%20raised_hands">Suspect Tags</a> make it easier to find specific performance issues, rule out user conditions outside your control, and in general, have a better grasp of performance within your application. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=313&amp;fm=webp 313w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=625&amp;fm=webp 625w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=1250&amp;fm=webp 1250w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=313 313w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=625 625w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=1250 1250w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="SegmentExplorer" title="" src="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We use <a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-tags%20white_check_mark%20eyes%20raised_hands">Suspect Tags</a> to find slow requests in Sentry. For our frontend project, we wanted to improve <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">LCP</a> to speed up our users’ experience. Adding tags makes it easy to find and visualize performance groups within transactions — you can compare performance without the noise.</p>
<p>To do that, we wanted to focus on the slowest transactions. Once you click on the transactions, you’ll see an overview page with a list of suspect tags. By default, they are sorted by total time lost, helping us quickly shortlist suspicious tags.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="SuspectTags" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we’re looking at tags affecting the largest segment of users. We usually use multiple tags on top of the default ones, such as the user’s effective connection type, filtering out users on older 3G networks or hardware that is no longer supported.</p>
<p>To give you more control when narrowing down transactions, we’ll select filters that correspond to a majority of users. We might also filter out users with the Edge browser since that’s not our typical use case. By eliminating conditions like hardware or battery level, we can focus on conditions that affect our key user base. Once you select the Tags tab, you’ll see a heatmap, filtered by the list of suspect tags.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="HeatMap" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This heatmap shows a list of user conditions and corresponding performance behavior. You can refine the heatmap by changing transaction duration bounds in the filter (eg. transaction.duration:&lt;15m). Now, just click on a purple box to isolate and add filters based on different <a href="https://docs.sentry.io/product/performance/transaction-summary/#tags">suspect tags</a> to create your custom heatmap.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="CustomHeatMap" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://docs.sentry.io/product/performance/transaction-summary/#suspect-tags%20white_check_mark%20eyes%20raised_hands">Suspect Tags</a> helps you find the issues that affect your customers the most, giving you a clear signal on what broke and how to fix it efficiently.</p>
<p><strong>Next Steps:</strong><br/>
First, watch a demo of this feature from the developer that built it, <a href="https://www.youtube.com/watch?v=a5ShMQVYFIA">watch this video.</a>
Next, start using suspect tags to find latency issues in your app with <a href="https://docs.sentry.io/product/performance/getting-started">Sentry Performance</a>.</p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7LLI0QOFlsyNpnThyXZyFr/51ec12e9014a31639ffb5d8f23641279/Errors3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Segment Explorer to improve App Performance</title>
      <link>https://blog.sentry.io/2021/09/09/using-segment-explorer-to-improve-app-performance/</link>
      <description>When you’re trying to optimize your application for performance, it helps to understand not only the number of people affected, but also…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>When you’re trying to optimize your application for performance, it helps to understand not only the number of people affected, but also user conditions of the slowest transactions, such as OS, browser type, and even connection type. When you’re looking at performance data, it can be hard to see the forest through the trees. Segment Explorer makes it easier to find specific performance issues, rule out user conditions outside your control, and in general have a better grasp of performance within your application. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=313&amp;fm=webp 313w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=625&amp;fm=webp 625w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=1250&amp;fm=webp 1250w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=313 313w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=625 625w,
https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png?w=1250 1250w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="SegmentExplorer" title="" src="https://images.ctfassets.net/em6l9zw4tzag/XDMrYjKwZSRbOSyr6OAXb/dab30d3191b188e147823a3c1996c2cb/SegmentExplorer.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We use Segment Explorer to find slow requests in Sentry. For our frontend project, we wanted to improve <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">LCP</a> to speed up our users’ experience. Adding tags makes it easy to find and visualize performance groups within transactions — you can compare performance without the noise.</p>
<p>To do that, we wanted to focus on the slowest transactions. Once you click on the transactions, you’ll see an overview page with a list of suspect tags. By default, suspect tags on the left are sorted by total time lost, helping us quickly shortlist suspicious tags.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="SuspectTags" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1kBll48PNFG7OpVStkaMhz/75a6fe23e820687afa7731ca5cf8becf/SuspectTags.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we’re looking at tags affecting the largest segment of users. We usually use multiple tags, on top of the default tags such as the user’s effective connection type, filtering out users on a 3G network or controlling for specific hardware. With Web Vitals, we can exclude things like the CLS element — a heuristic that may not pick a page’s most appropriate visually complete element.</p>
<p>To give you more control when narrowing down transactions, we’ll select filters that correspond to a majority of users. We might also filter out users with the Edge browser since that’s not our typical use case. By eliminating conditions like hardware or battery level, we can focus on conditions that affect our key user base. Once you select the Tags tab, you’ll see a heatmap, filtered by the list of suspect tags.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="HeatMap" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1jBSZpCOPxrVRvsd4bnsG0/7e87aac15a78b93d03f004f821a4398f/HeatMap.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This heatmap shows a list of user conditions and corresponding performance behavior. You can refine the heatmap by changing transaction duration bounds in the filter (eg. transaction.duration:&lt;15m). Now, just click on a purple box to isolate and add filters based on different <a href="https://docs.sentry.io/product/performance/transaction-summary/#tags">suspect tags</a> to create your custom heatmap.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=349&amp;fm=webp 349w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=697&amp;fm=webp 697w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=1394&amp;fm=webp 1394w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=349 349w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=697 697w,
https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png?w=1394 1394w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="CustomHeatMap" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2bQraHRS2WwEqztCnnINjQ/63ebddc1b733a9fbb2217958fc4db971/CustomHeatMap.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Segment Explorer helps you find the issues that affect your customers the most, giving you a clear signal on what broke and how to fix it efficiently. To start exploring latency issues in your app, check out <a href="https://docs.sentry.io/product/performance/getting-started/">Segment Explorer with Sentry Performance.</a></p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7LLI0QOFlsyNpnThyXZyFr/51ec12e9014a31639ffb5d8f23641279/Errors3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Performance Monitoring in GraphQL</title>
      <link>https://blog.sentry.io/2021/08/31/guest-post-performance-monitoring-in-graphql/</link>
      <description>A quick cheat sheet to integrate Sentry Performance in your Apollo Server.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/efueyo/">Enrique Fueyo Ramírez</a> is the Co-founder and CTO of <a href="http://lang.ai/">Lang.ai</a>. Here’s a post on how him and his team at Lang.ai instrumented performance monitoring for GraphQL resolvers.</em></p>
<h2 id="tech-stack"><a href="#tech-stack" aria-label="tech stack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tech Stack</h2>
<ul>
<li>At <a href="http://lang.ai">Lang.ai</a> we use <a href="https://sentry.io/">Sentry</a> in our systems for Error Monitoring and recently added Performance Monitoring</li>
<li><a href="https://lang.ai/">Lang.ai</a>’s User Interface is a React App using a <a href="https://graphql.org/">GraphQL</a> API.</li>
<li>We use <a href="https://www.apollographql.com/">Apollo</a> to connect the frontend and the GraphQL backend.</li>
</ul>
<h2 id="problem"><a href="#problem" aria-label="problem permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Problem</h2>
<ul>
<li>Some months ago we started experiencing some degradation in a few graphql queries. The queries were complex (big) queries and it was tricky to debug which part of the request was slowing down the response.</li>
</ul>
<h2 id="goal"><a href="#goal" aria-label="goal permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Goal</h2>
<ul>
<li>We wanted to monitor the performance of each <a href="https://www.apollographql.com/docs/apollo-server/data/resolvers/">Graphql Resolver</a>.</li>
<li>Ideally, we wanted to monitor the performance of every resolver without explicitly adding it (we didn’t want to proactively add a start and stop lines of code all around our functions’ bodies).</li>
</ul>
<h2 id="solution"><a href="#solution" aria-label="solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Solution</h2>
<ul>
<li>Create a Sentry transaction for each graphql request.</li>
</ul>
<p>Each Sentry transaction is initialized with its own <a href="https://docs.sentry.io/platforms/javascript/enriching-events/context/">context</a>. <a href="https://docs.sentry.io/platforms/javascript/performance/instrumentation/custom-instrumentation/">Create a Transaction</a></p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> Transaction <span>}</span> <span>from</span> <span>&#34;@sentry/types&#34;</span>

<span>export</span> <span>interface</span> <span>Context</span> <span>{</span>
  <span>// ... other context fields for your context</span>
  transaction<span>:</span> Transaction
<span>}</span>

<span>export</span> <span>async</span> <span>function</span> <span>createContext</span><span>(</span><span>)</span><span>:</span> Promise<span>&lt;</span>Context<span>&gt;</span> <span>{</span> <span>{</span>
  <span>// ... create other context fields</span>
  <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span><span>{</span>
    op<span>:</span> <span>&#34;gql&#34;</span><span>,</span>
    name<span>:</span> <span>&#34;GraphQLTransaction&#34;</span><span>,</span> <span>// this will be the default name, unless the gql query has a name</span>
  <span>}</span><span>)</span>
  <span>return</span> <span>{</span> transaction <span>}</span><span>;</span>
<span>}</span></code></pre></div>
<ul>
<li>Add a span for each resolver</li>
</ul>
<p>To intercept the life-cycle of each resolver and create and finish a span, we needed to create an Apollo Plugin.</p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> ApolloServerPlugin <span>}</span> <span>from</span> <span>&#34;apollo-server-plugin-base&#34;</span>
<span>import</span> <span>{</span> Context <span>}</span> <span>from</span> <span>&#34;./context&#34;</span>

<span>const</span> plugin<span>:</span> ApolloServerPlugin<span>&lt;</span>Context<span>&gt;</span> <span>=</span> <span>{</span>
  <span>requestDidStart</span><span>(</span><span><span>{</span> request<span>,</span> context <span>}</span></span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>!</span><span>!</span>request<span>.</span>operationName<span>)</span> <span>{</span> <span>// set the transaction Name if we have named queries</span>
      context<span>.</span>transaction<span>.</span><span>setName</span><span>(</span>request<span>.</span>operationName<span>!</span><span>)</span>
    <span>}</span>
    <span>return</span> <span>{</span>
      <span>willSendResponse</span><span>(</span><span><span>{</span> context <span>}</span></span><span>)</span> <span>{</span> <span>// hook for transaction finished</span>
        context<span>.</span>transaction<span>.</span><span>finish</span><span>(</span><span>)</span>
      <span>}</span><span>,</span>
      <span>executionDidStart</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>{</span>
          <span>willResolveField</span><span>(</span><span><span>{</span> context<span>,</span> info <span>}</span></span><span>)</span> <span>{</span> <span>// hook for each new resolver</span>
            <span>const</span> span <span>=</span> context<span>.</span>transaction<span>.</span><span>startChild</span><span>(</span><span>{</span>
              op<span>:</span> <span>&#34;resolver&#34;</span><span>,</span>
              description<span>:</span> <span><span>`</span><span><span>${</span>info<span>.</span>parentType<span>.</span>name<span>}</span></span><span>.</span><span><span>${</span>info<span>.</span>fieldName<span>}</span></span><span>`</span></span><span>,</span>
            <span>}</span><span>)</span>
            <span>return</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>// this will execute once the resolver is finished</span>
              span<span>.</span><span>finish</span><span>(</span><span>)</span>
            <span>}</span>
          <span>}</span><span>,</span>
        <span>}</span>
      <span>}</span><span>,</span>
    <span>}</span>
  <span>}</span><span>,</span>
<span>}</span>

<span>export</span> <span>default</span> plugin</code></pre></div>
<ul>
<li>And then we have to connect all the pieces on server initialization</li>
</ul>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> ApolloServer <span>}</span> <span>from</span> <span>&#34;apollo-server-micro&#34;</span>

<span>import</span> <span>{</span> createContext <span>}</span> <span>from</span> <span>&#34;./context&#34;</span>
<span>import</span> SentryPlugin <span>from</span> <span>&#34;./sentry-plugin&#34;</span>

<span>const</span> apolloServer <span>=</span> <span>new</span> <span>ApolloServer</span><span>(</span><span>{</span>
  <span>// ... your ApolloServer options</span>
  <span>// Create context function</span>
  <span>context</span><span>:</span> <span>(</span><span><span>{</span> req<span>,</span> connection <span>}</span></span><span>)</span> <span>=&gt;</span> <span>createContext</span><span>(</span><span>{</span> req<span>,</span> connection <span>}</span><span>)</span><span>,</span>
  <span>// Add our sentry plugin</span>
  plugins<span>:</span> <span>[</span>SentryPlugin<span>]</span><span>,</span>
<span>}</span><span>)</span></code></pre></div>
<p>Once your server starts receiving requests it will send every transaction info to your configured Sentry account. You should see something like this:</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/7LQD8LXQalxSslyK1FztdP/5439d7eaeb10226421e07554cb142214/img1.png" alt="performance_lang.ai"/></p>
<p>And you can also see the detail of each individual transaction with its resolvers:</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/7FEo6JIEGrXsxhRIxHmCBN/7c5a8475ea9bc4d9f260152364840e81/img2.png" alt="spans_lang.ai"/></p>
<h2 id="one-last-consideration"><a href="#one-last-consideration" aria-label="one last consideration permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>One last consideration</h2>
<p>We could have created the transaction directly in the plugin, inside the <code>requestDidStart</code> function and omit any references to the <code>Context</code>. But, if we make the <code>transaction</code> accessible from the <code>Context</code>, each resolver can access it and we can create more <code>spans</code> inside the resolvers for more fine grained information.</p>
<p>Accessing the transaction from the resolver should also be helpful for Sentry’s <a href="https://docs.sentry.io/product/performance/distributed-tracing/">Distributed Tracing</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Performance Monitoring in GraphQL</title>
      <link>https://blog.sentry.io/2021/08/31/guest-post-performance-monitoring-in-graphql/</link>
      <description>A quick cheat sheet to integrate Sentry Performance in your Apollo Server.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/efueyo/">Enrique Fueyo Ramírez</a> is the Co-founder and CTO of <a href="http://lang.ai/">Lang.ai</a>. Here’s a post on how him and his team at Lang.ai instrumented performance monitoring for GraphQL resolvers.</em></p>
<h2 id="tech-stack"><a href="#tech-stack" aria-label="tech stack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tech Stack</h2>
<ul>
<li>At <a href="http://lang.ai">Lang.ai</a> we use <a href="https://sentry.io/">Sentry</a> in our systems for Error Monitoring and recently added Performance Monitoring</li>
<li><a href="https://lang.ai/">Lang.ai</a>’s User Interface is a React App using a <a href="https://graphql.org/">GraphQL</a> API.</li>
<li>We use <a href="https://www.apollographql.com/">Apollo</a> to connect the frontend and the GraphQL backend.</li>
</ul>
<h2 id="problem"><a href="#problem" aria-label="problem permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Problem</h2>
<ul>
<li>Some months ago we started experiencing some degradation in a few graphql queries. The queries were complex (big) queries and it was tricky to debug which part of the request was slowing down the response.</li>
</ul>
<h2 id="goal"><a href="#goal" aria-label="goal permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Goal</h2>
<ul>
<li>We wanted to monitor the performance of each <a href="https://www.apollographql.com/docs/apollo-server/data/resolvers/">Graphql Resolver</a>.</li>
<li>Ideally, we wanted to monitor the performance of every resolver without explicitly adding it (we didn’t want to proactively add a start and stop lines of code all around our functions’ bodies).</li>
</ul>
<h2 id="solution"><a href="#solution" aria-label="solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Solution</h2>
<ul>
<li>Create a Sentry transaction for each graphql request.</li>
</ul>
<p>Each Sentry transaction is initialized with its own <a href="https://docs.sentry.io/platforms/javascript/enriching-events/context/">context</a>. <a href="https://docs.sentry.io/platforms/javascript/performance/instrumentation/custom-instrumentation/">Create a Transaction</a></p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> Transaction <span>}</span> <span>from</span> <span>&#34;@sentry/types&#34;</span>

<span>export</span> <span>interface</span> <span>Context</span> <span>{</span>
  <span>// ... other context fields for your context</span>
  transaction<span>:</span> Transaction
<span>}</span>

<span>export</span> <span>async</span> <span>function</span> <span>createContext</span><span>(</span><span>)</span><span>:</span> Promise<span>&lt;</span>Context<span>&gt;</span> <span>{</span> <span>{</span>
  <span>// ... create other context fields</span>
  <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span><span>{</span>
    op<span>:</span> <span>&#34;gql&#34;</span><span>,</span>
    name<span>:</span> <span>&#34;GraphQLTransaction&#34;</span><span>,</span> <span>// this will be the default name, unless the gql query has a name</span>
  <span>}</span><span>)</span>
  <span>return</span> <span>{</span> transaction <span>}</span><span>;</span>
<span>}</span></code></pre></div>
<ul>
<li>Add a span for each resolver</li>
</ul>
<p>To intercept the life-cycle of each resolver and create and finish a span, we needed to create an Apollo Plugin.</p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> ApolloServerPlugin <span>}</span> <span>from</span> <span>&#34;apollo-server-plugin-base&#34;</span>
<span>import</span> <span>{</span> Context <span>}</span> <span>from</span> <span>&#34;./context&#34;</span>

<span>const</span> plugin<span>:</span> ApolloServerPlugin<span>&lt;</span>Context<span>&gt;</span> <span>=</span> <span>{</span>
  <span>requestDidStart</span><span>(</span><span><span>{</span> request<span>,</span> context <span>}</span></span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>!</span><span>!</span>request<span>.</span>operationName<span>)</span> <span>{</span> <span>// set the transaction Name if we have named queries</span>
      context<span>.</span>transaction<span>.</span><span>setName</span><span>(</span>request<span>.</span>operationName<span>!</span><span>)</span>
    <span>}</span>
    <span>return</span> <span>{</span>
      <span>willSendResponse</span><span>(</span><span><span>{</span> context <span>}</span></span><span>)</span> <span>{</span> <span>// hook for transaction finished</span>
        context<span>.</span>transaction<span>.</span><span>finish</span><span>(</span><span>)</span>
      <span>}</span><span>,</span>
      <span>executionDidStart</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>{</span>
          <span>willResolveField</span><span>(</span><span><span>{</span> context<span>,</span> info <span>}</span></span><span>)</span> <span>{</span> <span>// hook for each new resolver</span>
            <span>const</span> span <span>=</span> context<span>.</span>transaction<span>.</span><span>startChild</span><span>(</span><span>{</span>
              op<span>:</span> <span>&#34;resolver&#34;</span><span>,</span>
              description<span>:</span> <span><span>`</span><span><span>${</span>info<span>.</span>parentType<span>.</span>name<span>}</span></span><span>.</span><span><span>${</span>info<span>.</span>fieldName<span>}</span></span><span>`</span></span><span>,</span>
            <span>}</span><span>)</span>
            <span>return</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>// this will execute once the resolver is finished</span>
              span<span>.</span><span>finish</span><span>(</span><span>)</span>
            <span>}</span>
          <span>}</span><span>,</span>
        <span>}</span>
      <span>}</span><span>,</span>
    <span>}</span>
  <span>}</span><span>,</span>
<span>}</span>

<span>export</span> <span>default</span> plugin</code></pre></div>
<ul>
<li>And then we have to connect all the pieces on server initialization</li>
</ul>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> ApolloServer <span>}</span> <span>from</span> <span>&#34;apollo-server-micro&#34;</span>

<span>import</span> <span>{</span> createContext <span>}</span> <span>from</span> <span>&#34;./context&#34;</span>
<span>import</span> SentryPlugin <span>from</span> <span>&#34;./sentry-plugin&#34;</span>

<span>const</span> apolloServer <span>=</span> <span>new</span> <span>ApolloServer</span><span>(</span><span>{</span>
  <span>// ... your ApolloServer options</span>
  <span>// Create context function</span>
  <span>context</span><span>:</span> <span>(</span><span><span>{</span> req<span>,</span> connection <span>}</span></span><span>)</span> <span>=&gt;</span> <span>createContext</span><span>(</span><span>{</span> req<span>,</span> connection <span>}</span><span>)</span><span>,</span>
  <span>// Add our sentry plugin</span>
  plugins<span>:</span> <span>[</span>SentryPlugin<span>]</span><span>,</span>
<span>}</span><span>)</span></code></pre></div>
<p>Once your server starts receiving requests it will send every transaction info to your configured Sentry account. You should see something like this:</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/7LQD8LXQalxSslyK1FztdP/5439d7eaeb10226421e07554cb142214/img1.png" alt="performance_lang.ai"/></p>
<p>And you can also see the detail of each individual transaction with its resolvers:</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/7FEo6JIEGrXsxhRIxHmCBN/7c5a8475ea9bc4d9f260152364840e81/img2.png" alt="spans_lang.ai"/></p>
<h2 id="one-last-consideration"><a href="#one-last-consideration" aria-label="one last consideration permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>One last consideration</h2>
<p>We could have created the transaction directly in the plugin, inside the <code>requestDidStart</code> function and omit any references to the <code>Context</code>. But, if we make the <code>transaction</code> accessible from the <code>Context</code>, each resolver can access it and we can create more <code>spans</code> inside the resolvers for more fine grained information.</p>
<p>Accessing the transaction from the resolver should also be helpful for Sentry’s <a href="https://docs.sentry.io/product/performance/distributed-tracing/">Distributed Tracing</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Performance Monitoring in GraphQL</title>
      <link>https://blog.sentry.io/2021/08/31/guest-post-performance-monitoring-in-graphql/</link>
      <description>A quick cheat sheet to integrate Sentry Performance in your Apollo Server.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/efueyo/">Enrique Fueyo Ramírez</a> is the Co-founder and CTO of <a href="http://lang.ai/">Lang.ai</a>. Here’s a post on how him and his team at Lang.ai instrumented performance monitoring for GraphQL resolvers.</em></p>
<h2 id="tech-stack"><a href="#tech-stack" aria-label="tech stack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tech Stack</h2>
<ul>
<li>At <a href="http://lang.ai">Lang.ai</a> we use <a href="https://sentry.io/">Sentry</a> in our systems for Error Monitoring and recently added Performance Monitoring</li>
<li><a href="https://lang.ai/">Lang.ai</a>’s User Interface is a React App using a <a href="https://graphql.org/">GraphQL</a> API.</li>
<li>We use <a href="https://www.apollographql.com/">Apollo</a> to connect the frontend and the GraphQL backend.</li>
</ul>
<h2 id="problem"><a href="#problem" aria-label="problem permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Problem</h2>
<ul>
<li>Some months ago we started experiencing some degradation in a few graphql queries. The queries were complex (big) queries and it was tricky to debug which part of the request was slowing down the response.</li>
</ul>
<h2 id="goal"><a href="#goal" aria-label="goal permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Goal</h2>
<ul>
<li>We wanted to monitor the performance of each <a href="https://www.apollographql.com/docs/apollo-server/data/resolvers/">Graphql Resolver</a>.</li>
<li>Ideally, we wanted to monitor the performance of every resolver without explicitly adding it (we didn’t want to proactively add a start and stop lines of code all around our functions’ bodies).</li>
</ul>
<h2 id="solution"><a href="#solution" aria-label="solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Solution</h2>
<ul>
<li>Create a Sentry transaction for each graphql request.</li>
</ul>
<p>Each Sentry transaction is initialized with its own <a href="https://docs.sentry.io/platforms/javascript/enriching-events/context/">context</a>. <a href="https://docs.sentry.io/platforms/javascript/performance/instrumentation/custom-instrumentation/">Create a Transaction</a></p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> Transaction <span>}</span> <span>from</span> <span>&#34;@sentry/types&#34;</span>

<span>export</span> <span>interface</span> <span>Context</span> <span>{</span>
  <span>// ... other context fields for your context</span>
  transaction<span>:</span> Transaction
<span>}</span>

<span>export</span> <span>async</span> <span>function</span> <span>createContext</span><span>(</span><span>)</span><span>:</span> Promise<span>&lt;</span>Context<span>&gt;</span> <span>{</span> <span>{</span>
  <span>// ... create other context fields</span>
  <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span><span>{</span>
    op<span>:</span> <span>&#34;gql&#34;</span><span>,</span>
    name<span>:</span> <span>&#34;GraphQLTransaction&#34;</span><span>,</span> <span>// this will be the default name, unless the gql query has a name</span>
  <span>}</span><span>)</span>
  <span>return</span> <span>{</span> transaction <span>}</span><span>;</span>
<span>}</span></code></pre></div>
<ul>
<li>Add a span for each resolver</li>
</ul>
<p>To intercept the life-cycle of each resolver and create and finish a span, we needed to create an Apollo Plugin.</p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> ApolloServerPlugin <span>}</span> <span>from</span> <span>&#34;apollo-server-plugin-base&#34;</span>
<span>import</span> <span>{</span> Context <span>}</span> <span>from</span> <span>&#34;./context&#34;</span>

<span>const</span> plugin<span>:</span> ApolloServerPlugin<span>&lt;</span>Context<span>&gt;</span> <span>=</span> <span>{</span>
  <span>requestDidStart</span><span>(</span><span><span>{</span> request<span>,</span> context <span>}</span></span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>!</span><span>!</span>request<span>.</span>operationName<span>)</span> <span>{</span> <span>// set the transaction Name if we have named queries</span>
      context<span>.</span>transaction<span>.</span><span>setName</span><span>(</span>request<span>.</span>operationName<span>!</span><span>)</span>
    <span>}</span>
    <span>return</span> <span>{</span>
      <span>willSendResponse</span><span>(</span><span><span>{</span> context <span>}</span></span><span>)</span> <span>{</span> <span>// hook for transaction finished</span>
        context<span>.</span>transaction<span>.</span><span>finish</span><span>(</span><span>)</span>
      <span>}</span><span>,</span>
      <span>executionDidStart</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>{</span>
          <span>willResolveField</span><span>(</span><span><span>{</span> context<span>,</span> info <span>}</span></span><span>)</span> <span>{</span> <span>// hook for each new resolver</span>
            <span>const</span> span <span>=</span> context<span>.</span>transaction<span>.</span><span>startChild</span><span>(</span><span>{</span>
              op<span>:</span> <span>&#34;resolver&#34;</span><span>,</span>
              description<span>:</span> <span><span>`</span><span><span>${</span>info<span>.</span>parentType<span>.</span>name<span>}</span></span><span>.</span><span><span>${</span>info<span>.</span>fieldName<span>}</span></span><span>`</span></span><span>,</span>
            <span>}</span><span>)</span>
            <span>return</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>{</span> <span>// this will execute once the resolver is finished</span>
              span<span>.</span><span>finish</span><span>(</span><span>)</span>
            <span>}</span>
          <span>}</span><span>,</span>
        <span>}</span>
      <span>}</span><span>,</span>
    <span>}</span>
  <span>}</span><span>,</span>
<span>}</span>

<span>export</span> <span>default</span> plugin</code></pre></div>
<ul>
<li>And then we have to connect all the pieces on server initialization</li>
</ul>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> ApolloServer <span>}</span> <span>from</span> <span>&#34;apollo-server-micro&#34;</span>

<span>import</span> <span>{</span> createContext <span>}</span> <span>from</span> <span>&#34;./context&#34;</span>
<span>import</span> SentryPlugin <span>from</span> <span>&#34;./sentry-plugin&#34;</span>

<span>const</span> apolloServer <span>=</span> <span>new</span> <span>ApolloServer</span><span>(</span><span>{</span>
  <span>// ... your ApolloServer options</span>
  <span>// Create context function</span>
  <span>context</span><span>:</span> <span>(</span><span><span>{</span> req<span>,</span> connection <span>}</span></span><span>)</span> <span>=&gt;</span> <span>createContext</span><span>(</span><span>{</span> req<span>,</span> connection <span>}</span><span>)</span><span>,</span>
  <span>// Add our sentry plugin</span>
  plugins<span>:</span> <span>[</span>SentryPlugin<span>]</span><span>,</span>
<span>}</span><span>)</span></code></pre></div>
<p>Once your server starts receiving requests it will send every transaction info to your configured Sentry account. You should see something like this:</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/7LQD8LXQalxSslyK1FztdP/5439d7eaeb10226421e07554cb142214/img1.png" alt="performance_lang.ai"/></p>
<p>And you can also see the detail of each individual transaction with its resolvers:</p>
<p><img src="https://images.contentful.com/em6l9zw4tzag/7FEo6JIEGrXsxhRIxHmCBN/7c5a8475ea9bc4d9f260152364840e81/img2.png" alt="spans_lang.ai"/></p>
<h2 id="one-last-consideration"><a href="#one-last-consideration" aria-label="one last consideration permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>One last consideration</h2>
<p>We could have created the transaction directly in the plugin, inside the <code>requestDidStart</code> function and omit any references to the <code>Context</code>. But, if we make the <code>transaction</code> accessible from the <code>Context</code>, each resolver can access it and we can create more <code>spans</code> inside the resolvers for more fine grained information.</p>
<p>Accessing the transaction from the resolver should also be helpful for Sentry’s <a href="https://docs.sentry.io/product/performance/distributed-tracing/">Distributed Tracing</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 31 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Mobile Vitals - Four Metrics Every Mobile Developer Should Care About</title>
      <link>https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about/</link>
      <description>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving performance issues can be a struggle and time-consuming.</p>
<p>Most developers use profilers within IDEs like Android Studio or Xcode to hunt for bottlenecks and automated performance tests to catch performance regressions in their code during development. However, testing an application before it ships is not enough.</p>
<p>To catch the most frustrating performance issues, you need to explore what’s happening on your users’ devices. That means visibility into how fast your app starts, duration of HTTP requests, number of slow and frozen frames, how fast your views are loading, and more. With Sentry for Mobile, you can now easily monitor your <a href="https://docs.sentry.io/platforms/react-native/performance/">React Native</a>, <a href="https://docs.sentry.io/platforms/apple/guides/ios/performance/">iOS</a>, and <a href="https://docs.sentry.io/platforms/android/performance/">Android</a> app’s performance in real-time without additional setup (or accumulating a pile of testing devices).</p>
<h2 id="mobile-vitals"><a href="#mobile-vitals" aria-label="mobile vitals permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Vitals</h2>
<p>We believe there are four metrics every mobile team should track to better understand how their app is performing: Cold starts, warm starts, slow frames, and frozen frames. These four metrics, as a core part of Sentry’s performance monitoring, gives you the details you need to not only prioritize critical performance issues but trace the issue down to the root cause to solve them faster.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="mobile vitals" title="" src="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="measuring-app-start"><a href="#measuring-app-start" aria-label="measuring app start permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Measuring App Start</h2>
<p>When a user taps on your app icon, it should start fast. On iOS, Apple recommends your app take at most 400ms to render the first frame. On Android, the <a href="https://developer.android.com/topic/performance/vitals/launch-time#av">Google Play console</a> warns you when a cold start takes longer than 5 seconds or a warm start longer than 2 seconds. </p>
<ul>
<li><strong>Cold start</strong>: App launched for the first time, after a reboot or update.</li>
<li><strong>Warm start</strong>: App launched at least once and is partially in memory.</li>
</ul>
<p>The exact definitions differ slightly per platform. For more details, so please check out our <a href="https://docs.sentry.io/platforms/apple/guides/ios/performance/instrumentation/automatic-instrumentation/">iOS</a> and <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a> docs.</p>
<p>No matter the platform, it is crucial that your app starts quickly to provide a delightful user experience. That’s why on iOS, Mac Catalyst, tvOS, and Android we track how long your app needs to draw your first frame. We grab this information and add spans for different phases of the app start. Here is an example from iOS:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-app-start" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>On Android, it is trickier to hook into the initialization phases of the app start, and therefore we currently add one span from the application launch to the first auto-generated UI transaction. Still, this information is very useful and can help you to improve the duration of your app start.</p>
<h2 id="slow-and-frozen-frames"><a href="#slow-and-frozen-frames" aria-label="slow and frozen frames permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Slow and Frozen Frames</h2>
<p>Unresponsive UI, animation hitches, or just jank annoy users and degrade the user experience. Two measurements to track this unwanted experience are slow and frozen frames. A phone or tablet typically renders with 60 frames per second (fps). </p>
<p>The frame rate can also be higher, especially as 120 fps displays are becoming more popular. With 60 fps, every frame has 16.67 ms to render. If your app needs more than 16.67 ms for a frame, it is a slow frame. </p>
<p>Frozen frames are UI frames that take longer than 700 ms. An app that is running smoothly should not experience either. That’s why the SDK adds these two measurements to all transactions captured. The detail view of the transaction displays the slow, frozen, and total frames to the right.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-frozen-frames" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Mobile Vitals are a core part of Sentry’s performance monitoring for mobile and unlocks more ways to spot bottlenecks and speed up your apps. </p>
<h2 id="mobile-performance-monitoring"><a href="#mobile-performance-monitoring" aria-label="mobile performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Performance Monitoring</h2>
<p>The purpose of Sentry’s performance monitoring is to track your application’s performance across multiple services. To measure Mobile Vitals, the SDKs capture distributed traces consisting of transactions and spans.</p>
<p>Distributed tracing is a standard technology used for understanding what’s going on across distributed services, but it is still relatively new for mobile applications. A trace represents an operation you want to measure, like signing in or loading a view in your app. Both mentioned operations don’t only involve your app but also backend actions. Each trace consists of one or more transactions, which can contain one or more spans. For example, the trace of a login could then include a transaction of your app and two transactions of your backend services. </p>
<p>Every transaction contains several spans representing a single unit of work, like reading a file or querying the database. The spans have a parent-child relationship, meaning a span can have multiple children and grandchildren. Here’s an example trace, broken down into transactions and spans:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transactions traces and spans" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If you want to dig deeper into these concepts, check out <a href="https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/">Distributed Tracing 101 for Full Stack Developers</a> by our very own, Ben Vinegar, VP of Engineering. For this blog post, let’s focus on transactions and take a look at an example creating a transaction with two child spans in Swift:</p>
<div data-language="swift"><pre><code><span>let</span> transaction <span>=</span> 
	<span>SentrySDK</span><span>.</span><span>startTransaction</span><span>(</span>name<span>:</span> <span>&#34;Load Messages&#34;</span><span>,</span> operation<span>:</span> <span>&#34;ui.load&#34;</span><span>)</span>

<span>let</span> getMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;http&#34;</span><span>,</span> description<span>:</span> <span>&#34;GET /my/api/messages&#34;</span><span>)</span>
<span>getMessages</span><span>(</span><span>)</span>
getMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>let</span> renderMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;ui&#34;</span><span>,</span> description<span>:</span> <span>&#34;Render Messages&#34;</span><span>)</span>
<span>renderMessages</span><span>(</span><span>)</span>
renderMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>// Finishes the transaction and sends it to Sentry</span>
transaction<span>.</span><span>finish</span><span>(</span><span>)</span></code></pre></div>
<p>After running the code we can take a look at the transaction in Sentry:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios transaction" title="" src="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Creating rich transactions manually would require writing a lot of code. That’s why we’ve made things easier with auto instrumentation. You can save yourself the headache of writing and maintaining code while still accessing the performance insights you need.</p>
<h2 id="automatic-instrumentation"><a href="#automatic-instrumentation" aria-label="automatic instrumentation permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Automatic Instrumentation</h2>
<p>The automatic instrumentation lets you explore how long your views take to render, and HTTP requests need to finish. The SDK for Apple generates transactions for UIViewControllers on iOS, tvOS, and Mac Catalyst and creates spans for outgoing HTTP requests on all platforms. The SDK for Android captures transactions for Activities and Fragments and provides an integration for OkHttp. Sentry SDK for React Native can capture transactions automatically when using React Navigation router, and spans for both XHR and fetch requests. In the following months, we are working on adding support for Flutter.</p>
<p>Here is an example of an auto-generated transaction on iOS for a <code>UIViewController</code>. As we can see in the screenshot below, the SDK creates spans for each lifecycle method. In <code>viewWillAppear</code>, we fire off an HTTP request for which a span is added. Our SDKs don’t automatically add spans for querying the database (yet), but I’m interested in how long my query runs. Therefore I have to add a span manually. We can achieve this by using <code>SentrySDK.span</code> to access the current active span and call <code>SentrySDK.span.startChild</code> to create the desired child span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span" title="" src="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With the above transaction, I learn where my bottlenecks in the <code>UIViewController</code> are. The <code>viewDidLoad</code> method looks suspicious because it takes around 70 ms to complete, and I should investigate it. After looking at the code, I realize that I’m doing remarkable I/O on the main thread, which of course, is a no-go, and need to fix it immediately. Moreover, loading some entries from the database takes way longer than the HTTP request to finish, which also looks dubious and requires further investigation. After moving the I/O in <code>viewDidLoad</code> to a background thread and adding an index to speed up my database query, the transaction looks way better now. Of course, the speed of the HTTP request will vary depending on the network conditions, but I cleared out the controllable bottlenecks, which speeds up my transaction from 250ms to around 20ms. This is a huge improvement.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span improvement" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The duration of a transaction can vary greatly because of many circumstances. Stepping through individual transactions doesn’t give you a clear picture to understand if your app gets faster or slows down. Therefore, we provide graphs to explore how the duration of a transaction changes over time. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction duration breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry also offers the possibility to explore slow, fastest, outlier, or recent transactions to find the misery or delight your users experience quickly.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Along with many other possibilities to explore your transactions, Sentry links the related errors captured during a transaction at the bottom of the transaction summary page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="related ios errors" title="" src="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Auto-generated transactions combined with manual transactions unlocks rich data so you can see Mobile Vitals as well as other metrics such as <a href="https://docs.sentry.io/product/performance/metrics/#user-misery">User Misery</a> to give you a complete view into the performance of your application.</p>
<p>To learn more, check out our docs for <a href="https://docs.sentry.io/platforms/apple/performance/instrumentation/automatic-instrumentation/">Apple</a>, <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a>, and <a href="https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/">React-Native</a> and give automatic performance instrumentation on mobile a try. Watch out for beta releases of the <a href="https://github.com/getsentry/sentry-dart">Flutter GitHub</a> repo. We have plans to add these features to Flutter soon.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/50UzSUWSUJjoBTEbzysVtD/4560ee13e22c2a7f55ed22cd5ebf2373/moonlighting2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Mobile Vitals - Four Metrics Every Mobile Developer Should Care About</title>
      <link>https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about/</link>
      <description>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving performance issues can be a struggle and time-consuming.</p>
<p>Most developers use profilers within IDEs like Android Studio or Xcode to hunt for bottlenecks and automated performance tests to catch performance regressions in their code during development. However, testing an application before it ships is not enough.</p>
<p>To catch the most frustrating performance issues, you need to explore what’s happening on your users’ devices. That means visibility into how fast your app starts, duration of HTTP requests, number of slow and frozen frames, how fast your views are loading, and more. With Sentry for Mobile, you can now easily monitor your iOS and Android app’s performance in real-time without additional setup (or accumulating a pile of testing devices).</p>
<h2 id="mobile-vitals"><a href="#mobile-vitals" aria-label="mobile vitals permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Vitals</h2>
<p>We believe there are four metrics every mobile team should track to better understand how their app is performing: Cold starts, warm starts, slow frames, and frozen frames. These four metrics, as a core part of Sentry’s performance monitoring, gives you the details you need to not only prioritize critical performance issues but trace the issue down to the root cause to solve them faster.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="mobile vitals" title="" src="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="measuring-app-start"><a href="#measuring-app-start" aria-label="measuring app start permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Measuring App Start</h2>
<p>When a user taps on your app icon, it should start fast. On iOS, Apple recommends your app take at most 400ms to render the first frame. On Android, the <a href="https://developer.android.com/topic/performance/vitals/launch-time#av">Google Play console</a> warns you when a cold start takes longer than 5 seconds or a warm start longer than 2 seconds. </p>
<ul>
<li><strong>Cold start</strong>: App launched for the first time, after a reboot or update.</li>
<li><strong>Warm start</strong>: App launched at least once and is partially in memory.</li>
</ul>
<p>The exact definitions differ slightly per platform. For more details, so please check out our <a href="https://docs.sentry.io/platforms/apple/guides/ios/performance/instrumentation/automatic-instrumentation/">iOS</a> and <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a> docs.</p>
<p>No matter the platform, it is crucial that your app starts quickly to provide a delightful user experience. That’s why on iOS, Mac Catalyst, tvOS, and Android we track how long your app needs to draw your first frame. We grab this information and add spans for different phases of the app start. Here is an example from iOS:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-app-start" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>On Android, it is trickier to hook into the initialization phases of the app start, and therefore we currently add one span from the application launch to the first auto-generated UI transaction. Still, this information is very useful and can help you to improve the duration of your app start.</p>
<h2 id="slow-and-frozen-frames"><a href="#slow-and-frozen-frames" aria-label="slow and frozen frames permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Slow and Frozen Frames</h2>
<p>Unresponsive UI, animation hitches, or just jank annoy users and degrade the user experience. Two measurements to track this unwanted experience are slow and frozen frames. A phone or tablet typically renders with 60 frames per second (fps). </p>
<p>The frame rate can also be higher, especially as 120 fps displays are becoming more popular. With 60 fps, every frame has 16.67 ms to render. If your app needs more than 16.67 ms for a frame, it is a slow frame. </p>
<p>Frozen frames are UI frames that take longer than 700 ms. An app that is running smoothly should not experience either. That’s why the SDK adds these two measurements to all transactions captured. The detail view of the transaction displays the slow, frozen, and total frames to the right.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-frozen-frames" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Mobile Vitals are a core part of Sentry’s performance monitoring for mobile and unlocks more ways to spot bottlenecks and speed up your apps. </p>
<h2 id="mobile-performance-monitoring"><a href="#mobile-performance-monitoring" aria-label="mobile performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Performance Monitoring</h2>
<p>The purpose of Sentry’s performance monitoring is to track your application’s performance across multiple services. To measure Mobile Vitals, the SDKs capture distributed traces consisting of transactions and spans.</p>
<p>Distributed tracing is a standard technology used for understanding what’s going on across distributed services, but it is still relatively new for mobile applications. A trace represents an operation you want to measure, like signing in or loading a view in your app. Both mentioned operations don’t only involve your app but also backend actions. Each trace consists of one or more transactions, which can contain one or more spans. For example, the trace of a login could then include a transaction of your app and two transactions of your backend services. </p>
<p>Every transaction contains several spans representing a single unit of work, like reading a file or querying the database. The spans have a parent-child relationship, meaning a span can have multiple children and grandchildren. Here’s an example trace, broken down into transactions and spans:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transactions traces and spans" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If you want to dig deeper into these concepts, check out <a href="https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/">Distributed Tracing 101 for Full Stack Developers</a> by our very own, Ben Vinegar, VP of Engineering. For this blog post, let’s focus on transactions and take a look at an example creating a transaction with two child spans in Swift:</p>
<div data-language="swift"><pre><code><span>let</span> transaction <span>=</span> 
	<span>SentrySDK</span><span>.</span><span>startTransaction</span><span>(</span>name<span>:</span> <span>&#34;Load Messages&#34;</span><span>,</span> operation<span>:</span> <span>&#34;ui.load&#34;</span><span>)</span>

<span>let</span> getMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;http&#34;</span><span>,</span> description<span>:</span> <span>&#34;GET /my/api/messages&#34;</span><span>)</span>
<span>getMessages</span><span>(</span><span>)</span>
getMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>let</span> renderMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;ui&#34;</span><span>,</span> description<span>:</span> <span>&#34;Render Messages&#34;</span><span>)</span>
<span>renderMessages</span><span>(</span><span>)</span>
renderMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>// Finishes the transaction and sends it to Sentry</span>
transaction<span>.</span><span>finish</span><span>(</span><span>)</span></code></pre></div>
<p>After running the code we can take a look at the transaction in Sentry:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios transaction" title="" src="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Creating rich transactions manually would require writing a lot of code. That’s why we’ve made things easier with auto instrumentation. You can save yourself the headache of writing and maintaining code while still accessing the performance insights you need.</p>
<h2 id="automatic-instrumentation"><a href="#automatic-instrumentation" aria-label="automatic instrumentation permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Automatic Instrumentation</h2>
<p>The automatic instrumentation lets you explore how long your views take to render, and HTTP requests need to finish. The SDK for Apple generates transactions for UIViewControllers on iOS, tvOS, and Mac Catalyst and creates spans for outgoing HTTP requests on all platforms. The SDK for Android captures transactions for Activities and Fragments and provides an integration for OkHttp. Sentry SDK for React Native can capture transactions automatically when using React Navigation router, and spans for both XHR and fetch requests. In the following months, we are working on adding support for Flutter.</p>
<p>Here is an example of an auto-generated transaction on iOS for a <code>UIViewController</code>. As we can see in the screenshot below, the SDK creates spans for each lifecycle method. In <code>viewWillAppear</code>, we fire off an HTTP request for which a span is added. Our SDKs don’t automatically add spans for querying the database (yet), but I’m interested in how long my query runs. Therefore I have to add a span manually. We can achieve this by using <code>SentrySDK.span</code> to access the current active span and call <code>SentrySDK.span.startChild</code> to create the desired child span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span" title="" src="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With the above transaction, I learn where my bottlenecks in the <code>UIViewController</code> are. The <code>viewDidLoad</code> method looks suspicious because it takes around 70 ms to complete, and I should investigate it. After looking at the code, I realize that I’m doing remarkable I/O on the main thread, which of course, is a no-go, and need to fix it immediately. Moreover, loading some entries from the database takes way longer than the HTTP request to finish, which also looks dubious and requires further investigation. After moving the I/O in <code>viewDidLoad</code> to a background thread and adding an index to speed up my database query, the transaction looks way better now. Of course, the speed of the HTTP request will vary depending on the network conditions, but I cleared out the controllable bottlenecks, which speeds up my transaction from 250ms to around 20ms. This is a huge improvement.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span improvement" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The duration of a transaction can vary greatly because of many circumstances. Stepping through individual transactions doesn’t give you a clear picture to understand if your app gets faster or slows down. Therefore, we provide graphs to explore how the duration of a transaction changes over time. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction duration breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry also offers the possibility to explore slow, fastest, outlier, or recent transactions to find the misery or delight your users experience quickly.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Along with many other possibilities to explore your transactions, Sentry links the related errors captured during a transaction at the bottom of the transaction summary page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="related ios errors" title="" src="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Auto-generated transactions combined with manual transactions unlocks rich data so you can see Mobile Vitals as well as other metrics such as <a href="https://docs.sentry.io/product/performance/metrics/#user-misery">User Misery</a> to give you a complete view into the performance of your application.</p>
<p>To learn more, check out our docs for <a href="https://docs.sentry.io/platforms/apple/performance/instrumentation/automatic-instrumentation/">Apple</a>, <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a>, and <a href="https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/">React-Native</a> and give automatic performance instrumentation on mobile a try. Watch out for beta releases of the <a href="https://github.com/getsentry/sentry-dart">Flutter GitHub</a> repo. We have plans to add these features to Flutter soon.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/50UzSUWSUJjoBTEbzysVtD/4560ee13e22c2a7f55ed22cd5ebf2373/moonlighting2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Mobile Vitals - Four Metrics Every Mobile Developer Should Care About</title>
      <link>https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about/</link>
      <description>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving performance issues can be a struggle and time-consuming.</p>
<p>Most developers use profilers within IDEs like Android Studio or Xcode to hunt for bottlenecks and automated performance tests to catch performance regressions in their code during development. However, testing an application before it ships is not enough.</p>
<p>To catch the most frustrating performance issues, you need to explore what’s happening on your users’ devices. That means visibility into how fast your app starts, duration of HTTP requests, number of slow and frozen frames, how fast your views are loading, and more. With Sentry for Mobile, you can now easily monitor your <a href="https://docs.sentry.io/platforms/react-native/performance/">React Native</a>, <a href="https://docs.sentry.io/platforms/apple/guides/ios/performance/">iOS</a>, and <a href="https://docs.sentry.io/platforms/android/performance/">Android</a> app’s performance in real-time without additional setup (or accumulating a pile of testing devices).</p>
<h2 id="mobile-vitals"><a href="#mobile-vitals" aria-label="mobile vitals permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Vitals</h2>
<p>We believe there are four metrics every mobile team should track to better understand how their app is performing: Cold starts, warm starts, slow frames, and frozen frames. These four metrics, as a core part of Sentry’s performance monitoring, gives you the details you need to not only prioritize critical performance issues but trace the issue down to the root cause to solve them faster.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="mobile vitals" title="" src="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="measuring-app-start"><a href="#measuring-app-start" aria-label="measuring app start permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Measuring App Start</h2>
<p>When a user taps on your app icon, it should start fast. On iOS, Apple recommends your app take at most 400ms to render the first frame. On Android, the <a href="https://developer.android.com/topic/performance/vitals/launch-time#av">Google Play console</a> warns you when a cold start takes longer than 5 seconds or a warm start longer than 2 seconds. </p>
<ul>
<li><strong>Cold start</strong>: App launched for the first time, after a reboot or update.</li>
<li><strong>Warm start</strong>: App launched at least once and is partially in memory.</li>
</ul>
<p>The exact definitions differ slightly per platform. For more details, so please check out our <a href="https://docs.sentry.io/platforms/apple/guides/ios/performance/instrumentation/automatic-instrumentation/">iOS</a> and <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a> docs.</p>
<p>No matter the platform, it is crucial that your app starts quickly to provide a delightful user experience. That’s why on iOS, Mac Catalyst, tvOS, and Android we track how long your app needs to draw your first frame. We grab this information and add spans for different phases of the app start. Here is an example from iOS:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-app-start" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>On Android, it is trickier to hook into the initialization phases of the app start, and therefore we currently add one span from the application launch to the first auto-generated UI transaction. Still, this information is very useful and can help you to improve the duration of your app start.</p>
<h2 id="slow-and-frozen-frames"><a href="#slow-and-frozen-frames" aria-label="slow and frozen frames permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Slow and Frozen Frames</h2>
<p>Unresponsive UI, animation hitches, or just jank annoy users and degrade the user experience. Two measurements to track this unwanted experience are slow and frozen frames. A phone or tablet typically renders with 60 frames per second (fps). </p>
<p>The frame rate can also be higher, especially as 120 fps displays are becoming more popular. With 60 fps, every frame has 16.67 ms to render. If your app needs more than 16.67 ms for a frame, it is a slow frame. </p>
<p>Frozen frames are UI frames that take longer than 700 ms. An app that is running smoothly should not experience either. That’s why the SDK adds these two measurements to all transactions captured. The detail view of the transaction displays the slow, frozen, and total frames to the right.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-frozen-frames" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Mobile Vitals are a core part of Sentry’s performance monitoring for mobile and unlocks more ways to spot bottlenecks and speed up your apps. </p>
<h2 id="mobile-performance-monitoring"><a href="#mobile-performance-monitoring" aria-label="mobile performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Performance Monitoring</h2>
<p>The purpose of Sentry’s performance monitoring is to track your application’s performance across multiple services. To measure Mobile Vitals, the SDKs capture distributed traces consisting of transactions and spans.</p>
<p>Distributed tracing is a standard technology used for understanding what’s going on across distributed services, but it is still relatively new for mobile applications. A trace represents an operation you want to measure, like signing in or loading a view in your app. Both mentioned operations don’t only involve your app but also backend actions. Each trace consists of one or more transactions, which can contain one or more spans. For example, the trace of a login could then include a transaction of your app and two transactions of your backend services. </p>
<p>Every transaction contains several spans representing a single unit of work, like reading a file or querying the database. The spans have a parent-child relationship, meaning a span can have multiple children and grandchildren. Here’s an example trace, broken down into transactions and spans:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transactions traces and spans" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If you want to dig deeper into these concepts, check out <a href="https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/">Distributed Tracing 101 for Full Stack Developers</a> by our very own, Ben Vinegar, VP of Engineering. For this blog post, let’s focus on transactions and take a look at an example creating a transaction with two child spans in Swift:</p>
<div data-language="swift"><pre><code><span>let</span> transaction <span>=</span> 
	<span>SentrySDK</span><span>.</span><span>startTransaction</span><span>(</span>name<span>:</span> <span>&#34;Load Messages&#34;</span><span>,</span> operation<span>:</span> <span>&#34;ui.load&#34;</span><span>)</span>

<span>let</span> getMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;http&#34;</span><span>,</span> description<span>:</span> <span>&#34;GET /my/api/messages&#34;</span><span>)</span>
<span>getMessages</span><span>(</span><span>)</span>
getMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>let</span> renderMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;ui&#34;</span><span>,</span> description<span>:</span> <span>&#34;Render Messages&#34;</span><span>)</span>
<span>renderMessages</span><span>(</span><span>)</span>
renderMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>// Finishes the transaction and sends it to Sentry</span>
transaction<span>.</span><span>finish</span><span>(</span><span>)</span></code></pre></div>
<p>After running the code we can take a look at the transaction in Sentry:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios transaction" title="" src="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Creating rich transactions manually would require writing a lot of code. That’s why we’ve made things easier with auto instrumentation. You can save yourself the headache of writing and maintaining code while still accessing the performance insights you need.</p>
<h2 id="automatic-instrumentation"><a href="#automatic-instrumentation" aria-label="automatic instrumentation permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Automatic Instrumentation</h2>
<p>The automatic instrumentation lets you explore how long your views take to render, and HTTP requests need to finish. The SDK for Apple generates transactions for UIViewControllers on iOS, tvOS, and Mac Catalyst and creates spans for outgoing HTTP requests on all platforms. The SDK for Android captures transactions for Activities and Fragments and provides an integration for OkHttp. Sentry SDK for React Native can capture transactions automatically when using React Navigation router, and spans for both XHR and fetch requests. In the following months, we are working on adding support for Flutter.</p>
<p>Here is an example of an auto-generated transaction on iOS for a <code>UIViewController</code>. As we can see in the screenshot below, the SDK creates spans for each lifecycle method. In <code>viewWillAppear</code>, we fire off an HTTP request for which a span is added. Our SDKs don’t automatically add spans for querying the database (yet), but I’m interested in how long my query runs. Therefore I have to add a span manually. We can achieve this by using <code>SentrySDK.span</code> to access the current active span and call <code>SentrySDK.span.startChild</code> to create the desired child span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span" title="" src="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With the above transaction, I learn where my bottlenecks in the <code>UIViewController</code> are. The <code>viewDidLoad</code> method looks suspicious because it takes around 70 ms to complete, and I should investigate it. After looking at the code, I realize that I’m doing remarkable I/O on the main thread, which of course, is a no-go, and need to fix it immediately. Moreover, loading some entries from the database takes way longer than the HTTP request to finish, which also looks dubious and requires further investigation. After moving the I/O in <code>viewDidLoad</code> to a background thread and adding an index to speed up my database query, the transaction looks way better now. Of course, the speed of the HTTP request will vary depending on the network conditions, but I cleared out the controllable bottlenecks, which speeds up my transaction from 250ms to around 20ms. This is a huge improvement.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span improvement" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The duration of a transaction can vary greatly because of many circumstances. Stepping through individual transactions doesn’t give you a clear picture to understand if your app gets faster or slows down. Therefore, we provide graphs to explore how the duration of a transaction changes over time. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction duration breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry also offers the possibility to explore slow, fastest, outlier, or recent transactions to find the misery or delight your users experience quickly.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Along with many other possibilities to explore your transactions, Sentry links the related errors captured during a transaction at the bottom of the transaction summary page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="related ios errors" title="" src="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Auto-generated transactions combined with manual transactions unlocks rich data so you can see Mobile Vitals as well as other metrics such as <a href="https://docs.sentry.io/product/performance/metrics/#user-misery">User Misery</a> to give you a complete view into the performance of your application.</p>
<p>To learn more, check out our docs for <a href="https://docs.sentry.io/platforms/apple/performance/instrumentation/automatic-instrumentation/">Apple</a>, <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a>, and <a href="https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/">React-Native</a> and give automatic performance instrumentation on mobile a try. Watch out for beta releases of the <a href="https://github.com/getsentry/sentry-dart">Flutter GitHub</a> repo. We have plans to add these features to Flutter soon.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/50UzSUWSUJjoBTEbzysVtD/4560ee13e22c2a7f55ed22cd5ebf2373/moonlighting2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Distributed Tracing 101 for Full Stack Developers</title>
      <link>https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/</link>
      <description>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</em></p>
<p>In the early days of the web, writing web applications was simple. Developers generated HTML on the server using a language like PHP, communicated with a single relational database like MySQL, and most interactivity was driven by static HTML form components. While debugging tools were primitive, understanding the execution flow of your code was straightforward.</p>
<p>In today’s modern web stack it’s anything but. Full stack developers are expected to write JavaScript executing in the browser, interop with multiple database technologies, and deploy server side code on different server architectures (e.g. serverless). Without the right tools, understanding how a user interaction in the browser cascades into a 500 server error deep in your server stack is nigh-impossible. Enter: distributed tracing.</p>
</div><div>
<p><strong>Distributed tracing</strong> is a monitoring technique that links the operations and requests occurring between multiple services. This allows developers to “trace” the path of an end-to-end request as it moves from one service to another, letting them pinpoint errors or performance bottlenecks in individual services that are negatively affecting the overall system.</p>
<p>In this post, we’ll learn more about distributed tracing concepts, go over an end-to-end tracing example in code, and see how to use tracing metadata to add valuable context to your logging and monitoring tools. When we’re done, you’ll not only understand the fundamentals of distributed tracing, but how you can apply tracing techniques to be more effective in debugging your full stack web applications.</p>
<p>But first, let’s go back to the beginning: what’s distributed tracing again?</p>
<h2 id="distributed-tracing-basics"><a href="#distributed-tracing-basics" aria-label="distributed tracing basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Distributed tracing basics</h2>
<p>Distributed tracing is a method of recording the connected operations of multiple services. Typically, these operations are initiated by requests from one service to another, where a “request” could be an actual HTTP request, or work invoked through a task queue or some other asynchronous means.</p>
<p>Traces are composed of two fundamental components:</p>
<ul>
<li>A <strong>span</strong> describes an operation or “work” taking place on a service. Spans can describe broad operations – for example, the operation of a web server responding to an HTTP request – or as granular as a single invocation of a function.</li>
<li>A <strong>trace</strong> describes the end-to-end journey of one or more connected <strong>spans</strong>. A trace is considered to be a <strong>distributed trace</strong> if it connects spans (“work”) performed on multiple services.</li>
</ul>
<p>Let’s take a look at an example of a hypothetical distributed trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451&amp;fm=webp 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901&amp;fm=webp 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802&amp;fm=webp 1802w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802 1802w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The diagram above illustrates how a trace begins in one service – a React application running on the browser – and continues through a call to an API web server, and even further to a background task worker. The spans in this diagram are the work performed within each service, and each span can be “traced” back to the initial work kicked off by the browser application. Lastly, since these operations occur on different services, this trace is considered to be distributed.</p>
<p><em>Aside: Spans that describe broad operations (e.g. the full lifecycle of a web server responding to an HTTP request) are sometimes referred to as <strong>transaction spans</strong> or even just <strong>transactions</strong>. We’ll talk more about transactions vs. spans in Part 2 of this series.</em></p>
<h2 id="trace-and-span-identifiers"><a href="#trace-and-span-identifiers" aria-label="trace and span identifiers permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace and span identifiers</h2>
<p>So far we’ve identified the components of a trace, but we haven’t described how those components are linked together.</p>
<p>First, each trace is uniquely identified with a <strong>trace identifier</strong>. This is done by creating a unique randomly generated value (i.e. a UUID) in the <strong>root span</strong> – the initial operation that kicks off the entire trace. In our example above, the root span occurs in the Browser Application.</p>
<p>Second, each span first needs to be uniquely identified. This is similarly done by creating a unique <strong>span identifier</strong> (or <code>span_id</code>) when the span begins its operation. This <code>span_id</code> creation should occur at every span (or operation) that takes place within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443&amp;fm=webp 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885&amp;fm=webp 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770&amp;fm=webp 1770w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770 1770w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Let’s revisit our hypothetical trace example. In the diagram above, you’ll notice that a trace identifier uniquely identifies the trace, and each span within that trace also possesses a unique span identifier.</p>
<p>Generating <code>trace_id</code> and <code>span_id</code> isn’t enough however. To actually connect these services, your application must propagate what’s known as a <strong>trace context</strong> when making a request from one service to another.</p>
<h2 id="trace-context"><a href="#trace-context" aria-label="trace context permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace context</h2>
<p>The trace context is typically composed of just two values:</p>
<ul>
<li><strong>Trace identifier</strong> (or <code>trace_id</code>): the unique identifier that is generated in the root span intended to identify the entirety of the trace. This is the same trace identifier we introduced in the last section; it is propagated unchanged to every downstream service.</li>
<li><strong>Parent identifier</strong> (or <code>parent_id</code>): the span_id of the “parent” span that spawned the current operation.</li>
</ul>
<p>The diagram below visualizes how a request kicked off in one service propagates the trace context to the next service downstream. You’ll notice that trace_id remains constant, while the parent_id changes between requests, pointing to the parent span that kicked off the latest operation.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922&amp;fm=webp 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844&amp;fm=webp 1844w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844 1844w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With these two values, for any given operation, it is possible to determine the originating (root) service, and to reconstruct all parent/ancestor services in order that led to the current operation.</p>
<h2 id="a-working-example-with-code"><a href="#a-working-example-with-code" aria-label="a working example with code permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A working example with code</h2>
<p>To understand this all better, let’s actually implement a bare-bones tracing implementation, using the example we’ve been returning to, wherein a browser application is the initiator of a series of distributed operations connected by a trace context.</p>
<p>First, the browser application renders a form: for the purposes of this example, an “invite user” form. The form has a submit event handler, which fires when the form is submitted. Let’s consider this submit handler our <strong>root span</strong>, which means that when the handler is invoked, both a <code>trace_id</code> and <code>span_id</code> are generated.</p>
<p>Next, some work is done to gather user-inputted values from the form, then finally a <code>fetch</code> request is made to our web server to the <code>/inviteUser</code> API endpoint. As part of this fetch request, the trace context is passed as two custom HTTP headers: <code>trace-id</code> and <code>parent-id</code> (which is the current span’s  <code>span_id</code>).</p>
<div data-language="javascript"><pre><code><span>// browser app (JavaScript)</span>
<span>import</span> uuid <span>from</span> <span>&#39;uuid&#39;</span><span>;</span>

<span>const</span> traceId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
<span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>

console<span>.</span><span>log</span><span>(</span><span>&#39;Initiate inviteUser POST request&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>

<span>fetch</span><span>(</span><span>&#39;/api/v1/inviteUser?email=&#39;</span> <span>+</span> <span>encodeURIComponent</span><span>(</span>email<span>)</span><span>,</span> <span>{</span>
   method<span>:</span> <span>&#39;POST&#39;</span><span>,</span>
   headers<span>:</span> <span>{</span>
       <span>&#39;trace-id&#39;</span><span>:</span> traceId<span>,</span>
       <span>&#39;parent-id&#39;</span><span>:</span> spanId<span>,</span>
   <span>}</span>
<span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>(</span><span>data</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Success!&#39;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>.</span><span>catch</span><span>(</span><span>(</span><span>err</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Something bad happened&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>Note these are non-standard HTTP headers used for explanatory purposes. There is an active effort to standardize tracing HTTP headers as part of the W3C <a href="https://www.w3.org/TR/trace-context/">traceparent</a> specification, which is still in the “Recommendation” phase.</em> </p>
<p>On the receiving end, the API web server handles the request and extracts the tracing metadata from the HTTP request. It then queues up a job to send an email to the user, and attaches the tracing context as part of a “meta” field in the job description. Last, it returns a response with a 200 status code indicating that the method was successful.</p>
<p>Note that while the server returned a successful response, the actual “work” isn’t done until the background task worker picks up the newly queued job and actually delivers an email.</p>
<p>At some point, the queue processor begins working on the queued email job. Again, the trace and parent identifiers are extracted, just as they were earlier in the web server.</p>
<div data-language="javascript"><pre><code><span>// API Web Server</span>
<span>const</span> Queue <span>=</span> <span>require</span><span>(</span><span>&#39;bull&#39;</span><span>)</span><span>;</span>
<span>const</span> emailQueue <span>=</span> <span>new</span> <span>Queue</span><span>(</span><span>&#39;email&#39;</span><span>)</span><span>;</span>
<span>const</span> uuid <span>=</span> <span>require</span><span>(</span><span>&#39;uuid&#39;</span><span>)</span><span>;</span>

app<span>.</span><span>post</span><span>(</span><span>&#34;/api/v1/inviteUser&#34;</span><span>,</span> <span>(</span><span>req<span>,</span> res</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>,</span>
    traceId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;trace-id&#34;</span><span>]</span><span>,</span>
    parentId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;parent-id&#34;</span><span>]</span><span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Adding job to email queue&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  emailQueue<span>.</span><span>add</span><span>(</span><span>{</span>
    title<span>:</span> <span>&#34;Welcome to our product&#34;</span><span>,</span>
    to<span>:</span> req<span>.</span>params<span>.</span>email<span>,</span>
    meta<span>:</span> <span>{</span>
      traceId<span>:</span> traceId<span>,</span>

      <span>// the downstream span&#39;s parent_id is this span&#39;s span_id</span>
      parentId<span>:</span> spanId<span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>)</span><span>;</span>

  res<span>.</span><span>status</span><span>(</span><span>200</span><span>)</span><span>.</span><span>send</span><span>(</span><span>&#34;ok&#34;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>// Background Task Worker</span>
emailQueue<span>.</span><span>process</span><span>(</span><span>(</span><span>job<span>,</span> done</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
  <span>const</span> <span>{</span> traceId<span>,</span> parentId <span>}</span> <span>=</span> job<span>.</span>data<span>.</span>meta<span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Sending email&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  <span>// actually send the email</span>
  <span>// ...</span>

  <span>done</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>If you’re interested in running this example yourself, you can find the source code on <a href="https://github.com/getsentry/distributed-tracing-examples">GitHub</a>.</em></p>
<h2 id="logging-with-distributed-systems"><a href="#logging-with-distributed-systems" aria-label="logging with distributed systems permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Logging with distributed systems</h2>
<p>You’ll notice that at every stage of our example, a logging call is made using console.log that additionally emits the current <strong>trace, span,</strong> and <strong>parent</strong> identifiers. In a perfect synchronous world – one where each service could log to the same centralized logging tool – each of these logging statements would appear sequentially:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210&amp;fm=webp 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838&amp;fm=webp 838w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838 838w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If an exception or errant behavior occurred during the course of these operations, it would be relatively trivial to use these or additional logging statements to pinpoint a source. But the unfortunate reality is that these are <em>distributed services</em>, which means:</p>
<ul>
<li><strong>Web servers typically handle many concurrent requests.</strong> The web server may be performing work (and emitting logging statements) attributed to other requests.</li>
<li><strong>Network latency can cloud the order of operations.</strong> Requests made from upstream services might not reach their destination in the same order they were fired.</li>
<li><strong>Background workers may have queued jobs.</strong> Workers may have to first work through earlier queued jobs before reaching the exact job queued up in this trace.</li>
</ul>
<p>In a more realistic example, our logging calls might look something like this, which reflects multiple operations occurring concurrently:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209&amp;fm=webp 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837&amp;fm=webp 837w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837 837w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Without tracing metadata, understanding the topology of which action invoked which action would be impossible. But by emitting tracing meta information at every logging call, it’s possible to quickly filter on all logging calls within a trace by filtering on <code>traceId</code>, and to reconstruct the exact order by examining <code>spanId</code> and <code>parentId</code> relationships.</p>
<p>This is the power of distributed tracing: by attaching metadata describing the current operation (span id), the parent operation that spawned it (parent id), and the trace identifier (trace id), we can augment logging and telemetry data to better understand the exact sequence of events occurring in your distributed services.</p>
<h2 id="tracing-in-the-real-world"><a href="#tracing-in-the-real-world" aria-label="tracing in the real world permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tracing in the real world</h2>
<p>Over the course of this article, we have been working with a somewhat contrived example. In a real distributed tracing environment, you wouldn’t generate and pass all your span and tracing identifiers manually. Nor would you rely on <code>console.log</code> (or other logging) calls to emit your tracing metadata yourself. You would use proper tracing libraries to handle the instrumentation and emitting of tracing data for you.</p>
<h2 id="opentelemetry"><a href="#opentelemetry" aria-label="opentelemetry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>OpenTelemetry</h2>
<p><a href="https://opentelemetry.io/">OpenTelemetry</a> is a collection of open source tools, APIs, and SDKs for instrumenting, generating, and exporting telemetry data from running software. It provides language-specific implementations for most popular programming languages, including both browser <a href="https://github.com/open-telemetry/opentelemetry-js">JavaScript and Node.js</a>.</p>
<h2 id="sentry"><a href="#sentry" aria-label="sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry</h2>
<p><a href="https://sentry.io">Sentry</a> is an open source application monitoring product that helps you identify errors and performance bottlenecks in your code. It provides client libraries in every major programming language which instrument your software’s code to capture both error data and tracing telemetry.</p>
<p>Sentry uses this telemetry in a number of ways. For example, Sentry’s <a href="https://sentry.io/for/performance/">Performance Monitoring</a> feature set uses tracing data to generate waterfall diagrams that illustrate the end-to-end latency of your distributed services’ operations within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry additionally uses tracing metadata to augment its Error Monitoring capabilities to understand how an error triggered in one service (e.g. server backend) can propagate to an error in another service (e.g. frontend).</p>
<p>You can learn more about <a href="https://sentry.io/features/distributed-tracing/">Sentry and distributed tracing here</a>.</p>
<h2 id="next-span-trees-opentelemetry-and-sentry"><a href="#next-span-trees-opentelemetry-and-sentry" aria-label="next span trees opentelemetry and sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next: Span trees, OpenTelemetry, and Sentry</h2>
<p>Congratulations: you’ve graduated from part 1 of our series on distributed tracing for full stack developers. At this point you should understand what a trace is, how trace information is propagated through services via tracing context, and how trace context can be used to connect logging statements between multiple distributed services.</p>
<p>Stay tuned for the next post in this series, where we’ll expand on the OpenTelemetry set of tracing tools, and take a further dive into how Sentry incorporates tracing context to augment error and performance monitoring telemetry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3eypAaYgkGx1UcxtcLenNI/e8198055602f3c9d68d97d050143acb9/Tracing2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Distributed Tracing 101 for Full Stack Developers</title>
      <link>https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/</link>
      <description>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</em></p>
<p>In the early days of the web, writing web applications was simple. Developers generated HTML on the server using a language like PHP, communicated with a single relational database like MySQL, and most interactivity was driven by static HTML form components. While debugging tools were primitive, understanding the execution flow of your code was straightforward.</p>
<p>In today’s modern web stack it’s anything but. Full stack developers are expected to write JavaScript executing in the browser, interop with multiple database technologies, and deploy server side code on different server architectures (e.g. serverless). Without the right tools, understanding how a user interaction in the browser cascades into a 500 server error deep in your server stack is nigh-impossible. Enter: distributed tracing.</p>
</div><div>
<p><strong>Distributed tracing</strong> is a monitoring technique that links the operations and requests occurring between multiple services. This allows developers to “trace” the path of an end-to-end request as it moves from one service to another, letting them pinpoint errors or performance bottlenecks in individual services that are negatively affecting the overall system.</p>
<p>In this post, we’ll learn more about distributed tracing concepts, go over an end-to-end tracing example in code, and see how to use tracing metadata to add valuable context to your logging and monitoring tools. When we’re done, you’ll not only understand the fundamentals of distributed tracing, but how you can apply tracing techniques to be more effective in debugging your full stack web applications.</p>
<p>But first, let’s go back to the beginning: what’s distributed tracing again?</p>
<h2 id="distributed-tracing-basics"><a href="#distributed-tracing-basics" aria-label="distributed tracing basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Distributed tracing basics</h2>
<p>Distributed tracing is a method of recording the connected operations of multiple services. Typically, these operations are initiated by requests from one service to another, where a “request” could be an actual HTTP request, or work invoked through a task queue or some other asynchronous means.</p>
<p>Traces are composed of two fundamental components:</p>
<ul>
<li>A <strong>span</strong> describes an operation or “work” taking place on a service. Spans can describe broad operations – for example, the operation of a web server responding to an HTTP request – or as granular as a single invocation of a function.</li>
<li>A <strong>trace</strong> describes the end-to-end journey of one or more connected <strong>spans</strong>. A trace is considered to be a <strong>distributed trace</strong> if it connects spans (“work”) performed on multiple services.</li>
</ul>
<p>Let’s take a look at an example of a hypothetical distributed trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451&amp;fm=webp 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901&amp;fm=webp 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802&amp;fm=webp 1802w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802 1802w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The diagram above illustrates how a trace begins in one service – a React application running on the browser – and continues through a call to an API web server, and even further to a background task worker. The spans in this diagram are the work performed within each service, and each span can be “traced” back to the initial work kicked off by the browser application. Lastly, since these operations occur on different services, this trace is considered to be distributed.</p>
<p><em>Aside: Spans that describe broad operations (e.g. the full lifecycle of a web server responding to an HTTP request) are sometimes referred to as <strong>transaction spans</strong> or even just <strong>transactions</strong>. We’ll talk more about transactions vs. spans in Part 2 of this series.</em></p>
<h2 id="trace-and-span-identifiers"><a href="#trace-and-span-identifiers" aria-label="trace and span identifiers permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace and span identifiers</h2>
<p>So far we’ve identified the components of a trace, but we haven’t described how those components are linked together.</p>
<p>First, each trace is uniquely identified with a <strong>trace identifier</strong>. This is done by creating a unique randomly generated value (i.e. a UUID) in the <strong>root span</strong> – the initial operation that kicks off the entire trace. In our example above, the root span occurs in the Browser Application.</p>
<p>Second, each span first needs to be uniquely identified. This is similarly done by creating a unique <strong>span identifier</strong> (or <code>span_id</code>) when the span begins its operation. This <code>span_id</code> creation should occur at every span (or operation) that takes place within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443&amp;fm=webp 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885&amp;fm=webp 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770&amp;fm=webp 1770w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770 1770w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Let’s revisit our hypothetical trace example. In the diagram above, you’ll notice that a trace identifier uniquely identifies the trace, and each span within that trace also possesses a unique span identifier.</p>
<p>Generating <code>trace_id</code> and <code>span_id</code> isn’t enough however. To actually connect these services, your application must propagate what’s known as a <strong>trace context</strong> when making a request from one service to another.</p>
<h2 id="trace-context"><a href="#trace-context" aria-label="trace context permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace context</h2>
<p>The trace context is typically composed of just two values:</p>
<ul>
<li><strong>Trace identifier</strong> (or <code>trace_id</code>): the unique identifier that is generated in the root span intended to identify the entirety of the trace. This is the same trace identifier we introduced in the last section; it is propagated unchanged to every downstream service.</li>
<li><strong>Parent identifier</strong> (or <code>parent_id</code>): the span_id of the “parent” span that spawned the current operation.</li>
</ul>
<p>The diagram below visualizes how a request kicked off in one service propagates the trace context to the next service downstream. You’ll notice that trace_id remains constant, while the parent_id changes between requests, pointing to the parent span that kicked off the latest operation.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922&amp;fm=webp 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844&amp;fm=webp 1844w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844 1844w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With these two values, for any given operation, it is possible to determine the originating (root) service, and to reconstruct all parent/ancestor services in order that led to the current operation.</p>
<h2 id="a-working-example-with-code"><a href="#a-working-example-with-code" aria-label="a working example with code permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A working example with code</h2>
<p>To understand this all better, let’s actually implement a bare-bones tracing implementation, using the example we’ve been returning to, wherein a browser application is the initiator of a series of distributed operations connected by a trace context.</p>
<p>First, the browser application renders a form: for the purposes of this example, an “invite user” form. The form has a submit event handler, which fires when the form is submitted. Let’s consider this submit handler our <strong>root span</strong>, which means that when the handler is invoked, both a <code>trace_id</code> and <code>span_id</code> are generated.</p>
<p>Next, some work is done to gather user-inputted values from the form, then finally a <code>fetch</code> request is made to our web server to the <code>/inviteUser</code> API endpoint. As part of this fetch request, the trace context is passed as two custom HTTP headers: <code>trace-id</code> and <code>parent-id</code> (which is the current span’s  <code>span_id</code>).</p>
<div data-language="javascript"><pre><code><span>// browser app (JavaScript)</span>
<span>import</span> uuid <span>from</span> <span>&#39;uuid&#39;</span><span>;</span>

<span>const</span> traceId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
<span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>

console<span>.</span><span>log</span><span>(</span><span>&#39;Initiate inviteUser POST request&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>

<span>fetch</span><span>(</span><span>&#39;/api/v1/inviteUser?email=&#39;</span> <span>+</span> <span>encodeURIComponent</span><span>(</span>email<span>)</span><span>,</span> <span>{</span>
   method<span>:</span> <span>&#39;POST&#39;</span><span>,</span>
   headers<span>:</span> <span>{</span>
       <span>&#39;trace-id&#39;</span><span>:</span> traceId<span>,</span>
       <span>&#39;parent-id&#39;</span><span>:</span> spanId<span>,</span>
   <span>}</span>
<span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>(</span><span>data</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Success!&#39;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>.</span><span>catch</span><span>(</span><span>(</span><span>err</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Something bad happened&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>Note these are non-standard HTTP headers used for explanatory purposes. There is an active effort to standardize tracing HTTP headers as part of the W3C <a href="https://www.w3.org/TR/trace-context/">traceparent</a> specification, which is still in the “Recommendation” phase.</em> </p>
<p>On the receiving end, the API web server handles the request and extracts the tracing metadata from the HTTP request. It then queues up a job to send an email to the user, and attaches the tracing context as part of a “meta” field in the job description. Last, it returns a response with a 200 status code indicating that the method was successful.</p>
<p>Note that while the server returned a successful response, the actual “work” isn’t done until the background task worker picks up the newly queued job and actually delivers an email.</p>
<p>At some point, the queue processor begins working on the queued email job. Again, the trace and parent identifiers are extracted, just as they were earlier in the web server.</p>
<div data-language="javascript"><pre><code><span>// API Web Server</span>
<span>const</span> Queue <span>=</span> <span>require</span><span>(</span><span>&#39;bull&#39;</span><span>)</span><span>;</span>
<span>const</span> emailQueue <span>=</span> <span>new</span> <span>Queue</span><span>(</span><span>&#39;email&#39;</span><span>)</span><span>;</span>
<span>const</span> uuid <span>=</span> <span>require</span><span>(</span><span>&#39;uuid&#39;</span><span>)</span><span>;</span>

app<span>.</span><span>post</span><span>(</span><span>&#34;/api/v1/inviteUser&#34;</span><span>,</span> <span>(</span><span>req<span>,</span> res</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>,</span>
    traceId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;trace-id&#34;</span><span>]</span><span>,</span>
    parentId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;parent-id&#34;</span><span>]</span><span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Adding job to email queue&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  emailQueue<span>.</span><span>add</span><span>(</span><span>{</span>
    title<span>:</span> <span>&#34;Welcome to our product&#34;</span><span>,</span>
    to<span>:</span> req<span>.</span>params<span>.</span>email<span>,</span>
    meta<span>:</span> <span>{</span>
      traceId<span>:</span> traceId<span>,</span>

      <span>// the downstream span&#39;s parent_id is this span&#39;s span_id</span>
      parentId<span>:</span> spanId<span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>)</span><span>;</span>

  res<span>.</span><span>status</span><span>(</span><span>200</span><span>)</span><span>.</span><span>send</span><span>(</span><span>&#34;ok&#34;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>// Background Task Worker</span>
emailQueue<span>.</span><span>process</span><span>(</span><span>(</span><span>job<span>,</span> done</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
  <span>const</span> <span>{</span> traceId<span>,</span> parentId <span>}</span> <span>=</span> job<span>.</span>data<span>.</span>meta<span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Sending email&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  <span>// actually send the email</span>
  <span>// ...</span>

  <span>done</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>If you’re interested in running this example yourself, you can find the source code on <a href="https://github.com/getsentry/distributed-tracing-examples">GitHub</a>.</em></p>
<h2 id="logging-with-distributed-systems"><a href="#logging-with-distributed-systems" aria-label="logging with distributed systems permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Logging with distributed systems</h2>
<p>You’ll notice that at every stage of our example, a logging call is made using console.log that additionally emits the current <strong>trace, span,</strong> and <strong>parent</strong> identifiers. In a perfect synchronous world – one where each service could log to the same centralized logging tool – each of these logging statements would appear sequentially:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210&amp;fm=webp 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838&amp;fm=webp 838w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838 838w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If an exception or errant behavior occurred during the course of these operations, it would be relatively trivial to use these or additional logging statements to pinpoint a source. But the unfortunate reality is that these are <em>distributed services</em>, which means:</p>
<ul>
<li><strong>Web servers typically handle many concurrent requests.</strong> The web server may be performing work (and emitting logging statements) attributed to other requests.</li>
<li><strong>Network latency can cloud the order of operations.</strong> Requests made from upstream services might not reach their destination in the same order they were fired.</li>
<li><strong>Background workers may have queued jobs.</strong> Workers may have to first work through earlier queued jobs before reaching the exact job queued up in this trace.</li>
</ul>
<p>In a more realistic example, our logging calls might look something like this, which reflects multiple operations occurring concurrently:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209&amp;fm=webp 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837&amp;fm=webp 837w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837 837w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Without tracing metadata, understanding the topology of which action invoked which action would be impossible. But by emitting tracing meta information at every logging call, it’s possible to quickly filter on all logging calls within a trace by filtering on <code>traceId</code>, and to reconstruct the exact order by examining <code>spanId</code> and <code>parentId</code> relationships.</p>
<p>This is the power of distributed tracing: by attaching metadata describing the current operation (span id), the parent operation that spawned it (parent id), and the trace identifier (trace id), we can augment logging and telemetry data to better understand the exact sequence of events occurring in your distributed services.</p>
<h2 id="tracing-in-the-real-world"><a href="#tracing-in-the-real-world" aria-label="tracing in the real world permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tracing in the real world</h2>
<p>Over the course of this article, we have been working with a somewhat contrived example. In a real distributed tracing environment, you wouldn’t generate and pass all your span and tracing identifiers manually. Nor would you rely on <code>console.log</code> (or other logging) calls to emit your tracing metadata yourself. You would use proper tracing libraries to handle the instrumentation and emitting of tracing data for you.</p>
<h2 id="opentelemetry"><a href="#opentelemetry" aria-label="opentelemetry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>OpenTelemetry</h2>
<p><a href="https://opentelemetry.io/">OpenTelemetry</a> is a collection of open source tools, APIs, and SDKs for instrumenting, generating, and exporting telemetry data from running software. It provides language-specific implementations for most popular programming languages, including both browser <a href="https://github.com/open-telemetry/opentelemetry-js">JavaScript and Node.js</a>.</p>
<h2 id="sentry"><a href="#sentry" aria-label="sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry</h2>
<p><a href="https://sentry.io">Sentry</a> is an open source application monitoring product that helps you identify errors and performance bottlenecks in your code. It provides client libraries in every major programming language which instrument your software’s code to capture both error data and tracing telemetry.</p>
<p>Sentry uses this telemetry in a number of ways. For example, Sentry’s <a href="https://sentry.io/for/performance/">Performance Monitoring</a> feature set uses tracing data to generate waterfall diagrams that illustrate the end-to-end latency of your distributed services’ operations within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry additionally uses tracing metadata to augment its Error Monitoring capabilities to understand how an error triggered in one service (e.g. server backend) can propagate to an error in another service (e.g. frontend).</p>
<p>You can learn more about <a href="https://sentry.io/features/distributed-tracing/">Sentry and distributed tracing here</a>.</p>
<h2 id="next-span-trees-opentelemetry-and-sentry"><a href="#next-span-trees-opentelemetry-and-sentry" aria-label="next span trees opentelemetry and sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next: Span trees, OpenTelemetry, and Sentry</h2>
<p>Congratulations: you’ve graduated from part 1 of our series on distributed tracing for full stack developers. At this point you should understand what a trace is, how trace information is propagated through services via tracing context, and how trace context can be used to connect logging statements between multiple distributed services.</p>
<p>Stay tuned for the next post in this series, where we’ll expand on the OpenTelemetry set of tracing tools, and take a further dive into how Sentry incorporates tracing context to augment error and performance monitoring telemetry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3eypAaYgkGx1UcxtcLenNI/e8198055602f3c9d68d97d050143acb9/Tracing2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Distributed Tracing 101 for Full Stack Developers</title>
      <link>https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/</link>
      <description>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</em></p>
<p>In the early days of the web, writing web applications was simple. Developers generated HTML on the server using a language like PHP, communicated with a single relational database like MySQL, and most interactivity was driven by static HTML form components. While debugging tools were primitive, understanding the execution flow of your code was straightforward.</p>
<p>In today’s modern web stack it’s anything but. Full stack developers are expected to write JavaScript executing in the browser, interop with multiple database technologies, and deploy server side code on different server architectures (e.g. serverless). Without the right tools, understanding how a user interaction in the browser cascades into a 500 server error deep in your server stack is nigh-impossible. Enter: distributed tracing.</p>
<p><strong>Distributed tracing</strong> is a monitoring technique that links the operations and requests occurring between multiple services. This allows developers to “trace” the path of an end-to-end request as it moves from one service to another, letting them pinpoint errors or performance bottlenecks in individual services that are negatively affecting the overall system.</p>
<p>In this post, we’ll learn more about distributed tracing concepts, go over an end-to-end tracing example in code, and see how to use tracing metadata to add valuable context to your logging and monitoring tools. When we’re done, you’ll not only understand the fundamentals of distributed tracing, but how you can apply tracing techniques to be more effective in debugging your full stack web applications.</p>
<p>But first, let’s go back to the beginning: what’s distributed tracing again?</p>
<h2 id="distributed-tracing-basics"><a href="#distributed-tracing-basics" aria-label="distributed tracing basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Distributed tracing basics</h2>
<p>Distributed tracing is a method of recording the connected operations of multiple services. Typically, these operations are initiated by requests from one service to another, where a “request” could be an actual HTTP request, or work invoked through a task queue or some other asynchronous means.</p>
<p>Traces are composed of two fundamental components:</p>
<ul>
<li>A <strong>span</strong> describes an operation or “work” taking place on a service. Spans can describe broad operations – for example, the operation of a web server responding to an HTTP request – or as granular as a single invocation of a function.</li>
<li>A <strong>trace</strong> describes the end-to-end journey of one or more connected <strong>spans</strong>. A trace is considered to be a <strong>distributed trace</strong> if it connects spans (“work”) performed on multiple services.</li>
</ul>
<p>Let’s take a look at an example of a hypothetical distributed trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451&amp;fm=webp 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901&amp;fm=webp 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802&amp;fm=webp 1802w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802 1802w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The diagram above illustrates how a trace begins in one service – a React application running on the browser – and continues through a call to an API web server, and even further to a background task worker. The spans in this diagram are the work performed within each service, and each span can be “traced” back to the initial work kicked off by the browser application. Lastly, since these operations occur on different services, this trace is considered to be distributed.</p>
<p><em>Aside: Spans that describe broad operations (e.g. the full lifecycle of a web server responding to an HTTP request) are sometimes referred to as <strong>transaction spans</strong> or even just <strong>transactions</strong>. We’ll talk more about transactions vs. spans in Part 2 of this series.</em></p>
<h2 id="trace-and-span-identifiers"><a href="#trace-and-span-identifiers" aria-label="trace and span identifiers permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace and span identifiers</h2>
<p>So far we’ve identified the components of a trace, but we haven’t described how those components are linked together.</p>
<p>First, each trace is uniquely identified with a <strong>trace identifier</strong>. This is done by creating a unique randomly generated value (i.e. a UUID) in the <strong>root span</strong> – the initial operation that kicks off the entire trace. In our example above, the root span occurs in the Browser Application.</p>
<p>Second, each span first needs to be uniquely identified. This is similarly done by creating a unique <strong>span identifier</strong> (or <code>span_id</code>) when the span begins its operation. This <code>span_id</code> creation should occur at every span (or operation) that takes place within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443&amp;fm=webp 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885&amp;fm=webp 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770&amp;fm=webp 1770w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770 1770w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Let’s revisit our hypothetical trace example. In the diagram above, you’ll notice that a trace identifier uniquely identifies the trace, and each span within that trace also possesses a unique span identifier.</p>
<p>Generating <code>trace_id</code> and <code>span_id</code> isn’t enough however. To actually connect these services, your application must propagate what’s known as a <strong>trace context</strong> when making a request from one service to another.</p>
<h2 id="trace-context"><a href="#trace-context" aria-label="trace context permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace context</h2>
<p>The trace context is typically composed of just two values:</p>
<ul>
<li><strong>Trace identifier</strong> (or <code>trace_id</code>): the unique identifier that is generated in the root span intended to identify the entirety of the trace. This is the same trace identifier we introduced in the last section; it is propagated unchanged to every downstream service.</li>
<li><strong>Parent identifier</strong> (or <code>parent_id</code>): the span_id of the “parent” span that spawned the current operation.</li>
</ul>
<p>The diagram below visualizes how a request kicked off in one service propagates the trace context to the next service downstream. You’ll notice that trace_id remains constant, while the parent_id changes between requests, pointing to the parent span that kicked off the latest operation.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922&amp;fm=webp 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844&amp;fm=webp 1844w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844 1844w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With these two values, for any given operation, it is possible to determine the originating (root) service, and to reconstruct all parent/ancestor services in order that led to the current operation.</p>
<h2 id="a-working-example-with-code"><a href="#a-working-example-with-code" aria-label="a working example with code permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A working example with code</h2>
<p>To understand this all better, let’s actually implement a bare-bones tracing implementation, using the example we’ve been returning to, wherein a browser application is the initiator of a series of distributed operations connected by a trace context.</p>
<p>First, the browser application renders a form: for the purposes of this example, an “invite user” form. The form has a submit event handler, which fires when the form is submitted. Let’s consider this submit handler our <strong>root span</strong>, which means that when the handler is invoked, both a <code>trace_id</code> and <code>span_id</code> are generated.</p>
<p>Next, some work is done to gather user-inputted values from the form, then finally a <code>fetch</code> request is made to our web server to the <code>/inviteUser</code> API endpoint. As part of this fetch request, the trace context is passed as two custom HTTP headers: <code>trace-id</code> and <code>parent-id</code> (which is the current span’s  <code>span_id</code>).</p>
<div data-language="javascript"><pre><code><span>// browser app (JavaScript)</span>
<span>import</span> uuid <span>from</span> <span>&#39;uuid&#39;</span><span>;</span>

<span>const</span> traceId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
<span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>

console<span>.</span><span>log</span><span>(</span><span>&#39;Initiate inviteUser POST request&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>

<span>fetch</span><span>(</span><span>&#39;/api/v1/inviteUser?email=&#39;</span> <span>+</span> <span>encodeURIComponent</span><span>(</span>email<span>)</span><span>,</span> <span>{</span>
   method<span>:</span> <span>&#39;POST&#39;</span><span>,</span>
   headers<span>:</span> <span>{</span>
       <span>&#39;trace-id&#39;</span><span>:</span> traceId<span>,</span>
       <span>&#39;parent-id&#39;</span><span>:</span> spanId<span>,</span>
   <span>}</span>
<span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>(</span><span>data</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Success!&#39;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>.</span><span>catch</span><span>(</span><span>(</span><span>err</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Something bad happened&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>Note these are non-standard HTTP headers used for explanatory purposes. There is an active effort to standardize tracing HTTP headers as part of the W3C <a href="https://www.w3.org/TR/trace-context/">traceparent</a> specification, which is still in the “Recommendation” phase.</em> </p>
<p>On the receiving end, the API web server handles the request and extracts the tracing metadata from the HTTP request. It then queues up a job to send an email to the user, and attaches the tracing context as part of a “meta” field in the job description. Last, it returns a response with a 200 status code indicating that the method was successful.</p>
<p>Note that while the server returned a successful response, the actual “work” isn’t done until the background task worker picks up the newly queued job and actually delivers an email.</p>
<p>At some point, the queue processor begins working on the queued email job. Again, the trace and parent identifiers are extracted, just as they were earlier in the web server.</p>
<div data-language="javascript"><pre><code><span>// API Web Server</span>
<span>const</span> Queue <span>=</span> <span>require</span><span>(</span><span>&#39;bull&#39;</span><span>)</span><span>;</span>
<span>const</span> emailQueue <span>=</span> <span>new</span> <span>Queue</span><span>(</span><span>&#39;email&#39;</span><span>)</span><span>;</span>
<span>const</span> uuid <span>=</span> <span>require</span><span>(</span><span>&#39;uuid&#39;</span><span>)</span><span>;</span>

app<span>.</span><span>post</span><span>(</span><span>&#34;/api/v1/inviteUser&#34;</span><span>,</span> <span>(</span><span>req<span>,</span> res</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>,</span>
    traceId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;trace-id&#34;</span><span>]</span><span>,</span>
    parentId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;parent-id&#34;</span><span>]</span><span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Adding job to email queue&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  emailQueue<span>.</span><span>add</span><span>(</span><span>{</span>
    title<span>:</span> <span>&#34;Welcome to our product&#34;</span><span>,</span>
    to<span>:</span> req<span>.</span>params<span>.</span>email<span>,</span>
    meta<span>:</span> <span>{</span>
      traceId<span>:</span> traceId<span>,</span>

      <span>// the downstream span&#39;s parent_id is this span&#39;s span_id</span>
      parentId<span>:</span> spanId<span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>)</span><span>;</span>

  res<span>.</span><span>status</span><span>(</span><span>200</span><span>)</span><span>.</span><span>send</span><span>(</span><span>&#34;ok&#34;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>// Background Task Worker</span>
emailQueue<span>.</span><span>process</span><span>(</span><span>(</span><span>job<span>,</span> done</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
  <span>const</span> <span>{</span> traceId<span>,</span> parentId <span>}</span> <span>=</span> job<span>.</span>data<span>.</span>meta<span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Sending email&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  <span>// actually send the email</span>
  <span>// ...</span>

  <span>done</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>If you’re interested in running this example yourself, you can find the source code on <a href="https://github.com/getsentry/distributed-tracing-examples">GitHub</a>.</em></p>
<h2 id="logging-with-distributed-systems"><a href="#logging-with-distributed-systems" aria-label="logging with distributed systems permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Logging with distributed systems</h2>
<p>You’ll notice that at every stage of our example, a logging call is made using console.log that additionally emits the current <strong>trace, span,</strong> and <strong>parent</strong> identifiers. In a perfect synchronous world – one where each service could log to the same centralized logging tool – each of these logging statements would appear sequentially:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210&amp;fm=webp 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838&amp;fm=webp 838w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838 838w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If an exception or errant behavior occurred during the course of these operations, it would be relatively trivial to use these or additional logging statements to pinpoint a source. But the unfortunate reality is that these are <em>distributed services</em>, which means:</p>
<ul>
<li><strong>Web servers typically handle many concurrent requests.</strong> The web server may be performing work (and emitting logging statements) attributed to other requests.</li>
<li><strong>Network latency can cloud the order of operations.</strong> Requests made from upstream services might not reach their destination in the same order they were fired.</li>
<li><strong>Background workers may have queued jobs.</strong> Workers may have to first work through earlier queued jobs before reaching the exact job queued up in this trace.</li>
</ul>
<p>In a more realistic example, our logging calls might look something like this, which reflects multiple operations occurring concurrently:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209&amp;fm=webp 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837&amp;fm=webp 837w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837 837w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Without tracing metadata, understanding the topology of which action invoked which action would be impossible. But by emitting tracing meta information at every logging call, it’s possible to quickly filter on all logging calls within a trace by filtering on <code>traceId</code>, and to reconstruct the exact order by examining <code>spanId</code> and <code>parentId</code> relationships.</p>
<p>This is the power of distributed tracing: by attaching metadata describing the current operation (span id), the parent operation that spawned it (parent id), and the trace identifier (trace id), we can augment logging and telemetry data to better understand the exact sequence of events occurring in your distributed services.</p>
<h2 id="tracing-in-the-real-world"><a href="#tracing-in-the-real-world" aria-label="tracing in the real world permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tracing in the real world</h2>
<p>Over the course of this article, we have been working with a somewhat contrived example. In a real distributed tracing environment, you wouldn’t generate and pass all your span and tracing identifiers manually. Nor would you rely on <code>console.log</code> (or other logging) calls to emit your tracing metadata yourself. You would use proper tracing libraries to handle the instrumentation and emitting of tracing data for you.</p>
<h2 id="opentelemetry"><a href="#opentelemetry" aria-label="opentelemetry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>OpenTelemetry</h2>
<p><a href="https://opentelemetry.io/">OpenTelemetry</a> is a collection of open source tools, APIs, and SDKs for instrumenting, generating, and exporting telemetry data from running software. It provides language-specific implementations for most popular programming languages, including both browser <a href="https://github.com/open-telemetry/opentelemetry-js">JavaScript and Node.js</a>.</p>
<h2 id="sentry"><a href="#sentry" aria-label="sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry</h2>
<p><a href="https://sentry.io">Sentry</a> is an open source application monitoring product that helps you identify errors and performance bottlenecks in your code. It provides client libraries in every major programming language which instrument your software’s code to capture both error data and tracing telemetry.</p>
<p>Sentry uses this telemetry in a number of ways. For example, Sentry’s <a href="https://sentry.io/for/performance/">Performance Monitoring</a> feature set uses tracing data to generate waterfall diagrams that illustrate the end-to-end latency of your distributed services’ operations within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry additionally uses tracing metadata to augment its Error Monitoring capabilities to understand how an error triggered in one service (e.g. server backend) can propagate to an error in another service (e.g. frontend).</p>
<p>You can learn more about <a href="https://sentry.io/features/distributed-tracing/">Sentry and distributed tracing here</a>.</p>
<h2 id="next-span-trees-opentelemetry-and-sentry"><a href="#next-span-trees-opentelemetry-and-sentry" aria-label="next span trees opentelemetry and sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next: Span trees, OpenTelemetry, and Sentry</h2>
<p>Congratulations: you’ve graduated from part 1 of our series on distributed tracing for full stack developers. At this point you should understand what a trace is, how trace information is propagated through services via tracing context, and how trace context can be used to connect logging statements between multiple distributed services.</p>
<p>Stay tuned for the next post in this series, where we’ll expand on the OpenTelemetry set of tracing tools, and take a further dive into how Sentry incorporates tracing context to augment error and performance monitoring telemetry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3eypAaYgkGx1UcxtcLenNI/e8198055602f3c9d68d97d050143acb9/Tracing2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Troubleshooting Feature Flags with Komodor and Sentry</title>
      <link>https://blog.sentry.io/2021/08/10/guest-post-troubleshooting-feature-flags-with-komodor-and-sentry/</link>
      <description>Mickael Alliel is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/mickaelalliel/">Mickael Alliel</a> is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the next-gen K8s troubleshooting platform at <a href="https://komodor.com/">Komodor</a>, and doubling as a French cuisine connoisseur.</em></p>
<h2 id="meet-komodor"><a href="#meet-komodor" aria-label="meet komodor permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Meet Komodor</h2>
<p>Komodor is a Kubernetes-native platform we’ve created to streamline troubleshooting. It was born out of frustrations we felt as developers, when we were required to waste hours of our time on troubleshooting, instead of focusing on what we really wanted to do - creating and innovating. </p>
<p>Komodor sits on top of your K8s cluster and integrates with every existing tool you have, be it CI/CD, repo, monitoring, alerting, or communication. All K8s changes and changes from every integration are consolidated into a single timeline view. Developers can also see how related services are impacted by changes in your K8s cluster by stacking timelines on top of each other. </p>
<p>With the help of these and many other features, Komodor and its Sentry integration help dev teams move fast and deploy with confidence, knowing that if something breaks they can always fix things quickly on their own, without skipping a beat. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="1-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="integrating-komodor-with-sentry"><a href="#integrating-komodor-with-sentry" aria-label="integrating komodor with sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Integrating Komodor with Sentry</h3>
<ol>
<li>It all starts with our Integrations tab - click Install on the Sentry tile.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118&amp;fm=webp 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236&amp;fm=webp 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471&amp;fm=webp 471w" sizes="(max-width: 471px) 100vw, 471px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471 471w" sizes="(max-width: 471px) 100vw, 471px"/>
          <img alt="2-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ol start="2">
<li>You will be prompted with step-by-step instructions on how to finish the installation properly on your Sentry account.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155&amp;fm=webp 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310&amp;fm=webp 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619&amp;fm=webp 619w" sizes="(max-width: 619px) 100vw, 619px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619 619w" sizes="(max-width: 619px) 100vw, 619px"/>
          <img alt="3-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ul>
<li>Go to the Sentry Settings in your account (you will be required to have admin permissions on that account).</li>
<li>In the Developer Settings, create a ‘New Internal Integration’ and paste the webhook found previously on Komodor’s Integrations tab, along with the required permission scope found in our documentation.</li>
<li>Once you save the settings, you will be able to copy your internal integration Client Secret and paste it into Komodor to finish the installation.</li>
</ul>
<p>Sentry provides data on the exception or performance issue; how many times a given issue occured,  stack trace, browser information, and more. Komodor adds the ability to tie it into the context of the service itself - when was it deployed, and what changed in this specific version by connecting all your cloud 3rd party service providers. </p>
<h3 id="common-use-case-feature-flags"><a href="#common-use-case-feature-flags" aria-label="common use case feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Common Use Case: Feature Flags</h3>
<p>Toggling a feature flag might be the easiest way to break an application. It’s a click away from completely changing business logic, breaking something, and causing exceptions, LIVE in front of your end-users. </p>
<p>Luckily, by using Komodor and Sentry together you can easily triage any incident triggered by enabling or disabling a feature flag. For instance, Komodor’s Slackbot can notify the relevant team members that a ‘rest-API’ service was unhealthy for 3 minutes. </p>
<p>With just one click you can jump from Slack to Komodor’s troubleshooting platform, and see the full timeline of changes for that specific service. Here you can see that before the service turned unhealthy, a feature flag related to the DB was deployed, followed by a Sentry exception: ‘QueryFailedError: null value in column “branch” violates not-null constraint’.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358&amp;fm=webp 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716&amp;fm=webp 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432&amp;fm=webp 1432w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432 1432w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="4-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Clicking on the exception provides you with extra details and the option to view the exception on Sentry’s platform, where you can see more data enriched with tags (environment, mechanism, feature flag, etc.) and a stack trace that allows you to follow the breadcrumbs all the way to the specific line of code that caused the exception. Now you can use all the time and energy you’ve saved to focus on actually debugging. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399&amp;fm=webp 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798&amp;fm=webp 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595&amp;fm=webp 1595w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595 1595w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="5-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Check out the <a href="https://youtu.be/RGUZDRr5l54">live demo</a> or to learn more about komodor, visit komodor.com. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/52dijgURqFH4Dx6g4Ptq5u/f78c652cc05768a8f4fc3ce4eca50c79/meta-komodor.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Troubleshooting Feature Flags with Komodor and Sentry</title>
      <link>https://blog.sentry.io/2021/08/10/guest-post-troubleshooting-feature-flags-with-komodor-and-sentry/</link>
      <description>Mickael Alliel is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/mickaelalliel/">Mickael Alliel</a> is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the next-gen K8s troubleshooting platform at <a href="https://komodor.com/">Komodor</a>, and doubling as a French cuisine connoisseur.</em></p>
<h2 id="meet-komodor"><a href="#meet-komodor" aria-label="meet komodor permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Meet Komodor</h2>
<p>Komodor is a Kubernetes-native platform we’ve created to streamline troubleshooting. It was born out of frustrations we felt as developers, when we were required to waste hours of our time on troubleshooting, instead of focusing on what we really wanted to do - creating and innovating. </p>
<p>Komodor sits on top of your K8s cluster and integrates with every existing tool you have, be it CI/CD, repo, monitoring, alerting, or communication. All K8s changes and changes from every integration are consolidated into a single timeline view. Developers can also see how related services are impacted by changes in your K8s cluster by stacking timelines on top of each other. </p>
<p>With the help of these and many other features, Komodor and its Sentry integration help dev teams move fast and deploy with confidence, knowing that if something breaks they can always fix things quickly on their own, without skipping a beat. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="1-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="integrating-komodor-with-sentry"><a href="#integrating-komodor-with-sentry" aria-label="integrating komodor with sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Integrating Komodor with Sentry</h3>
<ol>
<li>It all starts with our Integrations tab - click Install on the Sentry tile.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118&amp;fm=webp 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236&amp;fm=webp 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471&amp;fm=webp 471w" sizes="(max-width: 471px) 100vw, 471px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471 471w" sizes="(max-width: 471px) 100vw, 471px"/>
          <img alt="2-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ol start="2">
<li>You will be prompted with step-by-step instructions on how to finish the installation properly on your Sentry account.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155&amp;fm=webp 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310&amp;fm=webp 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619&amp;fm=webp 619w" sizes="(max-width: 619px) 100vw, 619px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619 619w" sizes="(max-width: 619px) 100vw, 619px"/>
          <img alt="3-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ul>
<li>Go to the Sentry Settings in your account (you will be required to have admin permissions on that account).</li>
<li>In the Developer Settings, create a ‘New Internal Integration’ and paste the webhook found previously on Komodor’s Integrations tab, along with the required permission scope found in our documentation.</li>
<li>Once you save the settings, you will be able to copy your internal integration Client Secret and paste it into Komodor to finish the installation.</li>
</ul>
<p>Sentry provides data on the exception or performance issue; how many times a given issue occured,  stack trace, browser information, and more. Komodor adds the ability to tie it into the context of the service itself - when was it deployed, and what changed in this specific version by connecting all your cloud 3rd party service providers. </p>
<h3 id="common-use-case-feature-flags"><a href="#common-use-case-feature-flags" aria-label="common use case feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Common Use Case: Feature Flags</h3>
<p>Toggling a feature flag might be the easiest way to break an application. It’s a click away from completely changing business logic, breaking something, and causing exceptions, LIVE in front of your end-users. </p>
<p>Luckily, by using Komodor and Sentry together you can easily triage any incident triggered by enabling or disabling a feature flag. For instance, Komodor’s Slackbot can notify the relevant team members that a ‘rest-API’ service was unhealthy for 3 minutes. </p>
<p>With just one click you can jump from Slack to Komodor’s troubleshooting platform, and see the full timeline of changes for that specific service. Here you can see that before the service turned unhealthy, a feature flag related to the DB was deployed, followed by a Sentry exception: ‘QueryFailedError: null value in column “branch” violates not-null constraint’.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358&amp;fm=webp 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716&amp;fm=webp 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432&amp;fm=webp 1432w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432 1432w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="4-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Clicking on the exception provides you with extra details and the option to view the exception on Sentry’s platform, where you can see more data enriched with tags (environment, mechanism, feature flag, etc.) and a stack trace that allows you to follow the breadcrumbs all the way to the specific line of code that caused the exception. Now you can use all the time and energy you’ve saved to focus on actually debugging. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399&amp;fm=webp 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798&amp;fm=webp 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595&amp;fm=webp 1595w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595 1595w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="5-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Check out the <a href="https://youtu.be/RGUZDRr5l54">live demo</a> or to learn more about komodor, visit komodor.com. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/52dijgURqFH4Dx6g4Ptq5u/f78c652cc05768a8f4fc3ce4eca50c79/meta-komodor.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Troubleshooting Feature Flags with Komodor and Sentry</title>
      <link>https://blog.sentry.io/2021/08/10/guest-post-troubleshooting-feature-flags-with-komodor-and-sentry/</link>
      <description>Mickael Alliel is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/mickaelalliel/">Mickael Alliel</a> is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the next-gen K8s troubleshooting platform at <a href="https://komodor.com/">Komodor</a>, and doubling as a French cuisine connoisseur.</em></p>
<h2 id="meet-komodor"><a href="#meet-komodor" aria-label="meet komodor permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Meet Komodor</h2>
<p>Komodor is a Kubernetes-native platform we’ve created to streamline troubleshooting. It was born out of frustrations we felt as developers, when we were required to waste hours of our time on troubleshooting, instead of focusing on what we really wanted to do - creating and innovating. </p>
<p>Komodor sits on top of your K8s cluster and integrates with every existing tool you have, be it CI/CD, repo, monitoring, alerting, or communication. All K8s changes and changes from every integration are consolidated into a single timeline view. Developers can also see how related services are impacted by changes in your K8s cluster by stacking timelines on top of each other. </p>
<p>With the help of these and many other features, Komodor and its Sentry integration help dev teams move fast and deploy with confidence, knowing that if something breaks they can always fix things quickly on their own, without skipping a beat. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="1-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="integrating-komodor-with-sentry"><a href="#integrating-komodor-with-sentry" aria-label="integrating komodor with sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Integrating Komodor with Sentry</h3>
<ol>
<li>It all starts with our Integrations tab - click Install on the Sentry tile.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118&amp;fm=webp 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236&amp;fm=webp 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471&amp;fm=webp 471w" sizes="(max-width: 471px) 100vw, 471px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471 471w" sizes="(max-width: 471px) 100vw, 471px"/>
          <img alt="2-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ol start="2">
<li>You will be prompted with step-by-step instructions on how to finish the installation properly on your Sentry account.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155&amp;fm=webp 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310&amp;fm=webp 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619&amp;fm=webp 619w" sizes="(max-width: 619px) 100vw, 619px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619 619w" sizes="(max-width: 619px) 100vw, 619px"/>
          <img alt="3-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ul>
<li>Go to the Sentry Settings in your account (you will be required to have admin permissions on that account).</li>
<li>In the Developer Settings, create a ‘New Internal Integration’ and paste the webhook found previously on Komodor’s Integrations tab, along with the required permission scope found in our documentation.</li>
<li>Once you save the settings, you will be able to copy your internal integration Client Secret and paste it into Komodor to finish the installation.</li>
</ul>
<p>Sentry provides data on the exception or performance issue; how many times a given issue occured,  stack trace, browser information, and more. Komodor adds the ability to tie it into the context of the service itself - when was it deployed, and what changed in this specific version by connecting all your cloud 3rd party service providers. </p>
<h3 id="common-use-case-feature-flags"><a href="#common-use-case-feature-flags" aria-label="common use case feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Common Use Case: Feature Flags</h3>
<p>Toggling a feature flag might be the easiest way to break an application. It’s a click away from completely changing business logic, breaking something, and causing exceptions, LIVE in front of your end-users. </p>
<p>Luckily, by using Komodor and Sentry together you can easily triage any incident triggered by enabling or disabling a feature flag. For instance, Komodor’s Slackbot can notify the relevant team members that a ‘rest-API’ service was unhealthy for 3 minutes. </p>
<p>With just one click you can jump from Slack to Komodor’s troubleshooting platform, and see the full timeline of changes for that specific service. Here you can see that before the service turned unhealthy, a feature flag related to the DB was deployed, followed by a Sentry exception: ‘QueryFailedError: null value in column “branch” violates not-null constraint’.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358&amp;fm=webp 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716&amp;fm=webp 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432&amp;fm=webp 1432w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432 1432w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="4-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Clicking on the exception provides you with extra details and the option to view the exception on Sentry’s platform, where you can see more data enriched with tags (environment, mechanism, feature flag, etc.) and a stack trace that allows you to follow the breadcrumbs all the way to the specific line of code that caused the exception. Now you can use all the time and energy you’ve saved to focus on actually debugging. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399&amp;fm=webp 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798&amp;fm=webp 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595&amp;fm=webp 1595w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595 1595w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="5-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Check out the <a href="https://youtu.be/RGUZDRr5l54">live demo</a> or to learn more about komodor, visit komodor.com. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/52dijgURqFH4Dx6g4Ptq5u/f78c652cc05768a8f4fc3ce4eca50c79/meta-komodor.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Fluttering our Mobile Wings</title>
      <link>https://blog.sentry.io/2021/08/03/fluttering-our-mobile-wings/</link>
      <description>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates, like <a href="https://blog.sentry.io/2021/03/16/building-dark-mode/">dark mode</a> support, design them and implement prototypes. </p>
<p>The mobile engineering team came up with the idea for a Sentry mobile app that focuses on Release Health. We wanted to give developers a concise but comprehensive view of whether a release was healthy, errored, or experiencing abnormal crash sessions across multiple projects.</p>
<p>Because we wanted to bring this to both <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">iOS</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Android</a>, and we only had a week to build a proof of concept we decided to build the app in Flutter. Oh by the way, we also have a <a href="https://sentry.io/for/flutter/">Flutter Sentry SDK</a>, it’s great.</p>
<h2 id="application-overview"><a href="#application-overview" aria-label="application overview permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Application Overview</h2>
<h3 id="sessions"><a href="#sessions" aria-label="sessions permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sessions</h3>
<p>We fetch all projects from all your linked organizations that have session data. Every card represents one project and shows the name, organization, platform and a graph with the total session data over the last 24 hours. Below the cards the sessions are split up into healthy, errored, abnormal and crashed, all with individual graphs. There are also two cards showing crashfree sessions and users in percent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-sessions" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="settings"><a href="#settings" aria-label="settings permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Settings</h3>
<p>In the settings screen users can view a list of all projects and favorite them. Those will show up first on the main screen. Apart from that, we show the usual suspects, like terms, sharing and logout, in the settings screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-settings" title="" src="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="widgets"><a href="#widgets" aria-label="widgets permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Widgets!</h3>
<p>Flutter takes the main concept of view rendering from react. The user interface is described using widgets which are derived from the applications state. When the state changes, the system creates the new widgets from it and only redraws the interface elements. You can head over to the <a href="https://flutter.dev/docs/development/ui/widgets-intro">widgets intro documentation</a> to learn more about this.</p>
<h3 id="redux"><a href="#redux" aria-label="redux permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Redux</h3>
<p>We use Redux for state management. There is a central object holding the global application state. When an event in the application occurs, let’s say a reload of the session data, an action is dispatched.</p>
<p>This action then goes through multiple middlewares. In this case, it would go through our API middleware, where it would trigger a network request. This request would then itself trigger new actions when it (asynchronously) finishes with success or a failure. All those actions travel through other middlewares as well and finally reach the reducer.</p>
<p>The reducer is the only place where the global app state is mutated. In the sample above it would set a loading state when started and replace the loaded data upon success, or set an error state when there was a problem we want the user to know about.</p>
<p>Pros</p>
<ul>
<li>When state changes, widgets can be updated automatically. With the help of ViewModels implementing BLA, the Widget will only be rendered if the derived state changed. Neat!</li>
<li>With the reducer it,s explicit where state is mutated</li>
</ul>
<p>Cons</p>
<ul>
<li>The global state tends to get large quickly, even for such a small application. As the app will grow, we will have to think about how to best split this up.</li>
<li>Some Flutter API relies on Futures which does not yet play well with the Redux concept. One example of this is the “RefreshIndicator” widget.</li>
</ul>
<h3 id="sentry-sdk"><a href="#sentry-sdk" aria-label="sentry sdk permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry SDK</h3>
<p>Of course we use our own Sentry SDK to check for issues. This was especially helpful during development, as we started out without sound null safety (more on that below) and were able to catch many issues with our SDK that would just show up in the console and could go easily unnoticed otherwise.</p>
<h3 id="custom-drawing"><a href="#custom-drawing" aria-label="custom drawing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Custom Drawing</h3>
<p>The prototype used a dependency with embedded <a href="https://pub.dev/packages/flutter_echarts">ECharts</a> for chart drawing. This made use of web views, so every chart we would draw would also embed a full blown web view into our widget hierarchy. We would quickly encounter performance issues as well as flickering UI when redrawing.</p>
<p>This was a great way for us to get started during hackweek, as we use this JS dependency in the Sentry web application, but it was clear to us that we would need to replace this for the production app.</p>
<p>We decided to draw the charts that our designers prepared for us in the Figma design ourselves with the help of the canvas API. Android developers will feel right at home with this API, as it is basically the same on Android. Flutter also uses Skia as the drawing library, so no surprise there.</p>
<p>So in just a couple of lines of code we were able to draw the charts that our designers came up with, including gradients and cubic lines (which we removed again). Drawing was faster, pixel perfect and we could also get rid of a large dependency. </p>

<h3 id="android-studio"><a href="#android-studio" aria-label="android studio permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Android Studio</h3>
<p>We mainly used Android Studio with the Flutter plugin for application development. This is especially convenient for Android developers, as they can use a familiar environment when starting out with Flutter applications. Of course, you have the freedom to use <a href="https://flutter.dev/docs/get-started/editor">whichever editor</a> you are comfortable with.</p>
<h3 id="fastlane"><a href="#fastlane" aria-label="fastlane permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fastlane</h3>
<p>Fastlane is an open source tool written in Ruby. It is mostly used by the iOS community, but also works exceptionally well for Android. We use it locally to create release builds and ship them to the respective stores, as well as upload debug symbols to Sentry. </p>
<h3 id="static-analysis"><a href="#static-analysis" aria-label="static analysis permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Static Analysis</h3>
<p>We used the <a href="https://github.com/flutter/flutter/wiki/Using-the-Dart-analyzer">Dart analyzer</a> during development. It helped us to keep track of code issues that might come up during development.</p>
<h3 id="sound-null-safety"><a href="#sound-null-safety" aria-label="sound null safety permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sound Null Safety</h3>
<p>We migrated the application to <a href="https://dart.dev/null-safety">sound null safety</a> during development when we were already pretty far along with the app. Luckily, the Flutter team came up with an <a href="https://dart.dev/null-safety/migration-guide">incremental way</a> to do this. So we were able to convert file by file and have a working application during migration. I’m sure there are some Swift developers reading this who remember migrating in the early days. Yeah, my deepest condolences, I have been there.</p>
<h2 id="thats-a-wrap"><a href="#thats-a-wrap" aria-label="thats a wrap permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>That’s a wrap</h2>
<p>Everything we do at Sentry is built in the open. Find us on <a href="https://github.com/getsentry/sentry-mobile">GitHub</a>.</p>
<p>We have many ideas for future releases of the application, but ultimately it should be a tool that users find useful. So we can’t wait to hear your feedback, please give it a try!</p>
<p>Download it now on the <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">Apple App Store</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Google PlayStore</a> and become a part of our Flutter journey.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2ugLNDbMbX6VlbMYdQuXkm/0f3dd8459bdc5d7a6b31499d98270c56/mobileApp-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Fluttering our Mobile Wings</title>
      <link>https://blog.sentry.io/2021/08/03/fluttering-our-mobile-wings/</link>
      <description>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates, like <a href="https://blog.sentry.io/2021/03/16/building-dark-mode/">dark mode</a> support, design them and implement prototypes. </p>
<p>The mobile engineering team came up with the idea for a Sentry mobile app that focuses on Release Health. We wanted to give developers a concise but comprehensive view of whether a release a release was healthy, errored, or experiencing abnormal crash sessions across multiple projects.</p>
<p>Because we wanted to bring this to both <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">iOS</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Android</a>, and we only had a week to build a proof of concept we decided to build the app in Flutter. Oh by the way, we also have a <a href="https://sentry.io/for/flutter/">Flutter Sentry SDK</a>, it’s great.</p>
<h2 id="application-overview"><a href="#application-overview" aria-label="application overview permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Application Overview</h2>
<h3 id="sessions"><a href="#sessions" aria-label="sessions permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sessions</h3>
<p>We fetch all projects from all your linked organizations that have session data. Every card represents one project and shows the name, organization, platform and a graph with the total session data over the last 24 hours. Below the cards the sessions are split up into healthy, errored, abnormal and crashed, all with individual graphs. There are also two cards showing crashfree sessions and users in percent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-sessions" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="settings"><a href="#settings" aria-label="settings permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Settings</h3>
<p>In the settings screen users can view a list of all projects and favorite them. Those will show up first on the main screen. Apart from that, we show the usual suspects, like terms, sharing and logout, in the settings screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-settings" title="" src="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="widgets"><a href="#widgets" aria-label="widgets permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Widgets!</h3>
<p>Flutter takes the main concept of view rendering from react. The user interface is described using widgets which are derived from the applications state. When the state changes, the system creates the new widgets from it and only redraws the interface elements. You can head over to the <a href="https://flutter.dev/docs/development/ui/widgets-intro">widgets intro documentation</a> to learn more about this.</p>
<h3 id="redux"><a href="#redux" aria-label="redux permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Redux</h3>
<p>We use Redux for state management. There is a central object holding the global application state. When an event in the application occurs, let’s say a reload of the session data, an action is dispatched.</p>
<p>This action then goes through multiple middlewares. In this case, it would go through our API middleware, where it would trigger a network request. This request would then itself trigger new actions when it (asynchronously) finishes with success or a failure. All those actions travel through other middlewares as well and finally reach the reducer.</p>
<p>The reducer is the only place where the global app state is mutated. In the sample above it would set a loading state when started and replace the loaded data upon success, or set an error state when there was a problem we want the user to know about.</p>
<p>Pros</p>
<ul>
<li>When state changes, widgets can be updated automatically. With the help of ViewModels implementing BLA, the Widget will only be rendered if the derived state changed. Neat!</li>
<li>With the reducer it,s explicit where state is mutated</li>
</ul>
<p>Cons</p>
<ul>
<li>The global state tends to get large quickly, even for such a small application. As the app will grow, we will have to think about how to best split this up.</li>
<li>Some Flutter API relies on Futures which does not yet play well with the Redux concept. One example of this is the “RefreshIndicator” widget.</li>
</ul>
<h3 id="sentry-sdk"><a href="#sentry-sdk" aria-label="sentry sdk permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry SDK</h3>
<p>Of course we use our own Sentry SDK to check for issues. This was especially helpful during development, as we started out without sound null safety (more on that below) and were able to catch many issues with our SDK that would just show up in the console and could go easily unnoticed otherwise.</p>
<h3 id="custom-drawing"><a href="#custom-drawing" aria-label="custom drawing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Custom Drawing</h3>
<p>The prototype used a dependency with embedded <a href="https://pub.dev/packages/flutter_echarts">ECharts</a> for chart drawing. This made use of web views, so every chart we would draw would also embed a full blown web view into our widget hierarchy. We would quickly encounter performance issues as well as flickering UI when redrawing.</p>
<p>This was a great way for us to get started during hackweek, as we use this JS dependency in the Sentry web application, but it was clear to us that we would need to replace this for the production app.</p>
<p>We decided to draw the charts that our designers prepared for us in the Figma design ourselves with the help of the canvas API. Android developers will feel right at home with this API, as it is basically the same on Android. Flutter also uses Skia as the drawing library, so no surprise there.</p>
<p>So in just a couple of lines of code we were able to draw the charts that our designers came up with, including gradients and cubic lines (which we removed again). Drawing was faster, pixel perfect and we could also get rid of a large dependency. </p>

<h3 id="android-studio"><a href="#android-studio" aria-label="android studio permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Android Studio</h3>
<p>We mainly used Android Studio with the Flutter plugin for application development. This is especially convenient for Android developers, as they can use a familiar environment when starting out with Flutter applications. Of course, you have the freedom to use <a href="https://flutter.dev/docs/get-started/editor">whichever editor</a> you are comfortable with.</p>
<h3 id="fastlane"><a href="#fastlane" aria-label="fastlane permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fastlane</h3>
<p>Fastlane is an open source tool written in Ruby. It is mostly used by the iOS community, but also works exceptionally well for Android. We use it locally to create release builds and ship them to the respective stores, as well as upload debug symbols to Sentry. </p>
<h3 id="static-analysis"><a href="#static-analysis" aria-label="static analysis permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Static Analysis</h3>
<p>We used the <a href="https://github.com/flutter/flutter/wiki/Using-the-Dart-analyzer">Dart analyzer</a> during development. It helped us to keep track of code issues that might come up during development.</p>
<h3 id="sound-null-safety"><a href="#sound-null-safety" aria-label="sound null safety permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sound Null Safety</h3>
<p>We migrated the application to <a href="https://dart.dev/null-safety">sound null safety</a> during development when we were already pretty far along with the app. Luckily, the Flutter team came up with an <a href="https://dart.dev/null-safety/migration-guide">incremental way</a> to do this. So we were able to convert file by file and have a working application during migration. I’m sure there are some Swift developers reading this who remember migrating in the early days. Yeah, my deepest condolences, I have been there.</p>
<h2 id="thats-a-wrap"><a href="#thats-a-wrap" aria-label="thats a wrap permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>That’s a wrap</h2>
<p>Everything we do at Sentry is built in the open. Find us on <a href="https://github.com/getsentry/sentry-mobile">GitHub</a>.</p>
<p>We have many ideas for future releases of the application, but ultimately it should be a tool that users find useful. So we can’t wait to hear your feedback, please give it a try!</p>
<p>Download it now on the <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">Apple App Store</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Google PlayStore</a> and become a part of our Flutter journey.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2ugLNDbMbX6VlbMYdQuXkm/0f3dd8459bdc5d7a6b31499d98270c56/mobileApp-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Fluttering our Mobile Wings</title>
      <link>https://blog.sentry.io/2021/08/03/fluttering-our-mobile-wings/</link>
      <description>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates, like <a href="https://blog.sentry.io/2021/03/16/building-dark-mode/">dark mode</a> support, design them and implement prototypes. </p>
<p>The mobile engineering team came up with the idea for a Sentry mobile app that focuses on Release Health. We wanted to give developers a concise but comprehensive view of whether a release was healthy, errored, or experiencing abnormal crash sessions across multiple projects.</p>
<p>Because we wanted to bring this to both <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">iOS</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Android</a>, and we only had a week to build a proof of concept we decided to build the app in Flutter. Oh by the way, we also have a <a href="https://sentry.io/for/flutter/">Flutter Sentry SDK</a>, it’s great.</p>
<h2 id="application-overview"><a href="#application-overview" aria-label="application overview permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Application Overview</h2>
<h3 id="sessions"><a href="#sessions" aria-label="sessions permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sessions</h3>
<p>We fetch all projects from all your linked organizations that have session data. Every card represents one project and shows the name, organization, platform and a graph with the total session data over the last 24 hours. Below the cards the sessions are split up into healthy, errored, abnormal and crashed, all with individual graphs. There are also two cards showing crashfree sessions and users in percent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-sessions" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="settings"><a href="#settings" aria-label="settings permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Settings</h3>
<p>In the settings screen users can view a list of all projects and favorite them. Those will show up first on the main screen. Apart from that, we show the usual suspects, like terms, sharing and logout, in the settings screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-settings" title="" src="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="widgets"><a href="#widgets" aria-label="widgets permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Widgets!</h3>
<p>Flutter takes the main concept of view rendering from react. The user interface is described using widgets which are derived from the applications state. When the state changes, the system creates the new widgets from it and only redraws the interface elements. You can head over to the <a href="https://flutter.dev/docs/development/ui/widgets-intro">widgets intro documentation</a> to learn more about this.</p>
<h3 id="redux"><a href="#redux" aria-label="redux permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Redux</h3>
<p>We use Redux for state management. There is a central object holding the global application state. When an event in the application occurs, let’s say a reload of the session data, an action is dispatched.</p>
<p>This action then goes through multiple middlewares. In this case, it would go through our API middleware, where it would trigger a network request. This request would then itself trigger new actions when it (asynchronously) finishes with success or a failure. All those actions travel through other middlewares as well and finally reach the reducer.</p>
<p>The reducer is the only place where the global app state is mutated. In the sample above it would set a loading state when started and replace the loaded data upon success, or set an error state when there was a problem we want the user to know about.</p>
<p>Pros</p>
<ul>
<li>When state changes, widgets can be updated automatically. With the help of ViewModels implementing BLA, the Widget will only be rendered if the derived state changed. Neat!</li>
<li>With the reducer it,s explicit where state is mutated</li>
</ul>
<p>Cons</p>
<ul>
<li>The global state tends to get large quickly, even for such a small application. As the app will grow, we will have to think about how to best split this up.</li>
<li>Some Flutter API relies on Futures which does not yet play well with the Redux concept. One example of this is the “RefreshIndicator” widget.</li>
</ul>
<h3 id="sentry-sdk"><a href="#sentry-sdk" aria-label="sentry sdk permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry SDK</h3>
<p>Of course we use our own Sentry SDK to check for issues. This was especially helpful during development, as we started out without sound null safety (more on that below) and were able to catch many issues with our SDK that would just show up in the console and could go easily unnoticed otherwise.</p>
<h3 id="custom-drawing"><a href="#custom-drawing" aria-label="custom drawing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Custom Drawing</h3>
<p>The prototype used a dependency with embedded <a href="https://pub.dev/packages/flutter_echarts">ECharts</a> for chart drawing. This made use of web views, so every chart we would draw would also embed a full blown web view into our widget hierarchy. We would quickly encounter performance issues as well as flickering UI when redrawing.</p>
<p>This was a great way for us to get started during hackweek, as we use this JS dependency in the Sentry web application, but it was clear to us that we would need to replace this for the production app.</p>
<p>We decided to draw the charts that our designers prepared for us in the Figma design ourselves with the help of the canvas API. Android developers will feel right at home with this API, as it is basically the same on Android. Flutter also uses Skia as the drawing library, so no surprise there.</p>
<p>So in just a couple of lines of code we were able to draw the charts that our designers came up with, including gradients and cubic lines (which we removed again). Drawing was faster, pixel perfect and we could also get rid of a large dependency. </p>

<h3 id="android-studio"><a href="#android-studio" aria-label="android studio permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Android Studio</h3>
<p>We mainly used Android Studio with the Flutter plugin for application development. This is especially convenient for Android developers, as they can use a familiar environment when starting out with Flutter applications. Of course, you have the freedom to use <a href="https://flutter.dev/docs/get-started/editor">whichever editor</a> you are comfortable with.</p>
<h3 id="fastlane"><a href="#fastlane" aria-label="fastlane permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fastlane</h3>
<p>Fastlane is an open source tool written in Ruby. It is mostly used by the iOS community, but also works exceptionally well for Android. We use it locally to create release builds and ship them to the respective stores, as well as upload debug symbols to Sentry. </p>
<h3 id="static-analysis"><a href="#static-analysis" aria-label="static analysis permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Static Analysis</h3>
<p>We used the <a href="https://github.com/flutter/flutter/wiki/Using-the-Dart-analyzer">Dart analyzer</a> during development. It helped us to keep track of code issues that might come up during development.</p>
<h3 id="sound-null-safety"><a href="#sound-null-safety" aria-label="sound null safety permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sound Null Safety</h3>
<p>We migrated the application to <a href="https://dart.dev/null-safety">sound null safety</a> during development when we were already pretty far along with the app. Luckily, the Flutter team came up with an <a href="https://dart.dev/null-safety/migration-guide">incremental way</a> to do this. So we were able to convert file by file and have a working application during migration. I’m sure there are some Swift developers reading this who remember migrating in the early days. Yeah, my deepest condolences, I have been there.</p>
<h2 id="thats-a-wrap"><a href="#thats-a-wrap" aria-label="thats a wrap permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>That’s a wrap</h2>
<p>Everything we do at Sentry is built in the open. Find us on <a href="https://github.com/getsentry/sentry-mobile">GitHub</a>.</p>
<p>We have many ideas for future releases of the application, but ultimately it should be a tool that users find useful. So we can’t wait to hear your feedback, please give it a try!</p>
<p>Download it now on the <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">Apple App Store</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Google PlayStore</a> and become a part of our Flutter journey.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2ugLNDbMbX6VlbMYdQuXkm/0f3dd8459bdc5d7a6b31499d98270c56/mobileApp-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Instrumenting Our Frontend Test Suite (...and fixing what we found)</title>
      <link>https://blog.sentry.io/2021/07/27/instrumenting-our-frontend-test-suite-and-fixing-what-we-found/</link>
      <description>Adding Instrumentation to Jest Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="adding-instrumentation-to-jest"><a href="#adding-instrumentation-to-jest" aria-label="adding instrumentation to jest permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Adding Instrumentation to Jest</h2>
<p>Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual applications of our product and sometimes these unusual applications pay off in a meaningful way. In this blog post, we’ll examine one such case where we use the Sentry JavaScript SDK to instrument <a href="https://jestjs.io/">Jest</a> (which runs our frontend test suite) and how we addressed the issues that we found.</p>
<p>We have high-level metrics for how well (or not) our CI is performing. This is useful to get a general sense of the health of the system, however, it does not help when doing a deeper dive into why a system is slow. We decided to instrument our CI jobs at the test runner level in order to get insights into the performance of the individual tests. We needed to be able to see if our test suite was slowing down because we were adding more tests or if it was because we had poor-performing tests.</p>
<p>As mentioned above, we use Jest as our test runner. It’s important to note, that our instrumentation method requires using <a href="https://github.com/facebook/jest/blob/master/packages/jest-circus/README.md">jest-circus</a> test runner. This is the default for Jest version 27, however, it can be used with earlier versions of Jest. <code>jest-circus</code> is required because it allows us to listen to events from Jest by using a <a href="https://jestjs.io/docs/configuration#testenvironment-string">custom environment</a> and defining a <code>handleTestEvent</code> method. Below is a basic test snippet annotated with an approximation of where <code>jest-circus</code>’s events are fired.</p>
<div data-language="text"><pre><code>// --&gt; setup
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; start_describe_definition
// --&gt; add_hook&lt;beforeAll&gt;
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; add_hook&lt;afterEach&gt;
// --&gt; add_hook&lt;afterAll&gt;
// --&gt; add_test
// --&gt; finish_describe_definition
// --&gt; run_start
describe(&#39;describe&#39;, function () {
  // --&gt; run_describe_start
  // --&gt; hook_start&lt;beforeAll&gt;
  // --&gt; hook_success&lt;beforeAll&gt;

  beforeAll(function () {});
  beforeEach(function () {});
  afterEach(function () {});
  afterAll(function () {});

  // --&gt; test_start
  // --&gt; hook_start&lt;beforeEach&gt;
  // --&gt; hook_success&lt;beforeEach&gt;
  it(&#39;test&#39;, function () {
    // --&gt; test_fn_start
    expect(true).toBe(true);
  }); // --&gt; test_fn_success
  // --&gt; hook_start&lt;afterEach&gt;
  // --&gt; hook_success&lt;afterEach&gt;
  // --&gt; test_done

  // --&gt; hook_start&lt;afterAll&gt;
  // --&gt; hook_success&lt;afterAll&gt;
}); // --&gt; run_describe_finish
// --&gt; run_finish
// --&gt; teardown</code></pre></div>
<p><a href="https://docs.sentry.io/platforms/javascript/performance/instrumentation/custom-instrumentation/">Sentry’s Performance Monitoring instrumentation</a> is tree-like in structure with a transaction as the root node, and spans as child nodes. We can use a combination of the event name and the test name to determine if we should either create a transaction, create a child span from an existing transaction or end a span/transaction. Here’s an <a href="https://github.com/getsentry/sentry/blob/master/tests/js/instrumentedEnv/index.js">example of how we implemented it</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-image-1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="fixing-performance-issues"><a href="#fixing-performance-issues" aria-label="fixing performance issues permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fixing Performance Issues</h2>
<p>Starting an investigation into a slow Jest test is a bit like peering into a black box because there’s so much abstraction. So the first steps are - find out which tests to look at and then find out what they’re spending time doing. The slowest tests were all larger page views with many subcomponents and components that access data from our data stores. Bigger components should be slower, right?</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-span-2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Looking at the “alert rules index” test we can see that the <code>beforeEach</code> function is getting slower after every test, yet the code in the <code>beforeEach</code> block remains the same and should take just as much time on the first test as it does on the last test. Looking at what is in the <code>beforeEach</code> function wasn’t enough to decide what was slowing it down. <code>beforeEach</code> contained a few api mocks and a call to <code>ProjectsStore.loadInitialData([]);</code> that was initializing the project  store with an empty array. But none of that should be slow, so let’s have node tell us what is happening.</p>
<p>Start jest using the node debugger on just the one test file. The <code>--inspect-brk</code> flag tells node to wait until we have attached our profiler.</p>
<div data-language="sql"><pre><code>node <span>--inspect-brk node_modules/.bin/jest --runInBand --no-cache tests/js/spec/views/alerts/rules/index.spec.jsx</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>After profiling the test and zooming into the area where the tests are running, we located the code that runs during the <code>beforeEach</code>. In this screenshot, we’ve renamed the anonymous <code>beforeEach</code> function to a named function <code>badBeforeEach</code> so it can be found easier. Below it is one call to <code>ProjectsStore.loadInitialData</code> followed by several calls to <code>setState</code> and a bunch of react work being kicked off. This shouldn’t be happening as there shouldn’t be a component listening to the store yet.</p>
<p>This led us to check that the component was being unmounted after each test. We added a <code>componentWillUnmount</code> to the class component being tested with a <code>console.log</code> inside to see if it was being called. When we did not see the <code>console.log</code>, we tested it manually by  unmounting the component after every test.</p>
<p>The result: our <code>beforeEach</code> function takes a fraction of a second every iteration instead of running change detection in components that should have been unmounted and our test has its overall total time cut nearly in half. The <a href="https://enzymejs.github.io/enzyme/docs/api/mount.html">enzyme docs</a> warn you that calling <code>mount</code> instead of <code>shallowMount</code> will persist components in the DOM and the reason we’re seeing a larger impact on this test is because the store is still triggering change detection in components that should’ve been destroyed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Using Sentry’s Performance Trends feature, we can confirm the performance impact these changes made to the tests.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275&amp;fm=webp 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550&amp;fm=webp 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100&amp;fm=webp 1100w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100 1100w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-5" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="instrumenting-your-own-tests"><a href="#instrumenting-your-own-tests" aria-label="instrumenting your own tests permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting your own tests</h2>
<p>We provided an example <a href="https://github.com/billyvg/jest-sentry-environment">Jest environment</a> that you can use if you’re interested in instrumenting your own Jest tests. You’ll need to install the <code>jest-sentry-environment</code> package and update your Jest configuration to use the fore-mentioned package, as well as supplying your Sentry DSN. For further instructions, please see the <a href="https://github.com/billyvg/jest-sentry-environment">repository</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5HiwVLXePFUDh53vwTPDfD/9e6e3fbf92c1ff6b52b22acf1af63059/DogFood1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Instrumenting Our Frontend Test Suite (...and fixing what we found)</title>
      <link>https://blog.sentry.io/2021/07/27/instrumenting-our-frontend-test-suite-and-fixing-what-we-found/</link>
      <description>Adding Instrumentation to Jest Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="adding-instrumentation-to-jest"><a href="#adding-instrumentation-to-jest" aria-label="adding instrumentation to jest permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Adding Instrumentation to Jest</h2>
<p>Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual applications of our product and sometimes these unusual applications pay off in a meaningful way. In this blog post, we’ll examine one such case where we use the Sentry JavaScript SDK to instrument <a href="https://jestjs.io/">Jest</a> (which runs our frontend test suite) and how we addressed the issues that we found.</p>
<p>We have high-level metrics for how well (or not) our CI is performing. This is useful to get a general sense of the health of the system, however, it does not help when doing a deeper dive into why a system is slow. We decided to instrument our CI jobs at the test runner level in order to get insights into the performance of the individual tests. We needed to be able to see if our test suite was slowing down because we were adding more tests or if it was because we had poor-performing tests.</p>
<p>As mentioned above, we use Jest as our test runner. It’s important to note, that our instrumentation method requires using <a href="https://github.com/facebook/jest/blob/master/packages/jest-circus/README.md">jest-circus</a> test runner. This is the default for Jest version 27, however, it can be used with earlier versions of Jest. <code>jest-circus</code> is required because it allows us to listen to events from Jest by using a <a href="https://jestjs.io/docs/configuration#testenvironment-string">custom environment</a> and defining a <code>handleTestEvent</code> method. Below is a basic test snippet annotated with an approximation of where <code>jest-circus</code>’s events are fired.</p>
<div data-language="text"><pre><code>// --&gt; setup
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; start_describe_definition
// --&gt; add_hook&lt;beforeAll&gt;
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; add_hook&lt;afterEach&gt;
// --&gt; add_hook&lt;afterAll&gt;
// --&gt; add_test
// --&gt; finish_describe_definition
// --&gt; run_start
describe(&#39;describe&#39;, function () {
  // --&gt; run_describe_start
  // --&gt; hook_start&lt;beforeAll&gt;
  // --&gt; hook_success&lt;beforeAll&gt;

  beforeAll(function () {});
  beforeEach(function () {});
  afterEach(function () {});
  afterAll(function () {});

  // --&gt; test_start
  // --&gt; hook_start&lt;beforeEach&gt;
  // --&gt; hook_success&lt;beforeEach&gt;
  it(&#39;test&#39;, function () {
    // --&gt; test_fn_start
    expect(true).toBe(true);
  }); // --&gt; test_fn_success
  // --&gt; hook_start&lt;afterEach&gt;
  // --&gt; hook_success&lt;afterEach&gt;
  // --&gt; test_done

  // --&gt; hook_start&lt;afterAll&gt;
  // --&gt; hook_success&lt;afterAll&gt;
}); // --&gt; run_describe_finish
// --&gt; run_finish
// --&gt; teardown</code></pre></div>
<p><a href="https://docs.sentry.io/platforms/javascript/performance/instrumentation/custom-instrumentation/">Sentry’s Performance Monitoring instrumentation</a> is tree-like in structure with a transaction as the root node, and spans as child nodes. We can use a combination of the event name and the test name to determine if we should either create a transaction, create a child span from an existing transaction or end a span/transaction. Here’s an <a href="https://github.com/getsentry/sentry/blob/master/tests/js/instrumentedEnv/index.js">example of how we implemented it</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-image-1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="fixing-performance-issues"><a href="#fixing-performance-issues" aria-label="fixing performance issues permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fixing Performance Issues</h2>
<p>Starting an investigation into a slow Jest test is a bit like peering into a black box because there’s so much abstraction. So the first steps are - find out which tests to look at and then find out what they’re spending time doing. The slowest tests were all larger page views with many subcomponents and components that access data from our data stores. Bigger components should be slower, right?</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-span-2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Looking at the “alert rules index” test we can see that the <code>beforeEach</code> function is getting slower after every test, yet the code in the <code>beforeEach</code> block remains the same and should take just as much time on the first test as it does on the last test. Looking at what is in the <code>beforeEach</code> function wasn’t enough to decide what was slowing it down. <code>beforeEach</code> contained a few api mocks and a call to <code>ProjectsStore.loadInitialData([]);</code> that was initializing the project  store with an empty array. But none of that should be slow, so let’s have node tell us what is happening.</p>
<p>Start jest using the node debugger on just the one test file. The <code>--inspect-brk</code> flag tells node to wait until we have attached our profiler.</p>
<div data-language="sql"><pre><code>node <span>--inspect-brk node_modules/.bin/jest --runInBand --no-cache tests/js/spec/views/alerts/rules/index.spec.jsx</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>After profiling the test and zooming into the area where the tests are running, we located the code that runs during the <code>beforeEach</code>. In this screenshot, we’ve renamed the anonymous <code>beforeEach</code> function to a named function <code>badBeforeEach</code> so it can be found easier. Below it is one call to <code>ProjectsStore.loadInitialData</code> followed by several calls to <code>setState</code> and a bunch of react work being kicked off. This shouldn’t be happening as there shouldn’t be a component listening to the store yet.</p>
<p>This led us to check that the component was being unmounted after each test. We added a <code>componentWillUnmount</code> to the class component being tested with a <code>console.log</code> inside to see if it was being called. When we did not see the <code>console.log</code>, we tested it manually by  unmounting the component after every test.</p>
<p>The result: our <code>beforeEach</code> function takes a fraction of a second every iteration instead of running change detection in components that should have been unmounted and our test has its overall total time cut nearly in half. The <a href="https://enzymejs.github.io/enzyme/docs/api/mount.html">enzyme docs</a> warn you that calling <code>mount</code> instead of <code>shallowMount</code> will persist components in the DOM and the reason we’re seeing a larger impact on this test is because the store is still triggering change detection in components that should’ve been destroyed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Using Sentry’s Performance Trends feature, we can confirm the performance impact these changes made to the tests.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275&amp;fm=webp 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550&amp;fm=webp 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100&amp;fm=webp 1100w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100 1100w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-5" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="instrumenting-your-own-tests"><a href="#instrumenting-your-own-tests" aria-label="instrumenting your own tests permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting your own tests</h2>
<p>We provided an example <a href="https://github.com/billyvg/jest-sentry-environment">Jest environment</a> that you can use if you’re interested in instrumenting your own Jest tests. You’ll need to install the <code>jest-sentry-environment</code> package and update your Jest configuration to use the fore-mentioned package, as well as supplying your Sentry DSN. For further instructions, please see the <a href="https://github.com/billyvg/jest-sentry-environment">repository</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5HiwVLXePFUDh53vwTPDfD/9e6e3fbf92c1ff6b52b22acf1af63059/DogFood1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Instrumenting Our Frontend Test Suite (...and fixing what we found)</title>
      <link>https://blog.sentry.io/2021/07/27/instrumenting-our-frontend-test-suite-and-fixing-what-we-found/</link>
      <description>Adding Instrumentation to Jest Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="adding-instrumentation-to-jest"><a href="#adding-instrumentation-to-jest" aria-label="adding instrumentation to jest permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Adding Instrumentation to Jest</h2>
<p>Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual applications of our product and sometimes these unusual applications pay off in a meaningful way. In this blog post, we’ll examine one such case where we use the Sentry JavaScript SDK to instrument <a href="https://jestjs.io/">Jest</a> (which runs our frontend test suite) and how we addressed the issues that we found.</p>
<p>We have high-level metrics for how well (or not) our CI is performing. This is useful to get a general sense of the health of the system, however, it does not help when doing a deeper dive into why a system is slow. We decided to instrument our CI jobs at the test runner level in order to get insights into the performance of the individual tests. We needed to be able to see if our test suite was slowing down because we were adding more tests or if it was because we had poor-performing tests.</p>
<p>As mentioned above, we use Jest as our test runner. It’s important to note, that our instrumentation method requires using <a href="https://github.com/facebook/jest/blob/master/packages/jest-circus/README.md">jest-circus</a> test runner. This is the default for Jest version 27, however, it can be used with earlier versions of Jest. <code>jest-circus</code> is required because it allows us to listen to events from Jest by using a <a href="https://jestjs.io/docs/configuration#testenvironment-string">custom environment</a> and defining a <code>handleTestEvent</code> method. Below is a basic test snippet annotated with an approximation of where <code>jest-circus</code>’s events are fired.</p>
<div data-language="text"><pre><code>// --&gt; setup
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; start_describe_definition
// --&gt; add_hook&lt;beforeAll&gt;
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; add_hook&lt;afterEach&gt;
// --&gt; add_hook&lt;afterAll&gt;
// --&gt; add_test
// --&gt; finish_describe_definition
// --&gt; run_start
describe(&#39;describe&#39;, function () {
  // --&gt; run_describe_start
  // --&gt; hook_start&lt;beforeAll&gt;
  // --&gt; hook_success&lt;beforeAll&gt;

  beforeAll(function () {});
  beforeEach(function () {});
  afterEach(function () {});
  afterAll(function () {});

  // --&gt; test_start
  // --&gt; hook_start&lt;beforeEach&gt;
  // --&gt; hook_success&lt;beforeEach&gt;
  it(&#39;test&#39;, function () {
    // --&gt; test_fn_start
    expect(true).toBe(true);
  }); // --&gt; test_fn_success
  // --&gt; hook_start&lt;afterEach&gt;
  // --&gt; hook_success&lt;afterEach&gt;
  // --&gt; test_done

  // --&gt; hook_start&lt;afterAll&gt;
  // --&gt; hook_success&lt;afterAll&gt;
}); // --&gt; run_describe_finish
// --&gt; run_finish
// --&gt; teardown</code></pre></div>
<p><a href="https://docs.sentry.io/platforms/javascript/performance/instrumentation/custom-instrumentation/">Sentry’s Performance Monitoring instrumentation</a> is tree-like in structure with a transaction as the root node, and spans as child nodes. We can use a combination of the event name and the test name to determine if we should either create a transaction, create a child span from an existing transaction or end a span/transaction. Here’s an <a href="https://github.com/getsentry/sentry/blob/master/tests/js/instrumentedEnv/index.js">example of how we implemented it</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-image-1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="fixing-performance-issues"><a href="#fixing-performance-issues" aria-label="fixing performance issues permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fixing Performance Issues</h2>
<p>Starting an investigation into a slow Jest test is a bit like peering into a black box because there’s so much abstraction. So the first steps are - find out which tests to look at and then find out what they’re spending time doing. The slowest tests were all larger page views with many subcomponents and components that access data from our data stores. Bigger components should be slower, right?</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-span-2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Looking at the “alert rules index” test we can see that the <code>beforeEach</code> function is getting slower after every test, yet the code in the <code>beforeEach</code> block remains the same and should take just as much time on the first test as it does on the last test. Looking at what is in the <code>beforeEach</code> function wasn’t enough to decide what was slowing it down. <code>beforeEach</code> contained a few api mocks and a call to <code>ProjectsStore.loadInitialData([]);</code> that was initializing the project  store with an empty array. But none of that should be slow, so let’s have node tell us what is happening.</p>
<p>Start jest using the node debugger on just the one test file. The <code>--inspect-brk</code> flag tells node to wait until we have attached our profiler.</p>
<div data-language="sql"><pre><code>node <span>--inspect-brk node_modules/.bin/jest --runInBand --no-cache tests/js/spec/views/alerts/rules/index.spec.jsx</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>After profiling the test and zooming into the area where the tests are running, we located the code that runs during the <code>beforeEach</code>. In this screenshot, we’ve renamed the anonymous <code>beforeEach</code> function to a named function <code>badBeforeEach</code> so it can be found easier. Below it is one call to <code>ProjectsStore.loadInitialData</code> followed by several calls to <code>setState</code> and a bunch of react work being kicked off. This shouldn’t be happening as there shouldn’t be a component listening to the store yet.</p>
<p>This led us to check that the component was being unmounted after each test. We added a <code>componentWillUnmount</code> to the class component being tested with a <code>console.log</code> inside to see if it was being called. When we did not see the <code>console.log</code>, we tested it manually by  unmounting the component after every test.</p>
<p>The result: our <code>beforeEach</code> function takes a fraction of a second every iteration instead of running change detection in components that should have been unmounted and our test has its overall total time cut nearly in half. The <a href="https://enzymejs.github.io/enzyme/docs/api/mount.html">enzyme docs</a> warn you that calling <code>mount</code> instead of <code>shallowMount</code> will persist components in the DOM and the reason we’re seeing a larger impact on this test is because the store is still triggering change detection in components that should’ve been destroyed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Using Sentry’s Performance Trends feature, we can confirm the performance impact these changes made to the tests.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275&amp;fm=webp 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550&amp;fm=webp 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100&amp;fm=webp 1100w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100 1100w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-5" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="instrumenting-your-own-tests"><a href="#instrumenting-your-own-tests" aria-label="instrumenting your own tests permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting your own tests</h2>
<p>We provided an example <a href="https://github.com/billyvg/jest-sentry-environment">Jest environment</a> that you can use if you’re interested in instrumenting your own Jest tests. You’ll need to install the <code>jest-sentry-environment</code> package and update your Jest configuration to use the fore-mentioned package, as well as supplying your Sentry DSN. For further instructions, please see the <a href="https://github.com/billyvg/jest-sentry-environment">repository</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5HiwVLXePFUDh53vwTPDfD/9e6e3fbf92c1ff6b52b22acf1af63059/DogFood1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Root out the odd operation with Operations Breakdown</title>
      <link>https://blog.sentry.io/2021/07/15/root-out-the-odd-operation-with-operations-breakdown/</link>
      <description>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is a series of operations. We built <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> to help you, the developer, quickly see how much time was spent in each operation within a transaction. Why? Simple, so you can address the operations with the longest duration and likely causing annoying performance issues for your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299&amp;fm=webp 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196&amp;fm=webp 1196w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196 1196w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Each color denotes the type of operation, such as http, db, resource and browser. It also allows you to visualize change over time for each operation type and find transactions with unusual distributions of operations that could point to an underlying problem.</p>
<p>Fun fact: We use Sentry to monitor Sentry, shocker. We started using Operations Breakdown when it was early in development. Seeing that some transactions spent much more time in the database than other similar transactions surfaced a previously unknown n+1 issue. Checkout the <a href="https://github.com/getsentry/sentry/pull/25144">PR</a> for the fix.</p>
<p>In the example below, most <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/">transactions</a> have a pattern that shows a mix of different operations, and one that is entirely composed of http operations, marked in yellow. That event is worth investigating some more…</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214&amp;fm=webp 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428&amp;fm=webp 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856&amp;fm=webp 856w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856 856w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-zoom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>You can dive deeper into an individual event and see the details of a particular span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587&amp;fm=webp 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174&amp;fm=webp 1174w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174 1174w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="when-transactions-go-awry"><a href="#when-transactions-go-awry" aria-label="when transactions go awry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>When Transactions go Awry</h2>
<p>Another way you can use Operations Breakdown is to track the distribution of operations over time to see if the distribution changes dramatically. If an irregularity develops, this could indicate a slow database query that could be caused by a growing database. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446&amp;fm=webp 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892&amp;fm=webp 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783&amp;fm=webp 1783w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783 1783w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="span-operation-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Whether it’s timeouts, slow loading pages, or errors causing performance problems, with <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> you see which operations have the greatest impact on your performance so your team can make improvements that drive the biggest gains.</p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 15 Jul 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Root out the odd operation with Operations Breakdown</title>
      <link>https://blog.sentry.io/2021/07/15/root-out-the-odd-operation-with-operations-breakdown/</link>
      <description>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is a series of operations. We built <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> to help you, the developer, quickly see how much time was spent in each operation within a transaction. Why? Simple, so you can address the operations with the longest duration and likely causing annoying performance issues for your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299&amp;fm=webp 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196&amp;fm=webp 1196w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196 1196w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Each color denotes the type of operation, such as http, db, resource and browser. It also allows you to visualize change over time for each operation type and find transactions with unusual distributions of operations that could point to an underlying problem.</p>
<p>Fun fact: We use Sentry to monitor Sentry, shocker. We started using Operations Breakdown when it was early in development. Seeing that some transactions spent much more time in the database than other similar transactions surfaced a previously unknown n+1 issue. Checkout the <a href="https://github.com/getsentry/sentry/pull/25144">PR</a> for the fix.</p>
<p>In the example below, most <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/">transactions</a> have a pattern that shows a mix of different operations, and one that is entirely composed of http operations, marked in yellow. That event is worth investigating some more…</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214&amp;fm=webp 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428&amp;fm=webp 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856&amp;fm=webp 856w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856 856w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-zoom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>You can dive deeper into an individual event and see the details of a particular span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587&amp;fm=webp 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174&amp;fm=webp 1174w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174 1174w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="when-transactions-go-awry"><a href="#when-transactions-go-awry" aria-label="when transactions go awry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>When Transactions go Awry</h2>
<p>Another way you can use Operations Breakdown is to track the distribution of operations over time to see if the distribution changes dramatically. If an irregularity develops, this could indicate a slow database query that could be caused by a growing database. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446&amp;fm=webp 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892&amp;fm=webp 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783&amp;fm=webp 1783w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783 1783w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="span-operation-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Whether it’s timeouts, slow loading pages, or errors causing performance problems, with <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> you see which operations have the greatest impact on your performance so your team can make improvements that drive the biggest gains.</p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 15 Jul 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Root out the odd operation with Operations Breakdown</title>
      <link>https://blog.sentry.io/2021/07/15/root-out-the-odd-operation-with-operations-breakdown/</link>
      <description>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is a series of operations. We built <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> to help you, the developer, quickly see how much time was spent in each operation within a transaction. Why? Simple, so you can address the operations with the longest duration and likely causing annoying performance issues for your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299&amp;fm=webp 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196&amp;fm=webp 1196w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196 1196w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Each color denotes the type of operation, such as http, db, resource and browser. It also allows you to visualize change over time for each operation type and find transactions with unusual distributions of operations that could point to an underlying problem.</p>
<p>Fun fact: We use Sentry to monitor Sentry, shocker. We started using Operations Breakdown when it was early in development. Seeing that some transactions spent much more time in the database than other similar transactions surfaced a previously unknown n+1 issue. Checkout the <a href="https://github.com/getsentry/sentry/pull/25144">PR</a> for the fix.</p>
<p>In the example below, most <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/">transactions</a> have a pattern that shows a mix of different operations, and one that is entirely composed of http operations, marked in yellow. That event is worth investigating some more…</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214&amp;fm=webp 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428&amp;fm=webp 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856&amp;fm=webp 856w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856 856w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-zoom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>You can dive deeper into an individual event and see the details of a particular span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587&amp;fm=webp 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174&amp;fm=webp 1174w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174 1174w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="when-transactions-go-awry"><a href="#when-transactions-go-awry" aria-label="when transactions go awry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>When Transactions go Awry</h2>
<p>Another way you can use Operations Breakdown is to track the distribution of operations over time to see if the distribution changes dramatically. If an irregularity develops, this could indicate a slow database query that could be caused by a growing database. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446&amp;fm=webp 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892&amp;fm=webp 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783&amp;fm=webp 1783w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783 1783w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="span-operation-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Whether it’s timeouts, slow loading pages, or errors causing performance problems, with <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> you see which operations have the greatest impact on your performance so your team can make improvements that drive the biggest gains.</p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 15 Jul 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Become A Hidden Champion.  Work With Me In Vienna.</title>
      <link>https://blog.sentry.io/2021/07/13/become-a-hidden-champion-work-with-me-in-vienna/</link>
      <description>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly sustain their success through a combination of culture, innovation, and product quality.  And while the term is usually applied to manufacturing companies, our office in Vienna represents a hidden champion mindset — both in who we are, and what we’re looking for in our future developers.</p>
<p>For employees who work at hidden champions, loyalty is reciprocated, not demanded.  The high retainment rate in our Vienna office speaks to this, as well as our belief that employees both contribute to — and benefit from  — a culture of high performance. While some companies need to invent unproductive work (perhaps this is your current situation), Sentry’s rapid growth ensures there’s more work than people — instead of the other way around. </p>
<p>Sentry’s open-source tradition is core to our Vienna office. Some of my own open-source libraries (such as the Flask web framework) are now powering parts of LinkedIn, and many of the applications we use today rely on open-source projects created in Vienna. Sentry itself started out as an open-source project (in Django), and has grown into a platform which gives developers insights into what went wrong or why things are slow.</p>
<p>A big part of company culture is company location.  It’s why we chose Vienna as our European hub, as it was recently voted the most livable city in the world. Vienna’s excellent child care facilities, geographic proximity (located in the center of Europe), and mix of urban convenience and natural beauty. And in Vienna, we give our developers a throughline to Silicon Valley without the hustle, bustle, and drama that can accompany living in it. </p>
<p>Working at Sentry means building products — and professional relationships — that endure. If that’s what you’re looking for in the next stop of your career, then I hope  you consider becoming a hidden champion working with me at Sentry. </p>
<p>Check out our <a href="https://sentry.io/careers/">open positions</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3wWJj2Xamb0cT0EWtRh7v/936bbe3ea380bf00bafed4bb22a93ae0/Vienna.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Become A Hidden Champion.  Work With Me In Vienna.</title>
      <link>https://blog.sentry.io/2021/07/13/become-a-hidden-champion-work-with-me-in-vienna/</link>
      <description>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly sustain their success through a combination of culture, innovation, and product quality.  And while the term is usually applied to manufacturing companies, our office in Vienna represents a hidden champion mindset — both in who we are, and what we’re looking for in our future developers.</p>
<p>For employees who work at hidden champions, loyalty is reciprocated, not demanded.  The high retainment rate in our Vienna office speaks to this, as well as our belief that employees both contribute to — and benefit from  — a culture of high performance. While some companies need to invent unproductive work (perhaps this is your current situation), Sentry’s rapid growth ensures there’s more work than people — instead of the other way around. </p>
<p>Sentry’s open-source tradition is core to our Vienna office. Some of my own open-source libraries (such as the Flask web framework) are now powering parts of LinkedIn, and many of the applications we use today rely on open-source projects created in Vienna. Sentry itself started out as an open-source project (in Django), and has grown into a platform which gives developers insights into what went wrong or why things are slow.</p>
<p>A big part of company culture is company location.  It’s why we chose Vienna as our European hub, as it was recently voted the most livable city in the world. Vienna’s excellent child care facilities, geographic proximity (located in the center of Europe), and mix of urban convenience and natural beauty. And in Vienna, we give our developers a throughline to Silicon Valley without the hustle, bustle, and drama that can accompany living in it. </p>
<p>Working at Sentry means building products — and professional relationships — that endure. If that’s what you’re looking for in the next stop of your career, then I hope  you consider becoming a hidden champion working with me at Sentry. </p>
<p>Check out our <a href="https://sentry.io/careers/">open positions</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3wWJj2Xamb0cT0EWtRh7v/936bbe3ea380bf00bafed4bb22a93ae0/Vienna.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Become A Hidden Champion.  Work With Me In Vienna.</title>
      <link>https://blog.sentry.io/2021/07/13/become-a-hidden-champion-work-with-me-in-vienna/</link>
      <description>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly sustain their success through a combination of culture, innovation, and product quality.  And while the term is usually applied to manufacturing companies, our office in Vienna represents a hidden champion mindset — both in who we are, and what we’re looking for in our future developers.</p>
<p>For employees who work at hidden champions, loyalty is reciprocated, not demanded.  The high retainment rate in our Vienna office speaks to this, as well as our belief that employees both contribute to — and benefit from  — a culture of high performance. While some companies need to invent unproductive work (perhaps this is your current situation), Sentry’s rapid growth ensures there’s more work than people — instead of the other way around. </p>
<p>Sentry’s open-source tradition is core to our Vienna office. Some of my own open-source libraries (such as the Flask web framework) are now powering parts of LinkedIn, and many of the applications we use today rely on open-source projects created in Vienna. Sentry itself started out as an open-source project (in Django), and has grown into a platform which gives developers insights into what went wrong or why things are slow.</p>
<p>A big part of company culture is company location.  It’s why we chose Vienna as our European hub, as it was recently voted the most livable city in the world. Vienna’s excellent child care facilities, geographic proximity (located in the center of Europe), and mix of urban convenience and natural beauty. And in Vienna, we give our developers a throughline to Silicon Valley without the hustle, bustle, and drama that can accompany living in it. </p>
<p>Working at Sentry means building products — and professional relationships — that endure. If that’s what you’re looking for in the next stop of your career, then I hope  you consider becoming a hidden champion working with me at Sentry. </p>
<p>Check out our <a href="https://sentry.io/careers/">open positions</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3wWJj2Xamb0cT0EWtRh7v/936bbe3ea380bf00bafed4bb22a93ae0/Vienna.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack June: A Recap</title>
      <link>https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/</link>
      <description>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:  Our Next.js SDK monitors…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><div><a href="https://twitter.com/intent/tweet?text=Jamstack%20June%3A%20A%20Recap%20https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;rl=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;via=getsentry&amp;amp;related=getsentry"><div><svg color="#1DA1F2" viewBox="0 0 16 16" version="1.1"><path d="M16,3a6.56,6.56,0,0,1-1.89.52,3.29,3.29,0,0,0,1.44-1.82,6.57,6.57,0,0,1-2.08.8,3.3,3.3,0,0,0-5.59,3A9.32,9.32,0,0,1,1.11,2.1a3.32,3.32,0,0,0,1,4.38A3.27,3.27,0,0,1,.64,6.07,3.32,3.32,0,0,0,3.28,9.33a3.32,3.32,0,0,1-1.48.06,3.29,3.29,0,0,0,3.07,2.28A6.66,6.66,0,0,1,0,13a9.48,9.48,0,0,0,10.71-.39,9.61,9.61,0,0,0,3.65-7.9A6.67,6.67,0,0,0,16,3C15.41,3.3,15.56,3.7,16,3Z" fill="currentColor"></path></svg><p><span>Share on Twitter</span></p></div></a><a href="https://facebook.com/sharer.php?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/"><div><svg color="#156df0" viewBox="0 0 16 16" version="1.1"><path d="M15.1 0H.89A.89.89 0 0 0 0 .9v14.2a.89.89 0 0 0 .89.9h7.89V9.6H6.39V7.2h2.39V5.6c0-2.06 1-3.17 2.84-3.17.88 0 1.71-.05 2 0V4.8H12c-1 0-.8.11-.8.8v1.6h2.4l-.8 2.4h-1.6V16h3.9a.89.89 0 0 0 .9-.9V.9a.89.89 0 0 0-.9-.9z" fill="currentColor" fill-rule="evenodd"></path></svg><p><span>Share on Facebook</span></p></div></a><a href="http://news.ycombinator.com/submitlink?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;t=Jamstack%20June%3A%20A%20Recap"><div><svg color="#ff6600" viewBox="0 0 16 16" version="1.1"><path d="M0 0v16h16V0zm15 15H1V1h14zM7.61 9a.57.57 0 0 1 0 .32v3.06h1.17V9.23a.41.41 0 0 1 0-.19c.77-1.46 1.56-2.92 2.33-4.38.09-.21.22-.4.29-.62a7.46 7.46 0 0 0-1.16 0c-.54 1.11-1.11 2.27-1.7 3.41-.1.18-.18.37-.29.54-.13-.21-.23-.44-.35-.66L6.34 4.11S6.3 4 6.24 4H5c.14.32.32.62.48.93C6.18 6.31 6.9 7.64 7.61 9z" fill="currentColor"></path></svg><p><span>Share on HackerNews</span></p></div></a></div><article><p><time datetime="2021-07-01T00:00">July 1, 2021</time></p><ul><li><a href="https://blog.sentry.io/sdk-updates/"><span>SDK Updates</span></a></li></ul><div><p>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">Our Next.js SDK</a> monitors your Next.js projects to capture errors, automatically upload source maps, and trace errors to the commit that broke your code — all so stack traces look like your original code. </p>
<p>We teamed up with Netlify to walk you through <a href="https://www.youtube.com/watch?v=xEikLxEcNiU">how to build, deploy, and monitor your Next.js applications</a>. </p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/xEikLxEcNiU/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/sddefault.webp 640w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/default.webp 120w"/><img src="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/xEikLxEcNiU/sddefault.jpg 640w, https://i.ytimg.com/vi/xEikLxEcNiU/hqdefault.jpg 480w, https://i.ytimg.com/vi/xEikLxEcNiU/mqdefault.jpg 320w, https://i.ytimg.com/vi/xEikLxEcNiU/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<p>What makes JavaScript great is also what makes it frustrating to debug. Find out <a href="https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/">why debugging Javascript sucks — and what you can do about it</a>.</p>
<p>And this month, we’ll be riffing on ways you can trace performance issues from the frontend to the backend — stay tuned. In the meantime, drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article><div><p>Your code is broken. Let&#39;s Fix it.</p><p><a href="https://sentry.io/signup"><span>Get Started</span></a></p></div></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack June: A Recap</title>
      <link>https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/</link>
      <description>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:  Our Next.js SDK monitors…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><div><a href="https://twitter.com/intent/tweet?text=Jamstack%20June%3A%20A%20Recap%20https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;rl=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;via=getsentry&amp;amp;related=getsentry"><div><svg color="#1DA1F2" viewBox="0 0 16 16" version="1.1"><path d="M16,3a6.56,6.56,0,0,1-1.89.52,3.29,3.29,0,0,0,1.44-1.82,6.57,6.57,0,0,1-2.08.8,3.3,3.3,0,0,0-5.59,3A9.32,9.32,0,0,1,1.11,2.1a3.32,3.32,0,0,0,1,4.38A3.27,3.27,0,0,1,.64,6.07,3.32,3.32,0,0,0,3.28,9.33a3.32,3.32,0,0,1-1.48.06,3.29,3.29,0,0,0,3.07,2.28A6.66,6.66,0,0,1,0,13a9.48,9.48,0,0,0,10.71-.39,9.61,9.61,0,0,0,3.65-7.9A6.67,6.67,0,0,0,16,3C15.41,3.3,15.56,3.7,16,3Z" fill="currentColor"></path></svg><p><span>Share on Twitter</span></p></div></a><a href="https://facebook.com/sharer.php?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/"><div><svg color="#156df0" viewBox="0 0 16 16" version="1.1"><path d="M15.1 0H.89A.89.89 0 0 0 0 .9v14.2a.89.89 0 0 0 .89.9h7.89V9.6H6.39V7.2h2.39V5.6c0-2.06 1-3.17 2.84-3.17.88 0 1.71-.05 2 0V4.8H12c-1 0-.8.11-.8.8v1.6h2.4l-.8 2.4h-1.6V16h3.9a.89.89 0 0 0 .9-.9V.9a.89.89 0 0 0-.9-.9z" fill="currentColor" fill-rule="evenodd"></path></svg><p><span>Share on Facebook</span></p></div></a><a href="http://news.ycombinator.com/submitlink?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;t=Jamstack%20June%3A%20A%20Recap"><div><svg color="#ff6600" viewBox="0 0 16 16" version="1.1"><path d="M0 0v16h16V0zm15 15H1V1h14zM7.61 9a.57.57 0 0 1 0 .32v3.06h1.17V9.23a.41.41 0 0 1 0-.19c.77-1.46 1.56-2.92 2.33-4.38.09-.21.22-.4.29-.62a7.46 7.46 0 0 0-1.16 0c-.54 1.11-1.11 2.27-1.7 3.41-.1.18-.18.37-.29.54-.13-.21-.23-.44-.35-.66L6.34 4.11S6.3 4 6.24 4H5c.14.32.32.62.48.93C6.18 6.31 6.9 7.64 7.61 9z" fill="currentColor"></path></svg><p><span>Share on HackerNews</span></p></div></a></div><article><p><time datetime="2021-07-01T00:00">July 1, 2021</time></p><ul><li><a href="https://blog.sentry.io/sdk-updates/"><span>SDK Updates</span></a></li></ul><div><p>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">Our Next.js SDK</a> monitors your Next.js projects to capture errors, automatically upload source maps, and trace errors to the commit that broke your code — all so stack traces look like your original code. </p>
<p>We teamed up with Netlify to walk you through <a href="https://www.youtube.com/watch?v=xEikLxEcNiU">how to build, deploy, and monitor your Next.js applications</a>. </p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/xEikLxEcNiU/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/sddefault.webp 640w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/default.webp 120w"/><img src="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/xEikLxEcNiU/sddefault.jpg 640w, https://i.ytimg.com/vi/xEikLxEcNiU/hqdefault.jpg 480w, https://i.ytimg.com/vi/xEikLxEcNiU/mqdefault.jpg 320w, https://i.ytimg.com/vi/xEikLxEcNiU/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<p>What makes JavaScript great is also what makes it frustrating to debug. Find out <a href="https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/">why debugging Javascript sucks — and what you can do about it</a>.</p>
<p>And this month, we’ll be riffing on ways you can trace performance issues from the frontend to the backend — stay tuned. In the meantime, drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article><div><p>Your code is broken. Let&#39;s Fix it.</p><p><a href="https://sentry.io/signup"><span>Get Started</span></a></p></div></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack June: A Recap</title>
      <link>https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/</link>
      <description>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:  Our Next.js SDK monitors…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><div><a href="https://twitter.com/intent/tweet?text=Jamstack%20June%3A%20A%20Recap%20https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;rl=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;via=getsentry&amp;amp;related=getsentry"><div><svg color="#1DA1F2" viewBox="0 0 16 16" version="1.1"><path d="M16,3a6.56,6.56,0,0,1-1.89.52,3.29,3.29,0,0,0,1.44-1.82,6.57,6.57,0,0,1-2.08.8,3.3,3.3,0,0,0-5.59,3A9.32,9.32,0,0,1,1.11,2.1a3.32,3.32,0,0,0,1,4.38A3.27,3.27,0,0,1,.64,6.07,3.32,3.32,0,0,0,3.28,9.33a3.32,3.32,0,0,1-1.48.06,3.29,3.29,0,0,0,3.07,2.28A6.66,6.66,0,0,1,0,13a9.48,9.48,0,0,0,10.71-.39,9.61,9.61,0,0,0,3.65-7.9A6.67,6.67,0,0,0,16,3C15.41,3.3,15.56,3.7,16,3Z" fill="currentColor"></path></svg><p><span>Share on Twitter</span></p></div></a><a href="https://facebook.com/sharer.php?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/"><div><svg color="#156df0" viewBox="0 0 16 16" version="1.1"><path d="M15.1 0H.89A.89.89 0 0 0 0 .9v14.2a.89.89 0 0 0 .89.9h7.89V9.6H6.39V7.2h2.39V5.6c0-2.06 1-3.17 2.84-3.17.88 0 1.71-.05 2 0V4.8H12c-1 0-.8.11-.8.8v1.6h2.4l-.8 2.4h-1.6V16h3.9a.89.89 0 0 0 .9-.9V.9a.89.89 0 0 0-.9-.9z" fill="currentColor" fill-rule="evenodd"></path></svg><p><span>Share on Facebook</span></p></div></a><a href="http://news.ycombinator.com/submitlink?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;t=Jamstack%20June%3A%20A%20Recap"><div><svg color="#ff6600" viewBox="0 0 16 16" version="1.1"><path d="M0 0v16h16V0zm15 15H1V1h14zM7.61 9a.57.57 0 0 1 0 .32v3.06h1.17V9.23a.41.41 0 0 1 0-.19c.77-1.46 1.56-2.92 2.33-4.38.09-.21.22-.4.29-.62a7.46 7.46 0 0 0-1.16 0c-.54 1.11-1.11 2.27-1.7 3.41-.1.18-.18.37-.29.54-.13-.21-.23-.44-.35-.66L6.34 4.11S6.3 4 6.24 4H5c.14.32.32.62.48.93C6.18 6.31 6.9 7.64 7.61 9z" fill="currentColor"></path></svg><p><span>Share on HackerNews</span></p></div></a></div><article><p><time datetime="2021-07-01T00:00">July 1, 2021</time></p><ul><li><a href="https://blog.sentry.io/sdk-updates/"><span>SDK Updates</span></a></li></ul><div><p>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">Our Next.js SDK</a> monitors your Next.js projects to capture errors, automatically upload source maps, and trace errors to the commit that broke your code — all so stack traces look like your original code. </p>
<p>We teamed up with Netlify to walk you through <a href="https://www.youtube.com/watch?v=xEikLxEcNiU">how to build, deploy, and monitor your Next.js applications</a>. </p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/xEikLxEcNiU/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/sddefault.webp 640w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/default.webp 120w"/><img src="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/xEikLxEcNiU/sddefault.jpg 640w, https://i.ytimg.com/vi/xEikLxEcNiU/hqdefault.jpg 480w, https://i.ytimg.com/vi/xEikLxEcNiU/mqdefault.jpg 320w, https://i.ytimg.com/vi/xEikLxEcNiU/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<p>What makes JavaScript great is also what makes it frustrating to debug. Find out <a href="https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/">why debugging Javascript sucks — and what you can do about it</a>.</p>
<p>And this month, we’ll be riffing on ways you can trace performance issues from the frontend to the backend — stay tuned. In the meantime, drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article><div><p>Your code is broken. Let&#39;s Fix it.</p><p><a href="https://sentry.io/signup"><span>Get Started</span></a></p></div></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why Debugging JavaScript Sucks — And What You Can Do About It</title>
      <link>https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/</link>
      <description>What makes JavaScript great is also what makes it frustrating to debug, but there are methods you can use to improve this unfortunate debugging experience.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>What makes JavaScript great is also what makes it frustrating to debug. Its asynchronous nature makes it easy to manipulate the DOM in response to user events, but it also makes it difficult to locate problems. And JavaScript’s ubiquity has resulted in a variety of runtimes (e.g. Chromium’s V8,  Safari’s JavaScriptCore, and Firefox’s SpiderMonkey) but having so many platforms can cause dizzying idiosyncracies — all of which need to be supported equally.</p>
<p>This makes debugging Javascript and pinning down the root cause of your errors difficult. Is it a memory leak?  Browser-specific bug? Or maybe you referenced the wrong value of <code>this</code>? And while there are options to debug your JavaScript, none of them are particularly pleasant: </p>
<p><strong>Reproducing the issue</strong> is the equivalent of cooking a poorly received dinner again just to taste what went wrong. And it’s borderline impossible to reproduce the exact conditions of runtime environments, hardware, and network inconsistencies.</p>
<p>While <strong>console.log</strong> is great if you’re debugging JavaScript locally, it’s not really helpful if you can’t reproduce it — or if you want to debug in production. That’s because logging merely identifies where in the codebase you are — but not what the problem is.   </p>
<p>If you have managed to successfully reproduce a bug, <strong>in-browser debugging tools</strong> are the next step, but if you don’t have <a href="https://docs.sentry.io/platforms/javascript/sourcemaps/">source maps</a> available in production, good luck finding the root cause as you squint at minified JavaScript and opaque error codes.</p>
<h2 id="its-ok-to-be-lazy"><a href="#its-ok-to-be-lazy" aria-label="its ok to be lazy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>It’s Ok To Be Lazy</h2>
<p>Let’s be honest: you didn’t get this far by working hard. You did it by figuring out which tools can do the hard work for you. And <a href="http://sentry.io/for/javascript">Sentry’s suite of JavaScript monitoring tools</a> seamlessly hooks into your runtime environment to do the heavy lifting of debugging for you:</p>
<p><strong><a href="https://docs.sentry.io/platforms/javascript/">Sentry for JavaScript</a></strong> gives you complete context in the form of full stack traces, support for source maps that unminify your code, and direct integration with your source code management tool to help you <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/configure-scms/">identify the commit</a> that broke your code.</p>
</div><div>
<p>Our <strong><a href="https://docs.sentry.io/product/issues/issue-details/">Issue Details</a></strong> page gives you the device, OS, browser of your user to give you full visibility into what led up to your JavaScript incident. And if you are using <code>console.log</code> to debug in production, we can capture <a href="https://docs.sentry.io/product/issues/issue-details/breadcrumbs/">breadcrumbs</a> to create the trail of events that happened prior to an issue — then use our rich, structured data to see beyond what any log can give you.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188&amp;fm=webp 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750&amp;fm=webp 750w" sizes="(max-width: 750px) 100vw, 750px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750 750w" sizes="(max-width: 750px) 100vw, 750px"/>
          <img alt="smallScreen Shot 2021-06-28 at 8.47.49 PM copy" title="" src="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And with <strong><a href="https://docs.sentry.io/product/discover-queries/">Discover</a></strong>, our intuitive query builder, you can debug JavaScript with pre-built searches that filter your JavaScript events, unique errors, errors by URL, and client. Check out Discover’s <a href="https://blog.sentry.io/2020/02/11/new-debugging-superpowers-with-discover">debugging superpowers</a> — and how we used it to root out our own <a href="https://blog.sentry.io/2021/02/11/patching-a-flood-of-404s">404 errors</a>.</p>
<p>Brian Kernighan — the inventor of Unix — said the most effective debugging tool is careful thought. Well, Kernighan didn’t have to debug why a valid regular expression throws an exception on Safari — or deal with the rapid increase of JavaScript-driven web APIs. But with Sentry’s application monitoring tools, you can save your careful thought for where it belongs: your code, not your errors.</p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6L8G5xKVLlbfRGF3BcVb6Z/222282ceff456d9020f9a7cd0cc87d14/Errors2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why Debugging JavaScript Sucks — And What You Can Do About It</title>
      <link>https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/</link>
      <description>What makes JavaScript great is also what makes it frustrating to debug. Its asynchronous nature makes it easy to manipulate the DOM in…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>What makes JavaScript great is also what makes it frustrating to debug. Its asynchronous nature makes it easy to manipulate the DOM in response to user events, but it also makes it difficult to locate problems. And JavaScript’s ubiquity has resulted in a variety of runtimes (e.g. Chromium’s V8,  Safari’s JavaScriptCore, and Firefox’s SpiderMonkey) but having so many platforms can cause dizzying idiosyncracies — all of which need to be supported equally.</p>
<p>This makes pinning down the root cause of your JavaScript errors difficult. Is it a memory leak?  Browser-specific bug? Or maybe you referenced the wrong value of <code>this</code>? And while there are options to debug your JavaScript, none of them are particularly pleasant: </p>
<p><strong>Reproducing the issue</strong> is the equivalent of cooking a poorly received dinner again just to taste what went wrong. And it’s borderline impossible to reproduce the exact conditions of runtime environments, hardware, and network inconsistencies.</p>
<p>While <strong>console.log</strong> is great if you’re debugging locally, it’s not really helpful if you can’t reproduce it — or if you want to debug in production. That’s because logging merely identifies where in the codebase you are — but not what the problem is.   </p>
<p>If you have managed to successfully reproduce a bug, <strong>in-browser debugging tools</strong> are the next step, but if you don’t have <a href="https://docs.sentry.io/platforms/javascript/sourcemaps/">source maps</a> available in production, good luck finding the root cause as you squint at minified JavaScript and opaque error codes.</p>
<h2 id="its-ok-to-be-lazy"><a href="#its-ok-to-be-lazy" aria-label="its ok to be lazy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>It’s Ok To Be Lazy</h2>
<p>Let’s be honest: you didn’t get this far by working hard. You did it by figuring out which tools can do the hard work for you. And <a href="http://sentry.io/for/javascript">Sentry’s suite of monitoring tools</a> seamlessly hooks into your runtime environment to do the heavy lifting of debugging for you:</p>
<p><strong><a href="https://docs.sentry.io/platforms/javascript/">Sentry for JavaScript</a></strong> gives you complete context in the form of full stack traces, support for source maps that unminify your code, and direct integration with your source code management tool to help you <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/configure-scms/">identify the commit</a> that broke your code.</p>
</div><div>
<p>Our <strong><a href="https://docs.sentry.io/product/issues/issue-details/">Issue Details</a></strong> page gives you the device, OS, browser of your user to give you full visibility into what led up to your JavaScript incident. And if you are using <code>console.log</code> to debug in production, we can capture <a href="https://docs.sentry.io/product/issues/issue-details/breadcrumbs/">breadcrumbs</a> to create the trail of events that happened prior to an issue — then use our rich, structured data to see beyond what any log can give you.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188&amp;fm=webp 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750&amp;fm=webp 750w" sizes="(max-width: 750px) 100vw, 750px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750 750w" sizes="(max-width: 750px) 100vw, 750px"/>
          <img alt="smallScreen Shot 2021-06-28 at 8.47.49 PM copy" title="" src="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And with <strong><a href="https://docs.sentry.io/product/discover-queries/">Discover</a></strong>, our intuitive query builder, you can debug with pre-built searches that filter your JavaScript events, unique errors, errors by URL, and client. Check out Discover’s <a href="https://blog.sentry.io/2020/02/11/new-debugging-superpowers-with-discover">debugging superpowers</a> — and how we used it to root out our own <a href="https://blog.sentry.io/2021/02/11/patching-a-flood-of-404s">404 errors</a>.</p>
<p>Brian Kernighan — the inventor of Unix — said the most effective debugging tool is careful thought. Well, Kernighan didn’t have to debug why a valid regular expression throws an exception on Safari — or deal with the rapid increase of JavaScript-driven web APIs. But with Sentry’s application monitoring tools, you can save your careful thought for where it belongs: your code, not your errors.</p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6L8G5xKVLlbfRGF3BcVb6Z/222282ceff456d9020f9a7cd0cc87d14/Errors2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why Debugging JavaScript Sucks — And What You Can Do About It</title>
      <link>https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/</link>
      <description>What makes JavaScript great is also what makes it frustrating to debug, but there are methods you can use to improve this unfortunate debugging experience.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>What makes JavaScript great is also what makes it frustrating to debug. Its asynchronous nature makes it easy to manipulate the DOM in response to user events, but it also makes it difficult to locate problems. And JavaScript’s ubiquity has resulted in a variety of runtimes (e.g. Chromium’s V8,  Safari’s JavaScriptCore, and Firefox’s SpiderMonkey) but having so many platforms can cause dizzying idiosyncracies — all of which need to be supported equally.</p>
<p>This makes debugging Javascript and pinning down the root cause of your errors difficult. Is it a memory leak?  Browser-specific bug? Or maybe you referenced the wrong value of <code>this</code>? And while there are options to debug your JavaScript, none of them are particularly pleasant: </p>
<p><strong>Reproducing the issue</strong> is the equivalent of cooking a poorly received dinner again just to taste what went wrong. And it’s borderline impossible to reproduce the exact conditions of runtime environments, hardware, and network inconsistencies.</p>
<p>While <strong>console.log</strong> is great if you’re debugging JavaScript locally, it’s not really helpful if you can’t reproduce it — or if you want to debug in production. That’s because logging merely identifies where in the codebase you are — but not what the problem is.   </p>
<p>If you have managed to successfully reproduce a bug, <strong>in-browser debugging tools</strong> are the next step, but if you don’t have <a href="https://docs.sentry.io/platforms/javascript/sourcemaps/">source maps</a> available in production, good luck finding the root cause as you squint at minified JavaScript and opaque error codes.</p>
<h2 id="its-ok-to-be-lazy"><a href="#its-ok-to-be-lazy" aria-label="its ok to be lazy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>It’s Ok To Be Lazy</h2>
<p>Let’s be honest: you didn’t get this far by working hard. You did it by figuring out which tools can do the hard work for you. And <a href="http://sentry.io/for/javascript">Sentry’s suite of JavaScript monitoring tools</a> seamlessly hooks into your runtime environment to do the heavy lifting of debugging for you:</p>
<p><strong><a href="https://docs.sentry.io/platforms/javascript/">Sentry for JavaScript</a></strong> gives you complete context in the form of full stack traces, support for source maps that unminify your code, and direct integration with your source code management tool to help you <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/configure-scms/">identify the commit</a> that broke your code.</p>
</div><div>
<p>Our <strong><a href="https://docs.sentry.io/product/issues/issue-details/">Issue Details</a></strong> page gives you the device, OS, browser of your user to give you full visibility into what led up to your JavaScript incident. And if you are using <code>console.log</code> to debug in production, we can capture <a href="https://docs.sentry.io/product/issues/issue-details/breadcrumbs/">breadcrumbs</a> to create the trail of events that happened prior to an issue — then use our rich, structured data to see beyond what any log can give you.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188&amp;fm=webp 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750&amp;fm=webp 750w" sizes="(max-width: 750px) 100vw, 750px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750 750w" sizes="(max-width: 750px) 100vw, 750px"/>
          <img alt="smallScreen Shot 2021-06-28 at 8.47.49 PM copy" title="" src="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And with <strong><a href="https://docs.sentry.io/product/discover-queries/">Discover</a></strong>, our intuitive query builder, you can debug JavaScript with pre-built searches that filter your JavaScript events, unique errors, errors by URL, and client. Check out Discover’s <a href="https://blog.sentry.io/2020/02/11/new-debugging-superpowers-with-discover">debugging superpowers</a> — and how we used it to root out our own <a href="https://blog.sentry.io/2021/02/11/patching-a-flood-of-404s">404 errors</a>.</p>
<p>Brian Kernighan — the inventor of Unix — said the most effective debugging tool is careful thought. Well, Kernighan didn’t have to debug why a valid regular expression throws an exception on Safari — or deal with the rapid increase of JavaScript-driven web APIs. But with Sentry’s application monitoring tools, you can save your careful thought for where it belongs: your code, not your errors.</p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6L8G5xKVLlbfRGF3BcVb6Z/222282ceff456d9020f9a7cd0cc87d14/Errors2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack, Next.js, Netlify, and Sentry: How The Pieces Fit</title>
      <link>https://blog.sentry.io/2021/06/17/jamstack-next-js-netlify-and-sentry-how-the-pieces-fit/</link>
      <description>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle custom APIs and serverless functions. By separating the frontend UI from backend databases,  Jamstack allows developers to structure their application in ways that deliver  dynamic content faster. Jamstack also gives you the ability to deploy your frontend directly to a CDN, which enables modular development that can leverage a huge ecosystem of third-party tools  — including Sentry.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="nextjs"><a href="#nextjs" aria-label="nextjs permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next.js</h2>
<p>Next.js offers everything you want in a JavaScript framework: minimal configuration, TypeScript support, smart bundling, and route prefetching. </p>
<p>  <em>We manage several large customer-facing properties and Next.js gives us     the flexibility to easily build static and dynamic pages without spinning   up servers or sacrificing the end-user experience. With Next.js, we can     see our changes locally in 100s of milliseconds and have reduced build       times for our larger projects from 35 minutes to 7.</em><br/>
<strong>Michael Wickett, Group Manager, Web Development, HashiCorp</strong></p>
<p>And when you install our <a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">freshly-released Next.js SDK</a>, you get the necessary context to understand how certain events can lead to errors or performance issues in your application.  Our <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">Next.js SDK</a> automatically captures errors, breadcrumbs that show what led to an issue, and all the meta data required to fully diagnose a critical problem. </p>
<h2 id="netlify"><a href="#netlify" aria-label="netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Netlify</h2>
<p>The <a href="https://www.netlify.com/products/?utm_source=netlify.com%2Fblog%2F&amp;utm_medium=blog&amp;utm_campaign=partner-post-sentry">Netlify platform</a> combines modern build workflows, serverless functions, and an edge network to deliver simple, secure, and scalable Jamstack applications. With Netlify’s custom testing environments, you’re able to evaluate multiple new features at the same time without needing to schedule feature previews for approval on a single test instance. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-netlify" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="sentry-build-plugin-for-netlify"><a href="#sentry-build-plugin-for-netlify" aria-label="sentry build plugin for netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry Build Plugin for Netlify</h2>
<p>And just as Netlify hosts your Jamstack application, Sentry monitors it with our <a href="https://blog.sentry.io/2020/06/08/automating-sentry-releases-with-our-netlify-build-plugin">Build Plugin</a>. Not only does our Build Plugin automatically notify you of new releases, it uploads source maps and configures suspect commits within the Sentry platform. And if you do see anything suspicious, Netlify makes it easy to instantly roll back to a previous, sturdier version of your application.</p>
<p><em>The most noticeable for us was saving an average of three hours per week on performing deploys, setting up configurations and maintaining        infrastructure. For a small web dev team, this has a huge impact.</em><br/>
<strong>Primož Bevk, Senior IT Strategist at Outfit7</strong></p>
<h2 id="discover"><a href="#discover" aria-label="discover permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover</h2>
<p>It’s not enough to know when a performance issue happened. You need to know who’s impacted by that issue, to what extent, and how it occurred. <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">Discover</a> solves these needs, as you can identify application performance issues, analyze releases, define a metric alert to get notified of similar issue — in addition to evaluating the line of code that’s causing the error.</p>
<p>Just as application errors are related, the tools to fix those errors should be related as well. It’s why you don’t need a bunch of disconnected tools to monitor your application; you need an integrated, intuitive approach to investigate problems. With Jamstack’s simplicity and Sentry’s visibility, you’re well on your way toward creating — and maintaining  —  the type of applications that your customers demand.</p>
<p>Looking for best practices on building, deploying, and monitoring your Next.js applications? Neil Manvar (Solutions Engineer @Sentry) and Ramin Sedighi (Solutions Engineer @Netlify) are hosting a webinar on June 24th. Register <a href="https://us06web.zoom.us/webinar/register/2216239684811/WN_znhaqwALTXWf-3Rqtf8mBQ">here</a>.</p>
<p>In the meantime, try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack, Next.js, Netlify, and Sentry: How The Pieces Fit</title>
      <link>https://blog.sentry.io/2021/06/17/jamstack-next-js-netlify-and-sentry-how-the-pieces-fit/</link>
      <description>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle custom APIs and serverless functions. By separating the frontend UI from backend databases,  Jamstack allows developers to structure their application in ways that deliver  dynamic content faster. Jamstack also gives you the ability to deploy your frontend directly to a CDN, which enables modular development that can leverage a huge ecosystem of third-party tools  — including Sentry.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="nextjs"><a href="#nextjs" aria-label="nextjs permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next.js</h2>
<p>Next.js offers everything you want in a JavaScript framework: minimal configuration, TypeScript support, smart bundling, and route prefetching. </p>
<p>  <em>We manage several large customer-facing properties and Next.js gives us     the flexibility to easily build static and dynamic pages without spinning   up servers or sacrificing the end-user experience. With Next.js, we can     see our changes locally in 100s of milliseconds and have reduced build       times for our larger projects from 35 minutes to 7.</em><br/>
<strong>Michael Wickett, Group Manager, Web Development, HashiCorp</strong></p>
<p>And when you install our <a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">freshly-released Next.js SDK</a>, you get the necessary context to understand how certain events can lead to errors or performance issues in your application.  Our <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">Next.js SDK</a> automatically captures errors, breadcrumbs that show what led to an issue, and all the meta data required to fully diagnose a critical problem. </p>
<h2 id="netlify"><a href="#netlify" aria-label="netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Netlify</h2>
<p>The <a href="https://www.netlify.com/products/?utm_source=netlify.com%2Fblog%2F&amp;utm_medium=blog&amp;utm_campaign=partner-post-sentry">Netlify platform</a> combines modern build workflows, serverless functions, and an edge network to deliver simple, secure, and scalable Jamstack applications. With Netlify’s custom testing environments, you’re able to evaluate multiple new features at the same time without needing to schedule feature previews for approval on a single test instance. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-netlify" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="sentry-build-plugin-for-netlify"><a href="#sentry-build-plugin-for-netlify" aria-label="sentry build plugin for netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry Build Plugin for Netlify</h2>
<p>And just as Netlify hosts your Jamstack application, Sentry monitors it with our <a href="https://blog.sentry.io/2020/06/08/automating-sentry-releases-with-our-netlify-build-plugin">Build Plugin</a>. Not only does our Build Plugin automatically notify you of new releases, it uploads source maps and configures suspect commits within the Sentry platform. And if you do see anything suspicious, Netlify makes it easy to instantly roll back to a previous, sturdier version of your application.</p>
<p><em>The most noticeable for us was saving an average of three hours per week on performing deploys, setting up configurations and maintaining        infrastructure. For a small web dev team, this has a huge impact.</em><br/>
<strong>Primož Bevk, Senior IT Strategist at Outfit7</strong></p>
<h2 id="discover"><a href="#discover" aria-label="discover permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover</h2>
<p>It’s not enough to know when a performance issue happened. You need to know who’s impacted by that issue, to what extent, and how it occurred. <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">Discover</a> solves these needs, as you can identify application performance issues, analyze releases, define a metric alert to get notified of similar issue — in addition to evaluating the line of code that’s causing the error.</p>
<p>Just as application errors are related, the tools to fix those errors should be related as well. It’s why you don’t need a bunch of disconnected tools to monitor your application; you need an integrated, intuitive approach to investigate problems. With Jamstack’s simplicity and Sentry’s visibility, you’re well on your way toward creating — and maintaining  —  the type of applications that your customers demand.</p>
<p>Looking for best practices on building, deploying, and monitoring your Next.js applications? Neil Manvar (Solutions Engineer @Sentry) and Ramin Sedighi (Solutions Engineer @Netlify) are hosting a webinar on June 24th. Register <a href="https://us06web.zoom.us/webinar/register/2216239684811/WN_znhaqwALTXWf-3Rqtf8mBQ">here</a>.</p>
<p>In the meantime, try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack, Next.js, Netlify, and Sentry: How The Pieces Fit</title>
      <link>https://blog.sentry.io/2021/06/17/jamstack-next-js-netlify-and-sentry-how-the-pieces-fit/</link>
      <description>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle custom APIs and serverless functions. By separating the frontend UI from backend databases,  Jamstack allows developers to structure their application in ways that deliver  dynamic content faster. Jamstack also gives you the ability to deploy your frontend directly to a CDN, which enables modular development that can leverage a huge ecosystem of third-party tools  — including Sentry.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="nextjs"><a href="#nextjs" aria-label="nextjs permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next.js</h2>
<p>Next.js offers everything you want in a JavaScript framework: minimal configuration, TypeScript support, smart bundling, and route prefetching. </p>
<p>  <em>We manage several large customer-facing properties and Next.js gives us     the flexibility to easily build static and dynamic pages without spinning   up servers or sacrificing the end-user experience. With Next.js, we can     see our changes locally in 100s of milliseconds and have reduced build       times for our larger projects from 35 minutes to 7.</em><br/>
<strong>Michael Wickett, Group Manager, Web Development, HashiCorp</strong></p>
<p>And when you install our <a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">freshly-released Next.js SDK</a>, you get the necessary context to understand how certain events can lead to errors or performance issues in your application.  Our <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">Next.js SDK</a> automatically captures errors, breadcrumbs that show what led to an issue, and all the meta data required to fully diagnose a critical problem. </p>
<h2 id="netlify"><a href="#netlify" aria-label="netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Netlify</h2>
<p>The <a href="https://www.netlify.com/products/?utm_source=netlify.com%2Fblog%2F&amp;utm_medium=blog&amp;utm_campaign=partner-post-sentry">Netlify platform</a> combines modern build workflows, serverless functions, and an edge network to deliver simple, secure, and scalable Jamstack applications. With Netlify’s custom testing environments, you’re able to evaluate multiple new features at the same time without needing to schedule feature previews for approval on a single test instance. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-netlify" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="sentry-build-plugin-for-netlify"><a href="#sentry-build-plugin-for-netlify" aria-label="sentry build plugin for netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry Build Plugin for Netlify</h2>
<p>And just as Netlify hosts your Jamstack application, Sentry monitors it with our <a href="https://blog.sentry.io/2020/06/08/automating-sentry-releases-with-our-netlify-build-plugin">Build Plugin</a>. Not only does our Build Plugin automatically notify you of new releases, it uploads source maps and configures suspect commits within the Sentry platform. And if you do see anything suspicious, Netlify makes it easy to instantly roll back to a previous, sturdier version of your application.</p>
<p><em>The most noticeable for us was saving an average of three hours per week on performing deploys, setting up configurations and maintaining        infrastructure. For a small web dev team, this has a huge impact.</em><br/>
<strong>Primož Bevk, Senior IT Strategist at Outfit7</strong></p>
<h2 id="discover"><a href="#discover" aria-label="discover permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover</h2>
<p>It’s not enough to know when a performance issue happened. You need to know who’s impacted by that issue, to what extent, and how it occurred. <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">Discover</a> solves these needs, as you can identify application performance issues, analyze releases, define a metric alert to get notified of similar issue — in addition to evaluating the line of code that’s causing the error.</p>
<p>Just as application errors are related, the tools to fix those errors should be related as well. It’s why you don’t need a bunch of disconnected tools to monitor your application; you need an integrated, intuitive approach to investigate problems. With Jamstack’s simplicity and Sentry’s visibility, you’re well on your way toward creating — and maintaining  —  the type of applications that your customers demand.</p>
<p>Looking for best practices on building, deploying, and monitoring your Next.js applications? Neil Manvar (Solutions Engineer @Sentry) and Ramin Sedighi (Solutions Engineer @Netlify) are hosting a webinar on June 24th. Register <a href="https://us06web.zoom.us/webinar/register/2216239684811/WN_znhaqwALTXWf-3Rqtf8mBQ">here</a>.</p>
<p>In the meantime, try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Find the Root Cause Faster with Trace View and Trace Navigator</title>
      <link>https://blog.sentry.io/2021/06/15/find-the-root-cause-faster-with-trace-view-and-quick-trace/</link>
      <description>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner: Why is my page slow? &#xA;Guess…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner:</p>
<p>Why is my page slow? <br/>
<em>Guess it’s the API call. It’s a 504 thing — you wouldn’t understand.</em></p>
<p>Ok, so why is the API call slow? <br/>
<em>Ask your DB query. Gosh!</em></p>
<p>You need a better conversation with your code — one which gives you contextual clues about your application’s performance. And that’s what we’ve delivered with our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a> features.</p>
<h2 id="connect-your-slow-loading-dots-with-trace-view"><a href="#connect-your-slow-loading-dots-with-trace-view" aria-label="connect your slow loading dots with trace view permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Connect your slow-loading dots with Trace View</h2>
<p>Trace View gives you a throughline between transactions across all your projects. Now you can follow poor performance to its root cause by drilling down into the details of a single trace as well as crisscrossing between front- and back-end transactions in that trace. </p>
<p>For example: say you have a React single-page app, and it makes a call to a backend API in Python, which then queries the database. By using Trace View, you can see how your code progresses from the initial call to the final query — and see how related errors react to each other in context. </p>
</div><div>
<p>In this tutorial, see how you can use Trace View to jump between parent and child transactions and, ultimately, gain a better understanding of your endpoints.</p>
<h2 id="tldr-your-errors-with-trace-navigator"><a href="#tldr-your-errors-with-trace-navigator" aria-label="tldr your errors with trace navigator permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tl;dr your errors with Trace Navigator</h2>
<p>You don’t read logs — you scan them. So why should your application monitoring be any different? Trace Navigator gives you the context you need to see details at a glance as well as get visibility into the bigger picture. The minimap helps you navigate related errors and children transactions. With it, you can flit between related errors and performance issues while also being able to order metadata like device, OS, and browser. </p>
</div><div>
<p>Developers know that there’s no such thing as an isolated issue. Many of your frontend errors will have roots in your backend infrastructure — and vice versa. With our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a>, you’re able to see the problem clearly — so that you can solve it quicker.  </p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1aJZCx78Fbhi1G5Wjde0oC/f7ed0d10764b6bc489bcef7dd9ed56be/performance3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Find the Root Cause Faster with Trace View and Trace Navigator</title>
      <link>https://blog.sentry.io/2021/06/15/find-the-root-cause-faster-with-trace-view-and-quick-trace/</link>
      <description>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner: Why is my page slow? &#xA;Guess…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner:</p>
<p>Why is my page slow? <br/>
<em>Guess it’s the API call. It’s a 504 thing — you wouldn’t understand.</em></p>
<p>Ok, so why is the API call slow? <br/>
<em>Ask your DB query. Gosh!</em></p>
<p>You need a better conversation with your code — one which gives you contextual clues about your application’s performance. And that’s what we’ve delivered with our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a> features.</p>
<h2 id="connect-your-slow-loading-dots-with-trace-view"><a href="#connect-your-slow-loading-dots-with-trace-view" aria-label="connect your slow loading dots with trace view permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Connect your slow-loading dots with Trace View</h2>
<p>Trace View gives you a throughline between transactions across all your projects. Now you can follow poor performance to its root cause by drilling down into the details of a single trace as well as crisscrossing between front- and back-end transactions in that trace. </p>
<p>For example: say you have a React single-page app, and it makes a call to a backend API in Python, which then queries the database. By using Trace View, you can see how your code progresses from the initial call to the final query — and see how related errors react to each other in context. </p>
</div><div>
<p>In this tutorial, see how you can use Trace View to jump between parent and child transactions and, ultimately, gain a better understanding of your endpoints.</p>
<h2 id="tldr-your-errors-with-trace-navigator"><a href="#tldr-your-errors-with-trace-navigator" aria-label="tldr your errors with trace navigator permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tl;dr your errors with Trace Navigator</h2>
<p>You don’t read logs — you scan them. So why should your application monitoring be any different? Trace Navigator gives you the context you need to see details at a glance as well as get visibility into the bigger picture. The minimap helps you navigate related errors and children transactions. With it, you can flit between related errors and performance issues while also being able to order metadata like device, OS, and browser. </p>
</div><div>
<p>Developers know that there’s no such thing as an isolated issue. Many of your frontend errors will have roots in your backend infrastructure — and vice versa. With our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a>, you’re able to see the problem clearly — so that you can solve it quicker.  </p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1aJZCx78Fbhi1G5Wjde0oC/f7ed0d10764b6bc489bcef7dd9ed56be/performance3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Find the Root Cause Faster with Trace View and Trace Navigator</title>
      <link>https://blog.sentry.io/2021/06/15/find-the-root-cause-faster-with-trace-view-and-quick-trace/</link>
      <description>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner: Why is my page slow? &#xA;Guess…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner:</p>
<p>Why is my page slow? <br/>
<em>Guess it’s the API call. It’s a 504 thing — you wouldn’t understand.</em></p>
<p>Ok, so why is the API call slow? <br/>
<em>Ask your DB query. Gosh!</em></p>
<p>You need a better conversation with your code — one which gives you contextual clues about your application’s performance. And that’s what we’ve delivered with our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a> features.</p>
<h2 id="connect-your-slow-loading-dots-with-trace-view"><a href="#connect-your-slow-loading-dots-with-trace-view" aria-label="connect your slow loading dots with trace view permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Connect your slow-loading dots with Trace View</h2>
<p>Trace View gives you a throughline between transactions across all your projects. Now you can follow poor performance to its root cause by drilling down into the details of a single trace as well as crisscrossing between front- and back-end transactions in that trace. </p>
<p>For example: say you have a React single-page app, and it makes a call to a backend API in Python, which then queries the database. By using Trace View, you can see how your code progresses from the initial call to the final query — and see how related errors react to each other in context. </p>
</div><div>
<p>In this tutorial, see how you can use Trace View to jump between parent and child transactions and, ultimately, gain a better understanding of your endpoints.</p>
<h2 id="tldr-your-errors-with-trace-navigator"><a href="#tldr-your-errors-with-trace-navigator" aria-label="tldr your errors with trace navigator permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tl;dr your errors with Trace Navigator</h2>
<p>You don’t read logs — you scan them. So why should your application monitoring be any different? Trace Navigator gives you the context you need to see details at a glance as well as get visibility into the bigger picture. The minimap helps you navigate related errors and children transactions. With it, you can flit between related errors and performance issues while also being able to order metadata like device, OS, and browser. </p>
</div><div>
<p>Developers know that there’s no such thing as an isolated issue. Many of your frontend errors will have roots in your backend infrastructure — and vice versa. With our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a>, you’re able to see the problem clearly — so that you can solve it quicker.  </p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1aJZCx78Fbhi1G5Wjde0oC/f7ed0d10764b6bc489bcef7dd9ed56be/performance3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Sentry Application Monitoring for Next.js</title>
      <link>https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js/</link>
      <description>As you could probably tell from the title, we shipped an SDK for Next.js. This means you can capture errors, measure performance, manage…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As you could probably tell from the title, we shipped an <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">SDK for Next.js</a>. This means you can capture errors, measure performance, manage releases, configure suspect commits, and automatically upload sourcemaps to view unminified JavaScript and TypeScript with zero(-ish) configuration. </p>
<p>Why was Next.js next on our list? Well, it’s one of the fastest-growing <a href="https://docs.sentry.io/platforms/javascript/guides/react/">React</a> frameworks and developers love it. Next.js provides a developer experience that helps with building features rapidly, seeing local changes quickly, and reducing build times. </p>
<blockquote>
<p>Next.js turns traditionally complex decisions into simple implementation details. Spinning up new pages with our existing React components and Material UI went from days to hours with Next. </p>
</blockquote>
<p><em>Sean Parmelee, Applications Architect, <a href="https://www.care.com/">Care.com</a></em></p>
<p>To monitor Next.js projects in the past, you had to install our <code>@sentry/node</code> and <code>@sentry/react</code> SDKs — installing both and configuring your environment correctly was time-consuming and literally no fun. The new Next.js SDK does all that for you, and works swimmingly with our <a href="https://www.npmjs.com/package/@sentry/webpack-plugin">Webpack Plugin</a> or <a href="https://docs.sentry.io/product/cli/"><code>sentry-cli</code></a> to upload your source maps.</p>
<p>To get started with Sentry for Next.js, simply install the SDK:</p>
<p><code>yarn add @sentry/nextjs</code></p>
<p>And then configure: </p>
<p><code>npx @sentry/wizard -i nextjs</code></p>
<p>Configure <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/performance/">performance monitoring</a> by setting a <code>tracesSampleRate</code> when you initialize the SDK, in both <code>sentry.client.config.js</code> &amp; <code>sentry.server.config.js</code> :</p>
<div data-language="javascript"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
  <span>// ...</span>
  tracesSampleRate<span>:</span> <span>1.0</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>Once you’ve done that, frontend transactions will be captured automatically. To capture API request transactions, wrap your handlers in our <code>withSentry</code> helper. (Hint: If you’re already using our SDK to capture errors in those routes, you will have already done this. No extra configuration needed.)</p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> <span>*</span> <span>as</span> Sentry <span>}</span> from ‘@sentry<span>/</span>nextjs’<span>;</span>
Sentry<span>.</span><span>init</span><span>(</span><span>{</span> <span>...</span> <span>}</span><span>)</span><span>;</span>

<span>function</span> <span>handler</span><span>(</span><span>req<span>,</span> res</span><span>)</span> <span>{</span>
  <span>// ...</span>
<span>}</span>

<span>export</span> <span>default</span> Sentry<span>.</span><span>withSentry</span><span>(</span>handler<span>)</span><span>;</span></code></pre></div>
<p>You can quickly track down poor-performing APIs or slow database queries. With new features like Trace Navigator, <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View</a>, and Suspect Tags, Sentry connects frontend issues to root causes in the backend and vice versa.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195&amp;fm=webp 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390&amp;fm=webp 2390w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390 2390w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="quick-trace" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Trace View gives a waterfall view of a given transaction and dependencies across all projects on a single screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="trace-view" title="" src="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Early adopters of our SDK — like Stefen Alper, Co-Founder of eesel, a content search and centralization tool — are already using Sentry for Next.js to capture errors. Now they (and you) can also capture performance data. </p>
<blockquote>
<p>We moved to Next.js for the dev experience and the scalability. As longtime users of Sentry’s error monitoring offering, we’re looking forward to start monitoring performance and managing releases with Sentry’s new Next.js SDK.  </p>
</blockquote>
<p><em>Stefen Alper, Co-Founder, <a href="https://eesel.app/">eesel.app</a> </em></p>
<p>Install our <a href="https://sentry.io/for/nextjs">Next.js SDK</a> and get a pretty good idea of which commit caused the issue and who is likely responsible, and automatically upload source maps so your stack trace looks like the original code you wrote. Also, <a href="https://us06web.zoom.us/webinar/register/4016233661429/WN_znhaqwALTXWf-3Rqtf8mBQ">join us</a> on June 24th, 2021 for a live workshop on how to build, deploy, and monitor Next.js applications with Sentry and Netlify. </p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png" length="0" type="image/png"></enclosure>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Sentry Application Monitoring for Next.js</title>
      <link>https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js/</link>
      <description>As you could probably tell from the title, we shipped an SDK for Next.js. This means you can capture errors, measure performance, manage…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As you could probably tell from the title, we shipped an <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">SDK for Next.js</a>. This means you can capture errors, measure performance, manage releases, configure suspect commits, and automatically upload sourcemaps to view unminified JavaScript and TypeScript with zero(-ish) configuration. </p>
<p>Why was Next.js next on our list? Well, it’s one of the fastest-growing <a href="https://docs.sentry.io/platforms/javascript/guides/react/">React</a> frameworks and developers love it. Next.js provides a developer experience that helps with building features rapidly, seeing local changes quickly, and reducing build times. </p>
<blockquote>
<p>Next.js turns traditionally complex decisions into simple implementation details. Spinning up new pages with our existing React components and Material UI went from days to hours with Next. </p>
</blockquote>
<p><em>Sean Parmelee, Applications Architect, <a href="https://www.care.com/">Care.com</a></em></p>
<p>To monitor Next.js projects in the past, you had to install our <code>@sentry/node</code> and <code>@sentry/react</code> SDKs — installing both and configuring your environment correctly was time-consuming and literally no fun. The new Next.js SDK does all that for you, and works swimmingly with our <a href="https://www.npmjs.com/package/@sentry/webpack-plugin">Webpack Plugin</a> or <a href="https://docs.sentry.io/product/cli/"><code>sentry-cli</code></a> to upload your source maps.</p>
<p>To get started with Sentry for Next.js, simply install the SDK:</p>
<p><code>yarn add @sentry/nextjs</code></p>
<p>And then configure: </p>
<p><code>npx @sentry/wizard -i nextjs</code></p>
<p>Configure <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/performance/">performance monitoring</a> by setting a <code>tracesSampleRate</code> when you initialize the SDK, in both <code>sentry.client.config.js</code> &amp; <code>sentry.server.config.js</code> :</p>
<div data-language="javascript"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
  <span>// ...</span>
  tracesSampleRate<span>:</span> <span>1.0</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>Once you’ve done that, frontend transactions will be captured automatically. To capture API request transactions, wrap your handlers in our <code>withSentry</code> helper. (Hint: If you’re already using our SDK to capture errors in those routes, you will have already done this. No extra configuration needed.)</p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> <span>*</span> <span>as</span> Sentry <span>}</span> from ‘@sentry<span>/</span>nextjs’<span>;</span>
Sentry<span>.</span><span>init</span><span>(</span><span>{</span> <span>...</span> <span>}</span><span>)</span><span>;</span>

<span>function</span> <span>handler</span><span>(</span><span>req<span>,</span> res</span><span>)</span> <span>{</span>
  <span>// ...</span>
<span>}</span>

<span>export</span> <span>default</span> Sentry<span>.</span><span>withSentry</span><span>(</span>handler<span>)</span><span>;</span></code></pre></div>
<p>You can quickly track down poor-performing APIs or slow database queries. With new features like Trace Navigator, <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View</a>, and Suspect Tags, Sentry connects frontend issues to root causes in the backend and vice versa.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195&amp;fm=webp 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390&amp;fm=webp 2390w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390 2390w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="quick-trace" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Trace View gives a waterfall view of a given transaction and dependencies across all projects on a single screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="trace-view" title="" src="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Early adopters of our SDK — like Stefen Alper, Co-Founder of eesel, a content search and centralization tool — are already using Sentry for Next.js to capture errors. Now they (and you) can also capture performance data. </p>
<blockquote>
<p>We moved to Next.js for the dev experience and the scalability. As longtime users of Sentry’s error monitoring offering, we’re looking forward to start monitoring performance and managing releases with Sentry’s new Next.js SDK.  </p>
</blockquote>
<p><em>Stefen Alper, Co-Founder, <a href="https://eesel.app/">eesel.app</a> </em></p>
<p>Install our <a href="https://sentry.io/for/nextjs">Next.js SDK</a> and get a pretty good idea of which commit caused the issue and who is likely responsible, and automatically upload source maps so your stack trace looks like the original code you wrote. Also, <a href="https://us06web.zoom.us/webinar/register/4016233661429/WN_znhaqwALTXWf-3Rqtf8mBQ">join us</a> on June 24th, 2021 for a live workshop on how to build, deploy, and monitor Next.js applications with Sentry and Netlify. </p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png" length="0" type="image/png"></enclosure>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Sentry Application Monitoring for Next.js</title>
      <link>https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js/</link>
      <description>As you could probably tell from the title, we shipped an SDK for Next.js. This means you can capture errors, measure performance, manage…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As you could probably tell from the title, we shipped an <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">SDK for Next.js</a>. This means you can capture errors, measure performance, manage releases, configure suspect commits, and automatically upload sourcemaps to view unminified JavaScript and TypeScript with zero(-ish) configuration. </p>
<p>Why was Next.js next on our list? Well, it’s one of the fastest-growing <a href="https://docs.sentry.io/platforms/javascript/guides/react/">React</a> frameworks and developers love it. Next.js provides a developer experience that helps with building features rapidly, seeing local changes quickly, and reducing build times. </p>
<blockquote>
<p>Next.js turns traditionally complex decisions into simple implementation details. Spinning up new pages with our existing React components and Material UI went from days to hours with Next. </p>
</blockquote>
<p><em>Sean Parmelee, Applications Architect, <a href="https://www.care.com/">Care.com</a></em></p>
<p>To monitor Next.js projects in the past, you had to install our <code>@sentry/node</code> and <code>@sentry/react</code> SDKs — installing both and configuring your environment correctly was time-consuming and literally no fun. The new Next.js SDK does all that for you, and works swimmingly with our <a href="https://www.npmjs.com/package/@sentry/webpack-plugin">Webpack Plugin</a> or <a href="https://docs.sentry.io/product/cli/"><code>sentry-cli</code></a> to upload your source maps.</p>
<p>To get started with Sentry for Next.js, simply install the SDK:</p>
<p><code>yarn add @sentry/nextjs</code></p>
<p>And then configure: </p>
<p><code>npx @sentry/wizard -i nextjs</code></p>
<p>Configure <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/performance/">performance monitoring</a> by setting a <code>tracesSampleRate</code> when you initialize the SDK, in both <code>sentry.client.config.js</code> &amp; <code>sentry.server.config.js</code> :</p>
<div data-language="javascript"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
  <span>// ...</span>
  tracesSampleRate<span>:</span> <span>1.0</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>Once you’ve done that, frontend transactions will be captured automatically. To capture API request transactions, wrap your handlers in our <code>withSentry</code> helper. (Hint: If you’re already using our SDK to capture errors in those routes, you will have already done this. No extra configuration needed.)</p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> <span>*</span> <span>as</span> Sentry <span>}</span> from ‘@sentry<span>/</span>nextjs’<span>;</span>
Sentry<span>.</span><span>init</span><span>(</span><span>{</span> <span>...</span> <span>}</span><span>)</span><span>;</span>

<span>function</span> <span>handler</span><span>(</span><span>req<span>,</span> res</span><span>)</span> <span>{</span>
  <span>// ...</span>
<span>}</span>

<span>export</span> <span>default</span> Sentry<span>.</span><span>withSentry</span><span>(</span>handler<span>)</span><span>;</span></code></pre></div>
<p>You can quickly track down poor-performing APIs or slow database queries. With new features like Trace Navigator, <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View</a>, and Suspect Tags, Sentry connects frontend issues to root causes in the backend and vice versa.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195&amp;fm=webp 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390&amp;fm=webp 2390w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390 2390w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="quick-trace" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Trace View gives a waterfall view of a given transaction and dependencies across all projects on a single screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="trace-view" title="" src="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Early adopters of our SDK — like Stefen Alper, Co-Founder of eesel, a content search and centralization tool — are already using Sentry for Next.js to capture errors. Now they (and you) can also capture performance data. </p>
<blockquote>
<p>We moved to Next.js for the dev experience and the scalability. As longtime users of Sentry’s error monitoring offering, we’re looking forward to start monitoring performance and managing releases with Sentry’s new Next.js SDK.  </p>
</blockquote>
<p><em>Stefen Alper, Co-Founder, <a href="https://eesel.app/">eesel.app</a> </em></p>
<p>Install our <a href="https://sentry.io/for/nextjs">Next.js SDK</a> and get a pretty good idea of which commit caused the issue and who is likely responsible, and automatically upload source maps so your stack trace looks like the original code you wrote. Also, <a href="https://us06web.zoom.us/webinar/register/4016233661429/WN_znhaqwALTXWf-3Rqtf8mBQ">join us</a> on June 24th, 2021 for a live workshop on how to build, deploy, and monitor Next.js applications with Sentry and Netlify. </p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png" length="0" type="image/png"></enclosure>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Better Alerts [as in, far more specific and just generally way better]</title>
      <link>https://blog.sentry.io/2021/06/08/better-alerts/</link>
      <description>A couple of weeks back, we broke sign-ups. And in the most meta fashion, we learned about this because someone here had the foresight to set…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A couple of weeks back, we <a href="https://twitter.com/zeeg/status/1395062746983530498?s=20">broke sign-ups</a>. And in the most meta fashion, we learned about this because someone here had the foresight to <a href="https://sentry.io/resources/alert-rules/">set up an alert</a> in Sentry to notify us if sign-ups dropped to zero.</p>
<p>Getting alerted kicked off our incident response process. A team was formed to tackle “What broke?”, “How do we fix this?”, “How long has this been happening?”, “Are any other services impacted?”, and much more.</p>
<p>Previously, with enough time and digging around in Sentry, you (and we) would eventually find these answers — but it wasn’t straightforward. That’s frustrating, especially when time is of the essence.</p>
<p>So, we updated <a href="https://docs.sentry.io/product/alerts-notifications/metric-alerts/#alert-details">Alert Details</a> to make answering those burning questions easier. In our example of broken sign-ups, the new Alert Details view gives us the entire issue history, what <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-1-create-the-project">project</a>, what team is responsible, and who created the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488&amp;fm=webp 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976&amp;fm=webp 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952&amp;fm=webp 1952w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952 1952w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-details-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But that’s just the beginning; we also wanted to make the alerts page more valuable by providing <a href="https://blog.sentry.io/2020/07/07/dont-be-alarmed-by-alerts">contextual information</a>, so you have everything you need to resolve issues quickly. Below the chart, we now display a panel that shows a list of related errors or performance issues. From there you can jump off into <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to determine the root cause of the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315&amp;fm=webp 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631&amp;fm=webp 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261&amp;fm=webp 1261w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261 1261w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="discover-errors-by-url" title="" src="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="learning-how-to-improve-uptime-with-better-alerts"><a href="#learning-how-to-improve-uptime-with-better-alerts" aria-label="learning how to improve uptime with better alerts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learning how to improve uptime with better Alerts</h2>
<p>We also refreshed our alert wizard so it’s much easier to <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-2-create-an-alert-rule">set alerts</a> that make sense for your team. The new wizard makes it easy to see which alerts to add and what <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/metric-alerts/#5-set-a-threshold">thresholds</a> to use. Once you select an alert type, we provide threshold recommendations so that you can improve your signal-to-noise ratio. This means better alerts and fewer pages at night.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460&amp;fm=webp 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920&amp;fm=webp 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840&amp;fm=webp 1840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840 1840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-wizard" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="see-issues-clearly-with-alert-list"><a href="#see-issues-clearly-with-alert-list" aria-label="see issues clearly with alert list permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See issues clearly with Alert List</h2>
<p>We created <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/">Alert List</a> to show you the status of all your alerts - so you can quickly ensure that your product or service is covered and that all the alerts are linked to the owners. That way, each triggered alert will be <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/routing-alerts/#issue-owners">routed to the right team</a>. You can also filter alerts by name to narrow your focus to the alerts that matter to you. That’s right—now, you and your team can turn addressing latency alerts into a fun little game called “Who’s  Lagging?” […so sorry.] Alert List is so on top of it, in fact, that it’ll identify and alert you when an alert hasn’t been assigned. Inception.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487&amp;fm=webp 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974&amp;fm=webp 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948&amp;fm=webp 1948w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948 1948w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alerts-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With Alert List, it should be easier to see the alerts that matter to you and solve them quickly and thoroughly. We hope these improvements make Sentry more useful. Because we really wouldn’t want to make Sentry less useful.</p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3RgWxFDQ1MPjxainqnjlPm/f540e950de207a3ff79c1ea1513227e5/alertImprove-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Better Alerts [as in, far more specific and just generally way better]</title>
      <link>https://blog.sentry.io/2021/06/08/better-alerts/</link>
      <description>A couple of weeks back, we broke sign-ups. And in the most meta fashion, we learned about this because someone here had the foresight to set…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A couple of weeks back, we <a href="https://twitter.com/zeeg/status/1395062746983530498?s=20">broke sign-ups</a>. And in the most meta fashion, we learned about this because someone here had the foresight to <a href="https://sentry.io/resources/alert-rules/">set up an alert</a> in Sentry to notify us if sign-ups dropped to zero.</p>
<p>Getting alerted kicked off our incident response process. A team was formed to tackle “What broke?”, “How do we fix this?”, “How long has this been happening?”, “Are any other services impacted?”, and much more.</p>
<p>Previously, with enough time and digging around in Sentry, you (and we) would eventually find these answers — but it wasn’t straightforward. That’s frustrating, especially when time is of the essence.</p>
<p>So, we updated <a href="https://docs.sentry.io/product/alerts-notifications/metric-alerts/#alert-details">Alert Details</a> to make answering those burning questions easier. In our example of broken sign-ups, the new Alert Details view gives us the entire issue history, what <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-1-create-the-project">project</a>, what team is responsible, and who created the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488&amp;fm=webp 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976&amp;fm=webp 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952&amp;fm=webp 1952w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952 1952w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-details-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But that’s just the beginning; we also wanted to make the alerts page more valuable by providing <a href="https://blog.sentry.io/2020/07/07/dont-be-alarmed-by-alerts">contextual information</a>, so you have everything you need to resolve issues quickly. Below the chart, we now display a panel that shows a list of related errors or performance issues. From there you can jump off into <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to determine the root cause of the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315&amp;fm=webp 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631&amp;fm=webp 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261&amp;fm=webp 1261w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261 1261w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="discover-errors-by-url" title="" src="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="learning-how-to-improve-uptime-with-better-alerts"><a href="#learning-how-to-improve-uptime-with-better-alerts" aria-label="learning how to improve uptime with better alerts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learning how to improve uptime with better Alerts</h2>
<p>We also refreshed our alert wizard so it’s much easier to <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-2-create-an-alert-rule">set alerts</a> that make sense for your team. The new wizard makes it easy to see which alerts to add and what <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/metric-alerts/#5-set-a-threshold">thresholds</a> to use. Once you select an alert type, we provide threshold recommendations so that you can improve your signal-to-noise ratio. This means better alerts and fewer pages at night.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460&amp;fm=webp 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920&amp;fm=webp 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840&amp;fm=webp 1840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840 1840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-wizard" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="see-issues-clearly-with-alert-list"><a href="#see-issues-clearly-with-alert-list" aria-label="see issues clearly with alert list permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See issues clearly with Alert List</h2>
<p>We created <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/">Alert List</a> to show you the status of all your alerts - so you can quickly ensure that your product or service is covered and that all the alerts are linked to the owners. That way, each triggered alert will be <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/routing-alerts/#issue-owners">routed to the right team</a>. You can also filter alerts by name to narrow your focus to the alerts that matter to you. That’s right—now, you and your team can turn addressing latency alerts into a fun little game called “Who’s  Lagging?” […so sorry.] Alert List is so on top of it, in fact, that it’ll identify and alert you when an alert hasn’t been assigned. Inception.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487&amp;fm=webp 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974&amp;fm=webp 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948&amp;fm=webp 1948w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948 1948w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alerts-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With Alert List, it should be easier to see the alerts that matter to you and solve them quickly and thoroughly. We hope these improvements make Sentry more useful. Because we really wouldn’t want to make Sentry less useful.</p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3RgWxFDQ1MPjxainqnjlPm/f540e950de207a3ff79c1ea1513227e5/alertImprove-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Better Alerts [as in, far more specific and just generally way better]</title>
      <link>https://blog.sentry.io/2021/06/08/better-alerts/</link>
      <description>A couple of weeks back, we broke sign-ups. And in the most meta fashion, we learned about this because someone here had the foresight to set…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A couple of weeks back, we <a href="https://twitter.com/zeeg/status/1395062746983530498?s=20">broke sign-ups</a>. And in the most meta fashion, we learned about this because someone here had the foresight to <a href="https://sentry.io/resources/alert-rules/">set up an alert</a> in Sentry to notify us if sign-ups dropped to zero.</p>
<p>Getting alerted kicked off our incident response process. A team was formed to tackle “What broke?”, “How do we fix this?”, “How long has this been happening?”, “Are any other services impacted?”, and much more.</p>
<p>Previously, with enough time and digging around in Sentry, you (and we) would eventually find these answers — but it wasn’t straightforward. That’s frustrating, especially when time is of the essence.</p>
<p>So, we updated <a href="https://docs.sentry.io/product/alerts-notifications/metric-alerts/#alert-details">Alert Details</a> to make answering those burning questions easier. In our example of broken sign-ups, the new Alert Details view gives us the entire issue history, what <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-1-create-the-project">project</a>, what team is responsible, and who created the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488&amp;fm=webp 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976&amp;fm=webp 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952&amp;fm=webp 1952w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952 1952w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-details-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But that’s just the beginning; we also wanted to make the alerts page more valuable by providing <a href="https://blog.sentry.io/2020/07/07/dont-be-alarmed-by-alerts">contextual information</a>, so you have everything you need to resolve issues quickly. Below the chart, we now display a panel that shows a list of related errors or performance issues. From there you can jump off into <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to determine the root cause of the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315&amp;fm=webp 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631&amp;fm=webp 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261&amp;fm=webp 1261w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261 1261w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="discover-errors-by-url" title="" src="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="learning-how-to-improve-uptime-with-better-alerts"><a href="#learning-how-to-improve-uptime-with-better-alerts" aria-label="learning how to improve uptime with better alerts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learning how to improve uptime with better Alerts</h2>
<p>We also refreshed our alert wizard so it’s much easier to <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-2-create-an-alert-rule">set alerts</a> that make sense for your team. The new wizard makes it easy to see which alerts to add and what <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/metric-alerts/#5-set-a-threshold">thresholds</a> to use. Once you select an alert type, we provide threshold recommendations so that you can improve your signal-to-noise ratio. This means better alerts and fewer pages at night.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460&amp;fm=webp 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920&amp;fm=webp 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840&amp;fm=webp 1840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840 1840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-wizard" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="see-issues-clearly-with-alert-list"><a href="#see-issues-clearly-with-alert-list" aria-label="see issues clearly with alert list permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See issues clearly with Alert List</h2>
<p>We created <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/">Alert List</a> to show you the status of all your alerts - so you can quickly ensure that your product or service is covered and that all the alerts are linked to the owners. That way, each triggered alert will be <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/routing-alerts/#issue-owners">routed to the right team</a>. You can also filter alerts by name to narrow your focus to the alerts that matter to you. That’s right—now, you and your team can turn addressing latency alerts into a fun little game called “Who’s  Lagging?” […so sorry.] Alert List is so on top of it, in fact, that it’ll identify and alert you when an alert hasn’t been assigned. Inception.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487&amp;fm=webp 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974&amp;fm=webp 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948&amp;fm=webp 1948w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948 1948w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alerts-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With Alert List, it should be easier to see the alerts that matter to you and solve them quickly and thoroughly. We hope these improvements make Sentry more useful. Because we really wouldn’t want to make Sentry less useful.</p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3RgWxFDQ1MPjxainqnjlPm/f540e950de207a3ff79c1ea1513227e5/alertImprove-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Dogfooding Chronicles: Never Be Content With Your Content (Security Policies)</title>
      <link>https://blog.sentry.io/2021/05/27/dogfooding-chronicles-never-be-content-with-your-content/</link>
      <description>A Content Security Policy (CSP) lets a browser know which content sources are to be trusted — and which aren’t. Learn how to update your CSP and protect your application.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As the Internet evolves, so must our security mechanisms. It’s why same-origin policies (a Netscape-era directive in which resources from one origin are unable to modify or read data from another origin) put your application at risk for clickjacking and cross-site scripting attacks. That’s because same-origin policies have a weakness that enables third-party entities to have the same access rights as trusted entities. Content Security Policies (CSPs) address this blind spot by approving specific content types — everything from <a href="https://sentry.io/for/javascript/">JavaScript</a> sources to CSS fonts, HTML frames and embeddable Java applets.</p>
<h2 id="defining-content-security-policies"><a href="#defining-content-security-policies" aria-label="defining content security policies permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Defining Content Security Policies</h2>
<p>Put simply, a Content Security Policy lets a browser know which content sources are to be trusted — and which aren’t. And when there is a CSP violation, browsers can submit the error to a <code>report-uri</code>. What’s more, if you have Sentry, these violation reports are integrated into your application’s monitoring dashboards.</p>
<p>During our most recent penetration test, we found that some of the CDN domains in our allow list were hosting potentially dangerous scripts. One of our recommendations from this audit was to refine and improve our CSP rules.</p>
<p>In this Dogfooding Chronicle, I’ll walk you through how we updated our Content Security Policy using <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> — and how we’re keeping watch with <a href="https://sentry.io/features/dashboards/">Dashboards</a>.</p>
<h2 id="discover-ing-report-only-mode"><a href="#discover-ing-report-only-mode" aria-label="discover ing report only mode permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover-ing ‘report-only’ mode</h2>
<p>Content Security Policies have two modes. The first mode enforces and actively blocks resource loading and execution, while the second collects the errors that would happen if the rules were active. This mode is set via the invaluable <code>Content-Security-Policy-Report-Only</code> header that defines your CSP rules. </p>
<p>When I combined this ‘report-only’ feature with <a href="http://sentry.io/features/custom-queries">Discover queries</a>, I was able to visualize all the errors coming from <code>report-only</code> mode. Now I could view the impact of fixes in real time, and see which rules were being broken — without disrupting customers.</p>
<h2 id="sussing-out-safari"><a href="#sussing-out-safari" aria-label="sussing out safari permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sussing out Safari</h2>
<p>While <code>report-only</code> mode worked well, I did encounter some hiccups in Safari, as it’s been known to jumble its report-only and enforced modes. This meant I was getting errors for sources that should be allowed. To verify that these errors were caused by Safari bugs, I used our staging environment to test Safari with only the new rules being enforced. And using <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, I was able to fully view Safari’s impact on our CSP errors.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254&amp;fm=webp 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508&amp;fm=webp 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016&amp;fm=webp 1016w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016 1016w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Graph of Content Security Policy errors by browser" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="a-glance-at-the-solution"><a href="#a-glance-at-the-solution" aria-label="a glance at the solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A glance at the solution</h2>
<p>Like reading a good detective novel, once I solved this problem, another, more confounding problem bubbled up to take its place. Our Jira integration was having trouble integrating with our Content Security Policy. Because our <a href="http://sentry.io/integrations/jira">Jira integration</a> includes an embedded ‘glance view’, I could view Sentry data alongside other fields like assignee, priority and labels. After reviewing these embedded views, I discovered the issue: outdated libraries that relied on <code>eval()</code> expressions which are not allowed in our CSP rules. </p>
<p>While upgrading these libraries to newer versions resolved a large number of errors, it didn’t solve them all.  And though I was unable to reproduce these last few errors, I was able to use Discover’s tag breakdowns to narrow things back down to — you guessed it — a Safari-specific issue:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78&amp;fm=webp 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156&amp;fm=webp 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312&amp;fm=webp 312w" sizes="(max-width: 312px) 100vw, 312px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312 312w" sizes="(max-width: 312px) 100vw, 312px"/>
          <img alt="Tags that show cause of CSP errors" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="csp-3-coming-to-a-browser-near-you"><a href="#csp-3-coming-to-a-browser-near-you" aria-label="csp 3 coming to a browser near you permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>CSP 3: Coming to a browser near you.</h2>
<p>The newest iteration of CSP has been in production for years, and is about to be fully released. Which is why we have defined rules for all three levels to get the broadest — and sturdiest — coverage possible. Doing so has both simplified our CSP configuration and improved our resilience to cross-site scripting. Which brings me to my last tip: it’s important to define directives in the order of their levels. Browsers will often stop parsing a directive when they find something they don’t know, so it’s important that there are specific directives for all three CSP levels.</p>
<p>Developing a Content Security Policy isn’t about being fussy — it’s about being functional. Data and code from untrusted sources should not have the same privileges as the trusted programmer’s code. By implementing a well-defined CSP, you can mitigate attacks, control assets, and breathe easier.  </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3oXGtdjqkwjIGE1O1ioWCe/3a83d856f5afed3d1040feec43f1351c/DogFood2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 27 May 2021 09:30:00 +0000</pubDate>
    </item>
    <item>
      <title>Dogfooding Chronicles: Never Be Content With Your Content (Security Policies)</title>
      <link>https://blog.sentry.io/2021/05/27/dogfooding-chronicles-never-be-content-with-your-content/</link>
      <description>In this Dogfooding Chronicle, I’ll walk you through how we updated our Content Security Policy using Discover — and how we’re keeping watch…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In this Dogfooding Chronicle, I’ll walk you through how we updated our Content Security Policy using <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> — and how we’re keeping watch with <a href="https://sentry.io/features/dashboards/">Dashboards</a>.</p>
<h2 id="defining-content-security-policies"><a href="#defining-content-security-policies" aria-label="defining content security policies permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Defining Content Security Policies</h2>
<p>As the Internet evolves, so must our security mechanisms. It’s why same-origin policies (a Netscape-era directive in which resources from one origin are unable to modify or read data from another origin) put your application at risk for clickjacking and cross-site scripting attacks. That’s because same-origin policies have a weakness that enables third-party entities to have the same access rights as trusted entities. Content Security Policies (CSPs) address this blind spot by approving specific content types —  everything from <a href="http://sentry.io/for/javascript">JavaScript</a> sources to CSS fonts, HTML frames and embeddable Java applets. </p>
<p>Put simply, a CSP lets a browser know which content sources are to be trusted — and which aren’t. And when there is a CSP violation, browsers can submit the error to a <code>report-uri</code>. What’s more, if you have Sentry, these violation reports are integrated into your application’s monitoring dashboards.</p>
<p>During our most recent penetration test, we found that some of the CDN domains in our allow list were hosting potentially dangerous scripts. One of our recommendations from this audit was to refine and improve our CSP rules.   </p>
<h2 id="discover-ing-report-only-mode"><a href="#discover-ing-report-only-mode" aria-label="discover ing report only mode permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover-ing ‘report-only’ mode</h2>
<p>Content Security Policies have two modes. The first mode enforces and actively blocks resource loading and execution, while the second collects the errors that would happen if the rules were active. This mode is set via the invaluable <code>Content-Security-Policy-Report-Only</code> header that defines your CSP rules. </p>
<p>When I combined this ‘report-only’ feature with <a href="http://sentry.io/features/custom-queries">Discover queries</a>, I was able to visualize all the errors coming from <code>report-only</code> mode. Now I could view the impact of fixes in real time, and see which rules were being broken — without disrupting customers.</p>
<h2 id="sussing-out-safari"><a href="#sussing-out-safari" aria-label="sussing out safari permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sussing out Safari</h2>
<p>While <code>report-only</code> mode worked well, I did encounter some hiccups in Safari, as it’s been known to jumble its report-only and enforced modes. This meant I was getting errors for sources that should be allowed. To verify that these errors were caused by Safari bugs, I used our staging environment to test Safari with only the new rules being enforced. And using <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, I was able to fully view Safari’s impact on our CSP errors.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254&amp;fm=webp 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508&amp;fm=webp 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016&amp;fm=webp 1016w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016 1016w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="cc" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="a-glance-at-the-solution"><a href="#a-glance-at-the-solution" aria-label="a glance at the solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A glance at the solution</h2>
<p>Like reading a good detective novel, once I solved this problem, another, more confounding problem bubbled up to take its place. Our Jira integration was having trouble integrating with our CSP. Because our <a href="http://sentry.io/integrations/jira">Jira integration</a> includes an embedded ‘glance view’, I could view Sentry data alongside other fields like assignee, priority and labels. After reviewing these embedded views, I discovered the issue: outdated libraries that relied on <code>eval()</code> expressions which are not allowed in our CSP rules. </p>
<p>While upgrading these libraries to newer versions resolved a large number of errors, it didn’t solve them all.  And though I was unable to reproduce these last few errors, I was able to use Discover’s tag breakdowns to narrow things back down to — you guessed it — a Safari-specific issue:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78&amp;fm=webp 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156&amp;fm=webp 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312&amp;fm=webp 312w" sizes="(max-width: 312px) 100vw, 312px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312 312w" sizes="(max-width: 312px) 100vw, 312px"/>
          <img alt="dd" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="csp-3-coming-to-a-browser-near-you"><a href="#csp-3-coming-to-a-browser-near-you" aria-label="csp 3 coming to a browser near you permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>CSP 3: Coming to a browser near you.</h2>
<p>The newest iteration of CSP has been in production for years, and is about to be fully released. Which is why we have defined rules for all three levels to get the broadest — and sturdiest — coverage possible. Doing so has both simplified our CSP configuration and improved our resilience to cross-site scripting. Which brings me to my last tip: it’s important to define directives in the order of their levels. Browsers will often stop parsing a directive when they find something they don’t know, so it’s important that there are specific directives for all three CSP levels.</p>
<p>Developing a Content Security Policy isn’t about being fussy — it’s about being functional. Data and code from untrusted sources should not have the same privileges as the trusted programmer’s code. By implementing a well-defined CSP, you can mitigate attacks, control assets, and breathe easier.  </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3oXGtdjqkwjIGE1O1ioWCe/3a83d856f5afed3d1040feec43f1351c/DogFood2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 27 May 2021 09:30:00 +0000</pubDate>
    </item>
    <item>
      <title>Dogfooding Chronicles: Never Be Content With Your Content (Security Policies)</title>
      <link>https://blog.sentry.io/2021/05/27/dogfooding-chronicles-never-be-content-with-your-content/</link>
      <description>A Content Security Policy (CSP) lets a browser know which content sources are to be trusted — and which aren’t. Learn how to update your CSP and protect your application.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As the Internet evolves, so must our security mechanisms. It’s why same-origin policies (a Netscape-era directive in which resources from one origin are unable to modify or read data from another origin) put your application at risk for clickjacking and cross-site scripting attacks. That’s because same-origin policies have a weakness that enables third-party entities to have the same access rights as trusted entities. Content Security Policies (CSPs) address this blind spot by approving specific content types — everything from <a href="https://sentry.io/for/javascript/">JavaScript</a> sources to CSS fonts, HTML frames and embeddable Java applets.</p>
<h2 id="defining-content-security-policies"><a href="#defining-content-security-policies" aria-label="defining content security policies permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Defining Content Security Policies</h2>
<p>Put simply, a Content Security Policy lets a browser know which content sources are to be trusted — and which aren’t. And when there is a CSP violation, browsers can submit the error to a <code>report-uri</code>. What’s more, if you have Sentry, these violation reports are integrated into your application’s monitoring dashboards.</p>
<p>During our most recent penetration test, we found that some of the CDN domains in our allow list were hosting potentially dangerous scripts. One of our recommendations from this audit was to refine and improve our CSP rules.</p>
<p>In this Dogfooding Chronicle, I’ll walk you through how we updated our Content Security Policy using <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> — and how we’re keeping watch with <a href="https://sentry.io/features/dashboards/">Dashboards</a>.</p>
<h2 id="discover-ing-report-only-mode"><a href="#discover-ing-report-only-mode" aria-label="discover ing report only mode permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover-ing ‘report-only’ mode</h2>
<p>Content Security Policies have two modes. The first mode enforces and actively blocks resource loading and execution, while the second collects the errors that would happen if the rules were active. This mode is set via the invaluable <code>Content-Security-Policy-Report-Only</code> header that defines your CSP rules. </p>
<p>When I combined this ‘report-only’ feature with <a href="http://sentry.io/features/custom-queries">Discover queries</a>, I was able to visualize all the errors coming from <code>report-only</code> mode. Now I could view the impact of fixes in real time, and see which rules were being broken — without disrupting customers.</p>
<h2 id="sussing-out-safari"><a href="#sussing-out-safari" aria-label="sussing out safari permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sussing out Safari</h2>
<p>While <code>report-only</code> mode worked well, I did encounter some hiccups in Safari, as it’s been known to jumble its report-only and enforced modes. This meant I was getting errors for sources that should be allowed. To verify that these errors were caused by Safari bugs, I used our staging environment to test Safari with only the new rules being enforced. And using <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, I was able to fully view Safari’s impact on our CSP errors.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254&amp;fm=webp 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508&amp;fm=webp 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016&amp;fm=webp 1016w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016 1016w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="Graph of Content Security Policy errors by browser" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="a-glance-at-the-solution"><a href="#a-glance-at-the-solution" aria-label="a glance at the solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A glance at the solution</h2>
<p>Like reading a good detective novel, once I solved this problem, another, more confounding problem bubbled up to take its place. Our Jira integration was having trouble integrating with our Content Security Policy. Because our <a href="http://sentry.io/integrations/jira">Jira integration</a> includes an embedded ‘glance view’, I could view Sentry data alongside other fields like assignee, priority and labels. After reviewing these embedded views, I discovered the issue: outdated libraries that relied on <code>eval()</code> expressions which are not allowed in our CSP rules. </p>
<p>While upgrading these libraries to newer versions resolved a large number of errors, it didn’t solve them all.  And though I was unable to reproduce these last few errors, I was able to use Discover’s tag breakdowns to narrow things back down to — you guessed it — a Safari-specific issue:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78&amp;fm=webp 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156&amp;fm=webp 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312&amp;fm=webp 312w" sizes="(max-width: 312px) 100vw, 312px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312 312w" sizes="(max-width: 312px) 100vw, 312px"/>
          <img alt="Tags that show cause of CSP errors" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="csp-3-coming-to-a-browser-near-you"><a href="#csp-3-coming-to-a-browser-near-you" aria-label="csp 3 coming to a browser near you permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>CSP 3: Coming to a browser near you.</h2>
<p>The newest iteration of CSP has been in production for years, and is about to be fully released. Which is why we have defined rules for all three levels to get the broadest — and sturdiest — coverage possible. Doing so has both simplified our CSP configuration and improved our resilience to cross-site scripting. Which brings me to my last tip: it’s important to define directives in the order of their levels. Browsers will often stop parsing a directive when they find something they don’t know, so it’s important that there are specific directives for all three CSP levels.</p>
<p>Developing a Content Security Policy isn’t about being fussy — it’s about being functional. Data and code from untrusted sources should not have the same privileges as the trusted programmer’s code. By implementing a well-defined CSP, you can mitigate attacks, control assets, and breathe easier.  </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3oXGtdjqkwjIGE1O1ioWCe/3a83d856f5afed3d1040feec43f1351c/DogFood2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 27 May 2021 09:30:00 +0000</pubDate>
    </item>
    <item>
      <title>Establishing the New Normal in Pandemic-Aftertimes</title>
      <link>https://blog.sentry.io/2021/05/25/establishing-the-new-normal-in-pandemic-aftertimes/</link>
      <description>Three Hundred and Eighty-One Three hundred and eighty-one. The number of days it’s been since our Sentry offices shut down, in what we…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="three-hundred-and-eighty-one"><a href="#three-hundred-and-eighty-one" aria-label="three hundred and eighty one permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>[Three Hundred and Eighty-One]</h2>
<p>[Three hundred and eighty-one]. The number of days it’s been since our Sentry offices shut down, in what we believed at that time to be a very short-term temporary measure while we took stock of the events unfolding around us. In this last year of the pandemic, like so many companies, we were initially left scrambling with how to handle the complexities of our newly distributed workforce, while juggling the uncertainties we have faced in what I hope is a once-in-our-lifetime global phenomenon. The results of the pandemic have left businesses reevaluating and reimagining how their operations can effectively operate not just in the chaos of the immediate-term, but also with longer-term sustainability. A few monoliths have swung the pendulum hard and shifted entirely to a permanently distributed workforce, while other companies have opted for a hybrid approach. At Sentry, we believe that investing in flexible solutions while maintaining the connectedness an office hub affords, is the work of the future.</p>
<h2 id="building-connections-irl"><a href="#building-connections-irl" aria-label="building connections irl permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Building Connections IRL</h2>
<p>So why not go fully remote? Many jobs in tech aren’t bound to physical locations - grab a laptop, you can work virtually from anywhere! And yes - while this is a (mostly) true statement, this largely ignores the invaluable in-person interactions with teams &amp; coworkers that one doesn’t get to experience with fully distributed teams. Interactions like turning to a coworker for quick conversations, informal, serendipitous “watercooler” chats, the deeper personal relationship-building that happens over a coffee walk or a lunch gathering, or simply engaging in a quick friendly interaction during a minute wait outside of a meeting room. </p>
<p>We’re also looking to solve for the problems folks face when they lack that physical separation and boundaries between work and home life. Having an office environment that is specifically set up to suit work needs, using commutes for focus, being able to participate in the camaraderie of team building events during the day or after-hours. All of these serve as ways to stay mentally healthy, productive, and engaged within teams and the company as a whole.</p>
<h2 id="an-ethos-of-flexibility"><a href="#an-ethos-of-flexibility" aria-label="an ethos of flexibility permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>An Ethos of Flexibility</h2>
<p>And so, instead of reactively hard-pivoting to a fully-distributed model - one that doesn’t positively impact our company culture - we have proactively focused on the ethos of flexibility. We have always provided a flex model - days, time, time-off. We are expanding on this programs where folks can collaborate in-office three days and work from wherever the other two; flexibility in working hours while maintaining some amount of time of overlap with their peers; and empowerment for our people leaders that allows each team to figure out right model of collaboration and engagement to foster environments where folks can do their best work, and live their best lives.</p>
<p>With this in mind, our focus at Sentry has been to create and provide spaces that allow for different levels of in-office flexibility. Our HQ in downtown San Francisco is thoughtfully designed to provide a variety of situations that address differing work styles and needs. From breakout spaces for teams to collaborate and whiteboard, a Library where individuals can have moments of quiet and heads down time, to wellness rooms and spaces to casually collaborate, providing an overall office space where people have defined separation of home and work adds value to life-work equilibrium. </p>
<p>The connective tissue of making deep, long-lasting human connections lies in the unique value in being an office-first culture to an organization, value which significantly diminishes when you remove the ability to regularly meet and collaborate in person. And, whereas a distributed model likely means most interactions are taking place asynchronously, and therefore perhaps allows for less conscientious comments, being in person encourages folks to engage in more intentional, thoughtful interactions. It adds layers of colour that are missed in written text or video chats, through tone and body language, and a lot of things can go awry when you permanently take away these key pieces of communications. </p>
<p>On the flip side, life isn’t just work, and it rarely fits into a nice little set of structured time boxes. Providing employees with work-from-wherever flex days gives room and opportunity for our folks to take care of things that inevitably crop up in general life, without needing to significantly reorganize their schedules. We also have a diverse population where a good number of folks are caregivers who have faced immense challenges to all aspects of their lives in this past year. We believe that wholly supporting employees in those circumstances with the ability to be flexible in their schedules is a win-win. </p>
<p>The challenges of this past year have given us opportunities to reflect on how we as an organization contribute to the health and wellness of our people. We began pandemotimes by expanding some of our stipends - setting up a Remote Tools reimbursement for our employees to get their home setup more comfortable, adding a Wellness Stipend to supplement and support mental and physical health, and very recently adding additional company-wide holidays through the year to give longer weekends to disconnecting and foster downtime.</p>
<h2 id="in-closing"><a href="#in-closing" aria-label="in closing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>In Closing</h2>
<p>Having [virtually] met with every single one of our [60] new hires who have joined Sentry since the beginning of the pandemic, a common sentiment I’ve heard is “I can’t wait to meet everyone finally and be back in an office again! This is hard!” It <em>is</em> hard. Psychologically, emotionally, to operate in a world where almost everything has become transactional by nature. Zoom fatigue is real, and burnout from being stuck in the groundhog day of pandemotimes is wearying, at best, and utterly mentally exhausting, at worst.</p>
<p>We believe in the power of humanizing connections and a massive aspect of this is the ability to build relationships in real life. The pandemic has shown us just how much we miss out on, when we don’t have the chance to connect with each other within in-person spaces. We’ll continue to invest in our employees by maintaining a human-centric approach to our ethos of in-office work, through supporting the needs for flexibility in reimagining work-life entwinements. We’re squirrelling away to establish the new normal and we’d love for you to come and join us on this journey - we’re really nice people 😎.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5AijIxWlOxOvwSnR7sgnrs/c9ecdcb122f96768637df33bc202b6f8/BackToOffice-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Establishing the New Normal in Pandemic-Aftertimes</title>
      <link>https://blog.sentry.io/2021/05/25/establishing-the-new-normal-in-pandemic-aftertimes/</link>
      <description>Three Hundred and Eighty-One Three hundred and eighty-one. The number of days it’s been since our Sentry offices shut down, in what we…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="three-hundred-and-eighty-one"><a href="#three-hundred-and-eighty-one" aria-label="three hundred and eighty one permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>[Three Hundred and Eighty-One]</h2>
<p>[Three hundred and eighty-one]. The number of days it’s been since our Sentry offices shut down, in what we believed at that time to be a very short-term temporary measure while we took stock of the events unfolding around us. In this last year of the pandemic, like so many companies, we were initially left scrambling with how to handle the complexities of our newly distributed workforce, while juggling the uncertainties we have faced in what I hope is a once-in-our-lifetime global phenomenon. The results of the pandemic have left businesses reevaluating and reimagining how their operations can effectively operate not just in the chaos of the immediate-term, but also with longer-term sustainability. A few monoliths have swung the pendulum hard and shifted entirely to a permanently distributed workforce, while other companies have opted for a hybrid approach. At Sentry, we believe that investing in flexible solutions while maintaining the connectedness an office hub affords, is the work of the future.</p>
<h2 id="building-connections-irl"><a href="#building-connections-irl" aria-label="building connections irl permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Building Connections IRL</h2>
<p>So why not go fully remote? Many jobs in tech aren’t bound to physical locations - grab a laptop, you can work virtually from anywhere! And yes - while this is a (mostly) true statement, this largely ignores the invaluable in-person interactions with teams &amp; coworkers that one doesn’t get to experience with fully distributed teams. Interactions like turning to a coworker for quick conversations, informal, serendipitous “watercooler” chats, the deeper personal relationship-building that happens over a coffee walk or a lunch gathering, or simply engaging in a quick friendly interaction during a minute wait outside of a meeting room. </p>
<p>We’re also looking to solve for the problems folks face when they lack that physical separation and boundaries between work and home life. Having an office environment that is specifically set up to suit work needs, using commutes for focus, being able to participate in the camaraderie of team building events during the day or after-hours. All of these serve as ways to stay mentally healthy, productive, and engaged within teams and the company as a whole.</p>
<h2 id="an-ethos-of-flexibility"><a href="#an-ethos-of-flexibility" aria-label="an ethos of flexibility permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>An Ethos of Flexibility</h2>
<p>And so, instead of reactively hard-pivoting to a fully-distributed model - one that doesn’t positively impact our company culture - we have proactively focused on the ethos of flexibility. We have always provided a flex model - days, time, time-off. We are expanding on this programs where folks can collaborate in-office three days and work from wherever the other two; flexibility in working hours while maintaining some amount of time of overlap with their peers; and empowerment for our people leaders that allows each team to figure out right model of collaboration and engagement to foster environments where folks can do their best work, and live their best lives.</p>
<p>With this in mind, our focus at Sentry has been to create and provide spaces that allow for different levels of in-office flexibility. Our HQ in downtown San Francisco is thoughtfully designed to provide a variety of situations that address differing work styles and needs. From breakout spaces for teams to collaborate and whiteboard, a Library where individuals can have moments of quiet and heads down time, to wellness rooms and spaces to casually collaborate, providing an overall office space where people have defined separation of home and work adds value to life-work equilibrium. </p>
<p>The connective tissue of making deep, long-lasting human connections lies in the unique value in being an office-first culture to an organization, value which significantly diminishes when you remove the ability to regularly meet and collaborate in person. And, whereas a distributed model likely means most interactions are taking place asynchronously, and therefore perhaps allows for less conscientious comments, being in person encourages folks to engage in more intentional, thoughtful interactions. It adds layers of colour that are missed in written text or video chats, through tone and body language, and a lot of things can go awry when you permanently take away these key pieces of communications. </p>
<p>On the flip side, life isn’t just work, and it rarely fits into a nice little set of structured time boxes. Providing employees with work-from-wherever flex days gives room and opportunity for our folks to take care of things that inevitably crop up in general life, without needing to significantly reorganize their schedules. We also have a diverse population where a good number of folks are caregivers who have faced immense challenges to all aspects of their lives in this past year. We believe that wholly supporting employees in those circumstances with the ability to be flexible in their schedules is a win-win. </p>
<p>The challenges of this past year have given us opportunities to reflect on how we as an organization contribute to the health and wellness of our people. We began pandemotimes by expanding some of our stipends - setting up a Remote Tools reimbursement for our employees to get their home setup more comfortable, adding a Wellness Stipend to supplement and support mental and physical health, and very recently adding additional company-wide holidays through the year to give longer weekends to disconnecting and foster downtime.</p>
<h2 id="in-closing"><a href="#in-closing" aria-label="in closing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>In Closing</h2>
<p>Having [virtually] met with every single one of our [60] new hires who have joined Sentry since the beginning of the pandemic, a common sentiment I’ve heard is “I can’t wait to meet everyone finally and be back in an office again! This is hard!” It <em>is</em> hard. Psychologically, emotionally, to operate in a world where almost everything has become transactional by nature. Zoom fatigue is real, and burnout from being stuck in the groundhog day of pandemotimes is wearying, at best, and utterly mentally exhausting, at worst.</p>
<p>We believe in the power of humanizing connections and a massive aspect of this is the ability to build relationships in real life. The pandemic has shown us just how much we miss out on, when we don’t have the chance to connect with each other within in-person spaces. We’ll continue to invest in our employees by maintaining a human-centric approach to our ethos of in-office work, through supporting the needs for flexibility in reimagining work-life entwinements. We’re squirrelling away to establish the new normal and we’d love for you to come and join us on this journey - we’re really nice people 😎.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5AijIxWlOxOvwSnR7sgnrs/c9ecdcb122f96768637df33bc202b6f8/BackToOffice-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Establishing the New Normal in Pandemic-Aftertimes</title>
      <link>https://blog.sentry.io/2021/05/25/establishing-the-new-normal-in-pandemic-aftertimes/</link>
      <description>Three Hundred and Eighty-One Three hundred and eighty-one. The number of days it’s been since our Sentry offices shut down, in what we…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="three-hundred-and-eighty-one"><a href="#three-hundred-and-eighty-one" aria-label="three hundred and eighty one permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>[Three Hundred and Eighty-One]</h2>
<p>[Three hundred and eighty-one]. The number of days it’s been since our Sentry offices shut down, in what we believed at that time to be a very short-term temporary measure while we took stock of the events unfolding around us. In this last year of the pandemic, like so many companies, we were initially left scrambling with how to handle the complexities of our newly distributed workforce, while juggling the uncertainties we have faced in what I hope is a once-in-our-lifetime global phenomenon. The results of the pandemic have left businesses reevaluating and reimagining how their operations can effectively operate not just in the chaos of the immediate-term, but also with longer-term sustainability. A few monoliths have swung the pendulum hard and shifted entirely to a permanently distributed workforce, while other companies have opted for a hybrid approach. At Sentry, we believe that investing in flexible solutions while maintaining the connectedness an office hub affords, is the work of the future.</p>
<h2 id="building-connections-irl"><a href="#building-connections-irl" aria-label="building connections irl permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Building Connections IRL</h2>
<p>So why not go fully remote? Many jobs in tech aren’t bound to physical locations - grab a laptop, you can work virtually from anywhere! And yes - while this is a (mostly) true statement, this largely ignores the invaluable in-person interactions with teams &amp; coworkers that one doesn’t get to experience with fully distributed teams. Interactions like turning to a coworker for quick conversations, informal, serendipitous “watercooler” chats, the deeper personal relationship-building that happens over a coffee walk or a lunch gathering, or simply engaging in a quick friendly interaction during a minute wait outside of a meeting room. </p>
<p>We’re also looking to solve for the problems folks face when they lack that physical separation and boundaries between work and home life. Having an office environment that is specifically set up to suit work needs, using commutes for focus, being able to participate in the camaraderie of team building events during the day or after-hours. All of these serve as ways to stay mentally healthy, productive, and engaged within teams and the company as a whole.</p>
<h2 id="an-ethos-of-flexibility"><a href="#an-ethos-of-flexibility" aria-label="an ethos of flexibility permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>An Ethos of Flexibility</h2>
<p>And so, instead of reactively hard-pivoting to a fully-distributed model - one that doesn’t positively impact our company culture - we have proactively focused on the ethos of flexibility. We have always provided a flex model - days, time, time-off. We are expanding on this programs where folks can collaborate in-office three days and work from wherever the other two; flexibility in working hours while maintaining some amount of time of overlap with their peers; and empowerment for our people leaders that allows each team to figure out right model of collaboration and engagement to foster environments where folks can do their best work, and live their best lives.</p>
<p>With this in mind, our focus at Sentry has been to create and provide spaces that allow for different levels of in-office flexibility. Our HQ in downtown San Francisco is thoughtfully designed to provide a variety of situations that address differing work styles and needs. From breakout spaces for teams to collaborate and whiteboard, a Library where individuals can have moments of quiet and heads down time, to wellness rooms and spaces to casually collaborate, providing an overall office space where people have defined separation of home and work adds value to life-work equilibrium. </p>
<p>The connective tissue of making deep, long-lasting human connections lies in the unique value in being an office-first culture to an organization, value which significantly diminishes when you remove the ability to regularly meet and collaborate in person. And, whereas a distributed model likely means most interactions are taking place asynchronously, and therefore perhaps allows for less conscientious comments, being in person encourages folks to engage in more intentional, thoughtful interactions. It adds layers of colour that are missed in written text or video chats, through tone and body language, and a lot of things can go awry when you permanently take away these key pieces of communications. </p>
<p>On the flip side, life isn’t just work, and it rarely fits into a nice little set of structured time boxes. Providing employees with work-from-wherever flex days gives room and opportunity for our folks to take care of things that inevitably crop up in general life, without needing to significantly reorganize their schedules. We also have a diverse population where a good number of folks are caregivers who have faced immense challenges to all aspects of their lives in this past year. We believe that wholly supporting employees in those circumstances with the ability to be flexible in their schedules is a win-win. </p>
<p>The challenges of this past year have given us opportunities to reflect on how we as an organization contribute to the health and wellness of our people. We began pandemotimes by expanding some of our stipends - setting up a Remote Tools reimbursement for our employees to get their home setup more comfortable, adding a Wellness Stipend to supplement and support mental and physical health, and very recently adding additional company-wide holidays through the year to give longer weekends to disconnecting and foster downtime.</p>
<h2 id="in-closing"><a href="#in-closing" aria-label="in closing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>In Closing</h2>
<p>Having [virtually] met with every single one of our [60] new hires who have joined Sentry since the beginning of the pandemic, a common sentiment I’ve heard is “I can’t wait to meet everyone finally and be back in an office again! This is hard!” It <em>is</em> hard. Psychologically, emotionally, to operate in a world where almost everything has become transactional by nature. Zoom fatigue is real, and burnout from being stuck in the groundhog day of pandemotimes is wearying, at best, and utterly mentally exhausting, at worst.</p>
<p>We believe in the power of humanizing connections and a massive aspect of this is the ability to build relationships in real life. The pandemic has shown us just how much we miss out on, when we don’t have the chance to connect with each other within in-person spaces. We’ll continue to invest in our employees by maintaining a human-centric approach to our ethos of in-office work, through supporting the needs for flexibility in reimagining work-life entwinements. We’re squirrelling away to establish the new normal and we’d love for you to come and join us on this journey - we’re really nice people 😎.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5AijIxWlOxOvwSnR7sgnrs/c9ecdcb122f96768637df33bc202b6f8/BackToOffice-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>No-code AWS Lambda Monitoring</title>
      <link>https://blog.sentry.io/2021/05/24/no-code-aws-lambda-monitoring/</link>
      <description>Auto-instrumenting AWS Lambda Monitoring didn’t originate through a focus group or business plan. It started as a hackathon project that…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Auto-instrumenting AWS <a href="https://sentry.io/for/serverless/">Lambda Monitoring</a> didn’t originate through a focus group or business plan. It started as a hackathon project that addressed the tedium of removing manual code instrumentation. Developer environments often include hundreds of AWS Lambda functions. And our existing instrumentation required initialization code to be manually placed on every single function. So to fix this, our growth team used Amazon CloudWatch to build a prototype that could instrument AWS Lambda functions. </p>
<p>This prototype began by using AWS CloudFormation stack to automatically create resources in a customer environment. Then we streamed Amazon CloudWatch Logs to Sentry through the Amazon Kinesis Data Firehose. This made it so all you had to do was put in your AWS account ID and create the stack using a pre-configured AWS CloudFormation stack.</p>
<p>But in order to get this production-ready, we had to take a closer look at a few things:</p>
<ul>
<li>Since we just picked a mocked-up stack trace for our demo, the streamed logs were not grouped into issues — or even formatted to pull out stack traces. </li>
<li>While the Amazon CloudWatch logs could display stack traces, they didn’t even come close to Sentry’s representation of stack traces, as they had a different use case (though that’s a conversation for another day).</li>
<li>Through this automated instrumentation, it wasn’t possible to choose or create a project for your AWS Lambda functions, as we had hard-coded these values for the hackathon.</li>
</ul>
<p>Ultimately, this meant that we would not use logs to productize no-code AWS Lambda monitoring, as logs would limit our tracing capabilities. Instead, we used <a href="https://aws.amazon.com/blogs/compute/introducing-aws-lambda-extensions-in-preview/">AWS Lambda Extensions</a>, which tied Sentry’s <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html">AWS Lambda Layers</a> — along with environment variables and code wrapping — to instrument AWS Lambda functions. Doing so ensured that:</p>
<ul>
<li>We were a part of the runtime environments that captured issues/performance and reported them in real-time.</li>
<li>We could connect developers to formatted stack traces along with in-context environment variables and breadcrumbs.</li>
<li>Developers were able to make changes to Sentry’s instrumentation rather than creating in a black box.</li>
<li>Developers could control the sample rate for the function traces, as well as activation/deactivation of Sentry directly from the UI.</li>
</ul>
<p>Using the AWS Lambda Layers approach and skipping the Amazon CloudWatch had two minor — but manageable — downsides:</p>
<ul>
<li>We needed a specific SDK AWS Lambda Layer for every programming language. We launched with support for Node and Python.</li>
<li>We’d miss out on some metrics like memory usage and timeout issues since they are reported after an AWS Lambda function has finished executing.  </li>
</ul>
<h2 id="outcome"><a href="#outcome" aria-label="outcome permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Outcome</h2>
<p>Instrumenting Sentry on your AWS Lambda functions is now as easy as following a following few simple, UI-specific <a href="https://docs.sentry.io/product/integrations/aws-lambda/">steps</a>:</p>
<h3 id="1-select-project"><a href="#1-select-project" aria-label="1 select project permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>1. Select Project</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202&amp;fm=webp 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404&amp;fm=webp 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807&amp;fm=webp 807w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807 807w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="2-add-cloudformation-stack"><a href="#2-add-cloudformation-stack" aria-label="2 add cloudformation stack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>2. Add CloudFormation Stack</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208&amp;fm=webp 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416&amp;fm=webp 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831&amp;fm=webp 831w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831 831w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="aws account 1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="3-select-functions-to-instrument"><a href="#3-select-functions-to-instrument" aria-label="3 select functions to instrument permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>3. Select Functions to Instrument</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204&amp;fm=webp 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409&amp;fm=webp 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817&amp;fm=webp 817w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817 817w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="select lambdas" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And that’s it! You can even toggle function instrumentation on the fly from the AWS integration management page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="configure" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Ok, so why should you care? Well, developers seem to appreciate the value in auto-instrumentation — more than a third of our instrumentations for AWS Lambda monitoring are now coming through auto-instrumentation. The folks at AWS thought it wasn’t bad either. They helped us become an <a href="https://partners.amazonaws.com/partners/0010L00001sCEb6QAG/Sentry">AWS Partner</a> and gave us a <a href="https://aws.amazon.com/partners/programs/service-ready/">AWS Lambda Ready</a> Designation. </p>
<p>You can learn more about Sentry’s support for Serverless Monitoring <a href="https://docs.sentry.io/product/integrations/#cloud-monitoring">here</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/nZzDgCxgbstByzkPfxvyW/3c087b8f2ea21828a6dc6a63d291f2bf/Errors1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>No-code AWS Lambda Monitoring</title>
      <link>https://blog.sentry.io/2021/05/24/no-code-aws-lambda-monitoring/</link>
      <description>Auto-instrumenting AWS Lambda Monitoring didn’t originate through a focus group or business plan. It started as a hackathon project that…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Auto-instrumenting AWS <a href="https://sentry.io/for/serverless/">Lambda Monitoring</a> didn’t originate through a focus group or business plan. It started as a hackathon project that addressed the tedium of removing manual code instrumentation. Developer environments often include hundreds of AWS Lambda functions. And our existing instrumentation required initialization code to be manually placed on every single function. So to fix this, our growth team used Amazon CloudWatch to build a prototype that could instrument AWS Lambda functions. </p>
<p>This prototype began by using AWS CloudFormation stack to automatically create resources in a customer environment. Then we streamed Amazon CloudWatch Logs to Sentry through the Amazon Kinesis Data Firehose. This made it so all you had to do was put in your AWS account ID and create the stack using a pre-configured AWS CloudFormation stack.</p>
<p>But in order to get this production-ready, we had to take a closer look at a few things:</p>
<ul>
<li>Since we just picked a mocked-up stack trace for our demo, the streamed logs were not grouped into issues — or even formatted to pull out stack traces. </li>
<li>While the Amazon CloudWatch logs could display stack traces, they didn’t even come close to Sentry’s representation of stack traces, as they had a different use case (though that’s a conversation for another day).</li>
<li>Through this automated instrumentation, it wasn’t possible to choose or create a project for your AWS Lambda functions, as we had hard-coded these values for the hackathon.</li>
</ul>
<p>Ultimately, this meant that we would not use logs to productize no-code AWS Lambda monitoring, as logs would limit our tracing capabilities. Instead, we used <a href="https://aws.amazon.com/blogs/compute/introducing-aws-lambda-extensions-in-preview/">AWS Lambda Extensions</a>, which tied Sentry’s <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html">AWS Lambda Layers</a> — along with environment variables and code wrapping — to instrument AWS Lambda functions. Doing so ensured that:</p>
<ul>
<li>We were a part of the runtime environments that captured issues/performance and reported them in real-time.</li>
<li>We could connect developers to formatted stack traces along with in-context environment variables and breadcrumbs.</li>
<li>Developers were able to make changes to Sentry’s instrumentation rather than creating in a black box.</li>
<li>Developers could control the sample rate for the function traces, as well as activation/deactivation of Sentry directly from the UI.</li>
</ul>
<p>Using the AWS Lambda Layers approach and skipping the Amazon CloudWatch had two minor — but manageable — downsides:</p>
<ul>
<li>We needed a specific SDK AWS Lambda Layer for every programming language. We launched with support for Node and Python.</li>
<li>We’d miss out on some metrics like memory usage and timeout issues since they are reported after an AWS Lambda function has finished executing.  </li>
</ul>
<h2 id="outcome"><a href="#outcome" aria-label="outcome permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Outcome</h2>
<p>Instrumenting Sentry on your AWS Lambda functions is now as easy as following a following few simple, UI-specific <a href="https://docs.sentry.io/product/integrations/aws-lambda/">steps</a>:</p>
<h3 id="1-select-project"><a href="#1-select-project" aria-label="1 select project permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>1. Select Project</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202&amp;fm=webp 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404&amp;fm=webp 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807&amp;fm=webp 807w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807 807w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="2-add-cloudformation-stack"><a href="#2-add-cloudformation-stack" aria-label="2 add cloudformation stack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>2. Add CloudFormation Stack</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208&amp;fm=webp 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416&amp;fm=webp 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831&amp;fm=webp 831w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831 831w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="aws account 1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="3-select-functions-to-instrument"><a href="#3-select-functions-to-instrument" aria-label="3 select functions to instrument permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>3. Select Functions to Instrument</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204&amp;fm=webp 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409&amp;fm=webp 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817&amp;fm=webp 817w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817 817w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="select lambdas" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And that’s it! You can even toggle function instrumentation on the fly from the AWS integration management page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="configure" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Ok, so why should you care? Well, developers seem to appreciate the value in auto-instrumentation — more than a third of our instrumentations for AWS Lambda monitoring are now coming through auto-instrumentation. The folks at AWS thought it wasn’t bad either. They helped us become an <a href="https://partners.amazonaws.com/partners/0010L00001sCEb6QAG/Sentry">AWS Partner</a> and gave us a <a href="https://aws.amazon.com/partners/programs/service-ready/">AWS Lambda Ready</a> Designation. </p>
<p>You can learn more about Sentry’s support for Serverless Monitoring <a href="https://docs.sentry.io/product/integrations/#cloud-monitoring">here</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/nZzDgCxgbstByzkPfxvyW/3c087b8f2ea21828a6dc6a63d291f2bf/Errors1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>No-code AWS Lambda Monitoring</title>
      <link>https://blog.sentry.io/2021/05/24/no-code-aws-lambda-monitoring/</link>
      <description>Auto-instrumenting AWS Lambda Monitoring didn’t originate through a focus group or business plan. It started as a hackathon project that…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Auto-instrumenting AWS <a href="https://sentry.io/for/serverless/">Lambda Monitoring</a> didn’t originate through a focus group or business plan. It started as a hackathon project that addressed the tedium of removing manual code instrumentation. Developer environments often include hundreds of AWS Lambda functions. And our existing instrumentation required initialization code to be manually placed on every single function. So to fix this, our growth team used Amazon CloudWatch to build a prototype that could instrument AWS Lambda functions. </p>
<p>This prototype began by using AWS CloudFormation stack to automatically create resources in a customer environment. Then we streamed Amazon CloudWatch Logs to Sentry through the Amazon Kinesis Data Firehose. This made it so all you had to do was put in your AWS account ID and create the stack using a pre-configured AWS CloudFormation stack.</p>
<p>But in order to get this production-ready, we had to take a closer look at a few things:</p>
<ul>
<li>Since we just picked a mocked-up stack trace for our demo, the streamed logs were not grouped into issues — or even formatted to pull out stack traces. </li>
<li>While the Amazon CloudWatch logs could display stack traces, they didn’t even come close to Sentry’s representation of stack traces, as they had a different use case (though that’s a conversation for another day).</li>
<li>Through this automated instrumentation, it wasn’t possible to choose or create a project for your AWS Lambda functions, as we had hard-coded these values for the hackathon.</li>
</ul>
<p>Ultimately, this meant that we would not use logs to productize no-code AWS Lambda monitoring, as logs would limit our tracing capabilities. Instead, we used <a href="https://aws.amazon.com/blogs/compute/introducing-aws-lambda-extensions-in-preview/">AWS Lambda Extensions</a>, which tied Sentry’s <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html">AWS Lambda Layers</a> — along with environment variables and code wrapping — to instrument AWS Lambda functions. Doing so ensured that:</p>
<ul>
<li>We were a part of the runtime environments that captured issues/performance and reported them in real-time.</li>
<li>We could connect developers to formatted stack traces along with in-context environment variables and breadcrumbs.</li>
<li>Developers were able to make changes to Sentry’s instrumentation rather than creating in a black box.</li>
<li>Developers could control the sample rate for the function traces, as well as activation/deactivation of Sentry directly from the UI.</li>
</ul>
<p>Using the AWS Lambda Layers approach and skipping the Amazon CloudWatch had two minor — but manageable — downsides:</p>
<ul>
<li>We needed a specific SDK AWS Lambda Layer for every programming language. We launched with support for Node and Python.</li>
<li>We’d miss out on some metrics like memory usage and timeout issues since they are reported after an AWS Lambda function has finished executing.  </li>
</ul>
<h2 id="outcome"><a href="#outcome" aria-label="outcome permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Outcome</h2>
<p>Instrumenting Sentry on your AWS Lambda functions is now as easy as following a following few simple, UI-specific <a href="https://docs.sentry.io/product/integrations/aws-lambda/">steps</a>:</p>
<h3 id="1-select-project"><a href="#1-select-project" aria-label="1 select project permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>1. Select Project</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202&amp;fm=webp 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404&amp;fm=webp 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807&amp;fm=webp 807w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807 807w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="2-add-cloudformation-stack"><a href="#2-add-cloudformation-stack" aria-label="2 add cloudformation stack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>2. Add CloudFormation Stack</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208&amp;fm=webp 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416&amp;fm=webp 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831&amp;fm=webp 831w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831 831w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="aws account 1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="3-select-functions-to-instrument"><a href="#3-select-functions-to-instrument" aria-label="3 select functions to instrument permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>3. Select Functions to Instrument</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204&amp;fm=webp 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409&amp;fm=webp 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817&amp;fm=webp 817w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817 817w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="select lambdas" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And that’s it! You can even toggle function instrumentation on the fly from the AWS integration management page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="configure" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Ok, so why should you care? Well, developers seem to appreciate the value in auto-instrumentation — more than a third of our instrumentations for AWS Lambda monitoring are now coming through auto-instrumentation. The folks at AWS thought it wasn’t bad either. They helped us become an <a href="https://partners.amazonaws.com/partners/0010L00001sCEb6QAG/Sentry">AWS Partner</a> and gave us a <a href="https://aws.amazon.com/partners/programs/service-ready/">AWS Lambda Ready</a> Designation. </p>
<p>You can learn more about Sentry’s support for Serverless Monitoring <a href="https://docs.sentry.io/product/integrations/#cloud-monitoring">here</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/nZzDgCxgbstByzkPfxvyW/3c087b8f2ea21828a6dc6a63d291f2bf/Errors1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Great Moments in Application Monitoring</title>
      <link>https://blog.sentry.io/2021/05/20/great-moments-in-application-monitoring/</link>
      <description>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-05-20T12:00">May 20, 2021</time></p><ul><li><a href="https://blog.sentry.io/discover/"><span>Discover</span></a></li></ul><div><p>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost confidence in your abilities. It’s why every developer remembers those moments where their solution improves both process and performance. We’ve seen this happen firsthand with our customers, and want to share their Great Moments in Application Monitoring:</p>
<h2 id="doordash"><a href="#doordash" aria-label="doordash permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>DoorDash</h2>
<p>When you’re connecting hungry customers with hurried drivers, you can’t afford to have debugging eat up development time. Unfortunately, whenever a <a href="https://sentry.io/customers/doordash/">DoorDash</a> developer tried something new without informing the larger team, resources would be wasted debugging their unknown logic. With Sentry’s automated stack traces, however, DoorDash developers could finally — and clearly — understand their colleagues’ code. By including $request_id in their access logs, passing that value downstream to their application servers, and then modifying the application’s entry point, DoorDash was able to utilize <code>$request_id</code> as a logging variable. Now, whenever there’s an error, DoorDash can search <code>$request_id</code> and immediately see the exact issue and exception. The result? Scalable production, the ability to trace every request end‑to‑end, and a process that’s as cool as a cucumber bisque.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/LVVKvjUaCSg/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/sddefault.webp 640w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/default.webp 120w"/><img src="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/LVVKvjUaCSg/sddefault.jpg 640w, https://i.ytimg.com/vi/LVVKvjUaCSg/hqdefault.jpg 480w, https://i.ytimg.com/vi/LVVKvjUaCSg/mqdefault.jpg 320w, https://i.ytimg.com/vi/LVVKvjUaCSg/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>As the one service that’s consistently able to catch these types of NGINX variables, Sentry is really valuable at tracing exceptions of errors. And by providing automatic feedback, we’re able to see things clearly and gain a better understanding of what’s going wrong.</p>
</blockquote>
<p><em>Zhaobang Liu, DevOps Engineer, DoorDash</em></p>
<h2 id="eventbrite"><a href="#eventbrite" aria-label="eventbrite permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Eventbrite</h2>
<p>For event marketer <a href="https://sentry.io/customers/eventbrite/">Eventbrite</a>, their errors were talking over one another, as their team was constantly being distracted by alerts on duplicate issues. So they hired Sentry to emcee their errors. After instrumenting Sentry’s <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging</a> features, the Eventbrite team was able to create a list of errors prioritized by user impact and frequency. Unlike triaging in the past — where the Eventbrite team had to parse through countless duplicate issues — now they were only focused on solving what mattered most. What’s more, using <a href="https://docs.sentry.io/product/releases/">Release Health</a>, Eventbrite improved the quality of their releases by gauging adoption levels as well as the percentage of both crash-free sessions and crash-free users.</p>
<blockquote>
<p>Sentry helps our team fix the most important issues in each release. We can track how a release is trending by percent of crash-free sessions. With this data, we can remediate issues that impact the most users and move on to building more features.</p>
</blockquote>
<p><em>Jaylum Chen, Staff Software Engineer at Eventbrite</em> </p>
<h2 id="cloudflare"><a href="#cloudflare" aria-label="cloudflare permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cloudflare</h2>
<p>The year was 2019. And <a href="https://sentry.io/customers/cloudflare/">Cloudflare</a>’s release process consisted of manually tagging a release and then manually running through their dashboard to find errors. Not only was this process tedious, it made the Cloudflare team susceptible to errors and redundant work. But with Sentry’s <a href="https://docs.sentry.io/product/releases/">Releases</a>, the Cloudflare team was able to part the skies of gloomy manual work. By setting up an automated release plan, the Cloudflare team could now safely deploy code, monitor every step of their deployment process, and link all releases back to the Releases page. When automated tools — not manual brains — do the work, both Cloudflare’s code and their customers win.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/JiOMNx-2oOo/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/sddefault.webp 640w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/default.webp 120w"/><img src="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/JiOMNx-2oOo/sddefault.jpg 640w, https://i.ytimg.com/vi/JiOMNx-2oOo/hqdefault.jpg 480w, https://i.ytimg.com/vi/JiOMNx-2oOo/mqdefault.jpg 320w, https://i.ytimg.com/vi/JiOMNx-2oOo/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>Sometimes errors on the front-end have roots on the backend. We use Sentry’s tags and metadata about a request that comes in to pass along a version of distributed tracing to link these back.</p>
</blockquote>
<p><em>Tony Stuck, Engineering Manager, Cloudflare</em></p>
<h2 id="volley"><a href="#volley" aria-label="volley permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Volley</h2>
<p>With trivia games like Song Quiz, Yes Sire, and Are You Smarter Than a 5th Grader?, <a href="https://sentry.io/customers/volley/">Volley</a> entertains millions of families on smart speaker devices every month. But with all those players blurting out answers at their voice-controlled devices, Volley engineers knew that they needed complete visibility into their code so they could  properly scale their product.   </p>
<p>Using our <a href="https://docs.sentry.io/product/performance/">performance monitoring</a> offering, the Volley team observed that their voice-controlled LaunchRequest was waiting for an API call to update the user’s subscription status. Once Volley moved this call to only those sections of the code which needed it, they noticed an improved Apdex score, faster user interactions, and their time to launch was cut in half. </p>
<blockquote>
<p>Sentry has become part of my daily routine. Every morning, I check to see if there are any new issues, and look at yesterday’s performance to see if any of our latest changes affect it negatively or positively.</p>
</blockquote>
<p><em>Devin Ozel, Sr. Software Engineer, Volley</em></p>
<p>With Great Moments in <a href="https://sentry.io/for/full-stack/">Application Monitoring</a>, we recognize those intrepid developers who were able to get their application to perform the way it was intended - and the way their customers demand.</p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4cxMW8XlkrdBdFRQN7J85q/50ceaff57776b53b272b4abed22e6543/habits_successful_customer-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 20 May 2021 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Great Moments in Application Monitoring</title>
      <link>https://blog.sentry.io/2021/05/20/great-moments-in-application-monitoring/</link>
      <description>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-05-20T12:00">May 20, 2021</time></p><ul><li><a href="https://blog.sentry.io/discover/"><span>Discover</span></a></li></ul><div><p>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost confidence in your abilities. It’s why every developer remembers those moments where their solution improves both process and performance. We’ve seen this happen firsthand with our customers, and want to share their Great Moments in Application Monitoring:</p>
<h2 id="doordash"><a href="#doordash" aria-label="doordash permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>DoorDash</h2>
<p>When you’re connecting hungry customers with hurried drivers, you can’t afford to have debugging eat up development time. Unfortunately, whenever a <a href="https://sentry.io/customers/doordash/">DoorDash</a> developer tried something new without informing the larger team, resources would be wasted debugging their unknown logic. With Sentry’s automated stack traces, however, DoorDash developers could finally — and clearly — understand their colleagues’ code. By including $request_id in their access logs, passing that value downstream to their application servers, and then modifying the application’s entry point, DoorDash was able to utilize <code>$request_id</code> as a logging variable. Now, whenever there’s an error, DoorDash can search <code>$request_id</code> and immediately see the exact issue and exception. The result? Scalable production, the ability to trace every request end‑to‑end, and a process that’s as cool as a cucumber bisque.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/LVVKvjUaCSg/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/sddefault.webp 640w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/default.webp 120w"/><img src="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/LVVKvjUaCSg/sddefault.jpg 640w, https://i.ytimg.com/vi/LVVKvjUaCSg/hqdefault.jpg 480w, https://i.ytimg.com/vi/LVVKvjUaCSg/mqdefault.jpg 320w, https://i.ytimg.com/vi/LVVKvjUaCSg/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>As the one service that’s consistently able to catch these types of NGINX variables, Sentry is really valuable at tracing exceptions of errors. And by providing automatic feedback, we’re able to see things clearly and gain a better understanding of what’s going wrong.</p>
</blockquote>
<p><em>Zhaobang Liu, DevOps Engineer, DoorDash</em></p>
<h2 id="eventbrite"><a href="#eventbrite" aria-label="eventbrite permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Eventbrite</h2>
<p>For event marketer <a href="https://sentry.io/customers/eventbrite/">Eventbrite</a>, their errors were talking over one another, as their team was constantly being distracted by alerts on duplicate issues. So they hired Sentry to emcee their errors. After instrumenting Sentry’s <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging</a> features, the Eventbrite team was able to create a list of errors prioritized by user impact and frequency. Unlike triaging in the past — where the Eventbrite team had to parse through countless duplicate issues — now they were only focused on solving what mattered most. What’s more, using <a href="https://docs.sentry.io/product/releases/">Release Health</a>, Eventbrite improved the quality of their releases by gauging adoption levels as well as the percentage of both crash-free sessions and crash-free users.</p>
<blockquote>
<p>Sentry helps our team fix the most important issues in each release. We can track how a release is trending by percent of crash-free sessions. With this data, we can remediate issues that impact the most users and move on to building more features.</p>
</blockquote>
<p><em>Jaylum Chen, Staff Software Engineer at Eventbrite</em> </p>
<h2 id="cloudflare"><a href="#cloudflare" aria-label="cloudflare permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cloudflare</h2>
<p>The year was 2019. And <a href="https://sentry.io/customers/cloudflare/">Cloudflare</a>’s release process consisted of manually tagging a release and then manually running through their dashboard to find errors. Not only was this process tedious, it made the Cloudflare team susceptible to errors and redundant work. But with Sentry’s <a href="https://docs.sentry.io/product/releases/">Releases</a>, the Cloudflare team was able to part the skies of gloomy manual work. By setting up an automated release plan, the Cloudflare team could now safely deploy code, monitor every step of their deployment process, and link all releases back to the Releases page. When automated tools — not manual brains — do the work, both Cloudflare’s code and their customers win.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/JiOMNx-2oOo/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/sddefault.webp 640w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/default.webp 120w"/><img src="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/JiOMNx-2oOo/sddefault.jpg 640w, https://i.ytimg.com/vi/JiOMNx-2oOo/hqdefault.jpg 480w, https://i.ytimg.com/vi/JiOMNx-2oOo/mqdefault.jpg 320w, https://i.ytimg.com/vi/JiOMNx-2oOo/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>Sometimes errors on the front-end have roots on the backend. We use Sentry’s tags and metadata about a request that comes in to pass along a version of distributed tracing to link these back.</p>
</blockquote>
<p><em>Tony Stuck, Engineering Manager, Cloudflare</em></p>
<h2 id="volley"><a href="#volley" aria-label="volley permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Volley</h2>
<p>With trivia games like Song Quiz, Yes Sire, and Are You Smarter Than a 5th Grader?, <a href="https://sentry.io/customers/volley/">Volley</a> entertains millions of families on smart speaker devices every month. But with all those players blurting out answers at their voice-controlled devices, Volley engineers knew that they needed complete visibility into their code so they could  properly scale their product.   </p>
<p>Using our <a href="https://docs.sentry.io/product/performance/">performance monitoring</a> offering, the Volley team observed that their voice-controlled LaunchRequest was waiting for an API call to update the user’s subscription status. Once Volley moved this call to only those sections of the code which needed it, they noticed an improved Apdex score, faster user interactions, and their time to launch was cut in half. </p>
<blockquote>
<p>Sentry has become part of my daily routine. Every morning, I check to see if there are any new issues, and look at yesterday’s performance to see if any of our latest changes affect it negatively or positively.</p>
</blockquote>
<p><em>Devin Ozel, Sr. Software Engineer, Volley</em></p>
<p>With Great Moments in <a href="https://sentry.io/for/full-stack/">Application Monitoring</a>, we recognize those intrepid developers who were able to get their application to perform the way it was intended - and the way their customers demand.</p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4cxMW8XlkrdBdFRQN7J85q/50ceaff57776b53b272b4abed22e6543/habits_successful_customer-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 20 May 2021 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Great Moments in Application Monitoring</title>
      <link>https://blog.sentry.io/2021/05/20/great-moments-in-application-monitoring/</link>
      <description>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-05-20T12:00">May 20, 2021</time></p><ul><li><a href="https://blog.sentry.io/discover/"><span>Discover</span></a></li></ul><div><p>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost confidence in your abilities. It’s why every developer remembers those moments where their solution improves both process and performance. We’ve seen this happen firsthand with our customers, and want to share their Great Moments in Application Monitoring:</p>
<h2 id="doordash"><a href="#doordash" aria-label="doordash permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>DoorDash</h2>
<p>When you’re connecting hungry customers with hurried drivers, you can’t afford to have debugging eat up development time. Unfortunately, whenever a <a href="https://sentry.io/customers/doordash/">DoorDash</a> developer tried something new without informing the larger team, resources would be wasted debugging their unknown logic. With Sentry’s automated stack traces, however, DoorDash developers could finally — and clearly — understand their colleagues’ code. By including $request_id in their access logs, passing that value downstream to their application servers, and then modifying the application’s entry point, DoorDash was able to utilize <code>$request_id</code> as a logging variable. Now, whenever there’s an error, DoorDash can search <code>$request_id</code> and immediately see the exact issue and exception. The result? Scalable production, the ability to trace every request end‑to‑end, and a process that’s as cool as a cucumber bisque.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/LVVKvjUaCSg/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/sddefault.webp 640w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/default.webp 120w"/><img src="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/LVVKvjUaCSg/sddefault.jpg 640w, https://i.ytimg.com/vi/LVVKvjUaCSg/hqdefault.jpg 480w, https://i.ytimg.com/vi/LVVKvjUaCSg/mqdefault.jpg 320w, https://i.ytimg.com/vi/LVVKvjUaCSg/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>As the one service that’s consistently able to catch these types of NGINX variables, Sentry is really valuable at tracing exceptions of errors. And by providing automatic feedback, we’re able to see things clearly and gain a better understanding of what’s going wrong.</p>
</blockquote>
<p><em>Zhaobang Liu, DevOps Engineer, DoorDash</em></p>
<h2 id="eventbrite"><a href="#eventbrite" aria-label="eventbrite permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Eventbrite</h2>
<p>For event marketer <a href="https://sentry.io/customers/eventbrite/">Eventbrite</a>, their errors were talking over one another, as their team was constantly being distracted by alerts on duplicate issues. So they hired Sentry to emcee their errors. After instrumenting Sentry’s <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging</a> features, the Eventbrite team was able to create a list of errors prioritized by user impact and frequency. Unlike triaging in the past — where the Eventbrite team had to parse through countless duplicate issues — now they were only focused on solving what mattered most. What’s more, using <a href="https://docs.sentry.io/product/releases/">Release Health</a>, Eventbrite improved the quality of their releases by gauging adoption levels as well as the percentage of both crash-free sessions and crash-free users.</p>
<blockquote>
<p>Sentry helps our team fix the most important issues in each release. We can track how a release is trending by percent of crash-free sessions. With this data, we can remediate issues that impact the most users and move on to building more features.</p>
</blockquote>
<p><em>Jaylum Chen, Staff Software Engineer at Eventbrite</em> </p>
<h2 id="cloudflare"><a href="#cloudflare" aria-label="cloudflare permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cloudflare</h2>
<p>The year was 2019. And <a href="https://sentry.io/customers/cloudflare/">Cloudflare</a>’s release process consisted of manually tagging a release and then manually running through their dashboard to find errors. Not only was this process tedious, it made the Cloudflare team susceptible to errors and redundant work. But with Sentry’s <a href="https://docs.sentry.io/product/releases/">Releases</a>, the Cloudflare team was able to part the skies of gloomy manual work. By setting up an automated release plan, the Cloudflare team could now safely deploy code, monitor every step of their deployment process, and link all releases back to the Releases page. When automated tools — not manual brains — do the work, both Cloudflare’s code and their customers win.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/JiOMNx-2oOo/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/sddefault.webp 640w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/default.webp 120w"/><img src="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/JiOMNx-2oOo/sddefault.jpg 640w, https://i.ytimg.com/vi/JiOMNx-2oOo/hqdefault.jpg 480w, https://i.ytimg.com/vi/JiOMNx-2oOo/mqdefault.jpg 320w, https://i.ytimg.com/vi/JiOMNx-2oOo/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>Sometimes errors on the front-end have roots on the backend. We use Sentry’s tags and metadata about a request that comes in to pass along a version of distributed tracing to link these back.</p>
</blockquote>
<p><em>Tony Stuck, Engineering Manager, Cloudflare</em></p>
<h2 id="volley"><a href="#volley" aria-label="volley permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Volley</h2>
<p>With trivia games like Song Quiz, Yes Sire, and Are You Smarter Than a 5th Grader?, <a href="https://sentry.io/customers/volley/">Volley</a> entertains millions of families on smart speaker devices every month. But with all those players blurting out answers at their voice-controlled devices, Volley engineers knew that they needed complete visibility into their code so they could  properly scale their product.   </p>
<p>Using our <a href="https://docs.sentry.io/product/performance/">performance monitoring</a> offering, the Volley team observed that their voice-controlled LaunchRequest was waiting for an API call to update the user’s subscription status. Once Volley moved this call to only those sections of the code which needed it, they noticed an improved Apdex score, faster user interactions, and their time to launch was cut in half. </p>
<blockquote>
<p>Sentry has become part of my daily routine. Every morning, I check to see if there are any new issues, and look at yesterday’s performance to see if any of our latest changes affect it negatively or positively.</p>
</blockquote>
<p><em>Devin Ozel, Sr. Software Engineer, Volley</em></p>
<p>With Great Moments in <a href="https://sentry.io/for/full-stack/">Application Monitoring</a>, we recognize those intrepid developers who were able to get their application to perform the way it was intended - and the way their customers demand.</p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4cxMW8XlkrdBdFRQN7J85q/50ceaff57776b53b272b4abed22e6543/habits_successful_customer-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 20 May 2021 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring Success with Sentry</title>
      <link>https://blog.sentry.io/2021/05/18/measuring-success-with-sentry/</link>
      <description>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all languages, as every developer knew what WTF meant (Works That Frustrate, obviously). </p>
<p>Today, however, code is too intricate — and important — for clever, opaque metrics. You need objective data that communicates the quality and stability of your code — KPIs such as events accepted, transaction outcomes, and crash-free sessions.</p>
<p>For <a href="https://sentry.io/for/full-stack/">Measurement May</a>, we’re building out features designed to deliver the right metrics, all so you can drive the right outcomes for your organization.</p>
<h2 id="create-your-0wn-visibility-with-custom-dashboards"><a href="#create-your-0wn-visibility-with-custom-dashboards" aria-label="create your 0wn visibility with custom dashboards permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Create Your 0wn Visibility with Custom Dashboards</h2>
<p>Understanding the state of your application starts with understanding the errors, transactions, and attachments that make up your event data. With our latest update to <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, you’re able to surface critical event data as well as share that data across your organization. While we’ve equipped Dashboards with a library of <a href="https://sentry.io/features/dashboards/">prebuilt widgets</a> — issues by region, performance over time, release quality over time — you can also build your own custom queries within your personal dashboard.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588&amp;fm=webp 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176&amp;fm=webp 1176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176 1176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-custom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And you can enhance your visibility even more when you combine Dashboards with Discover, our query builder. Say you’ve built a widget that compiles top issues across all your projects: </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215&amp;fm=webp 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429&amp;fm=webp 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858&amp;fm=webp 858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858 858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-widget-top-issues " title="" src="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>When you open this widget in <a href="https://sentry.io/features/custom-queries/">Discover</a>, you can measure progress across multiple projects over time while also comparing additional filters — unhandled errors, URL, browser type, etc. This way, instead of scrolling through listed queries, you’re able to provide clear visualizations to higher-level managers so you can achieve consensus over what to do next. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645&amp;fm=webp 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289&amp;fm=webp 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578&amp;fm=webp 2578w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578 2578w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashbaord-to-discover" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="all-details-one-view-with-project-details"><a href="#all-details-one-view-with-project-details" aria-label="all details one view with project details permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All Details, One View with Project Details</h2>
<p>It’s a common plight among developers: twenty tabs open, just to figure out one problem. Your errors, transactions, and sessions shouldn’t be spread across different screens. They should be available on one screen, and at a glance. Our new <a href="https://docs.sentry.io/product/projects/project-details/">Project Details</a> page unifies a developer’s monitoring experience across all aspects of a project - health, speed, recent alerts, and releases. With it, you’re able to see project-wide KPIs for stability (crash-free sessions), velocity (number of releases), and performance (Apdex score). You can also compare this data over time so that you’re able to track incremental progress.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297&amp;fm=webp 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595&amp;fm=webp 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189&amp;fm=webp 1189w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189 1189w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="know-how-much-sentry-youre-using-with-org-stats"><a href="#know-how-much-sentry-youre-using-with-org-stats" aria-label="know how much sentry youre using with org stats permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Know How Much Sentry You’re Using with Org Stats</h2>
<p>For developers who manage other developers, statistics is the language you use to control spend, manage quotas, and create efficiencies. With our new <a href="https://docs.sentry.io/product/accounts/quotas/org-stats/">Org Stats</a> page, you now have the information you need to see which areas of your codebase demand the most resources. With it, you can track how many issues are being created — and resolved — per week for each project. Charts and tables also provide insight into per-project usage over time of your errors, transactions, and attachments. Now you can not only see which projects had a recent spike, but you can also link to the project details screen and immediately see what needs to be addressed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549&amp;fm=webp 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099&amp;fm=webp 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197&amp;fm=webp 2197w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197 2197w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="org-stats-page" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Measurement May is upon us. Here’s a primer on Google’s upcoming <a href="https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/">Web Vitals update</a>, and also <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">join us</a> on May 20th for a live demo on how to build custom dashboard widgets and much more. </p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1ZqOhxApeXd6EInQds1r65/bdee0730777914cbf0e0e2e6f3e99b84/discover1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring Success with Sentry</title>
      <link>https://blog.sentry.io/2021/05/18/measuring-success-with-sentry/</link>
      <description>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all languages, as every developer knew what WTF meant (Works That Frustrate, obviously). </p>
<p>Today, however, code is too intricate — and important — for clever, opaque metrics. You need objective data that communicates the quality and stability of your code — KPIs such as events accepted, transaction outcomes, and crash-free sessions.</p>
<p>For <a href="https://sentry.io/for/full-stack/">Measurement May</a>, we’re building out features designed to deliver the right metrics, all so you can drive the right outcomes for your organization.</p>
<h2 id="create-your-0wn-visibility-with-custom-dashboards"><a href="#create-your-0wn-visibility-with-custom-dashboards" aria-label="create your 0wn visibility with custom dashboards permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Create Your 0wn Visibility with Custom Dashboards</h2>
<p>Understanding the state of your application starts with understanding the errors, transactions, and attachments that make up your event data. With our latest update to <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, you’re able to surface critical event data as well as share that data across your organization. While we’ve equipped Dashboards with a library of <a href="https://sentry.io/features/dashboards/">prebuilt widgets</a> — issues by region, performance over time, release quality over time — you can also build your own custom queries within your personal dashboard.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588&amp;fm=webp 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176&amp;fm=webp 1176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176 1176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-custom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And you can enhance your visibility even more when you combine Dashboards with Discover, our query builder. Say you’ve built a widget that compiles top issues across all your projects: </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215&amp;fm=webp 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429&amp;fm=webp 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858&amp;fm=webp 858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858 858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-widget-top-issues " title="" src="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>When you open this widget in <a href="https://sentry.io/features/custom-queries/">Discover</a>, you can measure progress across multiple projects over time while also comparing additional filters — unhandled errors, URL, browser type, etc. This way, instead of scrolling through listed queries, you’re able to provide clear visualizations to higher-level managers so you can achieve consensus over what to do next. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645&amp;fm=webp 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289&amp;fm=webp 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578&amp;fm=webp 2578w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578 2578w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashbaord-to-discover" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="all-details-one-view-with-project-details"><a href="#all-details-one-view-with-project-details" aria-label="all details one view with project details permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All Details, One View with Project Details</h2>
<p>It’s a common plight among developers: twenty tabs open, just to figure out one problem. Your errors, transactions, and sessions shouldn’t be spread across different screens. They should be available on one screen, and at a glance. Our new <a href="https://docs.sentry.io/product/projects/project-details/">Project Details</a> page unifies a developer’s monitoring experience across all aspects of a project - health, speed, recent alerts, and releases. With it, you’re able to see project-wide KPIs for stability (crash-free sessions), velocity (number of releases), and performance (Apdex score). You can also compare this data over time so that you’re able to track incremental progress.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297&amp;fm=webp 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595&amp;fm=webp 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189&amp;fm=webp 1189w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189 1189w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="know-how-much-sentry-youre-using-with-org-stats"><a href="#know-how-much-sentry-youre-using-with-org-stats" aria-label="know how much sentry youre using with org stats permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Know How Much Sentry You’re Using with Org Stats</h2>
<p>For developers who manage other developers, statistics is the language you use to control spend, manage quotas, and create efficiencies. With our new <a href="https://docs.sentry.io/product/accounts/quotas/org-stats/">Org Stats</a> page, you now have the information you need to see which areas of your codebase demand the most resources. With it, you can track how many issues are being created — and resolved — per week for each project. Charts and tables also provide insight into per-project usage over time of your errors, transactions, and attachments. Now you can not only see which projects had a recent spike, but you can also link to the project details screen and immediately see what needs to be addressed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549&amp;fm=webp 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099&amp;fm=webp 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197&amp;fm=webp 2197w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197 2197w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="org-stats-page" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Measurement May is upon us. Here’s a primer on Google’s upcoming <a href="https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/">Web Vitals update</a>, and also <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">join us</a> on May 20th for a live demo on how to build custom dashboard widgets and much more. </p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1ZqOhxApeXd6EInQds1r65/bdee0730777914cbf0e0e2e6f3e99b84/discover1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring Success with Sentry</title>
      <link>https://blog.sentry.io/2021/05/18/measuring-success-with-sentry/</link>
      <description>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all languages, as every developer knew what WTF meant (Works That Frustrate, obviously). </p>
<p>Today, however, code is too intricate — and important — for clever, opaque metrics. You need objective data that communicates the quality and stability of your code — KPIs such as events accepted, transaction outcomes, and crash-free sessions.</p>
<p>For <a href="https://sentry.io/for/full-stack/">Measurement May</a>, we’re building out features designed to deliver the right metrics, all so you can drive the right outcomes for your organization.</p>
<h2 id="create-your-0wn-visibility-with-custom-dashboards"><a href="#create-your-0wn-visibility-with-custom-dashboards" aria-label="create your 0wn visibility with custom dashboards permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Create Your 0wn Visibility with Custom Dashboards</h2>
<p>Understanding the state of your application starts with understanding the errors, transactions, and attachments that make up your event data. With our latest update to <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, you’re able to surface critical event data as well as share that data across your organization. While we’ve equipped Dashboards with a library of <a href="https://sentry.io/features/dashboards/">prebuilt widgets</a> — issues by region, performance over time, release quality over time — you can also build your own custom queries within your personal dashboard.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588&amp;fm=webp 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176&amp;fm=webp 1176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176 1176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-custom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And you can enhance your visibility even more when you combine Dashboards with Discover, our query builder. Say you’ve built a widget that compiles top issues across all your projects: </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215&amp;fm=webp 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429&amp;fm=webp 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858&amp;fm=webp 858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858 858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-widget-top-issues " title="" src="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>When you open this widget in <a href="https://sentry.io/features/custom-queries/">Discover</a>, you can measure progress across multiple projects over time while also comparing additional filters — unhandled errors, URL, browser type, etc. This way, instead of scrolling through listed queries, you’re able to provide clear visualizations to higher-level managers so you can achieve consensus over what to do next. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645&amp;fm=webp 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289&amp;fm=webp 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578&amp;fm=webp 2578w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578 2578w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashbaord-to-discover" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="all-details-one-view-with-project-details"><a href="#all-details-one-view-with-project-details" aria-label="all details one view with project details permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All Details, One View with Project Details</h2>
<p>It’s a common plight among developers: twenty tabs open, just to figure out one problem. Your errors, transactions, and sessions shouldn’t be spread across different screens. They should be available on one screen, and at a glance. Our new <a href="https://docs.sentry.io/product/projects/project-details/">Project Details</a> page unifies a developer’s monitoring experience across all aspects of a project - health, speed, recent alerts, and releases. With it, you’re able to see project-wide KPIs for stability (crash-free sessions), velocity (number of releases), and performance (Apdex score). You can also compare this data over time so that you’re able to track incremental progress.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297&amp;fm=webp 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595&amp;fm=webp 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189&amp;fm=webp 1189w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189 1189w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="know-how-much-sentry-youre-using-with-org-stats"><a href="#know-how-much-sentry-youre-using-with-org-stats" aria-label="know how much sentry youre using with org stats permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Know How Much Sentry You’re Using with Org Stats</h2>
<p>For developers who manage other developers, statistics is the language you use to control spend, manage quotas, and create efficiencies. With our new <a href="https://docs.sentry.io/product/accounts/quotas/org-stats/">Org Stats</a> page, you now have the information you need to see which areas of your codebase demand the most resources. With it, you can track how many issues are being created — and resolved — per week for each project. Charts and tables also provide insight into per-project usage over time of your errors, transactions, and attachments. Now you can not only see which projects had a recent spike, but you can also link to the project details screen and immediately see what needs to be addressed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549&amp;fm=webp 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099&amp;fm=webp 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197&amp;fm=webp 2197w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197 2197w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="org-stats-page" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Measurement May is upon us. Here’s a primer on Google’s upcoming <a href="https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/">Web Vitals update</a>, and also <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">join us</a> on May 20th for a live demo on how to build custom dashboard widgets and much more. </p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1ZqOhxApeXd6EInQds1r65/bdee0730777914cbf0e0e2e6f3e99b84/discover1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Supporting Native Android Libraries Loaded From APKs</title>
      <link>https://blog.sentry.io/2021/05/13/supporting-native-android-libraries-loaded-from-apks/</link>
      <description>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses during their free time. Here, Native Platform Engineer, Arpad Borsos breaks down how memory mappings and dynamic library loading works and how it relates to native Android libraries loaded from APKs.</em></p>
<p>Libraries are key to modular programming, as they offer functionality in a single unit which can be shared with other developers. As you’re no doubt aware, there are two types of libraries: static and dynamic. Static libraries are directly embedded into your application at build time, while dynamic libraries are linked when starting the application, or at any later point.</p>
<p>This concept is important because dynamic libraries can be updated without modifying the application itself for things like fixing security issues or improving performance. Applications can also be split into multiple, dynamically-loaded libraries for organizational reasons, or when an application consists of a User Interface and a separate service running in the background.</p>
<p>When working with the Android NDK, native libraries written in C, Rust, or similar low-level languages are loaded dynamically by the Java layer. That is how <code>sentry-native</code> gets loaded into Android Apps that use the NDK.</p>
<p>Usually, these libraries are individual files on disk. You might have seen a few of these “.dll” files next to Windows Applications, which are similar on other operating systems. The dynamic loader on Android, which is itself a system library, has the ability to load libraries directly from Android “.apk” packages without needing to first extract them to disk. This is quite beneficial, as it saves precious disk space on your mobile device. </p>
<p>So far, <code>sentry-native</code>, and in turn, NDK support for our Android SDK, relied on these files being extracted to disk. This has created a lot of friction — especially for new customers — as newer Android Versions no longer extract “.apk” packages by default. To get around this, application developers had to set some explicit configuration flags, many of which were frequently overlooked when setting up Sentry for Android.</p>
<p>Starting with version 5 of our Android SDK, we added support for libraries loaded from “.apk”, which will remove the need to change configuration flags while also improving disk space usage of Apps that use the Sentry SDK.</p>
<p>Let us take a deeper dive into how all of this works, and what we need to change in order to support this use case.</p>
<h2 id="which-libraries-are-loaded"><a href="#which-libraries-are-loaded" aria-label="which libraries are loaded permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Which libraries are loaded?</h2>
<p>On most platforms, you can query the list of loaded libraries directly from the dynamic loader via an API. For example, Windows has the <a href="https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot">Tool Help Library</a>, and on Apple platforms there are some <a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/dyld.3.html"><code>dyld</code></a> functions available. Unfortunately, Linux has no standardized userspace tools. While GNU/Linux has the <a href="https://man7.org/linux/man-pages/man3/dl_iterate_phdr.3.html"><code>dl_iterate_phdr</code></a> function, it is notably not available on older Android systems (<a href="https://android.googlesource.com/platform/bionic/+/master/docs/status.md">Bionic Status</a> lists the API as available starting with API 21, aka Android 5, released at the end of 2014). That means in order to support ancient Android versions, you will need to get the list of loaded libraries from somewhere else.</p>
<p>Standard practice here is to find the mapped ELF files by parsing the memory map info from <code>/proc/XXX/maps</code>. This is what <a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/client/linux/minidump_writer/linux_dumper.cc#541">Breakpad</a> (<a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/processor/proc_maps_linux.cc#29">in two places</a>), <a href="https://chromium.googlesource.com/crashpad/crashpad/+/refs/heads/master/util/linux/memory_map.cc#57">Crashpad</a>, <a href="https://cs.android.com/android/platform/superproject/+/master:system/libprocinfo/include/procinfo/process_map.h;drc=master;l=92">Android’s libunwindstack</a>, and <a href="https://github.com/llvm/llvm-project/blob/62ec4ac90738a5f2d209ed28c822223e58aaaeb7/lldb/source/Plugins/Process/Utility/LinuxProcMaps.cpp#L26">LLDB</a> do. In my opinion, they take this approach because they’re outside observers in the sense that they just can’t query the dynamic loader from inside the process.</p>
<p>This approach makes sense: it’s how I approached loading libraries for <code>sentry-native</code>. That said, you have to be careful to cover all cases — notably .so files loaded directly from inside Android .apk packages. And so, I went about finding ways to support these .apk cases.</p>
<h2 id="the-procxmaps-format"><a href="#the-procxmaps-format" aria-label="the procxmaps format permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The <code>/proc/X/maps</code> format</h2>
<p>In Linux, all the executables and libraries are ELF files. <a href="https://blog.cloudflare.com/how-to-execute-an-object-file-part-1/">Cloudflare</a> has a great tutorial on how a loader parses and processes these ELF files. The documentation for the <code>/proc/X/maps</code> output format is described in this <a href="https://man7.org/linux/man-pages/man5/proc.5.html">manpage</a>. The format includes the start/end of the virtual address space, permission information, information about the inode (file), and the offset inside that file.</p>
<p>While there are cases when a library needs just one mapping, most of the time, it’s split into two or more mappings. Usually that consists of a read-only mapping that includes the ELF headers and metadata, and an executable mapping that holds the actual program code. On my Linux system, I saw up to six mappings for a single file:</p>
<div data-language="text"><pre><code>7f8cd3467000-7f8cd3475000 r--p 00000000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd3475000-7f8cd34da000 r-xp 0000e000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34da000-7f8cd34f6000 r--p 00073000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f6000-7f8cd34f7000 ---p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f7000-7f8cd34fa000 r--p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34fa000-7f8cd34fc000 rw-p 00092000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0</code></pre></div>
<p>The interesting case here is that the fourth mapping is not readable, and basically creates a gap in the address space.</p>
<p>These two mappings load the exact same libraries, once extracted to disk, once directly from the apk:</p>
<div data-language="text"><pre><code>77a85dbda000-77a85dbdd000 r-xp 00000000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dbdd000-77a85dbde000 ---p 00000000 00:00 0
77a85dbde000-77a85dbdf000 r--p 00003000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dc15000-77a85dd6c000 r-xp 00000000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 00157000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd79000-77a85dd7a000 rw-p 00163000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so</code></pre></div>
<div data-language="text"><pre><code>77a85dbf0000-77a85dbf3000 r-xp 00001000 fd:05 40977                      /data/app/x/y/base.apk
77a85dbf3000-77a85dbf4000 ---p 00000000 00:00 0
77a85dbf4000-77a85dbf5000 r--p 00004000 fd:05 40977                      /data/app/x/y/base.apk
77a85dc15000-77a85dd6c000 r-xp 00006000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 0015d000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd79000-77a85dd7a000 rw-p 00169000 fd:05 40977                      /data/app/x/y/base.apk</code></pre></div>
<p>The mappings are basically the same — it’s just that in the case of the base .apk, the file offsets are different. And the Android loader, again, inserts a non-readable gap in between.</p>
<h2 id="so-how-do-we-get-the-library-list-from-there"><a href="#so-how-do-we-get-the-library-list-from-there" aria-label="so how do we get the library list from there permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>So how do we get the library list from there?</h2>
<p>So far, the sentry-native modulefinder implementation has been a bit too conservative. Because of concerns reading arbitrary memory, we mmap-ed the file into memory and tried to extract ELF headers. Unfortunately, that approach doesn’t work with those libraries that are loaded directly from apk files, as the ELF headers are at a certain offset in that file. Plus, as we demonstrated above, there were some issues related to non-contiguous mappings and double mappings that caused problems in the old implementation, as it worked based on the filename that it saw.</p>
<p>So my new approach is to keep track of readable mappings, their file offsets, and the gaps in between them. For each readable mapping, I am looking for the magic ELF signature. If I find one, I process the previously saved mappings, while also taking care of possible duplicates.</p>
<p>This approach still has unanswered questions. One is trying to read arbitrary memory. I think I’m pretty safe as I’m only considering readable mappings, but one improvement would be to use <a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html"><code>process_vm_readv</code></a> here. That said, I have also seen problems with using that mapping on Android. Another potential issue is how to correctly deal with mappings which have gaps in them, or even ones that appear multiple times. The ELF file might instruct the loader to load the executable code at a different offset to the ELF header in RAM than the offset on disk — or it might not. It very much depends on how well we use this information to post-process crash reports.</p>
<p>This problem is not unique to the way that <code>sentry-native</code> used to read the list of libraries. We also saw some breakpad tools get this wrong by creating minidumps with invalid mappings that fail later on in the post-processing pipeline.</p>
<p>Loading libraries is a non-trivial problem, and I am confident that I’m not the only one struggling with it. And make no mistake: it’s some work to investigate failures and patch the relevant code for such a specific use case. But with Android adoption picking up more and more traction, it’s necessary work that will save space for your user - and stress on yourself.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4Bu0Mt2AWsJkZNl2A4d9o3/523b9b14ef29f2a6ac4945528c395e40/tracing-og.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Supporting Native Android Libraries Loaded From APKs</title>
      <link>https://blog.sentry.io/2021/05/13/supporting-native-android-libraries-loaded-from-apks/</link>
      <description>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses during their free time. Here, Native Platform Engineer, Arpad Borsos breaks down how memory mappings and dynamic library loading works and how it relates to native Android libraries loaded from APKs.</em></p>
<p>Libraries are key to modular programming, as they offer functionality in a single unit which can be shared with other developers. As you’re no doubt aware, there are two types of libraries: static and dynamic. Static libraries are directly embedded into your application at build time, while dynamic libraries are linked when starting the application, or at any later point.</p>
<p>This concept is important because dynamic libraries can be updated without modifying the application itself for things like fixing security issues or improving performance. Applications can also be split into multiple, dynamically-loaded libraries for organizational reasons, or when an application consists of a User Interface and a separate service running in the background.</p>
<p>When working with the Android NDK, native libraries written in C, Rust, or similar low-level languages are loaded dynamically by the Java layer. That is how <code>sentry-native</code> gets loaded into Android Apps that use the NDK.</p>
<p>Usually, these libraries are individual files on disk. You might have seen a few of these “.dll” files next to Windows Applications, which are similar on other operating systems. The dynamic loader on Android, which is itself a system library, has the ability to load libraries directly from Android “.apk” packages without needing to first extract them to disk. This is quite beneficial, as it saves precious disk space on your mobile device. </p>
<p>So far, <code>sentry-native</code>, and in turn, NDK support for our Android SDK, relied on these files being extracted to disk. This has created a lot of friction — especially for new customers — as newer Android Versions no longer extract “.apk” packages by default. To get around this, application developers had to set some explicit configuration flags, many of which were frequently overlooked when setting up Sentry for Android.</p>
<p>Starting with version 5 of our Android SDK, we added support for libraries loaded from “.apk”, which will remove the need to change configuration flags while also improving disk space usage of Apps that use the Sentry SDK.</p>
<p>Let us take a deeper dive into how all of this works, and what we need to change in order to support this use case.</p>
<h2 id="which-libraries-are-loaded"><a href="#which-libraries-are-loaded" aria-label="which libraries are loaded permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Which libraries are loaded?</h2>
<p>On most platforms, you can query the list of loaded libraries directly from the dynamic loader via an API. For example, Windows has the <a href="https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot">Tool Help Library</a>, and on Apple platforms there are some <a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/dyld.3.html"><code>dyld</code></a> functions available. Unfortunately, Linux has no standardized userspace tools. While GNU/Linux has the <a href="https://man7.org/linux/man-pages/man3/dl_iterate_phdr.3.html"><code>dl_iterate_phdr</code></a> function, it is notably not available on older Android systems (<a href="https://android.googlesource.com/platform/bionic/+/master/docs/status.md">Bionic Status</a> lists the API as available starting with API 21, aka Android 5, released at the end of 2014). That means in order to support ancient Android versions, you will need to get the list of loaded libraries from somewhere else.</p>
<p>Standard practice here is to find the mapped ELF files by parsing the memory map info from <code>/proc/XXX/maps</code>. This is what <a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/client/linux/minidump_writer/linux_dumper.cc#541">Breakpad</a> (<a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/processor/proc_maps_linux.cc#29">in two places</a>), <a href="https://chromium.googlesource.com/crashpad/crashpad/+/refs/heads/master/util/linux/memory_map.cc#57">Crashpad</a>, <a href="https://cs.android.com/android/platform/superproject/+/master:system/libprocinfo/include/procinfo/process_map.h;drc=master;l=92">Android’s libunwindstack</a>, and <a href="https://github.com/llvm/llvm-project/blob/62ec4ac90738a5f2d209ed28c822223e58aaaeb7/lldb/source/Plugins/Process/Utility/LinuxProcMaps.cpp#L26">LLDB</a> do. In my opinion, they take this approach because they’re outside observers in the sense that they just can’t query the dynamic loader from inside the process.</p>
<p>This approach makes sense: it’s how I approached loading libraries for <code>sentry-native</code>. That said, you have to be careful to cover all cases — notably .so files loaded directly from inside Android .apk packages. And so, I went about finding ways to support these .apk cases.</p>
<h2 id="the-procxmaps-format"><a href="#the-procxmaps-format" aria-label="the procxmaps format permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The <code>/proc/X/maps</code> format</h2>
<p>In Linux, all the executables and libraries are ELF files. <a href="https://blog.cloudflare.com/how-to-execute-an-object-file-part-1/">Cloudflare</a> has a great tutorial on how a loader parses and processes these ELF files. The documentation for the <code>/proc/X/maps</code> output format is described in this <a href="https://man7.org/linux/man-pages/man5/proc.5.html">manpage</a>. The format includes the start/end of the virtual address space, permission information, information about the inode (file), and the offset inside that file.</p>
<p>While there are cases when a library needs just one mapping, most of the time, it’s split into two or more mappings. Usually that consists of a read-only mapping that includes the ELF headers and metadata, and an executable mapping that holds the actual program code. On my Linux system, I saw up to six mappings for a single file:</p>
<div data-language="text"><pre><code>7f8cd3467000-7f8cd3475000 r--p 00000000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd3475000-7f8cd34da000 r-xp 0000e000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34da000-7f8cd34f6000 r--p 00073000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f6000-7f8cd34f7000 ---p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f7000-7f8cd34fa000 r--p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34fa000-7f8cd34fc000 rw-p 00092000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0</code></pre></div>
<p>The interesting case here is that the fourth mapping is not readable, and basically creates a gap in the address space.</p>
<p>These two mappings load the exact same libraries, once extracted to disk, once directly from the apk:</p>
<div data-language="text"><pre><code>77a85dbda000-77a85dbdd000 r-xp 00000000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dbdd000-77a85dbde000 ---p 00000000 00:00 0
77a85dbde000-77a85dbdf000 r--p 00003000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dc15000-77a85dd6c000 r-xp 00000000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 00157000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd79000-77a85dd7a000 rw-p 00163000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so</code></pre></div>
<div data-language="text"><pre><code>77a85dbf0000-77a85dbf3000 r-xp 00001000 fd:05 40977                      /data/app/x/y/base.apk
77a85dbf3000-77a85dbf4000 ---p 00000000 00:00 0
77a85dbf4000-77a85dbf5000 r--p 00004000 fd:05 40977                      /data/app/x/y/base.apk
77a85dc15000-77a85dd6c000 r-xp 00006000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 0015d000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd79000-77a85dd7a000 rw-p 00169000 fd:05 40977                      /data/app/x/y/base.apk</code></pre></div>
<p>The mappings are basically the same — it’s just that in the case of the base .apk, the file offsets are different. And the Android loader, again, inserts a non-readable gap in between.</p>
<h2 id="so-how-do-we-get-the-library-list-from-there"><a href="#so-how-do-we-get-the-library-list-from-there" aria-label="so how do we get the library list from there permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>So how do we get the library list from there?</h2>
<p>So far, the sentry-native modulefinder implementation has been a bit too conservative. Because of concerns reading arbitrary memory, we mmap-ed the file into memory and tried to extract ELF headers. Unfortunately, that approach doesn’t work with those libraries that are loaded directly from apk files, as the ELF headers are at a certain offset in that file. Plus, as we demonstrated above, there were some issues related to non-contiguous mappings and double mappings that caused problems in the old implementation, as it worked based on the filename that it saw.</p>
<p>So my new approach is to keep track of readable mappings, their file offsets, and the gaps in between them. For each readable mapping, I am looking for the magic ELF signature. If I find one, I process the previously saved mappings, while also taking care of possible duplicates.</p>
<p>This approach still has unanswered questions. One is trying to read arbitrary memory. I think I’m pretty safe as I’m only considering readable mappings, but one improvement would be to use <a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html"><code>process_vm_readv</code></a> here. That said, I have also seen problems with using that mapping on Android. Another potential issue is how to correctly deal with mappings which have gaps in them, or even ones that appear multiple times. The ELF file might instruct the loader to load the executable code at a different offset to the ELF header in RAM than the offset on disk — or it might not. It very much depends on how well we use this information to post-process crash reports.</p>
<p>This problem is not unique to the way that <code>sentry-native</code> used to read the list of libraries. We also saw some breakpad tools get this wrong by creating minidumps with invalid mappings that fail later on in the post-processing pipeline.</p>
<p>Loading libraries is a non-trivial problem, and I am confident that I’m not the only one struggling with it. And make no mistake: it’s some work to investigate failures and patch the relevant code for such a specific use case. But with Android adoption picking up more and more traction, it’s necessary work that will save space for your user - and stress on yourself.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4Bu0Mt2AWsJkZNl2A4d9o3/523b9b14ef29f2a6ac4945528c395e40/tracing-og.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Supporting Native Android Libraries Loaded From APKs</title>
      <link>https://blog.sentry.io/2021/05/13/supporting-native-android-libraries-loaded-from-apks/</link>
      <description>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses during their free time. Here, Native Platform Engineer, Arpad Borsos breaks down how memory mappings and dynamic library loading works and how it relates to native Android libraries loaded from APKs.</em></p>
<p>Libraries are key to modular programming, as they offer functionality in a single unit which can be shared with other developers. As you’re no doubt aware, there are two types of libraries: static and dynamic. Static libraries are directly embedded into your application at build time, while dynamic libraries are linked when starting the application, or at any later point.</p>
<p>This concept is important because dynamic libraries can be updated without modifying the application itself for things like fixing security issues or improving performance. Applications can also be split into multiple, dynamically-loaded libraries for organizational reasons, or when an application consists of a User Interface and a separate service running in the background.</p>
<p>When working with the Android NDK, native libraries written in C, Rust, or similar low-level languages are loaded dynamically by the Java layer. That is how <code>sentry-native</code> gets loaded into Android Apps that use the NDK.</p>
<p>Usually, these libraries are individual files on disk. You might have seen a few of these “.dll” files next to Windows Applications, which are similar on other operating systems. The dynamic loader on Android, which is itself a system library, has the ability to load libraries directly from Android “.apk” packages without needing to first extract them to disk. This is quite beneficial, as it saves precious disk space on your mobile device. </p>
<p>So far, <code>sentry-native</code>, and in turn, NDK support for our Android SDK, relied on these files being extracted to disk. This has created a lot of friction — especially for new customers — as newer Android Versions no longer extract “.apk” packages by default. To get around this, application developers had to set some explicit configuration flags, many of which were frequently overlooked when setting up Sentry for Android.</p>
<p>Starting with version 5 of our Android SDK, we added support for libraries loaded from “.apk”, which will remove the need to change configuration flags while also improving disk space usage of Apps that use the Sentry SDK.</p>
<p>Let us take a deeper dive into how all of this works, and what we need to change in order to support this use case.</p>
<h2 id="which-libraries-are-loaded"><a href="#which-libraries-are-loaded" aria-label="which libraries are loaded permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Which libraries are loaded?</h2>
<p>On most platforms, you can query the list of loaded libraries directly from the dynamic loader via an API. For example, Windows has the <a href="https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot">Tool Help Library</a>, and on Apple platforms there are some <a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/dyld.3.html"><code>dyld</code></a> functions available. Unfortunately, Linux has no standardized userspace tools. While GNU/Linux has the <a href="https://man7.org/linux/man-pages/man3/dl_iterate_phdr.3.html"><code>dl_iterate_phdr</code></a> function, it is notably not available on older Android systems (<a href="https://android.googlesource.com/platform/bionic/+/master/docs/status.md">Bionic Status</a> lists the API as available starting with API 21, aka Android 5, released at the end of 2014). That means in order to support ancient Android versions, you will need to get the list of loaded libraries from somewhere else.</p>
<p>Standard practice here is to find the mapped ELF files by parsing the memory map info from <code>/proc/XXX/maps</code>. This is what <a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/client/linux/minidump_writer/linux_dumper.cc#541">Breakpad</a> (<a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/processor/proc_maps_linux.cc#29">in two places</a>), <a href="https://chromium.googlesource.com/crashpad/crashpad/+/refs/heads/master/util/linux/memory_map.cc#57">Crashpad</a>, <a href="https://cs.android.com/android/platform/superproject/+/master:system/libprocinfo/include/procinfo/process_map.h;drc=master;l=92">Android’s libunwindstack</a>, and <a href="https://github.com/llvm/llvm-project/blob/62ec4ac90738a5f2d209ed28c822223e58aaaeb7/lldb/source/Plugins/Process/Utility/LinuxProcMaps.cpp#L26">LLDB</a> do. In my opinion, they take this approach because they’re outside observers in the sense that they just can’t query the dynamic loader from inside the process.</p>
<p>This approach makes sense: it’s how I approached loading libraries for <code>sentry-native</code>. That said, you have to be careful to cover all cases — notably .so files loaded directly from inside Android .apk packages. And so, I went about finding ways to support these .apk cases.</p>
<h2 id="the-procxmaps-format"><a href="#the-procxmaps-format" aria-label="the procxmaps format permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The <code>/proc/X/maps</code> format</h2>
<p>In Linux, all the executables and libraries are ELF files. <a href="https://blog.cloudflare.com/how-to-execute-an-object-file-part-1/">Cloudflare</a> has a great tutorial on how a loader parses and processes these ELF files. The documentation for the <code>/proc/X/maps</code> output format is described in this <a href="https://man7.org/linux/man-pages/man5/proc.5.html">manpage</a>. The format includes the start/end of the virtual address space, permission information, information about the inode (file), and the offset inside that file.</p>
<p>While there are cases when a library needs just one mapping, most of the time, it’s split into two or more mappings. Usually that consists of a read-only mapping that includes the ELF headers and metadata, and an executable mapping that holds the actual program code. On my Linux system, I saw up to six mappings for a single file:</p>
<div data-language="text"><pre><code>7f8cd3467000-7f8cd3475000 r--p 00000000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd3475000-7f8cd34da000 r-xp 0000e000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34da000-7f8cd34f6000 r--p 00073000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f6000-7f8cd34f7000 ---p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f7000-7f8cd34fa000 r--p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34fa000-7f8cd34fc000 rw-p 00092000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0</code></pre></div>
<p>The interesting case here is that the fourth mapping is not readable, and basically creates a gap in the address space.</p>
<p>These two mappings load the exact same libraries, once extracted to disk, once directly from the apk:</p>
<div data-language="text"><pre><code>77a85dbda000-77a85dbdd000 r-xp 00000000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dbdd000-77a85dbde000 ---p 00000000 00:00 0
77a85dbde000-77a85dbdf000 r--p 00003000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dc15000-77a85dd6c000 r-xp 00000000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 00157000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd79000-77a85dd7a000 rw-p 00163000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so</code></pre></div>
<div data-language="text"><pre><code>77a85dbf0000-77a85dbf3000 r-xp 00001000 fd:05 40977                      /data/app/x/y/base.apk
77a85dbf3000-77a85dbf4000 ---p 00000000 00:00 0
77a85dbf4000-77a85dbf5000 r--p 00004000 fd:05 40977                      /data/app/x/y/base.apk
77a85dc15000-77a85dd6c000 r-xp 00006000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 0015d000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd79000-77a85dd7a000 rw-p 00169000 fd:05 40977                      /data/app/x/y/base.apk</code></pre></div>
<p>The mappings are basically the same — it’s just that in the case of the base .apk, the file offsets are different. And the Android loader, again, inserts a non-readable gap in between.</p>
<h2 id="so-how-do-we-get-the-library-list-from-there"><a href="#so-how-do-we-get-the-library-list-from-there" aria-label="so how do we get the library list from there permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>So how do we get the library list from there?</h2>
<p>So far, the sentry-native modulefinder implementation has been a bit too conservative. Because of concerns reading arbitrary memory, we mmap-ed the file into memory and tried to extract ELF headers. Unfortunately, that approach doesn’t work with those libraries that are loaded directly from apk files, as the ELF headers are at a certain offset in that file. Plus, as we demonstrated above, there were some issues related to non-contiguous mappings and double mappings that caused problems in the old implementation, as it worked based on the filename that it saw.</p>
<p>So my new approach is to keep track of readable mappings, their file offsets, and the gaps in between them. For each readable mapping, I am looking for the magic ELF signature. If I find one, I process the previously saved mappings, while also taking care of possible duplicates.</p>
<p>This approach still has unanswered questions. One is trying to read arbitrary memory. I think I’m pretty safe as I’m only considering readable mappings, but one improvement would be to use <a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html"><code>process_vm_readv</code></a> here. That said, I have also seen problems with using that mapping on Android. Another potential issue is how to correctly deal with mappings which have gaps in them, or even ones that appear multiple times. The ELF file might instruct the loader to load the executable code at a different offset to the ELF header in RAM than the offset on disk — or it might not. It very much depends on how well we use this information to post-process crash reports.</p>
<p>This problem is not unique to the way that <code>sentry-native</code> used to read the list of libraries. We also saw some breakpad tools get this wrong by creating minidumps with invalid mappings that fail later on in the post-processing pipeline.</p>
<p>Loading libraries is a non-trivial problem, and I am confident that I’m not the only one struggling with it. And make no mistake: it’s some work to investigate failures and patch the relevant code for such a specific use case. But with Android adoption picking up more and more traction, it’s necessary work that will save space for your user - and stress on yourself.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4Bu0Mt2AWsJkZNl2A4d9o3/523b9b14ef29f2a6ac4945528c395e40/tracing-og.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring User Experience with Web Vitals</title>
      <link>https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/</link>
      <description>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to Web Vitals taking place in…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to <a href="https://sentry.io/for/web-vitals">Web Vitals</a> taking place in a few weeks, now’s the right time to optimize your user experience. But before you can optimize your user’s experience, you need to be able to measure it. We’re kicking off Measurement May by breaking down how Google uses Web Vitals data — and how you can instrument that data with Sentry. </p>
<h2 id="web-vitals-basics"><a href="#web-vitals-basics" aria-label="web vitals basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals Basics</h2>
<p>This past May, Google introduced <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">Web Vitals</a>, a set of three key user experience metrics:</p>
<p>Largest Contentful Paint (LCP) measures a page’s <strong>loading</strong>. The goal here should be a LCP within 2.5 seconds once the page starts loading. </p>
<p>First Input Delay (FID)  measures a page’s <strong>interactivity</strong>. A solid user experience here means there’s a FID of less than 100 milliseconds.</p>
<p>Cumulative Layout Shift (CLS) measures a page’s <strong>visual stability</strong>. For a good user experience, CLS should be less than 0.1 seconds..</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288&amp;fm=webp 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576&amp;fm=webp 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152&amp;fm=webp 1152w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152 1152w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dd" title="" src="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="web-vitals--page-experience"><a href="#web-vitals--page-experience" aria-label="web vitals  page experience permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals + Page Experience</h2>
<p>After their upcoming Page Experience update, Google will evaluate your web pages moving forward with these four metrics:</p>
<p><strong>Mobile Friendliness</strong> determines whether content is responsive to mobile devices — making sure joins and on-page components are stable for a spectrum of devices.</p>
<p><strong>Safe Browsing</strong> assesses whether a site has issues with malware, phishing, and hacked content.</p>
<p><strong>HTTPS</strong> evaluates whether the site’s association is secure and if the site is being served over HTTPS.</p>
<p><strong>Non-Intrusive Interstitials</strong> ensures that certain content won’t be blocked for pop-up content as a user explores the page.</p>
<h2 id="the-results-are-in-your-content"><a href="#the-results-are-in-your-content" aria-label="the results are in your content permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The Results Are In (Your Content)</h2>
<p>It makes sense that <em>Google’s</em> Web Vitals will impact how your website will be ranked in search. But Google’s aim here isn’t to be some fussy stickler about how you build out your content — it’s to raise the conversation around content itself. With these new guardrails, Google is able to push down content created for its own sake, and elevate content that’s created with a user’s experience in mind. </p>
<h2 id="the-e-commerce-impact"><a href="#the-e-commerce-impact" aria-label="the e commerce impact permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The E-Commerce Impact</h2>
<p>Because they’re often large (thousands of SKUs), complex (dynamic pricing and backend security measures), and dependent on search (via keywords), e-commerce services in particular will benefit from increased Web Vitals and site performance. And because each page in an e-commerce domain is indexable and searchable, every product page now represents an opportunity to generate revenue — if it has strong Web Vitals data. </p>
<h2 id="be-performant-use-performance"><a href="#be-performant-use-performance" aria-label="be performant use performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Be Performant. Use Performance.</h2>
<p>With Performance, you’re able to compare user metrics such as network speed, browser, device, and region against Web Vitals thresholds. This helps you see those specific transactions which are slowing your user’s experience down. You can hone in even further by building a custom query in Discover — say, adding event tags as filters to your query. </p>
<p>In this webinar, Sentry Product Manager, Jeremy Bourque demonstrates how you can set up Sentry’s performance monitoring to surface poor-performing pages through Web Vitals. </p>
</div><p>While gathering Web Vitals data is important, you still need visibility of that data across all your projects. With our new Trace Navigator, you’re able to easily navigate between errors and performance issues via a mini-map. And our Trace View gives you a waterfall visualization across all your transaction times, so you can see what project is responsible for the most problems. With it, you’re able to see dependencies of any given trace in a single view as well as what projects they live in. </p><div>
<p>For some, Web Vitals represents an inconvenient data hoop that their code has to jump through. For others — and hopefully, you — Web Vitals is an opportunity to distinguish yourself in the marketplace, as less than 15% of sites are optimized well enough to pass a Core Web Vitals assessment. It’s the metric that can be the difference between your customer buying — or bouncing.</p>
<p>Measurement May is just getting started.  In an upcoming <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">live workshop</a>,  a Sentry Solutions Engineer will show you how you can analyze event data to measure the health of your application.</p>
<p>Get started with <a href="https://docs.sentry.io/product/performance/">Performance</a> and drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7Hp7vnsdrPN9Mx9pt6bqsw/ab39d6d7f7e2b7fbe081d21d20416a33/discover3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring User Experience with Web Vitals</title>
      <link>https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/</link>
      <description>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to Web Vitals taking place in…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to <a href="https://sentry.io/for/web-vitals">Web Vitals</a> taking place in a few weeks, now’s the right time to optimize your user experience. But before you can optimize your user’s experience, you need to be able to measure it. We’re kicking off Measurement May by breaking down how Google uses Web Vitals data — and how you can instrument that data with Sentry. </p>
<h2 id="web-vitals-basics"><a href="#web-vitals-basics" aria-label="web vitals basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals Basics</h2>
<p>This past May, Google introduced <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">Web Vitals</a>, a set of three key user experience metrics:</p>
<p>Largest Contentful Paint (LCP) measures a page’s <strong>loading</strong>. The goal here should be a LCP within 2.5 seconds once the page starts loading. </p>
<p>First Input Delay (FID)  measures a page’s <strong>interactivity</strong>. A solid user experience here means there’s a FID of less than 100 milliseconds.</p>
<p>Cumulative Layout Shift (CLS) measures a page’s <strong>visual stability</strong>. For a good user experience, CLS should be less than 0.1 seconds..</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288&amp;fm=webp 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576&amp;fm=webp 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152&amp;fm=webp 1152w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152 1152w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dd" title="" src="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="web-vitals--page-experience"><a href="#web-vitals--page-experience" aria-label="web vitals  page experience permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals + Page Experience</h2>
<p>After their upcoming Page Experience update, Google will evaluate your web pages moving forward with these four metrics:</p>
<p><strong>Mobile Friendliness</strong> determines whether content is responsive to mobile devices — making sure joins and on-page components are stable for a spectrum of devices.</p>
<p><strong>Safe Browsing</strong> assesses whether a site has issues with malware, phishing, and hacked content.</p>
<p><strong>HTTPS</strong> evaluates whether the site’s association is secure and if the site is being served over HTTPS.</p>
<p><strong>Non-Intrusive Interstitials</strong> ensures that certain content won’t be blocked for pop-up content as a user explores the page.</p>
<h2 id="the-results-are-in-your-content"><a href="#the-results-are-in-your-content" aria-label="the results are in your content permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The Results Are In (Your Content)</h2>
<p>It makes sense that <em>Google’s</em> Web Vitals will impact how your website will be ranked in search. But Google’s aim here isn’t to be some fussy stickler about how you build out your content — it’s to raise the conversation around content itself. With these new guardrails, Google is able to push down content created for its own sake, and elevate content that’s created with a user’s experience in mind. </p>
<h2 id="the-e-commerce-impact"><a href="#the-e-commerce-impact" aria-label="the e commerce impact permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The E-Commerce Impact</h2>
<p>Because they’re often large (thousands of SKUs), complex (dynamic pricing and backend security measures), and dependent on search (via keywords), e-commerce services in particular will benefit from increased Web Vitals and site performance. And because each page in an e-commerce domain is indexable and searchable, every product page now represents an opportunity to generate revenue — if it has strong Web Vitals data. </p>
<h2 id="be-performant-use-performance"><a href="#be-performant-use-performance" aria-label="be performant use performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Be Performant. Use Performance.</h2>
<p>With Performance, you’re able to compare user metrics such as network speed, browser, device, and region against Web Vitals thresholds. This helps you see those specific transactions which are slowing your user’s experience down. You can hone in even further by building a custom query in Discover — say, adding event tags as filters to your query. </p>
<p>In this webinar, Sentry Product Manager, Jeremy Bourque demonstrates how you can set up Sentry’s performance monitoring to surface poor-performing pages through Web Vitals. </p>
</div><p>While gathering Web Vitals data is important, you still need visibility of that data across all your projects. With our new Trace Navigator, you’re able to easily navigate between errors and performance issues via a mini-map. And our Trace View gives you a waterfall visualization across all your transaction times, so you can see what project is responsible for the most problems. With it, you’re able to see dependencies of any given trace in a single view as well as what projects they live in. </p><div>
<p>For some, Web Vitals represents an inconvenient data hoop that their code has to jump through. For others — and hopefully, you — Web Vitals is an opportunity to distinguish yourself in the marketplace, as less than 15% of sites are optimized well enough to pass a Core Web Vitals assessment. It’s the metric that can be the difference between your customer buying — or bouncing.</p>
<p>Measurement May is just getting started.  In an upcoming <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">live workshop</a>,  a Sentry Solutions Engineer will show you how you can analyze event data to measure the health of your application.</p>
<p>Get started with <a href="https://docs.sentry.io/product/performance/">Performance</a> and drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7Hp7vnsdrPN9Mx9pt6bqsw/ab39d6d7f7e2b7fbe081d21d20416a33/discover3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring User Experience with Web Vitals</title>
      <link>https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/</link>
      <description>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to Web Vitals taking place in…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to <a href="https://sentry.io/for/web-vitals">Web Vitals</a> taking place in a few weeks, now’s the right time to optimize your user experience. But before you can optimize your user’s experience, you need to be able to measure it. We’re kicking off Measurement May by breaking down how Google uses Web Vitals data — and how you can instrument that data with Sentry. </p>
<h2 id="web-vitals-basics"><a href="#web-vitals-basics" aria-label="web vitals basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals Basics</h2>
<p>This past May, Google introduced <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">Web Vitals</a>, a set of three key user experience metrics:</p>
<p>Largest Contentful Paint (LCP) measures a page’s <strong>loading</strong>. The goal here should be a LCP within 2.5 seconds once the page starts loading. </p>
<p>First Input Delay (FID)  measures a page’s <strong>interactivity</strong>. A solid user experience here means there’s a FID of less than 100 milliseconds.</p>
<p>Cumulative Layout Shift (CLS) measures a page’s <strong>visual stability</strong>. For a good user experience, CLS should be less than 0.1 seconds..</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288&amp;fm=webp 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576&amp;fm=webp 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152&amp;fm=webp 1152w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152 1152w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dd" title="" src="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="web-vitals--page-experience"><a href="#web-vitals--page-experience" aria-label="web vitals  page experience permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals + Page Experience</h2>
<p>After their upcoming Page Experience update, Google will evaluate your web pages moving forward with these four metrics:</p>
<p><strong>Mobile Friendliness</strong> determines whether content is responsive to mobile devices — making sure joins and on-page components are stable for a spectrum of devices.</p>
<p><strong>Safe Browsing</strong> assesses whether a site has issues with malware, phishing, and hacked content.</p>
<p><strong>HTTPS</strong> evaluates whether the site’s association is secure and if the site is being served over HTTPS.</p>
<p><strong>Non-Intrusive Interstitials</strong> ensures that certain content won’t be blocked for pop-up content as a user explores the page.</p>
<h2 id="the-results-are-in-your-content"><a href="#the-results-are-in-your-content" aria-label="the results are in your content permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The Results Are In (Your Content)</h2>
<p>It makes sense that <em>Google’s</em> Web Vitals will impact how your website will be ranked in search. But Google’s aim here isn’t to be some fussy stickler about how you build out your content — it’s to raise the conversation around content itself. With these new guardrails, Google is able to push down content created for its own sake, and elevate content that’s created with a user’s experience in mind. </p>
<h2 id="the-e-commerce-impact"><a href="#the-e-commerce-impact" aria-label="the e commerce impact permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The E-Commerce Impact</h2>
<p>Because they’re often large (thousands of SKUs), complex (dynamic pricing and backend security measures), and dependent on search (via keywords), e-commerce services in particular will benefit from increased Web Vitals and site performance. And because each page in an e-commerce domain is indexable and searchable, every product page now represents an opportunity to generate revenue — if it has strong Web Vitals data. </p>
<h2 id="be-performant-use-performance"><a href="#be-performant-use-performance" aria-label="be performant use performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Be Performant. Use Performance.</h2>
<p>With Performance, you’re able to compare user metrics such as network speed, browser, device, and region against Web Vitals thresholds. This helps you see those specific transactions which are slowing your user’s experience down. You can hone in even further by building a custom query in Discover — say, adding event tags as filters to your query. </p>
<p>In this webinar, Sentry Product Manager, Jeremy Bourque demonstrates how you can set up Sentry’s performance monitoring to surface poor-performing pages through Web Vitals. </p>
</div><p>While gathering Web Vitals data is important, you still need visibility of that data across all your projects. With our new Trace Navigator, you’re able to easily navigate between errors and performance issues via a mini-map. And our Trace View gives you a waterfall visualization across all your transaction times, so you can see what project is responsible for the most problems. With it, you’re able to see dependencies of any given trace in a single view as well as what projects they live in. </p><div>
<p>For some, Web Vitals represents an inconvenient data hoop that their code has to jump through. For others — and hopefully, you — Web Vitals is an opportunity to distinguish yourself in the marketplace, as less than 15% of sites are optimized well enough to pass a Core Web Vitals assessment. It’s the metric that can be the difference between your customer buying — or bouncing.</p>
<p>Measurement May is just getting started.  In an upcoming <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">live workshop</a>,  a Sentry Solutions Engineer will show you how you can analyze event data to measure the health of your application.</p>
<p>Get started with <a href="https://docs.sentry.io/product/performance/">Performance</a> and drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7Hp7vnsdrPN9Mx9pt6bqsw/ab39d6d7f7e2b7fbe081d21d20416a33/discover3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Silencing Distractions with Review List and Automations</title>
      <link>https://blog.sentry.io/2021/04/20/silencing-distractions-with-review-list-and-automations/</link>
      <description>By organizing information and automating mundane tasks, Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Responding to and ignoring notifications can be a full-contact sport. It makes sense, though, from GitHub, Slack, to Jira and Sentry; our world revolves around robots telling us everything is important, critical, and urgent. Just like that, it’s near impossible to see what actually matters so you can solve quicker and more comprehensively.</p>
<p>To bring a little focus back to our days (we build software too), we extended Sentry’s filtering conditions, built a curated list of issues that need your immediate attention, dropped convenient links to your repository, and automated ticket creation. All so you can focus on what’s actually important and critical to your code health and users.</p>
<p><a href="https://docs.sentry.io/product/issues/issue-owners/"><em>Filter by ownership</em></a> - Instead of seeing other team’s issues, you can now filter to only show issues by assignee AND suggested assignee. This means you see issues that you’re responsible for or caused by changes that you or your team committed.</p>
<p><em><a href="https://docs.sentry.io/product/issues/states-triage/">Review List</a></em> - Unless you write pristine code and your services are faster than the Flash, you’re sending a good amount of events to Sentry. Which means it could get a bit noisy from time to time. Now <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging issues</a> help drown out the background noise like in-ear headphones. Review List, however, is the noise-canceling button for those headphones. It’s the only thing you need to look at when you pop into Sentry. Regressions, new critical issues, and previously ignored issues that can’t be ignored anymore are all collected in one simple to parse list so you can solve what is truly urgent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309&amp;fm=webp 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618&amp;fm=webp 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236&amp;fm=webp 1236w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236 1236w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ReviewList" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
Review List is being rolled out to everyone over the next few weeks. Be on the lookout for an in-app notification.</p>
<p><em><a href="https://docs.sentry.io/product/integrations/integration-platform/ui-components/#stack-trace-link">Stack Trace Linking</a></em> - Instead of infinite scrolling through countless lines of code, Sentry’s formatted stack trace lets developers jump past the library code directly into the code you care about. And now, with stack trace linking, you can deep-link to your repo in <a href="https://docs.sentry.io/product/integrations/github/">GitHub</a> to see the broken code in the context of where it lives in your codebase.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153&amp;fm=webp 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307&amp;fm=webp 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613&amp;fm=webp 613w" sizes="(max-width: 613px) 100vw, 613px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613 613w" sizes="(max-width: 613px) 100vw, 613px"/>
          <img alt="StackTraceLinking" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><em><a href="https://docs.sentry.io/product/integrations/jira/">Rule-Based Jira</a></em> and <em><a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">Azure DevOps</a></em> Issue Creation - But hey, you’re on it — issues are merged, you comb through the review list, notifications skip your inbox and go right to Slack, metric alerts are configured, and if something catastrophic happens you route issues via <a href="https://docs.sentry.io/product/integrations/pagerduty/">PagerDuty</a>. If I had to guess, the next thing you do is manually fill out a <a href="https://docs.sentry.io/product/integrations/jira/">Jira Issue</a> or <a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">AzureDevOps</a> ticket to make sure things get fixed and not lost in the shuffle.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921&amp;fm=webp 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842&amp;fm=webp 1842w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842 1842w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jira-azure-devops-integration" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This is fine, but suboptimal. We updated our Jira and Azure Devops integrations to automate that whole flow. So a previously ignored issue is seen by 100 users in one minute, matches a specific URL tag, just let Sentry create the Jira or Azure DevOps ticket for you. Sentry will populate all the relevant details, add it to the backlog you specify and automatically assign it to the developer that can fix the issue. </p>
<p>Look, distractions and unnecessary notifications will probably continue to fight for our attention for a while. But by organizing information and automating mundane tasks Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order. Dare I say, it may even make being on bug fix rotation… fun. </p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7LLI0QOFlsyNpnThyXZyFr/51ec12e9014a31639ffb5d8f23641279/Errors3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 20 Apr 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Silencing Distractions with Review List and Automations</title>
      <link>https://blog.sentry.io/2021/04/20/silencing-distractions-with-review-list-and-automations/</link>
      <description>By organizing information and automating mundane tasks, Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Responding to and ignoring notifications can be a full-contact sport. It makes sense, though, from GitHub, Slack, to Jira and Sentry; our world revolves around robots telling us everything is important, critical, and urgent. Just like that, it’s near impossible to see what actually matters so you can solve quicker and more comprehensively.</p>
<p>To bring a little focus back to our days (we build software too), we extended Sentry’s filtering conditions, built a curated list of issues that need your immediate attention, dropped convenient links to your repository, and automated ticket creation. All so you can focus on what’s actually important and critical to your code health and users.</p>
<p><a href="https://docs.sentry.io/product/issues/issue-owners/"><em>Filter by ownership</em></a> - Instead of seeing other team’s issues, you can now filter to only show issues by assignee AND suggested assignee. This means you see issues that you’re responsible for or caused by changes that you or your team committed.</p>
<p><em><a href="https://docs.sentry.io/product/issues/states-triage/">Review List</a></em> - Unless you write pristine code and your services are faster than the Flash, you’re sending a good amount of events to Sentry. Which means it could get a bit noisy from time to time. Now <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging issues</a> help drown out the background noise like in-ear headphones. Review List, however, is the noise-canceling button for those headphones. It’s the only thing you need to look at when you pop into Sentry. Regressions, new critical issues, and previously ignored issues that can’t be ignored anymore are all collected in one simple to parse list so you can solve what is truly urgent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309&amp;fm=webp 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618&amp;fm=webp 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236&amp;fm=webp 1236w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236 1236w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ReviewList" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
Review List is being rolled out to everyone over the next few weeks. Be on the lookout for an in-app notification.</p>
<p><em><a href="https://docs.sentry.io/product/integrations/integration-platform/ui-components/#stack-trace-link">Stack Trace Linking</a></em> - Instead of infinite scrolling through countless lines of code, Sentry’s formatted stack trace lets developers jump past the library code directly into the code you care about. And now, with stack trace linking, you can deep-link to your repo in <a href="https://docs.sentry.io/product/integrations/github/">GitHub</a> to see the broken code in the context of where it lives in your codebase.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153&amp;fm=webp 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307&amp;fm=webp 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613&amp;fm=webp 613w" sizes="(max-width: 613px) 100vw, 613px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613 613w" sizes="(max-width: 613px) 100vw, 613px"/>
          <img alt="StackTraceLinking" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><em><a href="https://docs.sentry.io/product/integrations/jira/">Rule-Based Jira</a></em> and <em><a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">Azure DevOps</a></em> Issue Creation - But hey, you’re on it — issues are merged, you comb through the review list, notifications skip your inbox and go right to Slack, metric alerts are configured, and if something catastrophic happens you route issues via <a href="https://docs.sentry.io/product/integrations/pagerduty/">PagerDuty</a>. If I had to guess, the next thing you do is manually fill out a <a href="https://docs.sentry.io/product/integrations/jira/">Jira Issue</a> or <a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">AzureDevOps</a> ticket to make sure things get fixed and not lost in the shuffle.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921&amp;fm=webp 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842&amp;fm=webp 1842w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842 1842w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jira-azure-devops-integration" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This is fine, but suboptimal. We updated our Jira and Azure Devops integrations to automate that whole flow. So a previously ignored issue is seen by 100 users in one minute, matches a specific URL tag, just let Sentry create the Jira or Azure DevOps ticket for you. Sentry will populate all the relevant details, add it to the backlog you specify and automatically assign it to the developer that can fix the issue. </p>
<p>Look, distractions and unnecessary notifications will probably continue to fight for our attention for a while. But by organizing information and automating mundane tasks Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order. Dare I say, it may even make being on bug fix rotation… fun. </p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7LLI0QOFlsyNpnThyXZyFr/51ec12e9014a31639ffb5d8f23641279/Errors3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 20 Apr 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Silencing Distractions with Review List and Automations</title>
      <link>https://blog.sentry.io/2021/04/20/silencing-distractions-with-review-list-and-automations/</link>
      <description>By organizing information and automating mundane tasks, Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Responding to and ignoring notifications can be a full-contact sport. It makes sense, though, from GitHub, Slack, to Jira and Sentry; our world revolves around robots telling us everything is important, critical, and urgent. Just like that, it’s near impossible to see what actually matters so you can solve quicker and more comprehensively.</p>
<p>To bring a little focus back to our days (we build software too), we extended Sentry’s filtering conditions, built a curated list of issues that need your immediate attention, dropped convenient links to your repository, and automated ticket creation. All so you can focus on what’s actually important and critical to your code health and users.</p>
<p><a href="https://docs.sentry.io/product/issues/issue-owners/"><em>Filter by ownership</em></a> - Instead of seeing other team’s issues, you can now filter to only show issues by assignee AND suggested assignee. This means you see issues that you’re responsible for or caused by changes that you or your team committed.</p>
<p><em><a href="https://docs.sentry.io/product/issues/states-triage/">Review List</a></em> - Unless you write pristine code and your services are faster than the Flash, you’re sending a good amount of events to Sentry. Which means it could get a bit noisy from time to time. Now <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging issues</a> help drown out the background noise like in-ear headphones. Review List, however, is the noise-canceling button for those headphones. It’s the only thing you need to look at when you pop into Sentry. Regressions, new critical issues, and previously ignored issues that can’t be ignored anymore are all collected in one simple to parse list so you can solve what is truly urgent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309&amp;fm=webp 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618&amp;fm=webp 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236&amp;fm=webp 1236w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236 1236w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ReviewList" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
Review List is being rolled out to everyone over the next few weeks. Be on the lookout for an in-app notification.</p>
<p><em><a href="https://docs.sentry.io/product/integrations/integration-platform/ui-components/#stack-trace-link">Stack Trace Linking</a></em> - Instead of infinite scrolling through countless lines of code, Sentry’s formatted stack trace lets developers jump past the library code directly into the code you care about. And now, with stack trace linking, you can deep-link to your repo in <a href="https://docs.sentry.io/product/integrations/github/">GitHub</a> to see the broken code in the context of where it lives in your codebase.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153&amp;fm=webp 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307&amp;fm=webp 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613&amp;fm=webp 613w" sizes="(max-width: 613px) 100vw, 613px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613 613w" sizes="(max-width: 613px) 100vw, 613px"/>
          <img alt="StackTraceLinking" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><em><a href="https://docs.sentry.io/product/integrations/jira/">Rule-Based Jira</a></em> and <em><a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">Azure DevOps</a></em> Issue Creation - But hey, you’re on it — issues are merged, you comb through the review list, notifications skip your inbox and go right to Slack, metric alerts are configured, and if something catastrophic happens you route issues via <a href="https://docs.sentry.io/product/integrations/pagerduty/">PagerDuty</a>. If I had to guess, the next thing you do is manually fill out a <a href="https://docs.sentry.io/product/integrations/jira/">Jira Issue</a> or <a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">AzureDevOps</a> ticket to make sure things get fixed and not lost in the shuffle.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921&amp;fm=webp 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842&amp;fm=webp 1842w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842 1842w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jira-azure-devops-integration" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This is fine, but suboptimal. We updated our Jira and Azure Devops integrations to automate that whole flow. So a previously ignored issue is seen by 100 users in one minute, matches a specific URL tag, just let Sentry create the Jira or Azure DevOps ticket for you. Sentry will populate all the relevant details, add it to the backlog you specify and automatically assign it to the developer that can fix the issue. </p>
<p>Look, distractions and unnecessary notifications will probably continue to fight for our attention for a while. But by organizing information and automating mundane tasks Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order. Dare I say, it may even make being on bug fix rotation… fun. </p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7LLI0QOFlsyNpnThyXZyFr/51ec12e9014a31639ffb5d8f23641279/Errors3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 20 Apr 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript</title>
      <link>https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript/</link>
      <description>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-04-12T00:00">April 12, 2021</time></p><ul><li><a href="https://blog.sentry.io/sentry/"><span>Sentry</span></a></li></ul><div><p>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen members of the engineering team, 1,100 files, and 95,000 lines of code.</p>
<p>In this blog post, we share our process, techniques, challenges, and ultimately, what we learned along this journey.</p>
<h3 id="the-pitch"><a href="#the-pitch" aria-label="the pitch permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The pitch</h3>
<p>Back in 2019, we were shipping more frontend bugs than what was acceptable. After looking at the underlying causes of these incidents, it became clear that many of these bugs could have been prevented by static analysis and type checking.</p>
<p>During that year’s Hackweek event, Lyn Nagara, Alberto Leal, and Daniel Griesser pitched introducing TypeScript to the Sentry frontend. This team bootstrapped the TypeScript compiler to our build process as well as converted a few non-trivial views — and their related components — to TypeScript.</p>
<p><em>Hackweek is an event that takes place once a year, giving all Sentry employees the opportunity to set aside their usual work to focus solely on innovative projects and ideas. Hackweek has given birth to numerous applications and tools that are now important parts of our product, like the recently launched <a href="https://blog.sentry.io/2021/03/16/building-dark-mode">Dark Mode project</a>.</em></p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/5FVblIPCJmZKNOaqbgMHNo/3e3d17bad9503530ccc035bcdb27bf01/Untitled_design-High-Quality__1_.jpg" alt="Typescript project presentation during Hackweek 2019." title="Typescript project presentation during Hackweek 2019."/></p><figcaption><p>Typescript project presentation during Hackweek 2019.</p></figcaption></figure><div>
<p>After considering the presentation, we felt Typescript was a strong fit for Sentry because:</p>
<ul>
<li>Several classes of bugs could be detected — and eliminated — during compilation.</li>
<li>We could improve the developer experience through editor integrations such as auto-completion, faster code navigation, and inline compiler feedback.</li>
<li>We could reduce the need for API documentation, as type annotations help produce self-describing code.</li>
<li>TypeScript has an active community with a clear and maintained development <a href="https://github.com/Microsoft/TypeScript/wiki/Roadmap">roadmap</a> in addition to rapid <a href="https://github.com/microsoft/TypeScript/releases">releases</a>.</li>
<li>Many of the libraries we use (including React) already have <a href="https://github.com/borisyankov/DefinitelyTyped">type definitions</a> available.</li>
<li>TypeScript can be adopted incrementally. That meant we can start writing new code with TypeScript and incrementally convert over time.</li>
</ul>
<p>There were some potential drawbacks of adopting TypeScript, though:</p>
<ul>
<li>It’s a large time investment. Our frontend code is non-trivial in scope, so it would take significant effort to convert it. That complexity meant additional build time.</li>
<li>We would need to educate the frontend team in TypeScript and support them as they learned.</li>
<li>TypeScript and JavaScript would need to coexist in the code base for a significant period of time.</li>
</ul>
<h3 id="maturing-the-prototype"><a href="#maturing-the-prototype" aria-label="maturing the prototype permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Maturing the prototype</h3>
<p>Shortly after Hackweek, excitement was high and a more formal proposal was brought to our Frontend Technical Steering Committee (TSC). This group meets every two weeks to guide our frontend architecture. While TypeScript wasn’t among the “winning” projects for Hackweek, we were confident that it would be a worthwhile investment that would ultimately pay off in the long run.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3ecz3pdrHVp3MHd1X3aRST/849551707dc244095e3066dc8345e63b/91289EEA-B731-45AA-8BE6-0997F0CA67F5_1_201_a.jpeg" alt="Typescript Pull Request" title="Typescript Pull Request"/></p><figcaption><p>Sentry’s first Typescript Pull Request: <a href="https://github.com/getsentry/sentry/pull/13786">https://github.com/getsentry/sentry/pull/13786</a></p></figcaption></figure><div>
<h3 id="overall-strategy"><a href="#overall-strategy" aria-label="overall strategy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Overall strategy</h3>
<p>We broke our high-level strategy into several phases:</p>
<ol>
<li><strong>Educate</strong>. In this phase we needed to let people know that TypeScript was coming, and provide the right learning resources to help folks onboard.</li>
<li><strong>New code in TypeScript</strong>. In this phase we needed to have all new development being done in TypeScript. If we continued to create new JavaScript, we would never finish the conversion phase.</li>
<li><strong>Conversion</strong>. In this phase, all new work would be done in TypeScript, giving us a finite number of files to convert. Then it is “just work”™️.</li>
</ol>
<p>Our most controversial decision was agreeing to not undergo any other major refactors until the code base was converted 100% to TypeScript. This meant we would not take on other quality-of-life improvements — things like upgrading our state-management library or introducing React hooks — until the TypeScript conversion was complete.</p>
<h3 id="educating-the-team"><a href="#educating-the-team" aria-label="educating the team permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Educating the team</h3>
<p>Early on, we recognized that the broader development team at Sentry would need additional resources and materials to learn TypeScript. To help folks who were new to TypeScript, we shared a list of introductory articles and resources for configuring various editors.</p>
<p>Additionally, members of the TSC took the time to review code and help educate those folks eager to learn TypeScript. Having this support system in place helped create more TypeScript “believers” who would, over time, write new code in TypeScript.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/4EwzgBASmgwyFlpuMOXYma/0b581c31441f29d3ab288b95703f38b7/Untitled__3_.png" alt="Example of a TypeScript code review." title="Example of a TypeScript code review."/></p><figcaption><p>Example of a TypeScript code review.</p></figcaption></figure><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/7hcpu6wvYr2lUVWfHXx640/c8d0fcd955055ac390c8065e0aafba0d/Screenshot_2021-04-01_at_10.33.07.png" alt="Slack shoutout for TypeScript conversion." title="Slack shoutout for TypeScript conversion."/></p><figcaption><p>Slack shoutout for TypeScript conversion.</p></figcaption></figure><div>
<h3 id="taking-root-in-green-fields"><a href="#taking-root-in-green-fields" aria-label="taking root in green fields permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Taking root in green fields</h3>
<p>While we were educating the broader team, folks who were keen on TypeScript not only began building out their new feature work in TypeScript, but also found opportunities to convert files which overlapped with new features. This approach let us build up our type definitions and gain more experience writing Typescript in lower-risk parts of the product that were not exposed to customers.</p>
<p>As the broader team gained more experience and found value in what TypeScript provides, they naturally stopped creating more JavaScript. While we never used tooling to stop people from creating new JavaScript, our education efforts and social agreements helped prevent new JavaScript from being created.</p>
<h3 id="work-out-from-the-core--and-in-from-the-leaves"><a href="#work-out-from-the-core--and-in-from-the-leaves" aria-label="work out from the core  and in from the leaves permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Work out from the core — and in from the leaves</h3>
<p>Once TypeScript had a firm foothold, we needed a strategy to work through the 1,100+ files that needed conversion. Here, we audited our imports, ordering them by how frequently each module was imported. We used this list to prioritize which modules were converted first. By converting frequently used modules, we would be able compound our gains as we converted files.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1QW71rhpxcsqVPrTAmnYVD/58c9800b023c4d3a79e6fdcce5d2921e/Screenshot_2021-04-01_at_10.53.12.png" alt="" title="ts-4"/></p><figcaption><p>The list we used to prioritize and assign conversion work based on import frequency.</p></figcaption></figure><div>
<p>This approach worked well in the beginning, as some modules have dramatically more imports than others. But because most of our modules have fewer than 10 imports, we quickly plateaued. Our next approach was starting from “leaf node” modules that are imported in one place. Converting these files enabled us to accumulate progress more quickly. </p>
<h3 id="all-we-have-to-do-now-is-convert-1100-files"><a href="#all-we-have-to-do-now-is-convert-1100-files" aria-label="all we have to do now is convert 1100 files permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All we have to do now is convert 1,100+ files…</h3>
<p>Like many software projects, our initial rollout plans were overly ambitious. We started off by retroactively calculating a timeline where we completed within 2019. With approximately 15 weeks before the end of the year, that meant would need to convert approximately 74 files per week. This assumed that we would not accumulate any additional JavaScript files (we did), and that we could sustain that effort (we didn’t). After eight weeks, we checked in on our progress.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1cdGkTs3c2cJ7Vtpsp9ZyN/9c1dd4fb63acd29c0083fd6aeecb4869/typescript_chart_annotated.png" alt="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019." title="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019."/></p><figcaption><p>Despite promising progress during our first 8 weeks, we knew we weren’t going to finish in 2019.</p></figcaption></figure><div>
<p>It was obvious that we were not going to complete in 2019. Given projections from the current effort a more likely completion date would be mid-2020. </p>
<p>During the fall and winter of 2019, progress was slow. People were focusing on meeting product goals, and didn’t have as much time to devote to TypeScript conversion. In February of 2020 we reached equilibrium. We were no longer making new JavaScript and our backlog of conversion work became fixed.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1ooSqS6jFkCZvspS1oJYYP/bb79ec6a1249ac442561e48d168c74da/Screen_Shot_2021-03-29_at_9.38.22_PM.png" alt="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity." title="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity."/></p><figcaption><p>Our conversion progress over time. Note there are several lulls as well as periods of renewed activity.</p></figcaption></figure><div>
<h3 id="challenges-encountered"><a href="#challenges-encountered" aria-label="challenges encountered permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Challenges encountered</h3>
<p>Although the introduction of TypeScript was definitely a game changer, we also faced a few challenges during the conversion process. Most of these were due to interoperability issues between TypeScript and React: </p>
<ol>
<li>
<p><strong>Default Props</strong></p>
<p>When using <code>defaultProps</code> on classes, TypeScript is able to correctly infer that the props are not required when using the component, but when using Higher Order Components, the types for <code>defaultProps</code> generally don’t work, and the previously optional properties would become required. </p>
<p>An example of how <code>defaultProps</code> interacts poorly with Higher Order Components is:</p>
<div data-language="jsx"><pre><code><span>const</span> defaultProps <span>=</span> <span>{</span>
  statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
  canSelect<span>:</span> <span>true</span><span>,</span>
  withChart<span>:</span> <span>true</span><span>,</span>
  useFilteredStats<span>:</span> <span>false</span><span>,</span>
<span>}</span><span>;</span>

type Props <span>=</span> <span>{</span>
  id<span>:</span> string<span>;</span>
  selection<span>:</span> GlobalSelection<span>;</span>
  organization<span>:</span> Organization<span>;</span>
  displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
  query<span>?</span><span>:</span> string<span>;</span>
  hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
  memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
  onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
  showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
  index<span>?</span><span>:</span> number<span>;</span>
<span>}</span> <span>&amp;</span> <span>typeof</span> defaultProps

type State <span>=</span> <span>{</span><span>...</span><span>}</span><span>;</span>

<span>class</span> <span>StreamGroup</span> <span>extends</span> <span>React<span>.</span>Component</span><span>&lt;</span>Props<span>,</span> State<span>&gt;</span> <span>{</span>
  <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
  <span>...</span>
<span>}</span>

<span>export</span> <span>default</span> <span>withGlobalSelection</span><span>(</span><span>withOrganization</span><span>(</span>StreamGroup<span>)</span><span>)</span><span>;</span></code></pre></div>
</li>
</ol>
<p>Normally, TypeScript would be able to use the <code>defaultProps</code> attribute of our class component to infer that those properties are not required. However, when wrapped in a Higher Order Component, TypeScript displays the following errors:</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3mZ5ElMCrj8VLFbtKrm4m6/1b658ed4cc7d87b3c45c6207e8b70938/Screenshot_2021-04-12_at_08.38.25.png" alt="Types" title="Types"/></p></figure><div>
<p>Here our solution was to use <code>Partial</code> on the <code>defaultProps</code> and rely on React to fill in the default values.</p>
<div data-language="jsx"><pre><code>    <span>const</span> defaultProps <span>=</span> <span>{</span>
      statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
      canSelect<span>:</span> <span>true</span><span>,</span>
      withChart<span>:</span> <span>true</span><span>,</span>
      useFilteredStats<span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>

    type Props <span>=</span> <span>{</span>
      id<span>:</span> string<span>;</span>
      selection<span>:</span> GlobalSelection<span>;</span>
      organization<span>:</span> Organization<span>;</span>
      displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
      query<span>?</span><span>:</span> string<span>;</span>
      hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
      memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
      onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
      showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
      index<span>?</span><span>:</span> number<span>;</span>
    <span>}</span> <span>&amp;</span> Partial<span><span><span>&lt;</span>typeof</span> <span>defaultProps</span><span>&gt;</span></span><span>

    type State = </span><span>{</span><span>...</span><span>}</span><span>;

    class StreamGroup extends React.Component&lt;Props, State&gt; </span><span>{</span>
      <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
      <span>...</span>
    <span>}</span><span>

    export default withGlobalSelection(withOrganization(StreamGroup));</span></code></pre></div>
<p>You can find a more complete implementation of <a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/components/stream/group.tsx">this approach here</a>.</p>
<ol start="2">
<li>
<p><strong>Libraries adding incorrect types</strong></p>
<p>One downside to relying on the type definitions in DefinitelyTyped is that occasionally the library types are not written by the maintainers. Instead, community users contribute types, and because of that some types are missing or incorrectly defined. We encountered this with the versions of <a href="https://echarts.apache.org/en/index.html">ECharts</a> and <a href="https://github.com/reflux/refluxjs">Reflux</a> we were using. Our solution here was to add additional type definitions in our code.</p>
</li>
<li>
<p><strong>React.forwardRef is not compatible with generics</strong></p>
<p>Using generic types with <code>React.forwardRef</code> is not directly possible, as it requires concrete types. In more detail, the <code>forwardRef</code> function has only one parameter named <code>render</code>. The type of this parameter is <code>ForwardRefRenderFunction</code>, which is not a generic function declaration, so higher order function type inference cannot propagate free type parameters on to the calling function <code>React.forwardRef</code>.  We had to make <a href="https://github.com/getsentry/sentry/pull/23766/files">compromises and use “any” when this situation arose</a>.</p>
</li>
</ol>
<h3 id="sustaining-motivation-and-energy"><a href="#sustaining-motivation-and-energy" aria-label="sustaining motivation and energy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sustaining motivation and energy</h3>
<p>Toward the end of the conversion, many contributors were feeling the burning toil this project was having.</p>
<p>In the summer of 2020 – a full year after this project began – we crossed the 70% threshold. This revitalized folks, as we knew the end was near. We were able to sustain that energy and focus though the summer and fall by using part of our TSC meeting as a check in and collecting “conversion pledges” for the next meeting. This introduced a light-hearted social game that helped us stay focused.</p>
<p>In addition, our fantastic tools team introduced a slackbot that would allow us to track progress on demand. Seeing the number go up every day was a big motivator in the final stages, so much so it’s something we’ll likely to use again. You can find the early versions of that bot <a href="https://github.com/getsentry/TypeScript-slack-bot">here</a>.</p>
<h3 id="the-end-finally"><a href="#the-end-finally" aria-label="the end finally permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The end, finally</h3>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/SBDOSDuCKafM1jklm0kIO/5f1d32747e2f39e1811a1f86dcfb35d1/Screenshot_2021-04-01_at_10.52.18.png" alt="TypeScript Conversion Finally Completed" title="TypeScript Conversion Finally Completed"/></p></figure><div>
<p>After 18 months of migrating our frontend code base to TypeScript, the day everyone at Sentry had been working toward had finally arrived. When we started on our TypeScript journey, we had 1,100+ files to convert. Now, we have over 1,915 Typescript files. It’s worth mentioning that at no time was a GitHub check added to block new JavaScript files. After developers saw the benefits that TypeScript would bring, writing new code in TypeScript was an organic choice. </p>
<p>With TypeScript, we now have an extra layer of protection in our code, which means we’re able to ship with greater confidence, higher productivity, and most importantly, fewer bugs. Some of our newer frontend developers have never seen a production incident caused by a frontend change.</p>
<h3 id="looking-back"><a href="#looking-back" aria-label="looking back permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Looking back</h3>
<p>Like everything in life, we also learned a few things along this journey.</p>
<ol>
<li>
<p><strong>Incremental conversion is key</strong></p>
<p>Our strategy to gradually migrate our files to TypeScript worked out well. We were able to balance converting our code to TypeScript, without delaying important product work. It’s important to highlight that from the beginning, we were not in a hurry to achieve our goal, but instead we wanted to proceed carefully and do a great job.</p>
</li>
<li>
<p><strong>Stay current with TypeScript releases</strong></p>
<p>During our conversion process, several new releases of TypeScript came out. Each one helped us refine our types further with new features like optional chaining, nullish coalesce, named tuples, and more. While upgrading did take additional effort, the benefits were well worth it. It’s why we recommend staying as current as you can with TypeScript releases.</p>
</li>
<li>
<p><strong>Gradually build complex types</strong></p>
<p>At the beginning of the migration, it was impossible to know the correct type of everything. After all, Sentry possesses a large code base, and not everyone is familiar with all parts of the application. Which meant we had to build our more complex types incrementally. As we were converting files, we became more familiar with their types and as we converted related files, we were able to better identify whether the types we had previously defined were updated with the new insights.</p>
</li>
<li>
<p><strong>Use TODO Comments to note future work</strong></p>
<p>In Sentry, we generally use TODO comments in the code to help us track something we need to review later. This approach proved to be very useful during our migration to TypeScript. When we encountered an unclear type, or problematic component we would leave a <code>TODO(ts)</code> for later review. We are now incrementally reviewing the TODO list and further refining and improving our types.</p>
<div data-language="jsx"><pre><code><span>import</span> <span>{</span>Frame<span>}</span> <span>from</span> <span>&#39;app/types&#39;</span><span>;</span>

<span>// TODO(ts): define correct stack trace type</span>
<span>function</span> <span>getRelevantFrame</span><span>(</span><span>stacktrace<span>:</span> any</span><span>)</span><span>:</span> Frame <span>{</span>
  <span>if</span> <span>(</span><span>!</span>stacktrace<span>.</span>hasSystemFrames<span>)</span> <span>{</span>
    <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
  <span>}</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>&gt;=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>const</span> frame <span>=</span> stacktrace<span>.</span>frames<span>[</span>i<span>]</span><span>;</span>
    <span>if</span> <span>(</span>frame<span>.</span>inApp<span>)</span> <span>{</span>
      <span>return</span> frame<span>;</span>
    <span>}</span>
  <span>}</span>
  <span>// this should not happen</span>
  <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
<span>}</span>

<span>export</span> <span>default</span> getRelevantFrame<span>;</span></code></pre></div>
</li>
</ol>
<h3 id="moving-forward"><a href="#moving-forward" aria-label="moving forward permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Moving forward</h3>
<p>Migrating to TypeScript was just the beginning. The frontend team at Sentry will continue to gradually improve types, making sure they are correct as possible, including the removal of all React PropTypes.</p>
<p>We’re also seriously considering introducing end-to-end type safety, so that a backend engineer can make changes in the API without unknowing breaking clients, and frontend engineers can be confident in the data that will be coming back from the server.</p>
<p>This important achievement would not have been possible without the patience, persistence, attention to detail, passion and hard work of everyone involved. A big thank you to all the Sentaurs who contributed to this enormous effort.</p>
<hr/>
<p>Eager for a challenging project like this one? Then join us at Sentry. <a href="https://sentry.io/careers/">We are hiring!</a></p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6kbtdGkqHZOk46Eb1yodEz/b0b6ee467e0ada16857888ee14db32ff/TypescriptMigration-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript</title>
      <link>https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript/</link>
      <description>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-04-12T00:00">April 12, 2021</time></p><ul><li><a href="https://blog.sentry.io/sentry/"><span>Sentry</span></a></li></ul><div><p>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen members of the engineering team, 1,100 files, and 95,000 lines of code.</p>
<p>In this blog post, we share our process, techniques, challenges, and ultimately, what we learned along this journey.</p>
<h3 id="the-pitch"><a href="#the-pitch" aria-label="the pitch permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The pitch</h3>
<p>Back in 2019, we were shipping more frontend bugs than what was acceptable. After looking at the underlying causes of these incidents, it became clear that many of these bugs could have been prevented by static analysis and type checking.</p>
<p>During that year’s Hackweek event, Lyn Nagara, Alberto Leal, and Daniel Griesser pitched introducing TypeScript to the Sentry frontend. This team bootstrapped the TypeScript compiler to our build process as well as converted a few non-trivial views — and their related components — to TypeScript.</p>
<p><em>Hackweek is an event that takes place once a year, giving all Sentry employees the opportunity to set aside their usual work to focus solely on innovative projects and ideas. Hackweek has given birth to numerous applications and tools that are now important parts of our product, like the recently launched <a href="https://blog.sentry.io/2021/03/16/building-dark-mode">Dark Mode project</a>.</em></p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/5FVblIPCJmZKNOaqbgMHNo/3e3d17bad9503530ccc035bcdb27bf01/Untitled_design-High-Quality__1_.jpg" alt="Typescript project presentation during Hackweek 2019." title="Typescript project presentation during Hackweek 2019."/></p><figcaption><p>Typescript project presentation during Hackweek 2019.</p></figcaption></figure><div>
<p>After considering the presentation, we felt Typescript was a strong fit for Sentry because:</p>
<ul>
<li>Several classes of bugs could be detected — and eliminated — during compilation.</li>
<li>We could improve the developer experience through editor integrations such as auto-completion, faster code navigation, and inline compiler feedback.</li>
<li>We could reduce the need for API documentation, as type annotations help produce self-describing code.</li>
<li>TypeScript has an active community with a clear and maintained development <a href="https://github.com/Microsoft/TypeScript/wiki/Roadmap">roadmap</a> in addition to rapid <a href="https://github.com/microsoft/TypeScript/releases">releases</a>.</li>
<li>Many of the libraries we use (including React) already have <a href="https://github.com/borisyankov/DefinitelyTyped">type definitions</a> available.</li>
<li>TypeScript can be adopted incrementally. That meant we can start writing new code with TypeScript and incrementally convert over time.</li>
</ul>
<p>There were some potential drawbacks of adopting TypeScript, though:</p>
<ul>
<li>It’s a large time investment. Our frontend code is non-trivial in scope, so it would take significant effort to convert it. That complexity meant additional build time.</li>
<li>We would need to educate the frontend team in TypeScript and support them as they learned.</li>
<li>TypeScript and JavaScript would need to coexist in the code base for a significant period of time.</li>
</ul>
<h3 id="maturing-the-prototype"><a href="#maturing-the-prototype" aria-label="maturing the prototype permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Maturing the prototype</h3>
<p>Shortly after Hackweek, excitement was high and a more formal proposal was brought to our Frontend Technical Steering Committee (TSC). This group meets every two weeks to guide our frontend architecture. While TypeScript wasn’t among the “winning” projects for Hackweek, we were confident that it would be a worthwhile investment that would ultimately pay off in the long run.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3ecz3pdrHVp3MHd1X3aRST/849551707dc244095e3066dc8345e63b/91289EEA-B731-45AA-8BE6-0997F0CA67F5_1_201_a.jpeg" alt="Typescript Pull Request" title="Typescript Pull Request"/></p><figcaption><p>Sentry’s first Typescript Pull Request: <a href="https://github.com/getsentry/sentry/pull/13786">https://github.com/getsentry/sentry/pull/13786</a></p></figcaption></figure><div>
<h3 id="overall-strategy"><a href="#overall-strategy" aria-label="overall strategy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Overall strategy</h3>
<p>We broke our high-level strategy into several phases:</p>
<ol>
<li><strong>Educate</strong>. In this phase we needed to let people know that TypeScript was coming, and provide the right learning resources to help folks onboard.</li>
<li><strong>New code in TypeScript</strong>. In this phase we needed to have all new development being done in TypeScript. If we continued to create new JavaScript, we would never finish the conversion phase.</li>
<li><strong>Conversion</strong>. In this phase, all new work would be done in TypeScript, giving us a finite number of files to convert. Then it is “just work”™️.</li>
</ol>
<p>Our most controversial decision was agreeing to not undergo any other major refactors until the code base was converted 100% to TypeScript. This meant we would not take on other quality-of-life improvements — things like upgrading our state-management library or introducing React hooks — until the TypeScript conversion was complete.</p>
<h3 id="educating-the-team"><a href="#educating-the-team" aria-label="educating the team permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Educating the team</h3>
<p>Early on, we recognized that the broader development team at Sentry would need additional resources and materials to learn TypeScript. To help folks who were new to TypeScript, we shared a list of introductory articles and resources for configuring various editors.</p>
<p>Additionally, members of the TSC took the time to review code and help educate those folks eager to learn TypeScript. Having this support system in place helped create more TypeScript “believers” who would, over time, write new code in TypeScript.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/4EwzgBASmgwyFlpuMOXYma/0b581c31441f29d3ab288b95703f38b7/Untitled__3_.png" alt="Example of a TypeScript code review." title="Example of a TypeScript code review."/></p><figcaption><p>Example of a TypeScript code review.</p></figcaption></figure><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/7hcpu6wvYr2lUVWfHXx640/c8d0fcd955055ac390c8065e0aafba0d/Screenshot_2021-04-01_at_10.33.07.png" alt="Slack shoutout for TypeScript conversion." title="Slack shoutout for TypeScript conversion."/></p><figcaption><p>Slack shoutout for TypeScript conversion.</p></figcaption></figure><div>
<h3 id="taking-root-in-green-fields"><a href="#taking-root-in-green-fields" aria-label="taking root in green fields permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Taking root in green fields</h3>
<p>While we were educating the broader team, folks who were keen on TypeScript not only began building out their new feature work in TypeScript, but also found opportunities to convert files which overlapped with new features. This approach let us build up our type definitions and gain more experience writing Typescript in lower-risk parts of the product that were not exposed to customers.</p>
<p>As the broader team gained more experience and found value in what TypeScript provides, they naturally stopped creating more JavaScript. While we never used tooling to stop people from creating new JavaScript, our education efforts and social agreements helped prevent new JavaScript from being created.</p>
<h3 id="work-out-from-the-core--and-in-from-the-leaves"><a href="#work-out-from-the-core--and-in-from-the-leaves" aria-label="work out from the core  and in from the leaves permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Work out from the core — and in from the leaves</h3>
<p>Once TypeScript had a firm foothold, we needed a strategy to work through the 1,100+ files that needed conversion. Here, we audited our imports, ordering them by how frequently each module was imported. We used this list to prioritize which modules were converted first. By converting frequently used modules, we would be able compound our gains as we converted files.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1QW71rhpxcsqVPrTAmnYVD/58c9800b023c4d3a79e6fdcce5d2921e/Screenshot_2021-04-01_at_10.53.12.png" alt="" title="ts-4"/></p><figcaption><p>The list we used to prioritize and assign conversion work based on import frequency.</p></figcaption></figure><div>
<p>This approach worked well in the beginning, as some modules have dramatically more imports than others. But because most of our modules have fewer than 10 imports, we quickly plateaued. Our next approach was starting from “leaf node” modules that are imported in one place. Converting these files enabled us to accumulate progress more quickly. </p>
<h3 id="all-we-have-to-do-now-is-convert-1100-files"><a href="#all-we-have-to-do-now-is-convert-1100-files" aria-label="all we have to do now is convert 1100 files permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All we have to do now is convert 1,100+ files…</h3>
<p>Like many software projects, our initial rollout plans were overly ambitious. We started off by retroactively calculating a timeline where we completed within 2019. With approximately 15 weeks before the end of the year, that meant would need to convert approximately 74 files per week. This assumed that we would not accumulate any additional JavaScript files (we did), and that we could sustain that effort (we didn’t). After eight weeks, we checked in on our progress.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1cdGkTs3c2cJ7Vtpsp9ZyN/9c1dd4fb63acd29c0083fd6aeecb4869/typescript_chart_annotated.png" alt="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019." title="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019."/></p><figcaption><p>Despite promising progress during our first 8 weeks, we knew we weren’t going to finish in 2019.</p></figcaption></figure><div>
<p>It was obvious that we were not going to complete in 2019. Given projections from the current effort a more likely completion date would be mid-2020. </p>
<p>During the fall and winter of 2019, progress was slow. People were focusing on meeting product goals, and didn’t have as much time to devote to TypeScript conversion. In February of 2020 we reached equilibrium. We were no longer making new JavaScript and our backlog of conversion work became fixed.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1ooSqS6jFkCZvspS1oJYYP/bb79ec6a1249ac442561e48d168c74da/Screen_Shot_2021-03-29_at_9.38.22_PM.png" alt="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity." title="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity."/></p><figcaption><p>Our conversion progress over time. Note there are several lulls as well as periods of renewed activity.</p></figcaption></figure><div>
<h3 id="challenges-encountered"><a href="#challenges-encountered" aria-label="challenges encountered permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Challenges encountered</h3>
<p>Although the introduction of TypeScript was definitely a game changer, we also faced a few challenges during the conversion process. Most of these were due to interoperability issues between TypeScript and React: </p>
<ol>
<li>
<p><strong>Default Props</strong></p>
<p>When using <code>defaultProps</code> on classes, TypeScript is able to correctly infer that the props are not required when using the component, but when using Higher Order Components, the types for <code>defaultProps</code> generally don’t work, and the previously optional properties would become required. </p>
<p>An example of how <code>defaultProps</code> interacts poorly with Higher Order Components is:</p>
<div data-language="jsx"><pre><code><span>const</span> defaultProps <span>=</span> <span>{</span>
  statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
  canSelect<span>:</span> <span>true</span><span>,</span>
  withChart<span>:</span> <span>true</span><span>,</span>
  useFilteredStats<span>:</span> <span>false</span><span>,</span>
<span>}</span><span>;</span>

type Props <span>=</span> <span>{</span>
  id<span>:</span> string<span>;</span>
  selection<span>:</span> GlobalSelection<span>;</span>
  organization<span>:</span> Organization<span>;</span>
  displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
  query<span>?</span><span>:</span> string<span>;</span>
  hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
  memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
  onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
  showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
  index<span>?</span><span>:</span> number<span>;</span>
<span>}</span> <span>&amp;</span> <span>typeof</span> defaultProps

type State <span>=</span> <span>{</span><span>...</span><span>}</span><span>;</span>

<span>class</span> <span>StreamGroup</span> <span>extends</span> <span>React<span>.</span>Component</span><span>&lt;</span>Props<span>,</span> State<span>&gt;</span> <span>{</span>
  <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
  <span>...</span>
<span>}</span>

<span>export</span> <span>default</span> <span>withGlobalSelection</span><span>(</span><span>withOrganization</span><span>(</span>StreamGroup<span>)</span><span>)</span><span>;</span></code></pre></div>
</li>
</ol>
<p>Normally, TypeScript would be able to use the <code>defaultProps</code> attribute of our class component to infer that those properties are not required. However, when wrapped in a Higher Order Component, TypeScript displays the following errors:</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3mZ5ElMCrj8VLFbtKrm4m6/1b658ed4cc7d87b3c45c6207e8b70938/Screenshot_2021-04-12_at_08.38.25.png" alt="Types" title="Types"/></p></figure><div>
<p>Here our solution was to use <code>Partial</code> on the <code>defaultProps</code> and rely on React to fill in the default values.</p>
<div data-language="jsx"><pre><code>    <span>const</span> defaultProps <span>=</span> <span>{</span>
      statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
      canSelect<span>:</span> <span>true</span><span>,</span>
      withChart<span>:</span> <span>true</span><span>,</span>
      useFilteredStats<span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>

    type Props <span>=</span> <span>{</span>
      id<span>:</span> string<span>;</span>
      selection<span>:</span> GlobalSelection<span>;</span>
      organization<span>:</span> Organization<span>;</span>
      displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
      query<span>?</span><span>:</span> string<span>;</span>
      hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
      memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
      onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
      showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
      index<span>?</span><span>:</span> number<span>;</span>
    <span>}</span> <span>&amp;</span> Partial<span><span><span>&lt;</span>typeof</span> <span>defaultProps</span><span>&gt;</span></span><span>

    type State = </span><span>{</span><span>...</span><span>}</span><span>;

    class StreamGroup extends React.Component&lt;Props, State&gt; </span><span>{</span>
      <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
      <span>...</span>
    <span>}</span><span>

    export default withGlobalSelection(withOrganization(StreamGroup));</span></code></pre></div>
<p>You can find a more complete implementation of <a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/components/stream/group.tsx">this approach here</a>.</p>
<ol start="2">
<li>
<p><strong>Libraries adding incorrect types</strong></p>
<p>One downside to relying on the type definitions in DefinitelyTyped is that occasionally the library types are not written by the maintainers. Instead, community users contribute types, and because of that some types are missing or incorrectly defined. We encountered this with the versions of <a href="https://echarts.apache.org/en/index.html">ECharts</a> and <a href="https://github.com/reflux/refluxjs">Reflux</a> we were using. Our solution here was to add additional type definitions in our code.</p>
</li>
<li>
<p><strong>React.forwardRef is not compatible with generics</strong></p>
<p>Using generic types with <code>React.forwardRef</code> is not directly possible, as it requires concrete types. In more detail, the <code>forwardRef</code> function has only one parameter named <code>render</code>. The type of this parameter is <code>ForwardRefRenderFunction</code>, which is not a generic function declaration, so higher order function type inference cannot propagate free type parameters on to the calling function <code>React.forwardRef</code>.  We had to make <a href="https://github.com/getsentry/sentry/pull/23766/files">compromises and use “any” when this situation arose</a>.</p>
</li>
</ol>
<h3 id="sustaining-motivation-and-energy"><a href="#sustaining-motivation-and-energy" aria-label="sustaining motivation and energy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sustaining motivation and energy</h3>
<p>Toward the end of the conversion, many contributors were feeling the burning toil this project was having.</p>
<p>In the summer of 2020 – a full year after this project began – we crossed the 70% threshold. This revitalized folks, as we knew the end was near. We were able to sustain that energy and focus though the summer and fall by using part of our TSC meeting as a check in and collecting “conversion pledges” for the next meeting. This introduced a light-hearted social game that helped us stay focused.</p>
<p>In addition, our fantastic tools team introduced a slackbot that would allow us to track progress on demand. Seeing the number go up every day was a big motivator in the final stages, so much so it’s something we’ll likely to use again. You can find the early versions of that bot <a href="https://github.com/getsentry/TypeScript-slack-bot">here</a>.</p>
<h3 id="the-end-finally"><a href="#the-end-finally" aria-label="the end finally permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The end, finally</h3>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/SBDOSDuCKafM1jklm0kIO/5f1d32747e2f39e1811a1f86dcfb35d1/Screenshot_2021-04-01_at_10.52.18.png" alt="TypeScript Conversion Finally Completed" title="TypeScript Conversion Finally Completed"/></p></figure><div>
<p>After 18 months of migrating our frontend code base to TypeScript, the day everyone at Sentry had been working toward had finally arrived. When we started on our TypeScript journey, we had 1,100+ files to convert. Now, we have over 1,915 Typescript files. It’s worth mentioning that at no time was a GitHub check added to block new JavaScript files. After developers saw the benefits that TypeScript would bring, writing new code in TypeScript was an organic choice. </p>
<p>With TypeScript, we now have an extra layer of protection in our code, which means we’re able to ship with greater confidence, higher productivity, and most importantly, fewer bugs. Some of our newer frontend developers have never seen a production incident caused by a frontend change.</p>
<h3 id="looking-back"><a href="#looking-back" aria-label="looking back permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Looking back</h3>
<p>Like everything in life, we also learned a few things along this journey.</p>
<ol>
<li>
<p><strong>Incremental conversion is key</strong></p>
<p>Our strategy to gradually migrate our files to TypeScript worked out well. We were able to balance converting our code to TypeScript, without delaying important product work. It’s important to highlight that from the beginning, we were not in a hurry to achieve our goal, but instead we wanted to proceed carefully and do a great job.</p>
</li>
<li>
<p><strong>Stay current with TypeScript releases</strong></p>
<p>During our conversion process, several new releases of TypeScript came out. Each one helped us refine our types further with new features like optional chaining, nullish coalesce, named tuples, and more. While upgrading did take additional effort, the benefits were well worth it. It’s why we recommend staying as current as you can with TypeScript releases.</p>
</li>
<li>
<p><strong>Gradually build complex types</strong></p>
<p>At the beginning of the migration, it was impossible to know the correct type of everything. After all, Sentry possesses a large code base, and not everyone is familiar with all parts of the application. Which meant we had to build our more complex types incrementally. As we were converting files, we became more familiar with their types and as we converted related files, we were able to better identify whether the types we had previously defined were updated with the new insights.</p>
</li>
<li>
<p><strong>Use TODO Comments to note future work</strong></p>
<p>In Sentry, we generally use TODO comments in the code to help us track something we need to review later. This approach proved to be very useful during our migration to TypeScript. When we encountered an unclear type, or problematic component we would leave a <code>TODO(ts)</code> for later review. We are now incrementally reviewing the TODO list and further refining and improving our types.</p>
<div data-language="jsx"><pre><code><span>import</span> <span>{</span>Frame<span>}</span> <span>from</span> <span>&#39;app/types&#39;</span><span>;</span>

<span>// TODO(ts): define correct stack trace type</span>
<span>function</span> <span>getRelevantFrame</span><span>(</span><span>stacktrace<span>:</span> any</span><span>)</span><span>:</span> Frame <span>{</span>
  <span>if</span> <span>(</span><span>!</span>stacktrace<span>.</span>hasSystemFrames<span>)</span> <span>{</span>
    <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
  <span>}</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>&gt;=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>const</span> frame <span>=</span> stacktrace<span>.</span>frames<span>[</span>i<span>]</span><span>;</span>
    <span>if</span> <span>(</span>frame<span>.</span>inApp<span>)</span> <span>{</span>
      <span>return</span> frame<span>;</span>
    <span>}</span>
  <span>}</span>
  <span>// this should not happen</span>
  <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
<span>}</span>

<span>export</span> <span>default</span> getRelevantFrame<span>;</span></code></pre></div>
</li>
</ol>
<h3 id="moving-forward"><a href="#moving-forward" aria-label="moving forward permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Moving forward</h3>
<p>Migrating to TypeScript was just the beginning. The frontend team at Sentry will continue to gradually improve types, making sure they are correct as possible, including the removal of all React PropTypes.</p>
<p>We’re also seriously considering introducing end-to-end type safety, so that a backend engineer can make changes in the API without unknowing breaking clients, and frontend engineers can be confident in the data that will be coming back from the server.</p>
<p>This important achievement would not have been possible without the patience, persistence, attention to detail, passion and hard work of everyone involved. A big thank you to all the Sentaurs who contributed to this enormous effort.</p>
<hr/>
<p>Eager for a challenging project like this one? Then join us at Sentry. <a href="https://sentry.io/careers/">We are hiring!</a></p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6kbtdGkqHZOk46Eb1yodEz/b0b6ee467e0ada16857888ee14db32ff/TypescriptMigration-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript</title>
      <link>https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript/</link>
      <description>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-04-12T00:00">April 12, 2021</time></p><ul><li><a href="https://blog.sentry.io/sentry/"><span>Sentry</span></a></li></ul><div><p>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen members of the engineering team, 1,100 files, and 95,000 lines of code.</p>
<p>In this blog post, we share our process, techniques, challenges, and ultimately, what we learned along this journey.</p>
<h3 id="the-pitch"><a href="#the-pitch" aria-label="the pitch permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The pitch</h3>
<p>Back in 2019, we were shipping more frontend bugs than what was acceptable. After looking at the underlying causes of these incidents, it became clear that many of these bugs could have been prevented by static analysis and type checking.</p>
<p>During that year’s Hackweek event, Lyn Nagara, Alberto Leal, and Daniel Griesser pitched introducing TypeScript to the Sentry frontend. This team bootstrapped the TypeScript compiler to our build process as well as converted a few non-trivial views — and their related components — to TypeScript.</p>
<p><em>Hackweek is an event that takes place once a year, giving all Sentry employees the opportunity to set aside their usual work to focus solely on innovative projects and ideas. Hackweek has given birth to numerous applications and tools that are now important parts of our product, like the recently launched <a href="https://blog.sentry.io/2021/03/16/building-dark-mode">Dark Mode project</a>.</em></p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/5FVblIPCJmZKNOaqbgMHNo/3e3d17bad9503530ccc035bcdb27bf01/Untitled_design-High-Quality__1_.jpg" alt="Typescript project presentation during Hackweek 2019." title="Typescript project presentation during Hackweek 2019."/></p><figcaption><p>Typescript project presentation during Hackweek 2019.</p></figcaption></figure><div>
<p>After considering the presentation, we felt Typescript was a strong fit for Sentry because:</p>
<ul>
<li>Several classes of bugs could be detected — and eliminated — during compilation.</li>
<li>We could improve the developer experience through editor integrations such as auto-completion, faster code navigation, and inline compiler feedback.</li>
<li>We could reduce the need for API documentation, as type annotations help produce self-describing code.</li>
<li>TypeScript has an active community with a clear and maintained development <a href="https://github.com/Microsoft/TypeScript/wiki/Roadmap">roadmap</a> in addition to rapid <a href="https://github.com/microsoft/TypeScript/releases">releases</a>.</li>
<li>Many of the libraries we use (including React) already have <a href="https://github.com/borisyankov/DefinitelyTyped">type definitions</a> available.</li>
<li>TypeScript can be adopted incrementally. That meant we can start writing new code with TypeScript and incrementally convert over time.</li>
</ul>
<p>There were some potential drawbacks of adopting TypeScript, though:</p>
<ul>
<li>It’s a large time investment. Our frontend code is non-trivial in scope, so it would take significant effort to convert it. That complexity meant additional build time.</li>
<li>We would need to educate the frontend team in TypeScript and support them as they learned.</li>
<li>TypeScript and JavaScript would need to coexist in the code base for a significant period of time.</li>
</ul>
<h3 id="maturing-the-prototype"><a href="#maturing-the-prototype" aria-label="maturing the prototype permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Maturing the prototype</h3>
<p>Shortly after Hackweek, excitement was high and a more formal proposal was brought to our Frontend Technical Steering Committee (TSC). This group meets every two weeks to guide our frontend architecture. While TypeScript wasn’t among the “winning” projects for Hackweek, we were confident that it would be a worthwhile investment that would ultimately pay off in the long run.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3ecz3pdrHVp3MHd1X3aRST/849551707dc244095e3066dc8345e63b/91289EEA-B731-45AA-8BE6-0997F0CA67F5_1_201_a.jpeg" alt="Typescript Pull Request" title="Typescript Pull Request"/></p><figcaption><p>Sentry’s first Typescript Pull Request: <a href="https://github.com/getsentry/sentry/pull/13786">https://github.com/getsentry/sentry/pull/13786</a></p></figcaption></figure><div>
<h3 id="overall-strategy"><a href="#overall-strategy" aria-label="overall strategy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Overall strategy</h3>
<p>We broke our high-level strategy into several phases:</p>
<ol>
<li><strong>Educate</strong>. In this phase we needed to let people know that TypeScript was coming, and provide the right learning resources to help folks onboard.</li>
<li><strong>New code in TypeScript</strong>. In this phase we needed to have all new development being done in TypeScript. If we continued to create new JavaScript, we would never finish the conversion phase.</li>
<li><strong>Conversion</strong>. In this phase, all new work would be done in TypeScript, giving us a finite number of files to convert. Then it is “just work”™️.</li>
</ol>
<p>Our most controversial decision was agreeing to not undergo any other major refactors until the code base was converted 100% to TypeScript. This meant we would not take on other quality-of-life improvements — things like upgrading our state-management library or introducing React hooks — until the TypeScript conversion was complete.</p>
<h3 id="educating-the-team"><a href="#educating-the-team" aria-label="educating the team permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Educating the team</h3>
<p>Early on, we recognized that the broader development team at Sentry would need additional resources and materials to learn TypeScript. To help folks who were new to TypeScript, we shared a list of introductory articles and resources for configuring various editors.</p>
<p>Additionally, members of the TSC took the time to review code and help educate those folks eager to learn TypeScript. Having this support system in place helped create more TypeScript “believers” who would, over time, write new code in TypeScript.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/4EwzgBASmgwyFlpuMOXYma/0b581c31441f29d3ab288b95703f38b7/Untitled__3_.png" alt="Example of a TypeScript code review." title="Example of a TypeScript code review."/></p><figcaption><p>Example of a TypeScript code review.</p></figcaption></figure><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/7hcpu6wvYr2lUVWfHXx640/c8d0fcd955055ac390c8065e0aafba0d/Screenshot_2021-04-01_at_10.33.07.png" alt="Slack shoutout for TypeScript conversion." title="Slack shoutout for TypeScript conversion."/></p><figcaption><p>Slack shoutout for TypeScript conversion.</p></figcaption></figure><div>
<h3 id="taking-root-in-green-fields"><a href="#taking-root-in-green-fields" aria-label="taking root in green fields permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Taking root in green fields</h3>
<p>While we were educating the broader team, folks who were keen on TypeScript not only began building out their new feature work in TypeScript, but also found opportunities to convert files which overlapped with new features. This approach let us build up our type definitions and gain more experience writing Typescript in lower-risk parts of the product that were not exposed to customers.</p>
<p>As the broader team gained more experience and found value in what TypeScript provides, they naturally stopped creating more JavaScript. While we never used tooling to stop people from creating new JavaScript, our education efforts and social agreements helped prevent new JavaScript from being created.</p>
<h3 id="work-out-from-the-core--and-in-from-the-leaves"><a href="#work-out-from-the-core--and-in-from-the-leaves" aria-label="work out from the core  and in from the leaves permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Work out from the core — and in from the leaves</h3>
<p>Once TypeScript had a firm foothold, we needed a strategy to work through the 1,100+ files that needed conversion. Here, we audited our imports, ordering them by how frequently each module was imported. We used this list to prioritize which modules were converted first. By converting frequently used modules, we would be able compound our gains as we converted files.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1QW71rhpxcsqVPrTAmnYVD/58c9800b023c4d3a79e6fdcce5d2921e/Screenshot_2021-04-01_at_10.53.12.png" alt="" title="ts-4"/></p><figcaption><p>The list we used to prioritize and assign conversion work based on import frequency.</p></figcaption></figure><div>
<p>This approach worked well in the beginning, as some modules have dramatically more imports than others. But because most of our modules have fewer than 10 imports, we quickly plateaued. Our next approach was starting from “leaf node” modules that are imported in one place. Converting these files enabled us to accumulate progress more quickly. </p>
<h3 id="all-we-have-to-do-now-is-convert-1100-files"><a href="#all-we-have-to-do-now-is-convert-1100-files" aria-label="all we have to do now is convert 1100 files permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All we have to do now is convert 1,100+ files…</h3>
<p>Like many software projects, our initial rollout plans were overly ambitious. We started off by retroactively calculating a timeline where we completed within 2019. With approximately 15 weeks before the end of the year, that meant would need to convert approximately 74 files per week. This assumed that we would not accumulate any additional JavaScript files (we did), and that we could sustain that effort (we didn’t). After eight weeks, we checked in on our progress.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1cdGkTs3c2cJ7Vtpsp9ZyN/9c1dd4fb63acd29c0083fd6aeecb4869/typescript_chart_annotated.png" alt="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019." title="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019."/></p><figcaption><p>Despite promising progress during our first 8 weeks, we knew we weren’t going to finish in 2019.</p></figcaption></figure><div>
<p>It was obvious that we were not going to complete in 2019. Given projections from the current effort a more likely completion date would be mid-2020. </p>
<p>During the fall and winter of 2019, progress was slow. People were focusing on meeting product goals, and didn’t have as much time to devote to TypeScript conversion. In February of 2020 we reached equilibrium. We were no longer making new JavaScript and our backlog of conversion work became fixed.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1ooSqS6jFkCZvspS1oJYYP/bb79ec6a1249ac442561e48d168c74da/Screen_Shot_2021-03-29_at_9.38.22_PM.png" alt="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity." title="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity."/></p><figcaption><p>Our conversion progress over time. Note there are several lulls as well as periods of renewed activity.</p></figcaption></figure><div>
<h3 id="challenges-encountered"><a href="#challenges-encountered" aria-label="challenges encountered permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Challenges encountered</h3>
<p>Although the introduction of TypeScript was definitely a game changer, we also faced a few challenges during the conversion process. Most of these were due to interoperability issues between TypeScript and React: </p>
<ol>
<li>
<p><strong>Default Props</strong></p>
<p>When using <code>defaultProps</code> on classes, TypeScript is able to correctly infer that the props are not required when using the component, but when using Higher Order Components, the types for <code>defaultProps</code> generally don’t work, and the previously optional properties would become required. </p>
<p>An example of how <code>defaultProps</code> interacts poorly with Higher Order Components is:</p>
<div data-language="jsx"><pre><code><span>const</span> defaultProps <span>=</span> <span>{</span>
  statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
  canSelect<span>:</span> <span>true</span><span>,</span>
  withChart<span>:</span> <span>true</span><span>,</span>
  useFilteredStats<span>:</span> <span>false</span><span>,</span>
<span>}</span><span>;</span>

type Props <span>=</span> <span>{</span>
  id<span>:</span> string<span>;</span>
  selection<span>:</span> GlobalSelection<span>;</span>
  organization<span>:</span> Organization<span>;</span>
  displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
  query<span>?</span><span>:</span> string<span>;</span>
  hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
  memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
  onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
  showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
  index<span>?</span><span>:</span> number<span>;</span>
<span>}</span> <span>&amp;</span> <span>typeof</span> defaultProps

type State <span>=</span> <span>{</span><span>...</span><span>}</span><span>;</span>

<span>class</span> <span>StreamGroup</span> <span>extends</span> <span>React<span>.</span>Component</span><span>&lt;</span>Props<span>,</span> State<span>&gt;</span> <span>{</span>
  <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
  <span>...</span>
<span>}</span>

<span>export</span> <span>default</span> <span>withGlobalSelection</span><span>(</span><span>withOrganization</span><span>(</span>StreamGroup<span>)</span><span>)</span><span>;</span></code></pre></div>
</li>
</ol>
<p>Normally, TypeScript would be able to use the <code>defaultProps</code> attribute of our class component to infer that those properties are not required. However, when wrapped in a Higher Order Component, TypeScript displays the following errors:</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3mZ5ElMCrj8VLFbtKrm4m6/1b658ed4cc7d87b3c45c6207e8b70938/Screenshot_2021-04-12_at_08.38.25.png" alt="Types" title="Types"/></p></figure><div>
<p>Here our solution was to use <code>Partial</code> on the <code>defaultProps</code> and rely on React to fill in the default values.</p>
<div data-language="jsx"><pre><code>    <span>const</span> defaultProps <span>=</span> <span>{</span>
      statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
      canSelect<span>:</span> <span>true</span><span>,</span>
      withChart<span>:</span> <span>true</span><span>,</span>
      useFilteredStats<span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>

    type Props <span>=</span> <span>{</span>
      id<span>:</span> string<span>;</span>
      selection<span>:</span> GlobalSelection<span>;</span>
      organization<span>:</span> Organization<span>;</span>
      displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
      query<span>?</span><span>:</span> string<span>;</span>
      hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
      memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
      onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
      showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
      index<span>?</span><span>:</span> number<span>;</span>
    <span>}</span> <span>&amp;</span> Partial<span><span><span>&lt;</span>typeof</span> <span>defaultProps</span><span>&gt;</span></span><span>

    type State = </span><span>{</span><span>...</span><span>}</span><span>;

    class StreamGroup extends React.Component&lt;Props, State&gt; </span><span>{</span>
      <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
      <span>...</span>
    <span>}</span><span>

    export default withGlobalSelection(withOrganization(StreamGroup));</span></code></pre></div>
<p>You can find a more complete implementation of <a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/components/stream/group.tsx">this approach here</a>.</p>
<ol start="2">
<li>
<p><strong>Libraries adding incorrect types</strong></p>
<p>One downside to relying on the type definitions in DefinitelyTyped is that occasionally the library types are not written by the maintainers. Instead, community users contribute types, and because of that some types are missing or incorrectly defined. We encountered this with the versions of <a href="https://echarts.apache.org/en/index.html">ECharts</a> and <a href="https://github.com/reflux/refluxjs">Reflux</a> we were using. Our solution here was to add additional type definitions in our code.</p>
</li>
<li>
<p><strong>React.forwardRef is not compatible with generics</strong></p>
<p>Using generic types with <code>React.forwardRef</code> is not directly possible, as it requires concrete types. In more detail, the <code>forwardRef</code> function has only one parameter named <code>render</code>. The type of this parameter is <code>ForwardRefRenderFunction</code>, which is not a generic function declaration, so higher order function type inference cannot propagate free type parameters on to the calling function <code>React.forwardRef</code>.  We had to make <a href="https://github.com/getsentry/sentry/pull/23766/files">compromises and use “any” when this situation arose</a>.</p>
</li>
</ol>
<h3 id="sustaining-motivation-and-energy"><a href="#sustaining-motivation-and-energy" aria-label="sustaining motivation and energy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sustaining motivation and energy</h3>
<p>Toward the end of the conversion, many contributors were feeling the burning toil this project was having.</p>
<p>In the summer of 2020 – a full year after this project began – we crossed the 70% threshold. This revitalized folks, as we knew the end was near. We were able to sustain that energy and focus though the summer and fall by using part of our TSC meeting as a check in and collecting “conversion pledges” for the next meeting. This introduced a light-hearted social game that helped us stay focused.</p>
<p>In addition, our fantastic tools team introduced a slackbot that would allow us to track progress on demand. Seeing the number go up every day was a big motivator in the final stages, so much so it’s something we’ll likely to use again. You can find the early versions of that bot <a href="https://github.com/getsentry/TypeScript-slack-bot">here</a>.</p>
<h3 id="the-end-finally"><a href="#the-end-finally" aria-label="the end finally permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The end, finally</h3>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/SBDOSDuCKafM1jklm0kIO/5f1d32747e2f39e1811a1f86dcfb35d1/Screenshot_2021-04-01_at_10.52.18.png" alt="TypeScript Conversion Finally Completed" title="TypeScript Conversion Finally Completed"/></p></figure><div>
<p>After 18 months of migrating our frontend code base to TypeScript, the day everyone at Sentry had been working toward had finally arrived. When we started on our TypeScript journey, we had 1,100+ files to convert. Now, we have over 1,915 Typescript files. It’s worth mentioning that at no time was a GitHub check added to block new JavaScript files. After developers saw the benefits that TypeScript would bring, writing new code in TypeScript was an organic choice. </p>
<p>With TypeScript, we now have an extra layer of protection in our code, which means we’re able to ship with greater confidence, higher productivity, and most importantly, fewer bugs. Some of our newer frontend developers have never seen a production incident caused by a frontend change.</p>
<h3 id="looking-back"><a href="#looking-back" aria-label="looking back permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Looking back</h3>
<p>Like everything in life, we also learned a few things along this journey.</p>
<ol>
<li>
<p><strong>Incremental conversion is key</strong></p>
<p>Our strategy to gradually migrate our files to TypeScript worked out well. We were able to balance converting our code to TypeScript, without delaying important product work. It’s important to highlight that from the beginning, we were not in a hurry to achieve our goal, but instead we wanted to proceed carefully and do a great job.</p>
</li>
<li>
<p><strong>Stay current with TypeScript releases</strong></p>
<p>During our conversion process, several new releases of TypeScript came out. Each one helped us refine our types further with new features like optional chaining, nullish coalesce, named tuples, and more. While upgrading did take additional effort, the benefits were well worth it. It’s why we recommend staying as current as you can with TypeScript releases.</p>
</li>
<li>
<p><strong>Gradually build complex types</strong></p>
<p>At the beginning of the migration, it was impossible to know the correct type of everything. After all, Sentry possesses a large code base, and not everyone is familiar with all parts of the application. Which meant we had to build our more complex types incrementally. As we were converting files, we became more familiar with their types and as we converted related files, we were able to better identify whether the types we had previously defined were updated with the new insights.</p>
</li>
<li>
<p><strong>Use TODO Comments to note future work</strong></p>
<p>In Sentry, we generally use TODO comments in the code to help us track something we need to review later. This approach proved to be very useful during our migration to TypeScript. When we encountered an unclear type, or problematic component we would leave a <code>TODO(ts)</code> for later review. We are now incrementally reviewing the TODO list and further refining and improving our types.</p>
<div data-language="jsx"><pre><code><span>import</span> <span>{</span>Frame<span>}</span> <span>from</span> <span>&#39;app/types&#39;</span><span>;</span>

<span>// TODO(ts): define correct stack trace type</span>
<span>function</span> <span>getRelevantFrame</span><span>(</span><span>stacktrace<span>:</span> any</span><span>)</span><span>:</span> Frame <span>{</span>
  <span>if</span> <span>(</span><span>!</span>stacktrace<span>.</span>hasSystemFrames<span>)</span> <span>{</span>
    <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
  <span>}</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>&gt;=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>const</span> frame <span>=</span> stacktrace<span>.</span>frames<span>[</span>i<span>]</span><span>;</span>
    <span>if</span> <span>(</span>frame<span>.</span>inApp<span>)</span> <span>{</span>
      <span>return</span> frame<span>;</span>
    <span>}</span>
  <span>}</span>
  <span>// this should not happen</span>
  <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
<span>}</span>

<span>export</span> <span>default</span> getRelevantFrame<span>;</span></code></pre></div>
</li>
</ol>
<h3 id="moving-forward"><a href="#moving-forward" aria-label="moving forward permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Moving forward</h3>
<p>Migrating to TypeScript was just the beginning. The frontend team at Sentry will continue to gradually improve types, making sure they are correct as possible, including the removal of all React PropTypes.</p>
<p>We’re also seriously considering introducing end-to-end type safety, so that a backend engineer can make changes in the API without unknowing breaking clients, and frontend engineers can be confident in the data that will be coming back from the server.</p>
<p>This important achievement would not have been possible without the patience, persistence, attention to detail, passion and hard work of everyone involved. A big thank you to all the Sentaurs who contributed to this enormous effort.</p>
<hr/>
<p>Eager for a challenging project like this one? Then join us at Sentry. <a href="https://sentry.io/careers/">We are hiring!</a></p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6kbtdGkqHZOk46Eb1yodEz/b0b6ee467e0ada16857888ee14db32ff/TypescriptMigration-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Feature Flags in Sentry</title>
      <link>https://blog.sentry.io/2021/04/07/using-feature-flags-in-sentry/</link>
      <description>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely allow beta access to new features for some of our “Early Adopter” customers. </p>
<p>Because you can set multiple combinations of feature flags, every user is likely to have a different experience. While that’s great for finding answers and iterating on product, it can be increasingly difficult to determine where certain <a href="https://sentry.io/for/full-stack/">errors</a> and <a href="https://sentry.io/for/performance/">performance</a> issues are coming from. Are my users having trouble because they are part of experiment A or experiment B — or some combination of the two?</p>
<h3 id="tagging-feature-flags"><a href="#tagging-feature-flags" aria-label="tagging feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tagging feature flags</h3>
<p>Thankfully, Sentry can answer these questions using tags. Tags are key/value string pairs that you can bind to your events and transactions.</p>
<p>You’ll want to set a new tag for each feature flag you want to surface in Sentry. Here is some code in one of my apps that passes in the <code>show_widget</code> feature flag for a given user:</p>
<div data-language="jsx"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
	dsn<span>:</span> <span>&#39;__DSN__&#39;</span><span>,</span>
	<span>// ...</span>
<span>}</span><span>)</span><span>;</span>

Sentry<span>.</span><span>setTag</span><span>(</span><span>&#34;show_widget&#34;</span><span>,</span> user<span>.</span>showWidget<span>)</span><span>;</span></code></pre></div>
<p>After you start passing in feature flag data, you’ll begin seeing your new tags in Sentry. In the example below, you can see that this issue primarily impacts those users who are seeing our new widget feature.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326&amp;fm=webp 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652&amp;fm=webp 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304&amp;fm=webp 1304w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304 1304w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="using-discover--tags"><a href="#using-discover--tags" aria-label="using discover  tags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Using Discover + Tags</h3>
<p>Once you have your tags set up, you can use <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to see which combination of feature flags are causing errors or performance issues.
In Sentry, navigate to Discover and click Build A New Query. Then, add columns for each of the feature flags/experiments in question.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181&amp;fm=webp 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363&amp;fm=webp 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725&amp;fm=webp 725w" sizes="(max-width: 725px) 100vw, 725px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725 725w" sizes="(max-width: 725px) 100vw, 725px"/>
          <img alt="flg2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once you’ve done that, you’ll be able to see which flags are causing problems for your users.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380&amp;fm=webp 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760&amp;fm=webp 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519&amp;fm=webp 1519w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519 1519w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It looks as if errors were primarily impacting the intersection of users who have both the show widget feature enabled and variation 2 of our new checkout experiment. From here, we’re able to use Discover to drill down exactly what issue is causing problems. Then we can decide which feature flag needs to be disabled until we have had the chance to fix the problem. Crisis averted.</p>
<p>Feature flags allow you to control access for a variety of release scenarios: new features for early adopters, organizations with special plans, or even incremental releases. By safely activating — or deactivating — certain features, flags can close your feedback loop, while allowing you to address an issue without the pressure and stress of a live incident.</p>
<p>Want to learn more about what we’ve done with feature flags? Here’s our latest <a href="https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant">Dogfooding Chronicles</a> post. If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5WLPKcqEgQllLkIv6HhpSF/852cf1499b70189b037792067fc9705f/feature-flags-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 07 Apr 2021 10:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Feature Flags in Sentry</title>
      <link>https://blog.sentry.io/2021/04/07/using-feature-flags-in-sentry/</link>
      <description>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely allow beta access to new features for some of our “Early Adopter” customers. </p>
<p>Because you can set multiple combinations of feature flags, every user is likely to have a different experience. While that’s great for finding answers and iterating on product, it can be increasingly difficult to determine where certain <a href="https://sentry.io/for/full-stack/">errors</a> and <a href="https://sentry.io/for/performance/">performance</a> issues are coming from. Are my users having trouble because they are part of experiment A or experiment B — or some combination of the two?</p>
<h3 id="tagging-feature-flags"><a href="#tagging-feature-flags" aria-label="tagging feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tagging feature flags</h3>
<p>Thankfully, Sentry can answer these questions using tags. Tags are key/value string pairs that you can bind to your events and transactions.</p>
<p>You’ll want to set a new tag for each feature flag you want to surface in Sentry. Here is some code in one of my apps that passes in the <code>show_widget</code> feature flag for a given user:</p>
<div data-language="jsx"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
	dsn<span>:</span> <span>&#39;__DSN__&#39;</span><span>,</span>
	<span>// ...</span>
<span>}</span><span>)</span><span>;</span>

Sentry<span>.</span><span>setTag</span><span>(</span><span>&#34;show_widget&#34;</span><span>,</span> user<span>.</span>showWidget<span>)</span><span>;</span></code></pre></div>
<p>After you start passing in feature flag data, you’ll begin seeing your new tags in Sentry. In the example below, you can see that this issue primarily impacts those users who are seeing our new widget feature.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326&amp;fm=webp 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652&amp;fm=webp 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304&amp;fm=webp 1304w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304 1304w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="using-discover--tags"><a href="#using-discover--tags" aria-label="using discover  tags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Using Discover + Tags</h3>
<p>Once you have your tags set up, you can use <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to see which combination of feature flags are causing errors or performance issues.
In Sentry, navigate to Discover and click Build A New Query. Then, add columns for each of the feature flags/experiments in question.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181&amp;fm=webp 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363&amp;fm=webp 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725&amp;fm=webp 725w" sizes="(max-width: 725px) 100vw, 725px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725 725w" sizes="(max-width: 725px) 100vw, 725px"/>
          <img alt="flg2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once you’ve done that, you’ll be able to see which flags are causing problems for your users.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380&amp;fm=webp 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760&amp;fm=webp 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519&amp;fm=webp 1519w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519 1519w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It looks as if errors were primarily impacting the intersection of users who have both the show widget feature enabled and variation 2 of our new checkout experiment. From here, we’re able to use Discover to drill down exactly what issue is causing problems. Then we can decide which feature flag needs to be disabled until we have had the chance to fix the problem. Crisis averted.</p>
<p>Feature flags allow you to control access for a variety of release scenarios: new features for early adopters, organizations with special plans, or even incremental releases. By safely activating — or deactivating — certain features, flags can close your feedback loop, while allowing you to address an issue without the pressure and stress of a live incident.</p>
<p>Want to learn more about what we’ve done with feature flags? Here’s our latest <a href="https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant">Dogfooding Chronicles</a> post. If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5WLPKcqEgQllLkIv6HhpSF/852cf1499b70189b037792067fc9705f/feature-flags-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 07 Apr 2021 10:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Feature Flags in Sentry</title>
      <link>https://blog.sentry.io/2021/04/07/using-feature-flags-in-sentry/</link>
      <description>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely allow beta access to new features for some of our “Early Adopter” customers. </p>
<p>Because you can set multiple combinations of feature flags, every user is likely to have a different experience. While that’s great for finding answers and iterating on product, it can be increasingly difficult to determine where certain <a href="https://sentry.io/for/full-stack/">errors</a> and <a href="https://sentry.io/for/performance/">performance</a> issues are coming from. Are my users having trouble because they are part of experiment A or experiment B — or some combination of the two?</p>
<h3 id="tagging-feature-flags"><a href="#tagging-feature-flags" aria-label="tagging feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tagging feature flags</h3>
<p>Thankfully, Sentry can answer these questions using tags. Tags are key/value string pairs that you can bind to your events and transactions.</p>
<p>You’ll want to set a new tag for each feature flag you want to surface in Sentry. Here is some code in one of my apps that passes in the <code>show_widget</code> feature flag for a given user:</p>
<div data-language="jsx"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
	dsn<span>:</span> <span>&#39;__DSN__&#39;</span><span>,</span>
	<span>// ...</span>
<span>}</span><span>)</span><span>;</span>

Sentry<span>.</span><span>setTag</span><span>(</span><span>&#34;show_widget&#34;</span><span>,</span> user<span>.</span>showWidget<span>)</span><span>;</span></code></pre></div>
<p>After you start passing in feature flag data, you’ll begin seeing your new tags in Sentry. In the example below, you can see that this issue primarily impacts those users who are seeing our new widget feature.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326&amp;fm=webp 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652&amp;fm=webp 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304&amp;fm=webp 1304w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304 1304w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="using-discover--tags"><a href="#using-discover--tags" aria-label="using discover  tags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Using Discover + Tags</h3>
<p>Once you have your tags set up, you can use <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to see which combination of feature flags are causing errors or performance issues.
In Sentry, navigate to Discover and click Build A New Query. Then, add columns for each of the feature flags/experiments in question.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181&amp;fm=webp 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363&amp;fm=webp 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725&amp;fm=webp 725w" sizes="(max-width: 725px) 100vw, 725px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725 725w" sizes="(max-width: 725px) 100vw, 725px"/>
          <img alt="flg2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once you’ve done that, you’ll be able to see which flags are causing problems for your users.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380&amp;fm=webp 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760&amp;fm=webp 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519&amp;fm=webp 1519w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519 1519w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It looks as if errors were primarily impacting the intersection of users who have both the show widget feature enabled and variation 2 of our new checkout experiment. From here, we’re able to use Discover to drill down exactly what issue is causing problems. Then we can decide which feature flag needs to be disabled until we have had the chance to fix the problem. Crisis averted.</p>
<p>Feature flags allow you to control access for a variety of release scenarios: new features for early adopters, organizations with special plans, or even incremental releases. By safely activating — or deactivating — certain features, flags can close your feedback loop, while allowing you to address an issue without the pressure and stress of a live incident.</p>
<p>Want to learn more about what we’ve done with feature flags? Here’s our latest <a href="https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant">Dogfooding Chronicles</a> post. If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5WLPKcqEgQllLkIv6HhpSF/852cf1499b70189b037792067fc9705f/feature-flags-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 07 Apr 2021 10:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Sanity Listicle for Mobile Developers</title>
      <link>https://blog.sentry.io/2021/03/30/a-sanity-listicle-for-mobile-developers/</link>
      <description>Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what&#39;s coming next</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Just like that Mobile March Madness 2021 is almost in our rearview. Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what’s coming next. That’s right. We’re constantly improving our mobile monitoring solution independent of our alliteration-based marketing campaigns.</p>
<h2 id="make-sure-your-application-works-as-intended"><a href="#make-sure-your-application-works-as-intended" aria-label="make sure your application works as intended permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Make sure your application works as intended</h2>
<p>Here, we turn to <strong>error and crash reporting</strong>. And if you are developing on the <a href="https://blog.sentry.io/2021/03/03/with-flutter-and-sentry-you-can-put-all-your-eggs-in-one-repo/">Flutter platform</a>, we just added support so your team can monitor Dart/Flutter and Native SDKs. You can follow a user’s trail using breadcrumbs, UI events, and HTTP requests to see if they are engaged. Any errors you find are automagically symbolicated. If a crash occurs when a user’s device goes offline or a fatal crash occurs, Sentry also provides <a href="https://docs.sentry.io/platforms/flutter/?__hstc=76629258.5d9b8fe311f953e074827cc57a65f20c.1612992579902.1615308531962.1615842060846.16&amp;__hssc=76629258.1.1615842060846&amp;__hsfp=3446579172">offline caching</a> so that you don’t miss any critical error reports.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700&amp;fm=webp 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400&amp;fm=webp 1400w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400 1400w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter-breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>In cases where you need more information from your customer, we’ve added <a href="https://blog.sentry.io/2021/02/03/how-to-use-sentry-attachments-with-mobile-applications/">attachment support</a> for Android to help provide critical context. You can upload crash reports, giving you the extra clues you need to investigate and zap a bug. This feature is available for <a href="https://docs.sentry.io/platforms/apple/enriching-events/attachments/">iOS</a>, <a href="https://docs.sentry.io/platforms/android/enriching-events/attachments/">Android</a>, <a href="https://docs.sentry.io/platforms/java/enriching-events/attachments/">Java</a>, <a href="https://docs.sentry.io/platforms/javascript/enriching-events/attachments/">JavaScript</a>, <a href="https://docs.sentry.io/platforms/native/enriching-events/attachments/">Native</a>, <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/enriching-events/attachments/">Xamarin</a>, and <a href="https://docs.sentry.io/platforms/dotnet/enriching-events/attachments/">.NET</a>. But errors only tell half the story…</p>
<h2 id="see-slow-faster-with-performance-monitoring"><a href="#see-slow-faster-with-performance-monitoring" aria-label="see slow faster with performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See slow faster with Performance Monitoring</h2>
<p>Because applications are so complex, it’s sometimes difficult to determine what is causing an application to run slow. Unfortunately, untreated performance issues can lead to more serious errors. With Performance Monitoring, you can connect your user’s frustration to a poor-performance back-end call. If it takes 2 minutes to process a transaction, you’ve probably lost your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305&amp;fm=webp 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610&amp;fm=webp 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220&amp;fm=webp 1220w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220 1220w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction summary" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We recently added Performance Monitoring support for <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/">Xamarin</a>, <a href="https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/">Android</a>, and <a href="https://blog.sentry.io/2021/03/11/performance-monitoring-support-for-react-native/">React-Native</a>. Using <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom</a> and auto-<a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">instrumentation</a>, we can trace transactions and render them for better visibility. Also, in a few weeks, you’ll be able to capture HTTP requests to create spans for active transactions as well as record breadcrumbs.</p>
<h2 id="track-the-health-of-every-release"><a href="#track-the-health-of-every-release" aria-label="track the health of every release permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Track the Health of Every Release</h2>
<p>Once your application has made it to the marketplace, it’s important to track new releases to gauge version adoption of the latest features and the % of crash-free sessions. With <a href="https://docs.sentry.io/product/releases/health/">Release Health</a>, you can use all the data you’ve captured to gain insights about your releases to improve your application over time. We recently added support for the <a href="https://docs.sentry.io/platforms/flutter/">Flutter SDK</a>, and as standard across all our mobile languages, Release Health comes enabled by default.</p>
<h2 id="learn-how-to-improve"><a href="#learn-how-to-improve" aria-label="learn how to improve permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learn how to Improve</h2>
<p>A sign of a great team is a continuous push for improvement. With all the data already captured by Sentry, we now make it easy for you to <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">analyze trends</a>. An excellent way to find such opportunities is to query all the fatal crashes caused by unhandled errors. That way, you can improve the experience for your users. More importantly, you can share the results with other teams or turn your query into an alert to keep tabs and ensure that a handled problem doesn’t rear its ugly head again. <a href="https://www.youtube.com/watch?v=Bw8DIaHScZ4">Check out this video</a> to learn more.</p>
<h2 id="watch-how-wix-builds-great-mobile-experiences"><a href="#watch-how-wix-builds-great-mobile-experiences" aria-label="watch how wix builds great mobile experiences permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Watch how Wix Builds Great Mobile Experiences</h2>
<p>Wix joined our monthly workshop to share how they manage releases on React Native apps while scaling mobile monitoring. <a href="https://www.youtube.com/watch?v=OYUNLtRCGxo">Check out this recording</a> to learn more.</p>
<p>While getting mobile apps right takes a lot of work, having the right tools is key to making sure your users are engaged. If you’re using Sentry, make sure you <a href="https://docs.sentry.io/platforms/react-native/">update your SDKs</a> to take advantage of these latest features. And if you have a friend who could use this, <a href="https://sentry.io/referrals/mobile/">refer them</a> and you both get 3 months of free Sentry. Because friends don’t let friends ship without Sentry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/FdF5nmvSvD0iyblfhnywP/bab558ea322c9ca897125d684dd4c60d/mobile-meta.jpeg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 30 Mar 2021 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Sanity Listicle for Mobile Developers</title>
      <link>https://blog.sentry.io/2021/03/30/a-sanity-listicle-for-mobile-developers/</link>
      <description>Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what&#39;s coming next</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Just like that Mobile March Madness 2021 is almost in our rearview. Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what’s coming next. That’s right. We’re constantly improving our mobile monitoring solution independent of our alliteration-based marketing campaigns.</p>
<h2 id="make-sure-your-application-works-as-intended"><a href="#make-sure-your-application-works-as-intended" aria-label="make sure your application works as intended permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Make sure your application works as intended</h2>
<p>Here, we turn to <strong>error and crash reporting</strong>. And if you are developing on the <a href="https://blog.sentry.io/2021/03/03/with-flutter-and-sentry-you-can-put-all-your-eggs-in-one-repo/">Flutter platform</a>, we just added support so your team can monitor Dart/Flutter and Native SDKs. You can follow a user’s trail using breadcrumbs, UI events, and HTTP requests to see if they are engaged. Any errors you find are automagically symbolicated. If a crash occurs when a user’s device goes offline or a fatal crash occurs, Sentry also provides <a href="https://docs.sentry.io/platforms/flutter/?__hstc=76629258.5d9b8fe311f953e074827cc57a65f20c.1612992579902.1615308531962.1615842060846.16&amp;__hssc=76629258.1.1615842060846&amp;__hsfp=3446579172">offline caching</a> so that you don’t miss any critical error reports.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700&amp;fm=webp 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400&amp;fm=webp 1400w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400 1400w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter-breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>In cases where you need more information from your customer, we’ve added <a href="https://blog.sentry.io/2021/02/03/how-to-use-sentry-attachments-with-mobile-applications/">attachment support</a> for Android to help provide critical context. You can upload crash reports, giving you the extra clues you need to investigate and zap a bug. This feature is available for <a href="https://docs.sentry.io/platforms/apple/enriching-events/attachments/">iOS</a>, <a href="https://docs.sentry.io/platforms/android/enriching-events/attachments/">Android</a>, <a href="https://docs.sentry.io/platforms/java/enriching-events/attachments/">Java</a>, <a href="https://docs.sentry.io/platforms/javascript/enriching-events/attachments/">JavaScript</a>, <a href="https://docs.sentry.io/platforms/native/enriching-events/attachments/">Native</a>, <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/enriching-events/attachments/">Xamarin</a>, and <a href="https://docs.sentry.io/platforms/dotnet/enriching-events/attachments/">.NET</a>. But errors only tell half the story…</p>
<h2 id="see-slow-faster-with-performance-monitoring"><a href="#see-slow-faster-with-performance-monitoring" aria-label="see slow faster with performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See slow faster with Performance Monitoring</h2>
<p>Because applications are so complex, it’s sometimes difficult to determine what is causing an application to run slow. Unfortunately, untreated performance issues can lead to more serious errors. With Performance Monitoring, you can connect your user’s frustration to a poor-performance back-end call. If it takes 2 minutes to process a transaction, you’ve probably lost your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305&amp;fm=webp 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610&amp;fm=webp 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220&amp;fm=webp 1220w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220 1220w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction summary" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We recently added Performance Monitoring support for <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/">Xamarin</a>, <a href="https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/">Android</a>, and <a href="https://blog.sentry.io/2021/03/11/performance-monitoring-support-for-react-native/">React-Native</a>. Using <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom</a> and auto-<a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">instrumentation</a>, we can trace transactions and render them for better visibility. Also, in a few weeks, you’ll be able to capture HTTP requests to create spans for active transactions as well as record breadcrumbs.</p>
<h2 id="track-the-health-of-every-release"><a href="#track-the-health-of-every-release" aria-label="track the health of every release permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Track the Health of Every Release</h2>
<p>Once your application has made it to the marketplace, it’s important to track new releases to gauge version adoption of the latest features and the % of crash-free sessions. With <a href="https://docs.sentry.io/product/releases/health/">Release Health</a>, you can use all the data you’ve captured to gain insights about your releases to improve your application over time. We recently added support for the <a href="https://docs.sentry.io/platforms/flutter/">Flutter SDK</a>, and as standard across all our mobile languages, Release Health comes enabled by default.</p>
<h2 id="learn-how-to-improve"><a href="#learn-how-to-improve" aria-label="learn how to improve permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learn how to Improve</h2>
<p>A sign of a great team is a continuous push for improvement. With all the data already captured by Sentry, we now make it easy for you to <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">analyze trends</a>. An excellent way to find such opportunities is to query all the fatal crashes caused by unhandled errors. That way, you can improve the experience for your users. More importantly, you can share the results with other teams or turn your query into an alert to keep tabs and ensure that a handled problem doesn’t rear its ugly head again. <a href="https://www.youtube.com/watch?v=Bw8DIaHScZ4">Check out this video</a> to learn more.</p>
<h2 id="watch-how-wix-builds-great-mobile-experiences"><a href="#watch-how-wix-builds-great-mobile-experiences" aria-label="watch how wix builds great mobile experiences permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Watch how Wix Builds Great Mobile Experiences</h2>
<p>Wix joined our monthly workshop to share how they manage releases on React Native apps while scaling mobile monitoring. <a href="https://www.youtube.com/watch?v=OYUNLtRCGxo">Check out this recording</a> to learn more.</p>
<p>While getting mobile apps right takes a lot of work, having the right tools is key to making sure your users are engaged. If you’re using Sentry, make sure you <a href="https://docs.sentry.io/platforms/react-native/">update your SDKs</a> to take advantage of these latest features. And if you have a friend who could use this, <a href="https://sentry.io/referrals/mobile/">refer them</a> and you both get 3 months of free Sentry. Because friends don’t let friends ship without Sentry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/FdF5nmvSvD0iyblfhnywP/bab558ea322c9ca897125d684dd4c60d/mobile-meta.jpeg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 30 Mar 2021 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Sanity Listicle for Mobile Developers</title>
      <link>https://blog.sentry.io/2021/03/30/a-sanity-listicle-for-mobile-developers/</link>
      <description>Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what&#39;s coming next</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Just like that Mobile March Madness 2021 is almost in our rearview. Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what’s coming next. That’s right. We’re constantly improving our mobile monitoring solution independent of our alliteration-based marketing campaigns.</p>
<h2 id="make-sure-your-application-works-as-intended"><a href="#make-sure-your-application-works-as-intended" aria-label="make sure your application works as intended permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Make sure your application works as intended</h2>
<p>Here, we turn to <strong>error and crash reporting</strong>. And if you are developing on the <a href="https://blog.sentry.io/2021/03/03/with-flutter-and-sentry-you-can-put-all-your-eggs-in-one-repo/">Flutter platform</a>, we just added support so your team can monitor Dart/Flutter and Native SDKs. You can follow a user’s trail using breadcrumbs, UI events, and HTTP requests to see if they are engaged. Any errors you find are automagically symbolicated. If a crash occurs when a user’s device goes offline or a fatal crash occurs, Sentry also provides <a href="https://docs.sentry.io/platforms/flutter/?__hstc=76629258.5d9b8fe311f953e074827cc57a65f20c.1612992579902.1615308531962.1615842060846.16&amp;__hssc=76629258.1.1615842060846&amp;__hsfp=3446579172">offline caching</a> so that you don’t miss any critical error reports.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700&amp;fm=webp 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400&amp;fm=webp 1400w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400 1400w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter-breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>In cases where you need more information from your customer, we’ve added <a href="https://blog.sentry.io/2021/02/03/how-to-use-sentry-attachments-with-mobile-applications/">attachment support</a> for Android to help provide critical context. You can upload crash reports, giving you the extra clues you need to investigate and zap a bug. This feature is available for <a href="https://docs.sentry.io/platforms/apple/enriching-events/attachments/">iOS</a>, <a href="https://docs.sentry.io/platforms/android/enriching-events/attachments/">Android</a>, <a href="https://docs.sentry.io/platforms/java/enriching-events/attachments/">Java</a>, <a href="https://docs.sentry.io/platforms/javascript/enriching-events/attachments/">JavaScript</a>, <a href="https://docs.sentry.io/platforms/native/enriching-events/attachments/">Native</a>, <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/enriching-events/attachments/">Xamarin</a>, and <a href="https://docs.sentry.io/platforms/dotnet/enriching-events/attachments/">.NET</a>. But errors only tell half the story…</p>
<h2 id="see-slow-faster-with-performance-monitoring"><a href="#see-slow-faster-with-performance-monitoring" aria-label="see slow faster with performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See slow faster with Performance Monitoring</h2>
<p>Because applications are so complex, it’s sometimes difficult to determine what is causing an application to run slow. Unfortunately, untreated performance issues can lead to more serious errors. With Performance Monitoring, you can connect your user’s frustration to a poor-performance back-end call. If it takes 2 minutes to process a transaction, you’ve probably lost your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305&amp;fm=webp 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610&amp;fm=webp 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220&amp;fm=webp 1220w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220 1220w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction summary" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We recently added Performance Monitoring support for <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/">Xamarin</a>, <a href="https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/">Android</a>, and <a href="https://blog.sentry.io/2021/03/11/performance-monitoring-support-for-react-native/">React-Native</a>. Using <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom</a> and auto-<a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">instrumentation</a>, we can trace transactions and render them for better visibility. Also, in a few weeks, you’ll be able to capture HTTP requests to create spans for active transactions as well as record breadcrumbs.</p>
<h2 id="track-the-health-of-every-release"><a href="#track-the-health-of-every-release" aria-label="track the health of every release permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Track the Health of Every Release</h2>
<p>Once your application has made it to the marketplace, it’s important to track new releases to gauge version adoption of the latest features and the % of crash-free sessions. With <a href="https://docs.sentry.io/product/releases/health/">Release Health</a>, you can use all the data you’ve captured to gain insights about your releases to improve your application over time. We recently added support for the <a href="https://docs.sentry.io/platforms/flutter/">Flutter SDK</a>, and as standard across all our mobile languages, Release Health comes enabled by default.</p>
<h2 id="learn-how-to-improve"><a href="#learn-how-to-improve" aria-label="learn how to improve permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learn how to Improve</h2>
<p>A sign of a great team is a continuous push for improvement. With all the data already captured by Sentry, we now make it easy for you to <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">analyze trends</a>. An excellent way to find such opportunities is to query all the fatal crashes caused by unhandled errors. That way, you can improve the experience for your users. More importantly, you can share the results with other teams or turn your query into an alert to keep tabs and ensure that a handled problem doesn’t rear its ugly head again. <a href="https://www.youtube.com/watch?v=Bw8DIaHScZ4">Check out this video</a> to learn more.</p>
<h2 id="watch-how-wix-builds-great-mobile-experiences"><a href="#watch-how-wix-builds-great-mobile-experiences" aria-label="watch how wix builds great mobile experiences permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Watch how Wix Builds Great Mobile Experiences</h2>
<p>Wix joined our monthly workshop to share how they manage releases on React Native apps while scaling mobile monitoring. <a href="https://www.youtube.com/watch?v=OYUNLtRCGxo">Check out this recording</a> to learn more.</p>
<p>While getting mobile apps right takes a lot of work, having the right tools is key to making sure your users are engaged. If you’re using Sentry, make sure you <a href="https://docs.sentry.io/platforms/react-native/">update your SDKs</a> to take advantage of these latest features. And if you have a friend who could use this, <a href="https://sentry.io/referrals/mobile/">refer them</a> and you both get 3 months of free Sentry. Because friends don’t let friends ship without Sentry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/FdF5nmvSvD0iyblfhnywP/bab558ea322c9ca897125d684dd4c60d/mobile-meta.jpeg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 30 Mar 2021 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Sentry Performance To Make Sentry Performant</title>
      <link>https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant/</link>
      <description>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our feature flag software to an open-source system called <a href="https://github.com/checkr/flagr">Flagr</a>. And while implementing Flagr, we used our new <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">Performance</a> tools to find — and ultimately fix — a serious issue in how we were fetching our flags. </p>
<h2 id="flagging-down-feature-flags"><a href="#flagging-down-feature-flags" aria-label="flagging down feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Flagging Down Feature Flags</h2>
<p>Here’s how we approach feature flags: as the page loads, we make a call to our Flagr instance to fetch all of the flags and cache the results. And while our initial implementation evaluated each flag individually, due to the sheer number of flags we needed to check, it became necessary to switch to a batch evaluation. Fortunately, Flagr has an autogenerated Python library, which made implementing the batch request simple enough:</p>
<div data-language="python"><pre><code><span>def</span> <span>bulk_has</span><span>(</span>features<span>,</span> actor<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.bulk_has&#34;</span><span>)</span><span>:</span>
        <span># generate feature list, check if cached</span>
        <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.evaluation&#34;</span><span>)</span><span>:</span>
	response <span>=</span> flagr<span>.</span>EvaluationApi<span>(</span>self<span>.</span>_client<span>)</span><span>.</span>post_evaluation_batch<span>(</span>
    	    body<span>=</span>flagr<span>.</span>EvaluationBatchRequest<span>(</span>
        	        flag_keys<span>=</span><span>[</span>feature<span>.</span>name <span>for</span> feature <span>in</span> flagr_features<span>]</span><span>,</span>
        	        entities<span>=</span>entities<span>,</span>
        	        enable_debug<span>=</span><span>False</span><span>,</span>
    	    <span>)</span><span>,</span>
    	    <span># connection, and read timeout</span>
    	    _request_timeout<span>=</span><span>(</span><span>0.1</span><span>,</span> <span>0.01</span> <span>*</span> <span>len</span><span>(</span>flagr_features<span>)</span><span>)</span><span>,</span>
	<span>)</span>
        <span># Parse, cache and return results</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320&amp;fm=webp 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639&amp;fm=webp 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278&amp;fm=webp 1278w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278 1278w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="deserialize" title="" src="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we pass each flag we’re evaluating to the <code>flag_keys</code> parameter, so each flag knows which entity to evaluate. And when we try this with all 50 feature flags, we not only see that the whole function took roughly 900ms, but that the <code>feature.flagr.evaluation</code> span occupied the bulk of that time (500ms).  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flone" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>At first glance, it seems as if evaluating all 50 feature flags is the reason for the 500ms delay. But thanks to Performance’s auto-instrumentation, we can see that the HTTP call to the Flagr API only took 70ms. So the next step here was to manually instrument Flagr’s Python client to get a better understanding of what was going on. Our assumption was that the main performance hit was happening when we were trying to deserialize the flags:</p>
<div data-language="python"><pre><code><span>def</span> <span>__deserialize</span><span>(</span>self<span>,</span> data<span>,</span> klass<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span><span>&#34;flagr.deserialize&#34;</span><span>)</span><span>:</span>
        <span>if</span> data <span>is</span> <span>None</span><span>:</span>
            <span>return</span> <span>None</span>

        <span># The rest of the deserialize function</span></code></pre></div>
<p>You can see that the deserialize function is called quite frequently, and is in fact the major cause of the performance issues. We felt that the size of the JSON response may perhaps be related to the amount of time required for deserializing — a hunch that’s supported by how quickly a single flag check takes. The gap after the http span is minuscule — far less than a millisecond:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="fltwo" title="" src="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We can confirm this theory by using Performance on the batch request. We put more manual instrumentation into the Flagr client — specifically, adding the span <code>flagr.json_loads</code> around those lines of code that perform the JSON parsing. While slow, it became clear that the majority of the time is still spent deserializing JSON:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flthree" title="" src="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="de-deserializing-json"><a href="#de-deserializing-json" aria-label="de deserializing json permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>De-deserializing JSON</h2>
<p>As we dug into the client more, we noticed that deserialization was turning the entire JSON blob (i.e. the flag results) into a Python object. While deserializing JSON is convenient from a development perspective, because we were only using a few JSON fields, the cost just wasn’t worth it. After patching our own deserializer with a simple <code>json.loads(response.data)</code> we saw a huge improvement in speed — so much so that other areas began to look slow by comparison:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfour" title="" src="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we see that the gaps both before and after our evaluation taking up nearly 100ms. And by manually instrumenting suspect code (again), we were able to attribute the delay to the cache writing — and checking — each flag that’s in it. Since we know Flagr is taking a fraction of that time, we can conclude that using the cache is slowing us down. By removing the cache, we were able to check all 50 flags in 200ms.</p>
<p>But we can go deeper. Let’s check this large JSON blob that is taking us 140ms to parse. We see there are 2500 objects in the response, far more than the 50 we would expect. It looks like our earlier assumption — that we had to pass an entity for each flag — was incorrect due to the fact that Flagr actually checks each flag for all entities. And since we had passed one entity for each flag, we were essentially performing 2500 checks (i.e. 50x50) rather than the 50 we were expecting. After updating the code so that it checks each flag only once, the time to check all 50 flags — voila —dropped to 10ms:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfive" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, the work identifying the issues with <code>deserialize</code> was not wasted, as the original <code>deserialize</code> still takes magnitudes longer, and was much easier to identify with a larger set of flags to evaluate.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flsix" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Feature flags are a great tool to control operational aspects of a system’s behavior without destabilizing the codebase. But to use feature flags properly, you need to know which way the wind’s blowing. And for us, Performance does that: it’s the saliva on our index fingers that we hold up to the wind.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5DvBhuWGl7g4caBuyrcdZ8/eb5e36b71e43ba5a4c73a9beed8d5886/meta-dogfooding.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Sentry Performance To Make Sentry Performant</title>
      <link>https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant/</link>
      <description>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our feature flag software to an open-source system called <a href="https://github.com/checkr/flagr">Flagr</a>. And while implementing Flagr, we used our new <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">Performance</a> tools to find — and ultimately fix — a serious issue in how we were fetching our flags. </p>
<h2 id="flagging-down-feature-flags"><a href="#flagging-down-feature-flags" aria-label="flagging down feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Flagging Down Feature Flags</h2>
<p>Here’s how we approach feature flags: as the page loads, we make a call to our Flagr instance to fetch all of the flags and cache the results. And while our initial implementation evaluated each flag individually, due to the sheer number of flags we needed to check, it became necessary to switch to a batch evaluation. Fortunately, Flagr has an autogenerated Python library, which made implementing the batch request simple enough:</p>
<div data-language="python"><pre><code><span>def</span> <span>bulk_has</span><span>(</span>features<span>,</span> actor<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.bulk_has&#34;</span><span>)</span><span>:</span>
        <span># generate feature list, check if cached</span>
        <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.evaluation&#34;</span><span>)</span><span>:</span>
	response <span>=</span> flagr<span>.</span>EvaluationApi<span>(</span>self<span>.</span>_client<span>)</span><span>.</span>post_evaluation_batch<span>(</span>
    	    body<span>=</span>flagr<span>.</span>EvaluationBatchRequest<span>(</span>
        	        flag_keys<span>=</span><span>[</span>feature<span>.</span>name <span>for</span> feature <span>in</span> flagr_features<span>]</span><span>,</span>
        	        entities<span>=</span>entities<span>,</span>
        	        enable_debug<span>=</span><span>False</span><span>,</span>
    	    <span>)</span><span>,</span>
    	    <span># connection, and read timeout</span>
    	    _request_timeout<span>=</span><span>(</span><span>0.1</span><span>,</span> <span>0.01</span> <span>*</span> <span>len</span><span>(</span>flagr_features<span>)</span><span>)</span><span>,</span>
	<span>)</span>
        <span># Parse, cache and return results</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320&amp;fm=webp 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639&amp;fm=webp 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278&amp;fm=webp 1278w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278 1278w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="deserialize" title="" src="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we pass each flag we’re evaluating to the <code>flag_keys</code> parameter, so each flag knows which entity to evaluate. And when we try this with all 50 feature flags, we not only see that the whole function took roughly 900ms, but that the <code>feature.flagr.evaluation</code> span occupied the bulk of that time (500ms).  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flone" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>At first glance, it seems as if evaluating all 50 feature flags is the reason for the 500ms delay. But thanks to Performance’s auto-instrumentation, we can see that the HTTP call to the Flagr API only took 70ms. So the next step here was to manually instrument Flagr’s Python client to get a better understanding of what was going on. Our assumption was that the main performance hit was happening when we were trying to deserialize the flags:</p>
<div data-language="python"><pre><code><span>def</span> <span>__deserialize</span><span>(</span>self<span>,</span> data<span>,</span> klass<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span><span>&#34;flagr.deserialize&#34;</span><span>)</span><span>:</span>
        <span>if</span> data <span>is</span> <span>None</span><span>:</span>
            <span>return</span> <span>None</span>

        <span># The rest of the deserialize function</span></code></pre></div>
<p>You can see that the deserialize function is called quite frequently, and is in fact the major cause of the performance issues. We felt that the size of the JSON response may perhaps be related to the amount of time required for deserializing — a hunch that’s supported by how quickly a single flag check takes. The gap after the http span is minuscule — far less than a millisecond:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="fltwo" title="" src="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We can confirm this theory by using Performance on the batch request. We put more manual instrumentation into the Flagr client — specifically, adding the span <code>flagr.json_loads</code> around those lines of code that perform the JSON parsing. While slow, it became clear that the majority of the time is still spent deserializing JSON:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flthree" title="" src="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="de-deserializing-json"><a href="#de-deserializing-json" aria-label="de deserializing json permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>De-deserializing JSON</h2>
<p>As we dug into the client more, we noticed that deserialization was turning the entire JSON blob (i.e. the flag results) into a Python object. While deserializing JSON is convenient from a development perspective, because we were only using a few JSON fields, the cost just wasn’t worth it. After patching our own deserializer with a simple <code>json.loads(response.data)</code> we saw a huge improvement in speed — so much so that other areas began to look slow by comparison:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfour" title="" src="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we see that the gaps both before and after our evaluation taking up nearly 100ms. And by manually instrumenting suspect code (again), we were able to attribute the delay to the cache writing — and checking — each flag that’s in it. Since we know Flagr is taking a fraction of that time, we can conclude that using the cache is slowing us down. By removing the cache, we were able to check all 50 flags in 200ms.</p>
<p>But we can go deeper. Let’s check this large JSON blob that is taking us 140ms to parse. We see there are 2500 objects in the response, far more than the 50 we would expect. It looks like our earlier assumption — that we had to pass an entity for each flag — was incorrect due to the fact that Flagr actually checks each flag for all entities. And since we had passed one entity for each flag, we were essentially performing 2500 checks (i.e. 50x50) rather than the 50 we were expecting. After updating the code so that it checks each flag only once, the time to check all 50 flags — voila —dropped to 10ms:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfive" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, the work identifying the issues with <code>deserialize</code> was not wasted, as the original <code>deserialize</code> still takes magnitudes longer, and was much easier to identify with a larger set of flags to evaluate.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flsix" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Feature flags are a great tool to control operational aspects of a system’s behavior without destabilizing the codebase. But to use feature flags properly, you need to know which way the wind’s blowing. And for us, Performance does that: it’s the saliva on our index fingers that we hold up to the wind.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5DvBhuWGl7g4caBuyrcdZ8/eb5e36b71e43ba5a4c73a9beed8d5886/meta-dogfooding.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Sentry Performance To Make Sentry Performant</title>
      <link>https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant/</link>
      <description>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our feature flag software to an open-source system called <a href="https://github.com/checkr/flagr">Flagr</a>. And while implementing Flagr, we used our new <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">Performance</a> tools to find — and ultimately fix — a serious issue in how we were fetching our flags. </p>
<h2 id="flagging-down-feature-flags"><a href="#flagging-down-feature-flags" aria-label="flagging down feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Flagging Down Feature Flags</h2>
<p>Here’s how we approach feature flags: as the page loads, we make a call to our Flagr instance to fetch all of the flags and cache the results. And while our initial implementation evaluated each flag individually, due to the sheer number of flags we needed to check, it became necessary to switch to a batch evaluation. Fortunately, Flagr has an autogenerated Python library, which made implementing the batch request simple enough:</p>
<div data-language="python"><pre><code><span>def</span> <span>bulk_has</span><span>(</span>features<span>,</span> actor<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.bulk_has&#34;</span><span>)</span><span>:</span>
        <span># generate feature list, check if cached</span>
        <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.evaluation&#34;</span><span>)</span><span>:</span>
	response <span>=</span> flagr<span>.</span>EvaluationApi<span>(</span>self<span>.</span>_client<span>)</span><span>.</span>post_evaluation_batch<span>(</span>
    	    body<span>=</span>flagr<span>.</span>EvaluationBatchRequest<span>(</span>
        	        flag_keys<span>=</span><span>[</span>feature<span>.</span>name <span>for</span> feature <span>in</span> flagr_features<span>]</span><span>,</span>
        	        entities<span>=</span>entities<span>,</span>
        	        enable_debug<span>=</span><span>False</span><span>,</span>
    	    <span>)</span><span>,</span>
    	    <span># connection, and read timeout</span>
    	    _request_timeout<span>=</span><span>(</span><span>0.1</span><span>,</span> <span>0.01</span> <span>*</span> <span>len</span><span>(</span>flagr_features<span>)</span><span>)</span><span>,</span>
	<span>)</span>
        <span># Parse, cache and return results</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320&amp;fm=webp 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639&amp;fm=webp 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278&amp;fm=webp 1278w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278 1278w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="deserialize" title="" src="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we pass each flag we’re evaluating to the <code>flag_keys</code> parameter, so each flag knows which entity to evaluate. And when we try this with all 50 feature flags, we not only see that the whole function took roughly 900ms, but that the <code>feature.flagr.evaluation</code> span occupied the bulk of that time (500ms).  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flone" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>At first glance, it seems as if evaluating all 50 feature flags is the reason for the 500ms delay. But thanks to Performance’s auto-instrumentation, we can see that the HTTP call to the Flagr API only took 70ms. So the next step here was to manually instrument Flagr’s Python client to get a better understanding of what was going on. Our assumption was that the main performance hit was happening when we were trying to deserialize the flags:</p>
<div data-language="python"><pre><code><span>def</span> <span>__deserialize</span><span>(</span>self<span>,</span> data<span>,</span> klass<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span><span>&#34;flagr.deserialize&#34;</span><span>)</span><span>:</span>
        <span>if</span> data <span>is</span> <span>None</span><span>:</span>
            <span>return</span> <span>None</span>

        <span># The rest of the deserialize function</span></code></pre></div>
<p>You can see that the deserialize function is called quite frequently, and is in fact the major cause of the performance issues. We felt that the size of the JSON response may perhaps be related to the amount of time required for deserializing — a hunch that’s supported by how quickly a single flag check takes. The gap after the http span is minuscule — far less than a millisecond:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="fltwo" title="" src="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We can confirm this theory by using Performance on the batch request. We put more manual instrumentation into the Flagr client — specifically, adding the span <code>flagr.json_loads</code> around those lines of code that perform the JSON parsing. While slow, it became clear that the majority of the time is still spent deserializing JSON:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flthree" title="" src="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="de-deserializing-json"><a href="#de-deserializing-json" aria-label="de deserializing json permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>De-deserializing JSON</h2>
<p>As we dug into the client more, we noticed that deserialization was turning the entire JSON blob (i.e. the flag results) into a Python object. While deserializing JSON is convenient from a development perspective, because we were only using a few JSON fields, the cost just wasn’t worth it. After patching our own deserializer with a simple <code>json.loads(response.data)</code> we saw a huge improvement in speed — so much so that other areas began to look slow by comparison:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfour" title="" src="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we see that the gaps both before and after our evaluation taking up nearly 100ms. And by manually instrumenting suspect code (again), we were able to attribute the delay to the cache writing — and checking — each flag that’s in it. Since we know Flagr is taking a fraction of that time, we can conclude that using the cache is slowing us down. By removing the cache, we were able to check all 50 flags in 200ms.</p>
<p>But we can go deeper. Let’s check this large JSON blob that is taking us 140ms to parse. We see there are 2500 objects in the response, far more than the 50 we would expect. It looks like our earlier assumption — that we had to pass an entity for each flag — was incorrect due to the fact that Flagr actually checks each flag for all entities. And since we had passed one entity for each flag, we were essentially performing 2500 checks (i.e. 50x50) rather than the 50 we were expecting. After updating the code so that it checks each flag only once, the time to check all 50 flags — voila —dropped to 10ms:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfive" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, the work identifying the issues with <code>deserialize</code> was not wasted, as the original <code>deserialize</code> still takes magnitudes longer, and was much easier to identify with a larger set of flags to evaluate.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flsix" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Feature flags are a great tool to control operational aspects of a system’s behavior without destabilizing the codebase. But to use feature flags properly, you need to know which way the wind’s blowing. And for us, Performance does that: it’s the saliva on our index fingers that we hold up to the wind.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5DvBhuWGl7g4caBuyrcdZ8/eb5e36b71e43ba5a4c73a9beed8d5886/meta-dogfooding.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Performance Monitoring for Android Applications</title>
      <link>https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/</link>
      <description>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT device, chances are you’ve interacted with Android OS. And to help developers get full visibility into how their customers experience Android’s myriad applications, we’re extending <a href="https://docs.sentry.io/platforms/android/performance/">Performance</a> to <a href="http://sentry.io/for/android">Android</a>. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-android" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Being an Android developer means thinking through countless scenarios. If something goes wrong, you need to imagine what that support ticket would look like. That means collecting everything from hardware model to software version, in addition to crucial details like screen orientation and battery level. Sentry provides all of that context out of the box — and has done so for some time. And if your users lose their connection while encountering an error, Sentry still captures these events so they can be reported back when the app restarts.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377&amp;fm=webp 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754&amp;fm=webp 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507&amp;fm=webp 1507w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507 1507w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-issue-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But errors are only half of the story. Android developers also need to see how their application performs. That means visibility into when a user writes to disk, fetches media, or loads an object in a given viewport. Without this data, untreated performance problems run the risk of becoming serious errors. But now that you have Sentry’s performance monitoring, you can finally connect your user’s frustrated taps to its poor-performing backend call.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544&amp;fm=webp 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088&amp;fm=webp 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176&amp;fm=webp 2176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176 2176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>To install the Android SDK, add it to your <code>build.gradle</code> file:</p>
<div data-language="groovy"><pre><code><span>// Make sure mavenCentral is there.</span>
repositories <span>{</span>
    <span>mavenCentral</span><span>(</span><span>)</span>
<span>}</span>

<span>// Enable Java 1.8 source compatibility if you haven&#39;t yet.</span>
android <span>{</span>
    compileOptions <span>{</span>
        sourceCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
        targetCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
    <span>}</span>
<span>}</span>

<span>// Add Sentry&#39;s SDK as a dependency.</span>
dependencies <span>{</span>
    implementation <span>&#39;io.sentry:sentry-android:4.3.0&#39;</span>
<span>}</span></code></pre></div>
<p>After you’ve completed setting up a project in Sentry, we’ll give you a value — which we call a DSN or Data Source Name — to add to your <code>AndroidManifest.xml</code> file.</p>
<div data-language="html"><pre><code><span><span><span>&lt;</span>application</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>meta-data</span> <span><span>android:</span>name</span><span><span>=</span><span>&#34;</span>io.sentry.dsn<span>&#34;</span></span> <span><span>android:</span>value</span><span><span>=</span><span>&#34;</span>https://example@sentry.io/example<span>&#34;</span></span> <span>/&gt;</span></span>
<span><span><span>&lt;/</span>application</span><span>&gt;</span></span></code></pre></div>
<p>The current version of our Android SDK supports <a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">auto instrumentation</a> activity rendering, which can be expanded on through <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom instrumentation</a>. Additionally, in the coming weeks, you’ll be able to automatically create spans for active transactions as well as record <a href="https://docs.sentry.io/platforms/android/enriching-events/breadcrumbs/">breadcrumbs</a> for outgoing HTTP requests.</p>
<p>iOS developers: if you’re getting SDK envy, rest easy knowing that Performance is on the way for you as well. </p>
<p>Have a friend who wants to manage releases, solve issues faster, and speed up their mobile applications? <a href="https://sentry.io/referrals/mobile/">Refer</a> them to Sentry and we’ll give them — and you — three free months on our Team plan.</p>
<p>To start using Sentry with Android, configure the <a href="https://docs.sentry.io/platforms/android/">SDK</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Performance Monitoring for Android Applications</title>
      <link>https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/</link>
      <description>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT device, chances are you’ve interacted with Android OS. And to help developers get full visibility into how their customers experience Android’s myriad applications, we’re extending <a href="https://docs.sentry.io/platforms/android/performance/">Performance</a> to <a href="http://sentry.io/for/android">Android</a>. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-android" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Being an Android developer means thinking through countless scenarios. If something goes wrong, you need to imagine what that support ticket would look like. That means collecting everything from hardware model to software version, in addition to crucial details like screen orientation and battery level. Sentry provides all of that context out of the box — and has done so for some time. And if your users lose their connection while encountering an error, Sentry still captures these events so they can be reported back when the app restarts.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377&amp;fm=webp 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754&amp;fm=webp 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507&amp;fm=webp 1507w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507 1507w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-issue-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But errors are only half of the story. Android developers also need to see how their application performs. That means visibility into when a user writes to disk, fetches media, or loads an object in a given viewport. Without this data, untreated performance problems run the risk of becoming serious errors. But now that you have Sentry’s performance monitoring, you can finally connect your user’s frustrated taps to its poor-performing backend call.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544&amp;fm=webp 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088&amp;fm=webp 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176&amp;fm=webp 2176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176 2176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>To install the Android SDK, add it to your <code>build.gradle</code> file:</p>
<div data-language="groovy"><pre><code><span>// Make sure mavenCentral is there.</span>
repositories <span>{</span>
    <span>mavenCentral</span><span>(</span><span>)</span>
<span>}</span>

<span>// Enable Java 1.8 source compatibility if you haven&#39;t yet.</span>
android <span>{</span>
    compileOptions <span>{</span>
        sourceCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
        targetCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
    <span>}</span>
<span>}</span>

<span>// Add Sentry&#39;s SDK as a dependency.</span>
dependencies <span>{</span>
    implementation <span>&#39;io.sentry:sentry-android:4.3.0&#39;</span>
<span>}</span></code></pre></div>
<p>After you’ve completed setting up a project in Sentry, we’ll give you a value — which we call a DSN or Data Source Name — to add to your <code>AndroidManifest.xml</code> file.</p>
<div data-language="html"><pre><code><span><span><span>&lt;</span>application</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>meta-data</span> <span><span>android:</span>name</span><span><span>=</span><span>&#34;</span>io.sentry.dsn<span>&#34;</span></span> <span><span>android:</span>value</span><span><span>=</span><span>&#34;</span>https://example@sentry.io/example<span>&#34;</span></span> <span>/&gt;</span></span>
<span><span><span>&lt;/</span>application</span><span>&gt;</span></span></code></pre></div>
<p>The current version of our Android SDK supports <a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">auto instrumentation</a> activity rendering, which can be expanded on through <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom instrumentation</a>. Additionally, in the coming weeks, you’ll be able to automatically create spans for active transactions as well as record <a href="https://docs.sentry.io/platforms/android/enriching-events/breadcrumbs/">breadcrumbs</a> for outgoing HTTP requests.</p>
<p>iOS developers: if you’re getting SDK envy, rest easy knowing that Performance is on the way for you as well. </p>
<p>Have a friend who wants to manage releases, solve issues faster, and speed up their mobile applications? <a href="https://sentry.io/referrals/mobile/">Refer</a> them to Sentry and we’ll give them — and you — three free months on our Team plan.</p>
<p>To start using Sentry with Android, configure the <a href="https://docs.sentry.io/platforms/android/">SDK</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Performance Monitoring for Android Applications</title>
      <link>https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/</link>
      <description>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT device, chances are you’ve interacted with Android OS. And to help developers get full visibility into how their customers experience Android’s myriad applications, we’re extending <a href="https://docs.sentry.io/platforms/android/performance/">Performance</a> to <a href="http://sentry.io/for/android">Android</a>. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-android" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Being an Android developer means thinking through countless scenarios. If something goes wrong, you need to imagine what that support ticket would look like. That means collecting everything from hardware model to software version, in addition to crucial details like screen orientation and battery level. Sentry provides all of that context out of the box — and has done so for some time. And if your users lose their connection while encountering an error, Sentry still captures these events so they can be reported back when the app restarts.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377&amp;fm=webp 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754&amp;fm=webp 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507&amp;fm=webp 1507w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507 1507w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-issue-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But errors are only half of the story. Android developers also need to see how their application performs. That means visibility into when a user writes to disk, fetches media, or loads an object in a given viewport. Without this data, untreated performance problems run the risk of becoming serious errors. But now that you have Sentry’s performance monitoring, you can finally connect your user’s frustrated taps to its poor-performing backend call.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544&amp;fm=webp 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088&amp;fm=webp 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176&amp;fm=webp 2176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176 2176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>To install the Android SDK, add it to your <code>build.gradle</code> file:</p>
<div data-language="groovy"><pre><code><span>// Make sure mavenCentral is there.</span>
repositories <span>{</span>
    <span>mavenCentral</span><span>(</span><span>)</span>
<span>}</span>

<span>// Enable Java 1.8 source compatibility if you haven&#39;t yet.</span>
android <span>{</span>
    compileOptions <span>{</span>
        sourceCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
        targetCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
    <span>}</span>
<span>}</span>

<span>// Add Sentry&#39;s SDK as a dependency.</span>
dependencies <span>{</span>
    implementation <span>&#39;io.sentry:sentry-android:4.3.0&#39;</span>
<span>}</span></code></pre></div>
<p>After you’ve completed setting up a project in Sentry, we’ll give you a value — which we call a DSN or Data Source Name — to add to your <code>AndroidManifest.xml</code> file.</p>
<div data-language="html"><pre><code><span><span><span>&lt;</span>application</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>meta-data</span> <span><span>android:</span>name</span><span><span>=</span><span>&#34;</span>io.sentry.dsn<span>&#34;</span></span> <span><span>android:</span>value</span><span><span>=</span><span>&#34;</span>https://example@sentry.io/example<span>&#34;</span></span> <span>/&gt;</span></span>
<span><span><span>&lt;/</span>application</span><span>&gt;</span></span></code></pre></div>
<p>The current version of our Android SDK supports <a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">auto instrumentation</a> activity rendering, which can be expanded on through <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom instrumentation</a>. Additionally, in the coming weeks, you’ll be able to automatically create spans for active transactions as well as record <a href="https://docs.sentry.io/platforms/android/enriching-events/breadcrumbs/">breadcrumbs</a> for outgoing HTTP requests.</p>
<p>iOS developers: if you’re getting SDK envy, rest easy knowing that Performance is on the way for you as well. </p>
<p>Have a friend who wants to manage releases, solve issues faster, and speed up their mobile applications? <a href="https://sentry.io/referrals/mobile/">Refer</a> them to Sentry and we’ll give them — and you — three free months on our Team plan.</p>
<p>To start using Sentry with Android, configure the <a href="https://docs.sentry.io/platforms/android/">SDK</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Building Dark Mode</title>
      <link>https://blog.sentry.io/2021/03/16/building-dark-mode/</link>
      <description>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which blared entrance music for anyone who stepped foot in our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which <a href="https://blog.sentry.io/2017/11/16/hackweek-winter-2017">blared entrance music</a> for anyone who stepped foot in our office. In 2019, we encouraged folks to be <a href="https://blog.sentry.io/2019/10/17/how-a-hack-week-project-encourages-people-to-be-nice-on-the-internet">nice on the Internet</a>. Noble causes, sure, but for this year’s Hack Week I was determined to advance a cause near and dear to my cold British heart: dark mode.</p>
<p>Little did I know that what started as a minor hack week project would become a major lift that included pantone colors, hex codes and all sorts of variables.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411&amp;fm=webp 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823&amp;fm=webp 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645&amp;fm=webp 1645w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645 1645w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But first things first. If you head on over to User Settings &gt; Theme you can toggle Dark Mode on. We also added an option where you can switch it based on your default system theme:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597&amp;fm=webp 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194&amp;fm=webp 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388&amp;fm=webp 2388w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388 2388w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Given its recent popularity, you might believe dark mode is a fad. But from a design perspective, dark mode is exceptionally useful. That’s because a big part of design is about building relationships between colors. And so implementing dark mode essentially forced everyone on the team to think long, hard, and consistently about our front-end design components. In short, dark mode helped our design system not only look good, but make sense. </p>
<p>We organized the work into three buckets:</p>
<ol>
<li>Cleaning up variables</li>
<li>Designing the system</li>
<li>Creating aliases and refactoring components</li>
</ol>
<h2 id="cleaning-up-variables"><a href="#cleaning-up-variables" aria-label="cleaning up variables permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cleaning Up Variables</h2>
<p>As I began spelunking around our codebase, I found all sorts of color inconsistencies. Things like scattered hex codes and one-off variables such as <code>blueLightest</code> or <code>offWhite</code> being used in all sorts of curious ways. This meant that whenever an engineer wanted to actually to build something, they were forced to think way too long and much too hard about which color they should use.</p>
<p>Here’s an example: I want to add a border to a component. Okay, cool. Which variables can I use? Lemme see. I like gray, so let’s use gray. Simple enough, right?  Well, there are eighteen grays — not to mention its border variables and hex codes. Which one should I use? Why is the design I’m looking at using a new border color? Where in my life did everything go wrong?</p>
<p>No engineer should be forced to answer these questions, and so we went about cleaning up all this junk. To kick things off I made a map of every variable that uses React components. This map was nothing more than a spreadsheet (gross), but it did serve an important purpose: I now knew which deprecated color variables should be replaced. This spreadsheet would help us make a lot of small pull requests where we could change <code>yellowLightest</code> into a new variable called <code>yellow400</code>. Also, by making lots of small pull requests for each variable, we could also limit regressions.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715&amp;fm=webp 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429&amp;fm=webp 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858&amp;fm=webp 2858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858 2858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, most of these variables were stored in one place, as we had been pretty strict about storing them in the <code>theme.tsx</code> file we imported into our React components. Within those components, we applied those styles to  <a href="https://emotion.sh/docs/introduction">emotion</a>, our css plugin. That sounds like a lot — and it is — but emotion is well worth the overhead when building complex apps, as it allows us to isolate our CSS all in a single component like <code>Dropdown</code> so we don’t have to worry about those styles bleeding into other files or pages. </p>
<p>Here’s an example of a component that uses emotion:</p>
<div data-language="javascript"><pre><code><span>import</span> React <span>from</span> <span>&#39;react&#39;</span><span>;</span>
<span>import</span> styled <span>from</span> <span>&#39;@emotion/styled&#39;</span><span>;</span>

<span>const</span> ComponentName <span>=</span> <span>styled</span><span>(</span><span>&#39;div&#39;</span><span>)</span><span><span>`</span><span>
  color: </span><span><span>${</span><span>p</span> <span>=&gt;</span> p<span>.</span>theme<span>.</span>offWhite2<span>}</span></span><span>;
</span><span>`</span></span><span>;</span>

<span>export</span> <span>default</span> ComponentName<span>;</span></code></pre></div>
<p>To remove a color like <code>offwhite2</code>, I needed to search across both our codebases and find all the React components that used that particular variable. Only then could I replace it with something more sensible. Within our <code>theme.tsx</code> file we then organized them into something like this: </p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>

  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>

  yellow100<span>:</span> <span>&#39;#FDE8b4&#39;</span><span>,</span>
  yellow200<span>:</span> <span>&#39;#FFD577&#39;</span><span>,</span>
  yellow300<span>:</span> <span>&#39;#FFC227&#39;</span><span>,</span>

  purple100<span>:</span> <span>&#39;#D4D1EC&#39;</span><span>,</span>
  purple200<span>:</span> <span>&#39;#A396DA&#39;</span><span>,</span>
  purple300<span>:</span> <span>&#39;#6C5FC7&#39;</span><span>,</span>

  blue100<span>:</span> <span>&#39;#D2DFF7&#39;</span><span>,</span>
  blue200<span>:</span> <span>&#39;#92A8EA&#39;</span><span>,</span>
  blue300<span>:</span> <span>&#39;#3D74DB&#39;</span><span>,</span>

  orange100<span>:</span> <span>&#39;#FFF1ED&#39;</span><span>,</span>
  orange200<span>:</span> <span>&#39;#F9C7B9&#39;</span><span>,</span>
  orange300<span>:</span> <span>&#39;#F69C7D&#39;</span><span>,</span>
  orange400<span>:</span> <span>&#39;#FF7738&#39;</span><span>,</span>
  orange500<span>:</span> <span>&#39;#BA4A23&#39;</span><span>,</span>

  red100<span>:</span> <span>&#39;#FCC6C8&#39;</span><span>,</span>
  red200<span>:</span> <span>&#39;#FD918F&#39;</span><span>,</span>
  red300<span>:</span> <span>&#39;#F55459&#39;</span><span>,</span>

  green100<span>:</span> <span>&#39;#B6ECDF&#39;</span><span>,</span>
  green200<span>:</span> <span>&#39;#7DD6BE&#39;</span><span>,</span>
  green300<span>:</span> <span>&#39;#33BF9E&#39;</span><span>,</span>

  pink100<span>:</span> <span>&#39;#FDC9D7&#39;</span><span>,</span>
  pink200<span>:</span> <span>&#39;#FA93AB&#39;</span><span>,</span>
  pink300<span>:</span> <span>&#39;#F05781&#39;</span><span>,</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>In total, this process took weeks of part-time refactoring work, but once it was done it was quite satisfying. We finally had a list of colors that were mostly consistent, to the point that whenever an engineer came to build something they’d know to use these variables. And now that there were fewer options in our system, we could start thinking about the relationships between all these colors.</p>
<h2 id="designing-the-color-system"><a href="#designing-the-color-system" aria-label="designing the color system permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Designing the Color System</h2>
<p>We still had some daunting questions to answer. How are we using color in our app today? What are the default active, hover, and focus states? What are the common border colors? What should our text colors be? And finally, how are those states represented across dropdowns, form fields, buttons, toggles, links, and tags? </p>
<p>To tackle these questions, we needed mockups. After gathering our most common components together in Figma, we found a bunch of inconsistencies in our text and form styles, as well as how we applied border colors to all of our components. And so by unifying all these visual inconsistencies (by creating a smaller list of variables) we could make our UI work for both light and dark mode at the same time. </p>
<p>Here’s an early mockup of those updated components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920&amp;fm=webp 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840&amp;fm=webp 3840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840 3840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="06 presentation-compressed" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This work involved looking across multiple Sentry features — Issues, Discover, Releases, Performance, Alerts — to make sure that the color system that worked for our charts also worked across dark mode. </p>
<p>Next, we created a separate dark mode color palette for our charts:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img7" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img8" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once we felt the base styles had good coverage, we began structuring the UI together in Figma. This not only let us think about how some of these changes might affect customers, but how we could improve accessibility across the board for all our components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img9" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img10" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>After moving back and forth between our smaller components and our layouts, we finally nailed down our new color palette. Again, remember the idea here isn’t just to support dark mode, but to resolve all the outstanding questions surrounding how to build new components. Folks shouldn’t have to Slack the design team to figure out which gray to use for gray text.</p>
<p>A fact of life for designers is being annoyed by your own solutions. For example, I was a little irked that we have a separate <code>background</code> variable here, instead of just adding a new gray. But it makes sense for our product — and how we want to use our color system. When my system clashes with a real-world problem, my system needs to bend to the problem — not the other way around. Consistency is more important than ideological purity.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370&amp;fm=webp 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739&amp;fm=webp 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478&amp;fm=webp 1478w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478 1478w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img11" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It was at this point that we added our design system’s variables to Figma, so that any new colors we used in the future would use these updated versions, too:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747&amp;fm=webp 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494&amp;fm=webp 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988&amp;fm=webp 2988w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988 2988w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img12" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now all we had to do is build the dang thing.</p>
<h2 id="creating-aliases-and-refactoring-components"><a href="#creating-aliases-and-refactoring-components" aria-label="creating aliases and refactoring components permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Creating Aliases and Refactoring Components</h2>
<p>We knew we wanted our paragraph text to be <code>gray500</code> in light mode but then switch to <code>white</code> in dark mode. This toggling between light and dark modes would require an alias such as <code>textColor</code> to flip between these two options. To do this, we needed to create a whole bunch of aliases within our <code>theme.tsx</code> file.</p>
<p>In this file, we first define our range of colors and then we create those aliases like <code>textColor</code>, <code>subText</code>, and <code>borderColor</code>. But this was not an easy process: we argued <em>a lot</em> about the naming conventions and their use across our components. It wasn’t until we started refactoring our components that these names began to make a bit more sense.</p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>
  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>
  <span>// other vars go here</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span>

<span>const</span> aliases <span>=</span> <span>{</span>
  <span>/**
   * Primary text color
   */</span>
  textColor<span>:</span> colors<span>.</span>gray500<span>,</span>

  <span>/**
   * Text that should not have as much emphasis
   */</span>
  subText<span>:</span> colors<span>.</span>gray400<span>,</span>

  <span>/**
   * More...
   */</span>
<span>}</span></code></pre></div>
<p>The aliases above are the colors for our light mode. Next, we started to create the dark mode aliases in this file while refactoring our components and adding new aliases as we found them. In this same file, we have a new object that contains all our colors for dark mode: </p>
<div data-language="javascript"><pre><code><span>const</span> darkAliases <span>=</span> <span>{</span>
  <span>...</span>aliases<span>,</span>
  bodyBackground<span>:</span> colors<span>.</span>black<span>,</span>
  headerBackground<span>:</span> colors<span>.</span>gray500<span>,</span>
  background<span>:</span> colors<span>.</span>black<span>,</span>
  backgroundSecondary<span>:</span> colors<span>.</span>gray500<span>,</span>
  border<span>:</span> colors<span>.</span>gray400<span>,</span>
  innerBorder<span>:</span> colors<span>.</span>gray500<span>,</span>
  textColor<span>:</span> colors<span>.</span>white<span>,</span>
  <span>// more aliases go here </span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>This involved multiple conversations about how our components look across different features — what might work for one component in one place, might not work for another component somewhere else. </p>
<p>We started by refactoring each of our components to work with these new aliases. Here, we identified common patterns where we would have to replace every instance of a variable with these new aliases. One example is text color: sometimes this was as easy as switching out all the <code>gray400</code>s in our components, and sometimes it would involve checking each component to find where we were setting <code>gray500</code> on the <code>color</code> CSS property. This meant many trials — and errors.</p>
<p>However, one of the hardest parts about this refactoring project is that all our styles weren’t located in one place. While our variables and aliases were (somewhat) neatly stored in our <code>theme.tsx</code> file, our styles were still spread out across the following mini-systems of CSS:</p>
<ul>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/includes/bootstrap.less">Bootstrap styles</a>: We’re still breaking up these styles into individual <code>.less</code> files and then refactoring those into our React components. There’s a ton of unused styles here that need to go and we don’t style anything with our <code>theme.tsx</code> variables here.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/base.less">Base styles</a>:  This is a <code>base.less</code> file that’s a reset and a normalize <code>.less</code> file that we made after refactoring a ton of stuff from Bootstrap. These are the core styles for default HTML elements, so we also can’t use our fancy variables from <code>theme.tsx</code> here either.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/styles/global.tsx">Global styles</a>: This is a <code>.tsx</code> file that’s overriding a bunch of stuff from Bootstrap and Base styles and <em>does</em> use styles from our theme. Ideally, everything from Base should be refactored into our Global styles, but that’s not possible since some of our pages aren’t in React yet.</li>
<li><a href="https://github.com/getsentry/sentry/tree/master/src/sentry/static/sentry/app/components">Components</a>: As I mentioned, each of our components use emotion (which I both love and am somewhat annoyed by) which override our Global styles, which themselves override our Base styles. <em>Phew</em>.</li>
<li>Styled components: These are one-off variants or modifications to our components used in a feature like Issues or Alerts. This is where emotion falls somewhat short for me (and we would like to extend it perhaps with something like Tachyons instead). While some of these modifications are due to the fact that our components need tidying up, others are necessary because our defaults in Base and Bootstrap need deleting entirely. <em>Double Phew</em>.</li>
</ul>
<p>If you think all of this sounds and looks like an utter nightmare, well, I won’t argue with you. And yet I think that’s sort of the value inherent within building dark mode: you can now see all the relationships between your components and your styles and your design system.</p>
<p>I’ve worked on a few refactoring projects like this in the past and I know how easy it is to see every problem as the Most Important Problem Of All Time. But that’s almost never the case: in every codebase there’s always stuff that needs refactoring. And so you need to be careful about what you refactor and why. </p>
<p>I subscribe to the belief that there’s <a href="https://css-tricks.com/the-three-types-of-code/">three types of code</a>.  There’s Boring code: the good part of your codebase that doesn’t need refactoring. If you’re building a large-scale web app, it’s unlikely you have much code like this. Next, there’s Salt Mine code. This is the stuff that’s poorly written but doesn’t need to be refactored because it isn’t doing active harm. It’s gross, but it’s fine. And then finally there’s Radioactive code. Not only is it poorly written, it’s doing active harm by leaking into other parts of your codebase and continuously creating toxic problems:</p>
<blockquote>
<p>Radioactive code is the real problem at the heart of every engineering team. It’s the let’s-not-go-to-work-today sort of code. It’s the stuff that’s worse than bad — it’s actively poisoning our codebase. Imagine a codebase as a nuclear reactor; radioactive code is the stuff that’s breached the container and is now leaking into every part of our codebase.</p>
</blockquote>
<p>For most front-end codebases, the design of your color system shows you where your radioactive styles are. It shows you how things are tied together, and what depends on what.  Sure, we wanted dark mode to look great. But we also wanted to make sure that dark mode doesn’t slow us down by introducing even more problems than we already have. </p>
<p>And I think that’s what our team achieved here. We made our designs more consistent, buried those radioactive styles, made relationships between colors, and hopefully <em>slightly</em> improved the way we build front-end components moving forward.</p>
<p>It’s certainly the long, hard, and stressful way of doing things, but more important, it’s the way that worked for us.</p>
<hr/>
<p>If you’ve read this far, you’re either a bot — or passionate about design.  Turns out <a href="https://sentry.io/careers/">we’re hiring</a>. Come join us!</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/76aNJOkrbgWw2iTODFX7Gl/605ba5aa92df76d61082f33d63df1466/darkmode_meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Building Dark Mode</title>
      <link>https://blog.sentry.io/2021/03/16/building-dark-mode/</link>
      <description>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which blared entrance music for anyone who stepped foot in our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which <a href="https://blog.sentry.io/2017/11/16/hackweek-winter-2017">blared entrance music</a> for anyone who stepped foot in our office. In 2019, we encouraged folks to be <a href="https://blog.sentry.io/2019/10/17/how-a-hack-week-project-encourages-people-to-be-nice-on-the-internet">nice on the Internet</a>. Noble causes, sure, but for this year’s Hack Week I was determined to advance a cause near and dear to my cold British heart: dark mode.</p>
<p>Little did I know that what started as a minor hack week project would become a major lift that included pantone colors, hex codes and all sorts of variables.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411&amp;fm=webp 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823&amp;fm=webp 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645&amp;fm=webp 1645w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645 1645w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But first things first. If you head on over to User Settings &gt; Theme you can toggle Dark Mode on. We also added an option where you can switch it based on your default system theme:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597&amp;fm=webp 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194&amp;fm=webp 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388&amp;fm=webp 2388w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388 2388w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Given its recent popularity, you might believe dark mode is a fad. But from a design perspective, dark mode is exceptionally useful. That’s because a big part of design is about building relationships between colors. And so implementing dark mode essentially forced everyone on the team to think long, hard, and consistently about our front-end design components. In short, dark mode helped our design system not only look good, but make sense. </p>
<p>We organized the work into three buckets:</p>
<ol>
<li>Cleaning up variables</li>
<li>Designing the system</li>
<li>Creating aliases and refactoring components</li>
</ol>
<h2 id="cleaning-up-variables"><a href="#cleaning-up-variables" aria-label="cleaning up variables permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cleaning Up Variables</h2>
<p>As I began spelunking around our codebase, I found all sorts of color inconsistencies. Things like scattered hex codes and one-off variables such as <code>blueLightest</code> or <code>offWhite</code> being used in all sorts of curious ways. This meant that whenever an engineer wanted to actually to build something, they were forced to think way too long and much too hard about which color they should use.</p>
<p>Here’s an example: I want to add a border to a component. Okay, cool. Which variables can I use? Lemme see. I like gray, so let’s use gray. Simple enough, right?  Well, there are eighteen grays — not to mention its border variables and hex codes. Which one should I use? Why is the design I’m looking at using a new border color? Where in my life did everything go wrong?</p>
<p>No engineer should be forced to answer these questions, and so we went about cleaning up all this junk. To kick things off I made a map of every variable that uses React components. This map was nothing more than a spreadsheet (gross), but it did serve an important purpose: I now knew which deprecated color variables should be replaced. This spreadsheet would help us make a lot of small pull requests where we could change <code>yellowLightest</code> into a new variable called <code>yellow400</code>. Also, by making lots of small pull requests for each variable, we could also limit regressions.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715&amp;fm=webp 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429&amp;fm=webp 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858&amp;fm=webp 2858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858 2858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, most of these variables were stored in one place, as we had been pretty strict about storing them in the <code>theme.tsx</code> file we imported into our React components. Within those components, we applied those styles to  <a href="https://emotion.sh/docs/introduction">emotion</a>, our css plugin. That sounds like a lot — and it is — but emotion is well worth the overhead when building complex apps, as it allows us to isolate our CSS all in a single component like <code>Dropdown</code> so we don’t have to worry about those styles bleeding into other files or pages. </p>
<p>Here’s an example of a component that uses emotion:</p>
<div data-language="javascript"><pre><code><span>import</span> React <span>from</span> <span>&#39;react&#39;</span><span>;</span>
<span>import</span> styled <span>from</span> <span>&#39;@emotion/styled&#39;</span><span>;</span>

<span>const</span> ComponentName <span>=</span> <span>styled</span><span>(</span><span>&#39;div&#39;</span><span>)</span><span><span>`</span><span>
  color: </span><span><span>${</span><span>p</span> <span>=&gt;</span> p<span>.</span>theme<span>.</span>offWhite2<span>}</span></span><span>;
</span><span>`</span></span><span>;</span>

<span>export</span> <span>default</span> ComponentName<span>;</span></code></pre></div>
<p>To remove a color like <code>offwhite2</code>, I needed to search across both our codebases and find all the React components that used that particular variable. Only then could I replace it with something more sensible. Within our <code>theme.tsx</code> file we then organized them into something like this: </p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>

  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>

  yellow100<span>:</span> <span>&#39;#FDE8b4&#39;</span><span>,</span>
  yellow200<span>:</span> <span>&#39;#FFD577&#39;</span><span>,</span>
  yellow300<span>:</span> <span>&#39;#FFC227&#39;</span><span>,</span>

  purple100<span>:</span> <span>&#39;#D4D1EC&#39;</span><span>,</span>
  purple200<span>:</span> <span>&#39;#A396DA&#39;</span><span>,</span>
  purple300<span>:</span> <span>&#39;#6C5FC7&#39;</span><span>,</span>

  blue100<span>:</span> <span>&#39;#D2DFF7&#39;</span><span>,</span>
  blue200<span>:</span> <span>&#39;#92A8EA&#39;</span><span>,</span>
  blue300<span>:</span> <span>&#39;#3D74DB&#39;</span><span>,</span>

  orange100<span>:</span> <span>&#39;#FFF1ED&#39;</span><span>,</span>
  orange200<span>:</span> <span>&#39;#F9C7B9&#39;</span><span>,</span>
  orange300<span>:</span> <span>&#39;#F69C7D&#39;</span><span>,</span>
  orange400<span>:</span> <span>&#39;#FF7738&#39;</span><span>,</span>
  orange500<span>:</span> <span>&#39;#BA4A23&#39;</span><span>,</span>

  red100<span>:</span> <span>&#39;#FCC6C8&#39;</span><span>,</span>
  red200<span>:</span> <span>&#39;#FD918F&#39;</span><span>,</span>
  red300<span>:</span> <span>&#39;#F55459&#39;</span><span>,</span>

  green100<span>:</span> <span>&#39;#B6ECDF&#39;</span><span>,</span>
  green200<span>:</span> <span>&#39;#7DD6BE&#39;</span><span>,</span>
  green300<span>:</span> <span>&#39;#33BF9E&#39;</span><span>,</span>

  pink100<span>:</span> <span>&#39;#FDC9D7&#39;</span><span>,</span>
  pink200<span>:</span> <span>&#39;#FA93AB&#39;</span><span>,</span>
  pink300<span>:</span> <span>&#39;#F05781&#39;</span><span>,</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>In total, this process took weeks of part-time refactoring work, but once it was done it was quite satisfying. We finally had a list of colors that were mostly consistent, to the point that whenever an engineer came to build something they’d know to use these variables. And now that there were fewer options in our system, we could start thinking about the relationships between all these colors.</p>
<h2 id="designing-the-color-system"><a href="#designing-the-color-system" aria-label="designing the color system permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Designing the Color System</h2>
<p>We still had some daunting questions to answer. How are we using color in our app today? What are the default active, hover, and focus states? What are the common border colors? What should our text colors be? And finally, how are those states represented across dropdowns, form fields, buttons, toggles, links, and tags? </p>
<p>To tackle these questions, we needed mockups. After gathering our most common components together in Figma, we found a bunch of inconsistencies in our text and form styles, as well as how we applied border colors to all of our components. And so by unifying all these visual inconsistencies (by creating a smaller list of variables) we could make our UI work for both light and dark mode at the same time. </p>
<p>Here’s an early mockup of those updated components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920&amp;fm=webp 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840&amp;fm=webp 3840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840 3840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="06 presentation-compressed" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This work involved looking across multiple Sentry features — Issues, Discover, Releases, Performance, Alerts — to make sure that the color system that worked for our charts also worked across dark mode. </p>
<p>Next, we created a separate dark mode color palette for our charts:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img7" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img8" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once we felt the base styles had good coverage, we began structuring the UI together in Figma. This not only let us think about how some of these changes might affect customers, but how we could improve accessibility across the board for all our components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img9" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img10" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>After moving back and forth between our smaller components and our layouts, we finally nailed down our new color palette. Again, remember the idea here isn’t just to support dark mode, but to resolve all the outstanding questions surrounding how to build new components. Folks shouldn’t have to Slack the design team to figure out which gray to use for gray text.</p>
<p>A fact of life for designers is being annoyed by your own solutions. For example, I was a little irked that we have a separate <code>background</code> variable here, instead of just adding a new gray. But it makes sense for our product — and how we want to use our color system. When my system clashes with a real-world problem, my system needs to bend to the problem — not the other way around. Consistency is more important than ideological purity.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370&amp;fm=webp 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739&amp;fm=webp 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478&amp;fm=webp 1478w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478 1478w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img11" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It was at this point that we added our design system’s variables to Figma, so that any new colors we used in the future would use these updated versions, too:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747&amp;fm=webp 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494&amp;fm=webp 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988&amp;fm=webp 2988w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988 2988w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img12" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now all we had to do is build the dang thing.</p>
<h2 id="creating-aliases-and-refactoring-components"><a href="#creating-aliases-and-refactoring-components" aria-label="creating aliases and refactoring components permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Creating Aliases and Refactoring Components</h2>
<p>We knew we wanted our paragraph text to be <code>gray500</code> in light mode but then switch to <code>white</code> in dark mode. This toggling between light and dark modes would require an alias such as <code>textColor</code> to flip between these two options. To do this, we needed to create a whole bunch of aliases within our <code>theme.tsx</code> file.</p>
<p>In this file, we first define our range of colors and then we create those aliases like <code>textColor</code>, <code>subText</code>, and <code>borderColor</code>. But this was not an easy process: we argued <em>a lot</em> about the naming conventions and their use across our components. It wasn’t until we started refactoring our components that these names began to make a bit more sense.</p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>
  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>
  <span>// other vars go here</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span>

<span>const</span> aliases <span>=</span> <span>{</span>
  <span>/**
   * Primary text color
   */</span>
  textColor<span>:</span> colors<span>.</span>gray500<span>,</span>

  <span>/**
   * Text that should not have as much emphasis
   */</span>
  subText<span>:</span> colors<span>.</span>gray400<span>,</span>

  <span>/**
   * More...
   */</span>
<span>}</span></code></pre></div>
<p>The aliases above are the colors for our light mode. Next, we started to create the dark mode aliases in this file while refactoring our components and adding new aliases as we found them. In this same file, we have a new object that contains all our colors for dark mode: </p>
<div data-language="javascript"><pre><code><span>const</span> darkAliases <span>=</span> <span>{</span>
  <span>...</span>aliases<span>,</span>
  bodyBackground<span>:</span> colors<span>.</span>black<span>,</span>
  headerBackground<span>:</span> colors<span>.</span>gray500<span>,</span>
  background<span>:</span> colors<span>.</span>black<span>,</span>
  backgroundSecondary<span>:</span> colors<span>.</span>gray500<span>,</span>
  border<span>:</span> colors<span>.</span>gray400<span>,</span>
  innerBorder<span>:</span> colors<span>.</span>gray500<span>,</span>
  textColor<span>:</span> colors<span>.</span>white<span>,</span>
  <span>// more aliases go here </span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>This involved multiple conversations about how our components look across different features — what might work for one component in one place, might not work for another component somewhere else. </p>
<p>We started by refactoring each of our components to work with these new aliases. Here, we identified common patterns where we would have to replace every instance of a variable with these new aliases. One example is text color: sometimes this was as easy as switching out all the <code>gray400</code>s in our components, and sometimes it would involve checking each component to find where we were setting <code>gray500</code> on the <code>color</code> CSS property. This meant many trials — and errors.</p>
<p>However, one of the hardest parts about this refactoring project is that all our styles weren’t located in one place. While our variables and aliases were (somewhat) neatly stored in our <code>theme.tsx</code> file, our styles were still spread out across the following mini-systems of CSS:</p>
<ul>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/includes/bootstrap.less">Bootstrap styles</a>: We’re still breaking up these styles into individual <code>.less</code> files and then refactoring those into our React components. There’s a ton of unused styles here that need to go and we don’t style anything with our <code>theme.tsx</code> variables here.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/base.less">Base styles</a>:  This is a <code>base.less</code> file that’s a reset and a normalize <code>.less</code> file that we made after refactoring a ton of stuff from Bootstrap. These are the core styles for default HTML elements, so we also can’t use our fancy variables from <code>theme.tsx</code> here either.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/styles/global.tsx">Global styles</a>: This is a <code>.tsx</code> file that’s overriding a bunch of stuff from Bootstrap and Base styles and <em>does</em> use styles from our theme. Ideally, everything from Base should be refactored into our Global styles, but that’s not possible since some of our pages aren’t in React yet.</li>
<li><a href="https://github.com/getsentry/sentry/tree/master/src/sentry/static/sentry/app/components">Components</a>: As I mentioned, each of our components use emotion (which I both love and am somewhat annoyed by) which override our Global styles, which themselves override our Base styles. <em>Phew</em>.</li>
<li>Styled components: These are one-off variants or modifications to our components used in a feature like Issues or Alerts. This is where emotion falls somewhat short for me (and we would like to extend it perhaps with something like Tachyons instead). While some of these modifications are due to the fact that our components need tidying up, others are necessary because our defaults in Base and Bootstrap need deleting entirely. <em>Double Phew</em>.</li>
</ul>
<p>If you think all of this sounds and looks like an utter nightmare, well, I won’t argue with you. And yet I think that’s sort of the value inherent within building dark mode: you can now see all the relationships between your components and your styles and your design system.</p>
<p>I’ve worked on a few refactoring projects like this in the past and I know how easy it is to see every problem as the Most Important Problem Of All Time. But that’s almost never the case: in every codebase there’s always stuff that needs refactoring. And so you need to be careful about what you refactor and why. </p>
<p>I subscribe to the belief that there’s <a href="https://css-tricks.com/the-three-types-of-code/">three types of code</a>.  There’s Boring code: the good part of your codebase that doesn’t need refactoring. If you’re building a large-scale web app, it’s unlikely you have much code like this. Next, there’s Salt Mine code. This is the stuff that’s poorly written but doesn’t need to be refactored because it isn’t doing active harm. It’s gross, but it’s fine. And then finally there’s Radioactive code. Not only is it poorly written, it’s doing active harm by leaking into other parts of your codebase and continuously creating toxic problems:</p>
<blockquote>
<p>Radioactive code is the real problem at the heart of every engineering team. It’s the let’s-not-go-to-work-today sort of code. It’s the stuff that’s worse than bad — it’s actively poisoning our codebase. Imagine a codebase as a nuclear reactor; radioactive code is the stuff that’s breached the container and is now leaking into every part of our codebase.</p>
</blockquote>
<p>For most front-end codebases, the design of your color system shows you where your radioactive styles are. It shows you how things are tied together, and what depends on what.  Sure, we wanted dark mode to look great. But we also wanted to make sure that dark mode doesn’t slow us down by introducing even more problems than we already have. </p>
<p>And I think that’s what our team achieved here. We made our designs more consistent, buried those radioactive styles, made relationships between colors, and hopefully <em>slightly</em> improved the way we build front-end components moving forward.</p>
<p>It’s certainly the long, hard, and stressful way of doing things, but more important, it’s the way that worked for us.</p>
<hr/>
<p>If you’ve read this far, you’re either a bot — or passionate about design.  Turns out <a href="https://sentry.io/careers/">we’re hiring</a>. Come join us!</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/76aNJOkrbgWw2iTODFX7Gl/605ba5aa92df76d61082f33d63df1466/darkmode_meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Building Dark Mode</title>
      <link>https://blog.sentry.io/2021/03/16/building-dark-mode/</link>
      <description>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which blared entrance music for anyone who stepped foot in our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which <a href="https://blog.sentry.io/2017/11/16/hackweek-winter-2017">blared entrance music</a> for anyone who stepped foot in our office. In 2019, we encouraged folks to be <a href="https://blog.sentry.io/2019/10/17/how-a-hack-week-project-encourages-people-to-be-nice-on-the-internet">nice on the Internet</a>. Noble causes, sure, but for this year’s Hack Week I was determined to advance a cause near and dear to my cold British heart: dark mode.</p>
<p>Little did I know that what started as a minor hack week project would become a major lift that included pantone colors, hex codes and all sorts of variables.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411&amp;fm=webp 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823&amp;fm=webp 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645&amp;fm=webp 1645w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645 1645w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But first things first. If you head on over to User Settings &gt; Theme you can toggle Dark Mode on. We also added an option where you can switch it based on your default system theme:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597&amp;fm=webp 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194&amp;fm=webp 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388&amp;fm=webp 2388w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388 2388w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Given its recent popularity, you might believe dark mode is a fad. But from a design perspective, dark mode is exceptionally useful. That’s because a big part of design is about building relationships between colors. And so implementing dark mode essentially forced everyone on the team to think long, hard, and consistently about our front-end design components. In short, dark mode helped our design system not only look good, but make sense. </p>
<p>We organized the work into three buckets:</p>
<ol>
<li>Cleaning up variables</li>
<li>Designing the system</li>
<li>Creating aliases and refactoring components</li>
</ol>
<h2 id="cleaning-up-variables"><a href="#cleaning-up-variables" aria-label="cleaning up variables permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cleaning Up Variables</h2>
<p>As I began spelunking around our codebase, I found all sorts of color inconsistencies. Things like scattered hex codes and one-off variables such as <code>blueLightest</code> or <code>offWhite</code> being used in all sorts of curious ways. This meant that whenever an engineer wanted to actually to build something, they were forced to think way too long and much too hard about which color they should use.</p>
<p>Here’s an example: I want to add a border to a component. Okay, cool. Which variables can I use? Lemme see. I like gray, so let’s use gray. Simple enough, right?  Well, there are eighteen grays — not to mention its border variables and hex codes. Which one should I use? Why is the design I’m looking at using a new border color? Where in my life did everything go wrong?</p>
<p>No engineer should be forced to answer these questions, and so we went about cleaning up all this junk. To kick things off I made a map of every variable that uses React components. This map was nothing more than a spreadsheet (gross), but it did serve an important purpose: I now knew which deprecated color variables should be replaced. This spreadsheet would help us make a lot of small pull requests where we could change <code>yellowLightest</code> into a new variable called <code>yellow400</code>. Also, by making lots of small pull requests for each variable, we could also limit regressions.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715&amp;fm=webp 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429&amp;fm=webp 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858&amp;fm=webp 2858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858 2858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, most of these variables were stored in one place, as we had been pretty strict about storing them in the <code>theme.tsx</code> file we imported into our React components. Within those components, we applied those styles to  <a href="https://emotion.sh/docs/introduction">emotion</a>, our css plugin. That sounds like a lot — and it is — but emotion is well worth the overhead when building complex apps, as it allows us to isolate our CSS all in a single component like <code>Dropdown</code> so we don’t have to worry about those styles bleeding into other files or pages. </p>
<p>Here’s an example of a component that uses emotion:</p>
<div data-language="javascript"><pre><code><span>import</span> React <span>from</span> <span>&#39;react&#39;</span><span>;</span>
<span>import</span> styled <span>from</span> <span>&#39;@emotion/styled&#39;</span><span>;</span>

<span>const</span> ComponentName <span>=</span> <span>styled</span><span>(</span><span>&#39;div&#39;</span><span>)</span><span><span>`</span><span>
  color: </span><span><span>${</span><span>p</span> <span>=&gt;</span> p<span>.</span>theme<span>.</span>offWhite2<span>}</span></span><span>;
</span><span>`</span></span><span>;</span>

<span>export</span> <span>default</span> ComponentName<span>;</span></code></pre></div>
<p>To remove a color like <code>offwhite2</code>, I needed to search across both our codebases and find all the React components that used that particular variable. Only then could I replace it with something more sensible. Within our <code>theme.tsx</code> file we then organized them into something like this: </p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>

  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>

  yellow100<span>:</span> <span>&#39;#FDE8b4&#39;</span><span>,</span>
  yellow200<span>:</span> <span>&#39;#FFD577&#39;</span><span>,</span>
  yellow300<span>:</span> <span>&#39;#FFC227&#39;</span><span>,</span>

  purple100<span>:</span> <span>&#39;#D4D1EC&#39;</span><span>,</span>
  purple200<span>:</span> <span>&#39;#A396DA&#39;</span><span>,</span>
  purple300<span>:</span> <span>&#39;#6C5FC7&#39;</span><span>,</span>

  blue100<span>:</span> <span>&#39;#D2DFF7&#39;</span><span>,</span>
  blue200<span>:</span> <span>&#39;#92A8EA&#39;</span><span>,</span>
  blue300<span>:</span> <span>&#39;#3D74DB&#39;</span><span>,</span>

  orange100<span>:</span> <span>&#39;#FFF1ED&#39;</span><span>,</span>
  orange200<span>:</span> <span>&#39;#F9C7B9&#39;</span><span>,</span>
  orange300<span>:</span> <span>&#39;#F69C7D&#39;</span><span>,</span>
  orange400<span>:</span> <span>&#39;#FF7738&#39;</span><span>,</span>
  orange500<span>:</span> <span>&#39;#BA4A23&#39;</span><span>,</span>

  red100<span>:</span> <span>&#39;#FCC6C8&#39;</span><span>,</span>
  red200<span>:</span> <span>&#39;#FD918F&#39;</span><span>,</span>
  red300<span>:</span> <span>&#39;#F55459&#39;</span><span>,</span>

  green100<span>:</span> <span>&#39;#B6ECDF&#39;</span><span>,</span>
  green200<span>:</span> <span>&#39;#7DD6BE&#39;</span><span>,</span>
  green300<span>:</span> <span>&#39;#33BF9E&#39;</span><span>,</span>

  pink100<span>:</span> <span>&#39;#FDC9D7&#39;</span><span>,</span>
  pink200<span>:</span> <span>&#39;#FA93AB&#39;</span><span>,</span>
  pink300<span>:</span> <span>&#39;#F05781&#39;</span><span>,</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>In total, this process took weeks of part-time refactoring work, but once it was done it was quite satisfying. We finally had a list of colors that were mostly consistent, to the point that whenever an engineer came to build something they’d know to use these variables. And now that there were fewer options in our system, we could start thinking about the relationships between all these colors.</p>
<h2 id="designing-the-color-system"><a href="#designing-the-color-system" aria-label="designing the color system permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Designing the Color System</h2>
<p>We still had some daunting questions to answer. How are we using color in our app today? What are the default active, hover, and focus states? What are the common border colors? What should our text colors be? And finally, how are those states represented across dropdowns, form fields, buttons, toggles, links, and tags? </p>
<p>To tackle these questions, we needed mockups. After gathering our most common components together in Figma, we found a bunch of inconsistencies in our text and form styles, as well as how we applied border colors to all of our components. And so by unifying all these visual inconsistencies (by creating a smaller list of variables) we could make our UI work for both light and dark mode at the same time. </p>
<p>Here’s an early mockup of those updated components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920&amp;fm=webp 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840&amp;fm=webp 3840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840 3840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="06 presentation-compressed" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This work involved looking across multiple Sentry features — Issues, Discover, Releases, Performance, Alerts — to make sure that the color system that worked for our charts also worked across dark mode. </p>
<p>Next, we created a separate dark mode color palette for our charts:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img7" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img8" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once we felt the base styles had good coverage, we began structuring the UI together in Figma. This not only let us think about how some of these changes might affect customers, but how we could improve accessibility across the board for all our components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img9" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img10" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>After moving back and forth between our smaller components and our layouts, we finally nailed down our new color palette. Again, remember the idea here isn’t just to support dark mode, but to resolve all the outstanding questions surrounding how to build new components. Folks shouldn’t have to Slack the design team to figure out which gray to use for gray text.</p>
<p>A fact of life for designers is being annoyed by your own solutions. For example, I was a little irked that we have a separate <code>background</code> variable here, instead of just adding a new gray. But it makes sense for our product — and how we want to use our color system. When my system clashes with a real-world problem, my system needs to bend to the problem — not the other way around. Consistency is more important than ideological purity.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370&amp;fm=webp 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739&amp;fm=webp 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478&amp;fm=webp 1478w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478 1478w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img11" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It was at this point that we added our design system’s variables to Figma, so that any new colors we used in the future would use these updated versions, too:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747&amp;fm=webp 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494&amp;fm=webp 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988&amp;fm=webp 2988w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988 2988w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img12" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now all we had to do is build the dang thing.</p>
<h2 id="creating-aliases-and-refactoring-components"><a href="#creating-aliases-and-refactoring-components" aria-label="creating aliases and refactoring components permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Creating Aliases and Refactoring Components</h2>
<p>We knew we wanted our paragraph text to be <code>gray500</code> in light mode but then switch to <code>white</code> in dark mode. This toggling between light and dark modes would require an alias such as <code>textColor</code> to flip between these two options. To do this, we needed to create a whole bunch of aliases within our <code>theme.tsx</code> file.</p>
<p>In this file, we first define our range of colors and then we create those aliases like <code>textColor</code>, <code>subText</code>, and <code>borderColor</code>. But this was not an easy process: we argued <em>a lot</em> about the naming conventions and their use across our components. It wasn’t until we started refactoring our components that these names began to make a bit more sense.</p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>
  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>
  <span>// other vars go here</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span>

<span>const</span> aliases <span>=</span> <span>{</span>
  <span>/**
   * Primary text color
   */</span>
  textColor<span>:</span> colors<span>.</span>gray500<span>,</span>

  <span>/**
   * Text that should not have as much emphasis
   */</span>
  subText<span>:</span> colors<span>.</span>gray400<span>,</span>

  <span>/**
   * More...
   */</span>
<span>}</span></code></pre></div>
<p>The aliases above are the colors for our light mode. Next, we started to create the dark mode aliases in this file while refactoring our components and adding new aliases as we found them. In this same file, we have a new object that contains all our colors for dark mode: </p>
<div data-language="javascript"><pre><code><span>const</span> darkAliases <span>=</span> <span>{</span>
  <span>...</span>aliases<span>,</span>
  bodyBackground<span>:</span> colors<span>.</span>black<span>,</span>
  headerBackground<span>:</span> colors<span>.</span>gray500<span>,</span>
  background<span>:</span> colors<span>.</span>black<span>,</span>
  backgroundSecondary<span>:</span> colors<span>.</span>gray500<span>,</span>
  border<span>:</span> colors<span>.</span>gray400<span>,</span>
  innerBorder<span>:</span> colors<span>.</span>gray500<span>,</span>
  textColor<span>:</span> colors<span>.</span>white<span>,</span>
  <span>// more aliases go here </span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>This involved multiple conversations about how our components look across different features — what might work for one component in one place, might not work for another component somewhere else. </p>
<p>We started by refactoring each of our components to work with these new aliases. Here, we identified common patterns where we would have to replace every instance of a variable with these new aliases. One example is text color: sometimes this was as easy as switching out all the <code>gray400</code>s in our components, and sometimes it would involve checking each component to find where we were setting <code>gray500</code> on the <code>color</code> CSS property. This meant many trials — and errors.</p>
<p>However, one of the hardest parts about this refactoring project is that all our styles weren’t located in one place. While our variables and aliases were (somewhat) neatly stored in our <code>theme.tsx</code> file, our styles were still spread out across the following mini-systems of CSS:</p>
<ul>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/includes/bootstrap.less">Bootstrap styles</a>: We’re still breaking up these styles into individual <code>.less</code> files and then refactoring those into our React components. There’s a ton of unused styles here that need to go and we don’t style anything with our <code>theme.tsx</code> variables here.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/base.less">Base styles</a>:  This is a <code>base.less</code> file that’s a reset and a normalize <code>.less</code> file that we made after refactoring a ton of stuff from Bootstrap. These are the core styles for default HTML elements, so we also can’t use our fancy variables from <code>theme.tsx</code> here either.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/styles/global.tsx">Global styles</a>: This is a <code>.tsx</code> file that’s overriding a bunch of stuff from Bootstrap and Base styles and <em>does</em> use styles from our theme. Ideally, everything from Base should be refactored into our Global styles, but that’s not possible since some of our pages aren’t in React yet.</li>
<li><a href="https://github.com/getsentry/sentry/tree/master/src/sentry/static/sentry/app/components">Components</a>: As I mentioned, each of our components use emotion (which I both love and am somewhat annoyed by) which override our Global styles, which themselves override our Base styles. <em>Phew</em>.</li>
<li>Styled components: These are one-off variants or modifications to our components used in a feature like Issues or Alerts. This is where emotion falls somewhat short for me (and we would like to extend it perhaps with something like Tachyons instead). While some of these modifications are due to the fact that our components need tidying up, others are necessary because our defaults in Base and Bootstrap need deleting entirely. <em>Double Phew</em>.</li>
</ul>
<p>If you think all of this sounds and looks like an utter nightmare, well, I won’t argue with you. And yet I think that’s sort of the value inherent within building dark mode: you can now see all the relationships between your components and your styles and your design system.</p>
<p>I’ve worked on a few refactoring projects like this in the past and I know how easy it is to see every problem as the Most Important Problem Of All Time. But that’s almost never the case: in every codebase there’s always stuff that needs refactoring. And so you need to be careful about what you refactor and why. </p>
<p>I subscribe to the belief that there’s <a href="https://css-tricks.com/the-three-types-of-code/">three types of code</a>.  There’s Boring code: the good part of your codebase that doesn’t need refactoring. If you’re building a large-scale web app, it’s unlikely you have much code like this. Next, there’s Salt Mine code. This is the stuff that’s poorly written but doesn’t need to be refactored because it isn’t doing active harm. It’s gross, but it’s fine. And then finally there’s Radioactive code. Not only is it poorly written, it’s doing active harm by leaking into other parts of your codebase and continuously creating toxic problems:</p>
<blockquote>
<p>Radioactive code is the real problem at the heart of every engineering team. It’s the let’s-not-go-to-work-today sort of code. It’s the stuff that’s worse than bad — it’s actively poisoning our codebase. Imagine a codebase as a nuclear reactor; radioactive code is the stuff that’s breached the container and is now leaking into every part of our codebase.</p>
</blockquote>
<p>For most front-end codebases, the design of your color system shows you where your radioactive styles are. It shows you how things are tied together, and what depends on what.  Sure, we wanted dark mode to look great. But we also wanted to make sure that dark mode doesn’t slow us down by introducing even more problems than we already have. </p>
<p>And I think that’s what our team achieved here. We made our designs more consistent, buried those radioactive styles, made relationships between colors, and hopefully <em>slightly</em> improved the way we build front-end components moving forward.</p>
<p>It’s certainly the long, hard, and stressful way of doing things, but more important, it’s the way that worked for us.</p>
<hr/>
<p>If you’ve read this far, you’re either a bot — or passionate about design.  Turns out <a href="https://sentry.io/careers/">we’re hiring</a>. Come join us!</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/76aNJOkrbgWw2iTODFX7Gl/605ba5aa92df76d61082f33d63df1466/darkmode_meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Performance Monitoring Support for React Native</title>
      <link>https://blog.sentry.io/2021/03/11/performance-monitoring-support-for-react-native/</link>
      <description>March Mobile Madness continues with Performance support for React Native. Our friend, Jenn Mueng shares how Performance supports his mobile…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>March Mobile Madness continues with Performance support for React Native. Our friend, Jenn Mueng shares how Performance supports his mobile appliction.</em></p>
<p>In addition to working with Sentry, I also contribute to <a href="https://tourapp.co">Tour</a>, a travel app which helps people plan trips with a drag-and-drop interface. Because Tour is built with React Native, we’ve always had issues accurately gauging how people use our app and its performance. We wrote our own analytics trackers to try and get ahead of these issues, but it was still difficult to monitor the app’s performance.</p>
<p>But now that <a href="https://docs.sentry.io/platforms/react-native/performance/">Performance from Sentry</a> is available on React Native, I’d like to introduce some creative recipes that helped me instrument Tour outside of the instrumentation already included with the Sentry SDK. But first things first. Let’s start with setting the SDK up for basic Performance Monitoring.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-react-native" title="" src="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://docs.sentry.io/platforms/react-native/">Install and set up</a> our React Native SDK:</p>
<div data-language="text"><pre><code>yarn add @sentry/react-native
yarn sentry-wizard -i reactNative -p ios android
cd ios
pod install</code></pre></div>
<p><a href="https://docs.sentry.io/platforms/react-native/performance/#enable-tracing">Enable performance monitoring</a> along with the <a href="https://docs.sentry.io/platforms/react-native/performance/included-instrumentation/#enable-routing-instrumentation">routing instrumentation</a> of your choice:</p>
<div data-language="typescript"><pre><code><span>import</span> <span>*</span> <span>as</span> Sentry <span>from</span> <span>&#34;@sentry/react-native&#34;</span><span>;</span>

<span>const</span> routingInstrumentation <span>=</span> <span>new</span> <span>Sentry</span><span>.</span><span>ReactNavigationV5Instrumentation</span><span>(</span><span>)</span><span>;</span>

Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
  dsn<span>:</span> <span>&#34;DSN&#34;</span><span>,</span>
  tracesSampleRate<span>:</span> <span>1</span><span>,</span>
  integrations<span>:</span> <span>[</span>
    <span>new</span> <span>Sentry</span><span>.</span><span>ReactNativeTracing</span><span>(</span><span>{</span>
      tracingOrigins<span>:</span> <span>[</span><span>&#34;localhost&#34;</span><span>,</span> <span>&#34;my-site-url.com&#34;</span><span>,</span> <span><span>/</span><span>^\/</span><span>/</span></span><span>]</span><span>,</span>
      routingInstrumentation
      <span>// ... other options</span>
    <span>}</span><span>)</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>And that’s it. You’ll start to see transactions for every screen containing Spans for XHR &amp; fetch requests. Before you continue reading, for additional tips and use cases for your app, the following section assumes that you have some knowledge about transactions and spans in Sentry. You can learn more about <a href="https://docs.sentry.io/product/performance/distributed-tracing/#traces-transactions-and-spans">traces, transactions, and spans</a> in our docs.</p>
<h2 id="recipes-for-performance"><a href="#recipes-for-performance" aria-label="recipes for performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Recipes for Performance</h2>
<p>Because Tour uses TypeScript, these code snippets will be in TypeScript —although you can easily adapt them back into plain JavaScript.</p>
<p><strong>Note:</strong> These are intermediate recipes that assume prior knowledge of our React Native SDK. If you just want to learn how to get started, see our <a href="https://docs.sentry.io/platforms/react-native/">docs</a>.</p>
<h3 id="promises"><a href="#promises" aria-label="promises permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Promises</h3>
<p>Sentry’s Performance instrumentation records duration-based events, which are then visualized in the Sentry UI to help you identify slow operations. Because they’re typically attached to network calls or other asynchronous tasks, Promises are a great place to surface poorly performing code – if properly instrumented.</p>
<p>While Promises need to be instrumented manually, simple Promises can be easily wrapped with a helper function instead of writing the instrumentation manually. I created these wrappers so I can instrument any Promise with either a transaction or a span:</p>
<div data-language="typescript"><pre><code><span>const</span> withTransaction <span>=</span> <span>&lt;</span><span>P</span><span>&gt;</span><span>(</span>
  promise<span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span><span>,</span>
  context<span>:</span> TransactionContext
<span>)</span><span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>context<span>)</span><span>;</span>

  <span>return</span> promise
    <span>.</span><span>catch</span><span>(</span><span>(</span>e<span>)</span> <span>=&gt;</span> <span>{</span>
      transaction<span>.</span><span>setStatus</span><span>(</span>SpanStatus<span>.</span>UnknownError<span>)</span><span>;</span>

      <span>throw</span> e<span>;</span>
    <span>}</span><span>)</span>
    <span>.</span><span>finally</span><span>(</span><span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
      transaction<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<div data-language="typescript"><pre><code><span>const</span> withSpan <span>=</span> <span>&lt;</span><span>P</span><span>&gt;</span><span>(</span>
  promise<span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span><span>,</span>
  context<span>:</span> SpanContext<span>,</span>
  <span>/** Leave empty to use scope transaction */</span>
  _transaction<span>?</span><span>:</span> Transaction <span>|</span> <span>null</span>
<span>)</span><span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> transaction <span>=</span>
    _transaction <span>??</span> Sentry<span>.</span><span>getCurrentHub</span><span>(</span><span>)</span><span>?.</span><span>getScope</span><span>(</span><span>)</span><span>?.</span><span>getTransaction</span><span>(</span><span>)</span><span>;</span>

  <span>const</span> span <span>=</span> transaction<span>?.</span><span>startChild</span><span>(</span>context<span>)</span><span>;</span>

  <span>return</span> promise
    <span>.</span><span>catch</span><span>(</span><span>(</span>e<span>)</span> <span>=&gt;</span> <span>{</span>
      span<span>?.</span><span>setStatus</span><span>(</span>SpanStatus<span>.</span>UnknownError<span>)</span><span>;</span>

      <span>throw</span> e<span>;</span>
    <span>}</span><span>)</span>
    <span>.</span><span>finally</span><span>(</span><span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
      span<span>?.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<p>Note that the third parameter of <code>withSpan</code> is optional. If you pass a transaction object, then the span will be attached to that transaction. If the parameter is omitted, then that span will be attached to the active transaction on the current Sentry scope. This allows <code>withSpan</code> to easily integrate with the included routing instrumentation that automatically attaches route change transactions to the scope.</p>
<p>This is how we use <code>withSpan</code> inside Tour: by instrumenting each call to the client individually, our venue client can either make an API call or load from the local device cache.</p>
<div data-language="typescript"><pre><code><span>fetchVenues</span><span>(</span>venueIds<span>:</span> <span>string</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>Promise</span><span>&lt;</span>Venue<span>&gt;</span> <span>{</span>
    <span>return</span> <span>Promise</span><span>.</span><span>all</span><span>(</span>
      venueIds<span>.</span><span>map</span><span>(</span>
        <span>withSpan</span><span>(</span>venueClient<span>.</span><span>getVenue</span><span>(</span>venueId<span>)</span><span>,</span> <span>{</span>
          description<span>:</span> <span><span>`</span><span>venueId: </span><span><span>${</span>venueId<span>}</span></span><span>`</span></span><span>,</span>
          op<span>:</span> <span>&#34;get.foursquare&#34;</span><span>,</span>
        <span>}</span><span>)</span>
      <span>)</span>
    <span>)</span><span>;</span>
  <span>}</span></code></pre></div>
<p>Below is how they’re rendered in Sentry:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=460&amp;fm=webp 460w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=919&amp;fm=webp 919w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=1838&amp;fm=webp 1838w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=460 460w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=919 919w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=1838 1838w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="react-native-tour2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="transaction-hub"><a href="#transaction-hub" aria-label="transaction hub permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Transaction Hub</h3>
<p>As I instrumented my code, I discovered that passing transaction objects around quickly became tedious. That’s because Tour’s code is designed in a functional way: pure functions take some parameters, read the global Redux state, perform some computation, and then finally output something. This made it extremely difficult to instrument at first, which is what led me on the path to creating what I’ve dubbed the transaction hub.</p>
<p>The transaction hub is a simple exported object declared in a file where all of the active transactions live. Each type of transaction has a unique <code>op</code> (operation), such as <code>&#34;trip.initialize&#34;</code>. And by using this <code>op</code> field, we were able to add only a few  lines of code to each function in order to start or stop a transaction anywhere in the app.</p>
<p>For example, for the op <code>&#34;trip.initialize&#34;</code> we would start a transaction when the initialization of the trip screen begins. And then, once the screen is mounted, we could easily finish it on the transaction hub.</p>
<div data-language="typescript"><pre><code><span>const</span> transactionHub <span>=</span> <span>{</span>
  transactions<span>:</span> <span>[</span><span>]</span><span>,</span>
  <span>startTransaction</span><span>(</span>transactionContext<span>:</span> TransactionContext<span>)</span><span>:</span> Transaction <span>{</span>
    <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>transactionContext<span>)</span><span>;</span>

    <span>this</span><span>.</span>transactions<span>.</span><span>push</span><span>(</span>transaction<span>)</span><span>;</span>

    <span>return</span> transaction<span>;</span>
  <span>}</span><span>,</span>
  <span>finishTransaction</span><span>(</span>op<span>:</span> <span>string</span><span>)</span><span>:</span> Transaction<span>[</span><span>]</span> <span>{</span>
    <span>// Find all the transactions with this op.</span>
    <span>const</span> selectedTransactions <span>=</span> <span>this</span><span>.</span>transactions<span>.</span><span>filter</span><span>(</span>t <span>=&gt;</span> t<span>.</span>op <span>==</span> op<span>)</span><span>;</span>

    <span>// Finish each of the transactions with this op.</span>
    selectedTransactions<span>.</span><span>forEach</span><span>(</span>t <span>=&gt;</span> t<span>.</span><span>finish</span><span>(</span><span>)</span><span>)</span><span>;</span>

    <span>// Remove these finished transactions from the transaction hub</span>
    <span>this</span><span>.</span>transactions <span>=</span> <span>this</span><span>.</span>transactions<span>.</span><span>filter</span><span>(</span>t <span>=&gt;</span> t<span>.</span>op <span>!=</span> op<span>)</span><span>;</span>

    <span>return</span> selectedTransactions<span>;</span>
  <span>}</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>;</span></code></pre></div>
<p>So when you want to start a transaction on the hub, you would call:</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>startTransaction</span><span>(</span><span>{</span>
	op<span>:</span> <span>&#39;trip.initialize&#39;</span><span>,</span>
	name<span>:</span> <span>&#39;Initialize New Trip&#39;</span><span>,</span>
	tags<span>:</span> <span>{</span>
		tripId
	<span>}</span><span>,</span>
	trimEnd<span>:</span> <span>true</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>And when you want to finish the transaction, you can call: <code>finishTransaction</code> like below from anywhere in the app.</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>finishTransaction</span><span>(</span><span>&#39;trip.initialize&#39;</span><span>)</span></code></pre></div>
<h4 id="instrumenting-our-real-time-data-flow"><a href="#instrumenting-our-real-time-data-flow" aria-label="instrumenting our real time data flow permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting our real-time data flow</h4>
<p>We took the transaction hub a little further.</p>
<p>In Tour, we have a data flow where any changes that you make on the UI are first computed on the app itself before being updated on the Firestore document update. Only then does the change come back down to be stored in our persist store, before being shown on the UI. The UI only accesses data from the persist store and never listens to Firestore directly. This is done to ensure that this flow is done in real time, meaning the result is the same whether you are online or offline.</p>
<p>This too seemed like a difficult task to instrument, but with a little playing around we found a way forward by extending the transaction hub. Here, each change gets assigned a timestamp as well as a list of all the documents it changes. Then we have the hub listen for the event that triggers the document update until it finally finishes the transaction.</p>
<div data-language="typescript"><pre><code><span>// Simplified and shortened example</span>
<span>const</span> transactionHub <span>=</span> <span>{</span>
  transactions<span>:</span> <span>[</span><span>]</span><span>,</span>
  <span>// A map of spans by their write ids</span>
  spansByWriteId<span>:</span> <span>{</span><span>}</span><span>,</span>
  <span>startWriteTransaction</span><span>(</span>
    writes<span>:</span> <span>{</span>
      id<span>:</span> <span>string</span><span>;</span>
      name<span>:</span> <span>string</span><span>;</span>
    <span>}</span><span>[</span><span>]</span><span>,</span>
    name<span>?</span><span>:</span> <span>string</span>
  <span>)</span><span>:</span> Transaction <span>{</span>
    <span>const</span> transactionContext <span>=</span> <span>{</span>
      op<span>:</span> <span>&#34;db.write&#34;</span><span>,</span>
      name<span>:</span> name <span>??</span> <span>&#34;Database Write&#34;</span><span>,</span>
    <span>}</span><span>;</span>

    <span>// Start the parent transaction</span>
    <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>transactionContext<span>)</span><span>;</span>

    <span>// Create spans for each write operation</span>
    writes<span>.</span><span>forEach</span><span>(</span><span>(</span>write<span>)</span> <span>=&gt;</span> <span>{</span>
        <span>// We store each span to the map via ID so we can find them again</span>
      <span>this</span><span>.</span>spansByWriteId<span>[</span>write<span>.</span>id<span>]</span> <span>=</span> transaction<span>.</span><span>startChild</span><span>(</span><span>{</span>
        op<span>:</span> <span>&#34;db.doc.write&#34;</span><span>,</span>
        data<span>:</span> <span>{</span>
          id<span>:</span> write<span>.</span>id<span>,</span>
        <span>}</span><span>,</span>
        description<span>:</span> write<span>.</span>name<span>,</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>

    <span>this</span><span>.</span>transactions<span>.</span><span>push</span><span>(</span>transaction<span>)</span><span>;</span>

    <span>return</span> transaction<span>;</span>
  <span>}</span><span>,</span>
  <span>onDbUpdate</span><span>(</span>id<span>:</span> <span>string</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>const</span> span <span>=</span> <span>this</span><span>.</span>spansByWriteId<span>[</span>id<span>]</span><span>;</span>
    <span>if</span> <span>(</span>span<span>)</span> <span>{</span>
      <span>// Finish the write span</span>
      span<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>

      <span>if</span> <span>(</span>
        <span>// Check that each child span has been finished</span>
        span<span>.</span>transaction <span>&amp;&amp;</span>
        span<span>.</span>transaction<span>.</span>spanRecorder<span>.</span>spans
          <span>.</span><span>filter</span><span>(</span><span>(</span>s<span>)</span> <span>=&gt;</span> s <span>!==</span> span<span>.</span>transaction<span>)</span>
          <span>.</span><span>every</span><span>(</span><span>(</span>s<span>)</span> <span>=&gt;</span> s<span>.</span>endTimestamp<span>)</span>
      <span>)</span> <span>{</span>
        <span>// If every child is finished, we finish the transaction</span>
        span<span>.</span>transaction<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>;</span></code></pre></div>
<p>By calling <code>startWriteTransaction</code> when we write to Firestore and calling <code>onDbUpdate</code> when the write comes in, this allows us to engage what I believe to be the most important transaction in the whole app. Although it looks simple, it allows us to essentially gauge User Misery every time a user makes a change to their trip plans!</p>
<div data-language="typescript"><pre><code><span>// Changes will be made to the trip and user document</span>
transactionHub<span>.</span><span>startWriteTransaction</span><span>(</span><span>[</span>
  <span>{</span>
    id<span>:</span> <span><span>`</span><span><span>${</span>trip<span>.</span>id<span>}</span></span><span>-</span><span><span>${</span>trip<span>.</span>metadata<span>.</span>timestamp<span>}</span></span><span>`</span></span><span>,</span>
    name<span>:</span> <span>&#34;Trip&#34;</span><span>,</span>
  <span>}</span><span>,</span>
  <span>{</span>
    id<span>:</span> <span><span>`</span><span><span>${</span>uid<span>}</span></span><span>-</span><span><span>${</span>userUpdateTimestamp<span>}</span></span><span>`</span></span><span>,</span>
    name<span>:</span> <span>&#34;User&#34;</span><span>,</span>
  <span>}</span><span>,</span>
<span>]</span><span>)</span><span>;</span></code></pre></div>
<p>And when the changes get updated on the database listener, you would call <code>onDbUpdate</code> like so:</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>onDbUpdate</span><span>(</span><span><span>`</span><span><span>${</span>trip<span>.</span>id<span>}</span></span><span>-</span><span><span>${</span>trip<span>.</span>timestamp<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
transactionHub<span>.</span><span>onDbUpdate</span><span>(</span><span><span>`</span><span><span>${</span>uid<span>}</span></span><span>-</span><span><span>${</span>userData<span>.</span>updateTimestamp<span>}</span></span><span>`</span></span><span>)</span><span>;</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=457&amp;fm=webp 457w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=914&amp;fm=webp 914w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=1828&amp;fm=webp 1828w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=457 457w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=914 914w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=1828 1828w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="react-native-tour1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>I am still experimenting with <a href="https://docs.sentry.io/product/performance/">Performance</a> and am sure there will be a lot more recipes and techniques for instrumenting apps. I hope you’ll be able to come up with some cool ones as well!</p>
<p>To start using Sentry with React Native, configure the <a href="https://docs.sentry.io/platforms/react-native/">SDK</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Performance Monitoring Support for React Native</title>
      <link>https://blog.sentry.io/2021/03/11/performance-monitoring-support-for-react-native/</link>
      <description>March Mobile Madness continues with Performance support for React Native. Our friend, Jenn Mueng shares how Performance supports his mobile…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>March Mobile Madness continues with Performance support for React Native. Our friend, Jenn Mueng shares how Performance supports his mobile appliction.</em></p>
<p>In addition to working with Sentry, I also contribute to <a href="https://tourapp.co">Tour</a>, a travel app which helps people plan trips with a drag-and-drop interface. Because Tour is built with React Native, we’ve always had issues accurately gauging how people use our app and its performance. We wrote our own analytics trackers to try and get ahead of these issues, but it was still difficult to monitor the app’s performance.</p>
<p>But now that <a href="https://docs.sentry.io/platforms/react-native/performance/">Performance from Sentry</a> is available on React Native, I’d like to introduce some creative recipes that helped me instrument Tour outside of the instrumentation already included with the Sentry SDK. But first things first. Let’s start with setting the SDK up for basic Performance Monitoring.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-react-native" title="" src="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://docs.sentry.io/platforms/react-native/">Install and set up</a> our React Native SDK:</p>
<div data-language="text"><pre><code>yarn add @sentry/react-native
yarn sentry-wizard -i reactNative -p ios android
cd ios
pod install</code></pre></div>
<p><a href="https://docs.sentry.io/platforms/react-native/performance/#enable-tracing">Enable performance monitoring</a> along with the <a href="https://docs.sentry.io/platforms/react-native/performance/included-instrumentation/#enable-routing-instrumentation">routing instrumentation</a> of your choice:</p>
<div data-language="typescript"><pre><code><span>import</span> <span>*</span> <span>as</span> Sentry <span>from</span> <span>&#34;@sentry/react-native&#34;</span><span>;</span>

<span>const</span> routingInstrumentation <span>=</span> <span>new</span> <span>Sentry</span><span>.</span><span>ReactNavigationV5Instrumentation</span><span>(</span><span>)</span><span>;</span>

Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
  dsn<span>:</span> <span>&#34;DSN&#34;</span><span>,</span>
  tracesSampleRate<span>:</span> <span>1</span><span>,</span>
  integrations<span>:</span> <span>[</span>
    <span>new</span> <span>Sentry</span><span>.</span><span>ReactNativeTracing</span><span>(</span><span>{</span>
      tracingOrigins<span>:</span> <span>[</span><span>&#34;localhost&#34;</span><span>,</span> <span>&#34;my-site-url.com&#34;</span><span>,</span> <span><span>/</span><span>^\/</span><span>/</span></span><span>]</span><span>,</span>
      routingInstrumentation
      <span>// ... other options</span>
    <span>}</span><span>)</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>And that’s it. You’ll start to see transactions for every screen containing Spans for XHR &amp; fetch requests. Before you continue reading, for additional tips and use cases for your app, the following section assumes that you have some knowledge about transactions and spans in Sentry. You can learn more about <a href="https://docs.sentry.io/product/performance/distributed-tracing/#traces-transactions-and-spans">traces, transactions, and spans</a> in our docs.</p>
<h2 id="recipes-for-performance"><a href="#recipes-for-performance" aria-label="recipes for performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Recipes for Performance</h2>
<p>Because Tour uses TypeScript, these code snippets will be in TypeScript —although you can easily adapt them back into plain JavaScript.</p>
<p><strong>Note:</strong> These are intermediate recipes that assume prior knowledge of our React Native SDK. If you just want to learn how to get started, see our <a href="https://docs.sentry.io/platforms/react-native/">docs</a>.</p>
<h3 id="promises"><a href="#promises" aria-label="promises permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Promises</h3>
<p>Sentry’s Performance instrumentation records duration-based events, which are then visualized in the Sentry UI to help you identify slow operations. Because they’re typically attached to network calls or other asynchronous tasks, Promises are a great place to surface poorly performing code – if properly instrumented.</p>
<p>While Promises need to be instrumented manually, simple Promises can be easily wrapped with a helper function instead of writing the instrumentation manually. I created these wrappers so I can instrument any Promise with either a transaction or a span:</p>
<div data-language="typescript"><pre><code><span>const</span> withTransaction <span>=</span> <span>&lt;</span><span>P</span><span>&gt;</span><span>(</span>
  promise<span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span><span>,</span>
  context<span>:</span> TransactionContext
<span>)</span><span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>context<span>)</span><span>;</span>

  <span>return</span> promise
    <span>.</span><span>catch</span><span>(</span><span>(</span>e<span>)</span> <span>=&gt;</span> <span>{</span>
      transaction<span>.</span><span>setStatus</span><span>(</span>SpanStatus<span>.</span>UnknownError<span>)</span><span>;</span>

      <span>throw</span> e<span>;</span>
    <span>}</span><span>)</span>
    <span>.</span><span>finally</span><span>(</span><span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
      transaction<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<div data-language="typescript"><pre><code><span>const</span> withSpan <span>=</span> <span>&lt;</span><span>P</span><span>&gt;</span><span>(</span>
  promise<span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span><span>,</span>
  context<span>:</span> SpanContext<span>,</span>
  <span>/** Leave empty to use scope transaction */</span>
  _transaction<span>?</span><span>:</span> Transaction <span>|</span> <span>null</span>
<span>)</span><span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> transaction <span>=</span>
    _transaction <span>??</span> Sentry<span>.</span><span>getCurrentHub</span><span>(</span><span>)</span><span>?.</span><span>getScope</span><span>(</span><span>)</span><span>?.</span><span>getTransaction</span><span>(</span><span>)</span><span>;</span>

  <span>const</span> span <span>=</span> transaction<span>?.</span><span>startChild</span><span>(</span>context<span>)</span><span>;</span>

  <span>return</span> promise
    <span>.</span><span>catch</span><span>(</span><span>(</span>e<span>)</span> <span>=&gt;</span> <span>{</span>
      span<span>?.</span><span>setStatus</span><span>(</span>SpanStatus<span>.</span>UnknownError<span>)</span><span>;</span>

      <span>throw</span> e<span>;</span>
    <span>}</span><span>)</span>
    <span>.</span><span>finally</span><span>(</span><span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
      span<span>?.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<p>Note that the third parameter of <code>withSpan</code> is optional. If you pass a transaction object, then the span will be attached to that transaction. If the parameter is omitted, then that span will be attached to the active transaction on the current Sentry scope. This allows <code>withSpan</code> to easily integrate with the included routing instrumentation that automatically attaches route change transactions to the scope.</p>
<p>This is how we use <code>withSpan</code> inside Tour: by instrumenting each call to the client individually, our venue client can either make an API call or load from the local device cache.</p>
<div data-language="typescript"><pre><code><span>fetchVenues</span><span>(</span>venueIds<span>:</span> <span>string</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>Promise</span><span>&lt;</span>Venue<span>&gt;</span> <span>{</span>
    <span>return</span> <span>Promise</span><span>.</span><span>all</span><span>(</span>
      venueIds<span>.</span><span>map</span><span>(</span>
        <span>withSpan</span><span>(</span>venueClient<span>.</span><span>getVenue</span><span>(</span>venueId<span>)</span><span>,</span> <span>{</span>
          description<span>:</span> <span><span>`</span><span>venueId: </span><span><span>${</span>venueId<span>}</span></span><span>`</span></span><span>,</span>
          op<span>:</span> <span>&#34;get.foursquare&#34;</span><span>,</span>
        <span>}</span><span>)</span>
      <span>)</span>
    <span>)</span><span>;</span>
  <span>}</span></code></pre></div>
<p>Below is how they’re rendered in Sentry:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=460&amp;fm=webp 460w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=919&amp;fm=webp 919w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=1838&amp;fm=webp 1838w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=460 460w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=919 919w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=1838 1838w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="react-native-tour2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="transaction-hub"><a href="#transaction-hub" aria-label="transaction hub permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Transaction Hub</h3>
<p>As I instrumented my code, I discovered that passing transaction objects around quickly became tedious. That’s because Tour’s code is designed in a functional way: pure functions take some parameters, read the global Redux state, perform some computation, and then finally output something. This made it extremely difficult to instrument at first, which is what led me on the path to creating what I’ve dubbed the transaction hub.</p>
<p>The transaction hub is a simple exported object declared in a file where all of the active transactions live. Each type of transaction has a unique <code>op</code> (operation), such as <code>&#34;trip.initialize&#34;</code>. And by using this <code>op</code> field, we were able to add only a few  lines of code to each function in order to start or stop a transaction anywhere in the app.</p>
<p>For example, for the op <code>&#34;trip.initialize&#34;</code> we would start a transaction when the initialization of the trip screen begins. And then, once the screen is mounted, we could easily finish it on the transaction hub.</p>
<div data-language="typescript"><pre><code><span>const</span> transactionHub <span>=</span> <span>{</span>
  transactions<span>:</span> <span>[</span><span>]</span><span>,</span>
  <span>startTransaction</span><span>(</span>transactionContext<span>:</span> TransactionContext<span>)</span><span>:</span> Transaction <span>{</span>
    <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>transactionContext<span>)</span><span>;</span>

    <span>this</span><span>.</span>transactions<span>.</span><span>push</span><span>(</span>transaction<span>)</span><span>;</span>

    <span>return</span> transaction<span>;</span>
  <span>}</span><span>,</span>
  <span>finishTransaction</span><span>(</span>op<span>:</span> <span>string</span><span>)</span><span>:</span> Transaction<span>[</span><span>]</span> <span>{</span>
    <span>// Find all the transactions with this op.</span>
    <span>const</span> selectedTransactions <span>=</span> <span>this</span><span>.</span>transactions<span>.</span><span>filter</span><span>(</span>t <span>=&gt;</span> t<span>.</span>op <span>==</span> op<span>)</span><span>;</span>

    <span>// Finish each of the transactions with this op.</span>
    selectedTransactions<span>.</span><span>forEach</span><span>(</span>t <span>=&gt;</span> t<span>.</span><span>finish</span><span>(</span><span>)</span><span>)</span><span>;</span>

    <span>// Remove these finished transactions from the transaction hub</span>
    <span>this</span><span>.</span>transactions <span>=</span> <span>this</span><span>.</span>transactions<span>.</span><span>filter</span><span>(</span>t <span>=&gt;</span> t<span>.</span>op <span>!=</span> op<span>)</span><span>;</span>

    <span>return</span> selectedTransactions<span>;</span>
  <span>}</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>;</span></code></pre></div>
<p>So when you want to start a transaction on the hub, you would call:</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>startTransaction</span><span>(</span><span>{</span>
	op<span>:</span> <span>&#39;trip.initialize&#39;</span><span>,</span>
	name<span>:</span> <span>&#39;Initialize New Trip&#39;</span><span>,</span>
	tags<span>:</span> <span>{</span>
		tripId
	<span>}</span><span>,</span>
	trimEnd<span>:</span> <span>true</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>And when you want to finish the transaction, you can call: <code>finishTransaction</code> like below from anywhere in the app.</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>finishTransaction</span><span>(</span><span>&#39;trip.initialize&#39;</span><span>)</span></code></pre></div>
<h4 id="instrumenting-our-real-time-data-flow"><a href="#instrumenting-our-real-time-data-flow" aria-label="instrumenting our real time data flow permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting our real-time data flow</h4>
<p>We took the transaction hub a little further.</p>
<p>In Tour, we have a data flow where any changes that you make on the UI are first computed on the app itself before being updated on the Firestore document update. Only then does the change come back down to be stored in our persist store, before being shown on the UI. The UI only accesses data from the persist store and never listens to Firestore directly. This is done to ensure that this flow is done in real time, meaning the result is the same whether you are online or offline.</p>
<p>This too seemed like a difficult task to instrument, but with a little playing around we found a way forward by extending the transaction hub. Here, each change gets assigned a timestamp as well as a list of all the documents it changes. Then we have the hub listen for the event that triggers the document update until it finally finishes the transaction.</p>
<div data-language="typescript"><pre><code><span>// Simplified and shortened example</span>
<span>const</span> transactionHub <span>=</span> <span>{</span>
  transactions<span>:</span> <span>[</span><span>]</span><span>,</span>
  <span>// A map of spans by their write ids</span>
  spansByWriteId<span>:</span> <span>{</span><span>}</span><span>,</span>
  <span>startWriteTransaction</span><span>(</span>
    writes<span>:</span> <span>{</span>
      id<span>:</span> <span>string</span><span>;</span>
      name<span>:</span> <span>string</span><span>;</span>
    <span>}</span><span>[</span><span>]</span><span>,</span>
    name<span>?</span><span>:</span> <span>string</span>
  <span>)</span><span>:</span> Transaction <span>{</span>
    <span>const</span> transactionContext <span>=</span> <span>{</span>
      op<span>:</span> <span>&#34;db.write&#34;</span><span>,</span>
      name<span>:</span> name <span>??</span> <span>&#34;Database Write&#34;</span><span>,</span>
    <span>}</span><span>;</span>

    <span>// Start the parent transaction</span>
    <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>transactionContext<span>)</span><span>;</span>

    <span>// Create spans for each write operation</span>
    writes<span>.</span><span>forEach</span><span>(</span><span>(</span>write<span>)</span> <span>=&gt;</span> <span>{</span>
        <span>// We store each span to the map via ID so we can find them again</span>
      <span>this</span><span>.</span>spansByWriteId<span>[</span>write<span>.</span>id<span>]</span> <span>=</span> transaction<span>.</span><span>startChild</span><span>(</span><span>{</span>
        op<span>:</span> <span>&#34;db.doc.write&#34;</span><span>,</span>
        data<span>:</span> <span>{</span>
          id<span>:</span> write<span>.</span>id<span>,</span>
        <span>}</span><span>,</span>
        description<span>:</span> write<span>.</span>name<span>,</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>

    <span>this</span><span>.</span>transactions<span>.</span><span>push</span><span>(</span>transaction<span>)</span><span>;</span>

    <span>return</span> transaction<span>;</span>
  <span>}</span><span>,</span>
  <span>onDbUpdate</span><span>(</span>id<span>:</span> <span>string</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>const</span> span <span>=</span> <span>this</span><span>.</span>spansByWriteId<span>[</span>id<span>]</span><span>;</span>
    <span>if</span> <span>(</span>span<span>)</span> <span>{</span>
      <span>// Finish the write span</span>
      span<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>

      <span>if</span> <span>(</span>
        <span>// Check that each child span has been finished</span>
        span<span>.</span>transaction <span>&amp;&amp;</span>
        span<span>.</span>transaction<span>.</span>spanRecorder<span>.</span>spans
          <span>.</span><span>filter</span><span>(</span><span>(</span>s<span>)</span> <span>=&gt;</span> s <span>!==</span> span<span>.</span>transaction<span>)</span>
          <span>.</span><span>every</span><span>(</span><span>(</span>s<span>)</span> <span>=&gt;</span> s<span>.</span>endTimestamp<span>)</span>
      <span>)</span> <span>{</span>
        <span>// If every child is finished, we finish the transaction</span>
        span<span>.</span>transaction<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>;</span></code></pre></div>
<p>By calling <code>startWriteTransaction</code> when we write to Firestore and calling <code>onDbUpdate</code> when the write comes in, this allows us to engage what I believe to be the most important transaction in the whole app. Although it looks simple, it allows us to essentially gauge User Misery every time a user makes a change to their trip plans!</p>
<div data-language="typescript"><pre><code><span>// Changes will be made to the trip and user document</span>
transactionHub<span>.</span><span>startWriteTransaction</span><span>(</span><span>[</span>
  <span>{</span>
    id<span>:</span> <span><span>`</span><span><span>${</span>trip<span>.</span>id<span>}</span></span><span>-</span><span><span>${</span>trip<span>.</span>metadata<span>.</span>timestamp<span>}</span></span><span>`</span></span><span>,</span>
    name<span>:</span> <span>&#34;Trip&#34;</span><span>,</span>
  <span>}</span><span>,</span>
  <span>{</span>
    id<span>:</span> <span><span>`</span><span><span>${</span>uid<span>}</span></span><span>-</span><span><span>${</span>userUpdateTimestamp<span>}</span></span><span>`</span></span><span>,</span>
    name<span>:</span> <span>&#34;User&#34;</span><span>,</span>
  <span>}</span><span>,</span>
<span>]</span><span>)</span><span>;</span></code></pre></div>
<p>And when the changes get updated on the database listener, you would call <code>onDbUpdate</code> like so:</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>onDbUpdate</span><span>(</span><span><span>`</span><span><span>${</span>trip<span>.</span>id<span>}</span></span><span>-</span><span><span>${</span>trip<span>.</span>timestamp<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
transactionHub<span>.</span><span>onDbUpdate</span><span>(</span><span><span>`</span><span><span>${</span>uid<span>}</span></span><span>-</span><span><span>${</span>userData<span>.</span>updateTimestamp<span>}</span></span><span>`</span></span><span>)</span><span>;</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=457&amp;fm=webp 457w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=914&amp;fm=webp 914w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=1828&amp;fm=webp 1828w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=457 457w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=914 914w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=1828 1828w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="react-native-tour1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>I am still experimenting with <a href="https://docs.sentry.io/product/performance/">Performance</a> and am sure there will be a lot more recipes and techniques for instrumenting apps. I hope you’ll be able to come up with some cool ones as well!</p>
<p>To start using Sentry with React Native, configure the <a href="https://docs.sentry.io/platforms/react-native/">SDK</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Issue Detail Performance Improvements</title>
      <link>https://blog.sentry.io/2021/03/09/issue-detail-performance-improvements/</link>
      <description>One of Sentry’s most-trafficked pages is our issue details page, as it helps our customers understand the root cause of an error. For those…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>One of Sentry’s most-trafficked pages is our issue details page, as it helps our customers understand the root cause of an error. For those of you who are new to Sentry, we define an issue as a group of similar events. And to render these issue details, we need to fetch a significant amount of data from these events — counts, charts, and other metadata.</p>
<p>There are two components to this page: latest event, and summary statistics. And the problem we faced was that the page was loading the latest event only after loading the summary statistics, creating response times of more than a second.</p>
<p>We had no idea what — or why — this was happening. First, we worked toward solving the what. Using <a href="https://sentry.io/for/performance/">Performance</a>, we noticed that the latest event loaded only after the summary statistics loaded; that is, we could see the second request could only start after the first request had finished.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=838&amp;fm=webp 838w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=1676&amp;fm=webp 1676w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=838 838w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=1676 1676w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Next, the why: looking into the issue page’s <a href="https://docs.sentry.io/platforms/javascript/guides/react/performance/">React</a> component tree, we noticed that the latest event component was a child of the summary component.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=1310&amp;fm=webp 1310w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=2620&amp;fm=webp 2620w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=5240&amp;fm=webp 5240w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=1310 1310w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=2620 2620w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=5240 5240w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Although we were fetching the data for the latest event in its component, because this component could only begin rendering after its parent has fully rendered (which in turn is blocked by the parent request), the two requests were not parallelized.</p>
<p>Our fix was to begin loading data from both endpoints higher in the component tree, allowing us to parallelize both requests. Then we passed the result down so each component can render as soon as its data became available.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=381&amp;fm=webp 381w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=762&amp;fm=webp 762w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=1524&amp;fm=webp 1524w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=381 381w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=762 762w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=1524 1524w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>After the fix, the issue page’s P75 response time dropped by about 1 second:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>You can’t fix what you can’t see. And because Performance gave us the visibility into the two requests that needed to be parallelized (but weren’t), we were able to find the quickest path to a solution — and a faster page for our customers.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5DvBhuWGl7g4caBuyrcdZ8/eb5e36b71e43ba5a4c73a9beed8d5886/meta-dogfooding.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>With Flutter and Sentry, You Can Put All Your Eggs in One Repo</title>
      <link>https://blog.sentry.io/2021/03/03/with-flutter-and-sentry-you-can-put-all-your-eggs-in-one-repo/</link>
      <description>This month we’re updating several of our mobile SDKs. You might think it’s madness… Mobile March Madness. First up is Flutter.  It’s fair to…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>This month we’re updating several of our mobile SDKs. You might think it’s madness… Mobile March Madness. First up is <a href="https://docs.sentry.io/platforms/flutter/">Flutter</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="march-flutter-sentry-hero" title="" src="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It’s fair to say that all of us have had a bad mobile experience which frustrated us enough to warrant switching apps. Getting the experience right requires a lot of work due to the variety of OSes, screen sizes and orientations. Using Sentry’s new <a href="https://sentry.io/for/flutter/">Flutter</a> SDK gives you the advantage of being able to fix issues once and have the solution work everywhere.</p>
<p>Built upon the original Dart SDK written by <a href="https://flutter.dev/">Google</a>, we expanded functionality to report device and operating system details, native crashes, session data, and version adoption so developers can quickly determine if a release is successful or if it should be rolled back. Our new Flutter SDK makes it easy for developers to segment issues to determine which users are adopting the latest versions or encountering crashes or in the not-so-ideal case, both.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=750&amp;fm=webp 750w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=1500&amp;fm=webp 1500w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=750 750w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=1500 1500w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter releases" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<blockquote>
<p>Flutter provides customers with a fast path to building beautiful apps for multiple platforms from a single codebase. But one big challenge for mobile app developers is dealing with all the dependencies that can affect an application’s uptime and performance across multiple platforms. Thanks to Sentry’s Flutter support, developers now have access to a great suite of tools for monitoring and maintaining their app.</p>
</blockquote>
<p>  <em><a href="https://www.linkedin.com/in/timsneath/">Tim Sneath</a>, Director of PM, Flutter &amp; Dart, Google</em></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=750&amp;fm=webp 750w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=1500&amp;fm=webp 1500w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=750 750w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=1500 1500w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter release" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://docs.sentry.io/platforms/flutter/configuration/">Configuring Sentry takes only a few minutes</a>. Get the SDK from pub.dev by adding the following to your <code>pubspec.yaml</code>:</p>
<div data-language="yaml"><pre><code><span>dependencies</span><span>:</span>
  <span>sentry_flutter</span><span>:</span> ^4.0.0</code></pre></div>
<p>Import Sentry and initialize it:</p>
<div data-language="dart"><pre><code><span>import</span> <span>&#39;package:flutter/widgets.dart&#39;</span><span>;</span>
<span>import</span> <span>&#39;package:sentry_flutter/sentry_flutter.dart&#39;</span><span>;</span>

<span>Future</span><span><span>&lt;</span><span>void</span><span>&gt;</span></span> <span>main</span><span>(</span><span>)</span> <span>async</span> <span>{</span>
  <span>await</span> <span>SentryFlutter</span><span>.</span><span>init</span><span>(</span>
    <span>(</span>options<span>)</span> <span>=</span><span>&gt;</span> options<span>.</span>dsn <span>=</span> <span>&#39;https://&lt;key&gt;@sentry.io/&lt;project&gt;&#39;</span><span>,</span>
    appRunner<span>:</span> <span>(</span><span>)</span> <span>=</span><span>&gt;</span> <span>runApp</span><span>(</span><span>MyApp</span><span>(</span><span>)</span><span>)</span><span>,</span>
  <span>)</span><span>;</span>
<span>}</span></code></pre></div>
<p>Additionally, developers can monitor Dart/Flutter and Native SDKs (Kotlin, Java for Android, Swift, Objective-C for iOS, and C/C++ for both platforms). We also symbolicate Flutter apps, capture UI events and HTTP requests as <a href="https://docs.sentry.io/platforms/flutter/enriching-events/breadcrumbs/">breadcrumbs</a> so that you can follow the trail for each user. In the off chance a user’s device goes offline or a fatal crash occurs, Sentry provides <a href="https://docs.sentry.io/platforms/flutter/">offline caching and fatal crash support</a>. In these scenarios, Sentry will be able to send the reports once the device comes online again, so you won’t miss these valuable reports.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700&amp;fm=webp 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400&amp;fm=webp 1400w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400 1400w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With our event query tool, <a href="https://docs.sentry.io/product/discover-queries/">Discover</a>, you can understand how an issue impacts users across any segment (device type, os, region, URL, etc). Set up an <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/metric-alerts/">alert</a> based on this saved query so that you are notified when that issue develops again.</p>
<p>We don’t just tell you that there is a crash; we tie the user experience back to the impact, so you can focus on building what’s next great thing rather than debugging hard-to-find bugs.</p>
<p>With Sentry’s SDK for Flutter, you can get notified of errors that occur on Android, iOS, or native platforms in real-time:</p>
<ul>
<li><strong>See</strong> errors and crashes that were introduced in every release</li>
<li><strong>Solve</strong> issues quickly with full context: contextualized stack traces, events that lead to the error, client, hardware information, and the very commit that introduced the error.</li>
<li><strong>Learn</strong> and analyze event data to reduce regressions and ultimately improve user adoption and engagement</li>
</ul>
<p>To start using Sentry with Flutter, <a href="https://docs.sentry.io/platforms/flutter/">configure the SDK</a>, or if you’re new to Sentry, <a href="https://sentry.io/orgredirect/try-business/">try it for free today</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4xbaRVirQWySg79cIRblqV/2b3ebe7ec7eb5fb18a570c557ca36228/MarchMadness_Desktop__1_.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 03 Mar 2021 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Python 3 Compatibility: What To Know</title>
      <link>https://blog.sentry.io/2021/02/25/python-3-compatibility-what-to-know/</link>
      <description>Compatibility is a moving target. This is particularly true for backwards-incompatible languages such as Python 3, as it forces developers…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Compatibility is a moving target. This is particularly true for backwards-incompatible languages such as Python 3, as it forces developers to shoehorn Python 3 features into Python 2 via backporting.
We’ve recently updated our platform to be compatible with Python 3.6. Here’s what that means: </p>
<h2 id="retiring-python-2"><a href="#retiring-python-2" aria-label="retiring python 2 permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Retiring Python 2</h2>
<p>Running a supported version of Python is important, since unsupported versions are not only more likely to have vulnerabilities, but won’t receive patches on detected vulnerabilities. With 3.6, you’re able to integrate third-party dependencies that rely on Python 3, including running the latest Celery and Django dependencies.</p>
<h2 id="type-hinting"><a href="#type-hinting" aria-label="type hinting permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Type Hinting</h2>
<p>Introduced at Python 3.5, type hinting is a formal solution that indicates different values within your Python code. The labels produced by type hinting help the interpreter better understand your code’s behavior. With it, you can uniformly annotate the types of Python functions, arguments, and variables across various tools.</p>
<h2 id="laying-the-groundwork-for-38"><a href="#laying-the-groundwork-for-38" aria-label="laying the groundwork for 38 permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Laying the Groundwork for 3.8</h2>
<p>Sentry ingests an astronomical number of events per second. Due to our large volume of event ingestion, our Kafka consumers are getting close to the maximum number of events they can process. A typical way to continue to scale here is to use multithreading to allow each consumer to make use of multiple cores on their machine. Unfortunately, due to Python’s Global Interpreter Lock, we are unable to do this in Python as we’re primarily CPU constrained.</p>
<p>Another option is to use multiprocessing. This can work, but comes with higher overheads for sharing data between processes. In previous versions of Python these costs would likely have been prohibitive, but thankfully, there’s a solution on the horizon, as Python’s multiprocessing.shared_memory module provides a mechanism for efficiently sharing binary data between processes with minimal overhead. While this solution is in 3.8, supporting Python 3.6 gets us one step closer to our goal here.</p>
</div><div>
<p>It’s undeniable that Python 3.6 will make Sentry more efficient. After Instagram implemented their 3.6 patch, they noticed a 12 percent CPU savings on Django, and 30 percent memory savings on Celery. But more than any memory savings or new integration, this update represents another step in making Sentry that much more compatible for your needs.</p>
<p>If you’re a person who finds Python compatibility interesting, we’re a company that will find you interesting. Check out our open roles <a href="https://sentry.io/careers/">here</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/71Q0i090p06pCDqQsj2aH2/34949d67c8f1020955219c8aa07bd26e/python-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 25 Feb 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>3 Ways to Improve JavaScript Applications</title>
      <link>https://blog.sentry.io/2021/02/23/3-ways-to-improve-javascript-applications/</link>
      <description>In January we brought Release Health to JavaScript. This month we’ve been thinking about the overall experience for JavaScript developers…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In January we brought Release Health to JavaScript. This month we’ve been thinking about the overall experience for JavaScript developers, some could call it JavaScript Jebruary. </p>
<p>Think back to your last frustrating experience. It was probably caused by slow page loads or getting dizzy from staring at the ever-ending spinner.</p>
<p><a href="https://www.websitebuilderexpert.com/building-websites/website-load-time-statistics/#:~:text=One%20analysis%20of%205%20million,and%2027.3%20seconds%20on%20mobile.&amp;text=Indeed%2C%20mobile%20minutes%20accounted%20for,in%20the%20US%20in%202019.">One survey</a> showed that the average desktop load time on a <strong>webpage was 10.3 seconds</strong> and on <strong>mobile, it was 27.3 seconds.</strong> These load times are just long enough for your customer to swipe to a competitor.</p>
<h2 id="does-it-really-work-if-its-too-slow"><a href="#does-it-really-work-if-its-too-slow" aria-label="does it really work if its too slow permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Does it really work, if it’s too slow?</h2>
<p>So we <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">introduced performance monitoring</a>. Performance makes it simple to troubleshoot any slowness your customers are experiencing. Our performance offering supports the most widely used <a href="http://sentry.io/for/javascript">JavaScript libraries</a>. Now developers can see which part of the application is causing the bottleneck.</p>
<p>Additionally, we added support for <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">Google Web Vitals</a> to help you understand how your users are actually experiencing your site. We give you real measurements vs the synthetic lab data that others provide. We measure things like First Paint, First Contentful Paint and Largest Contentful Paint, contextualized with variable network speed, browser, device, region, and so forth. We also provide a metric called <a href="https://docs.sentry.io/product/performance/metrics/#user-misery">user misery</a>, which tells you the number of unique users who are frustrated based on the Apdex threshold level.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=661&amp;fm=webp 661w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=1322&amp;fm=webp 1322w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=2644&amp;fm=webp 2644w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=661 661w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=1322 1322w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=2644 2644w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="performance-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="release-health---so-you-can-rest-easy"><a href="#release-health---so-you-can-rest-easy" aria-label="release health   so you can rest easy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Release Health - so you can rest easy</h2>
<p>Ask a developer what they are most terrified of? They’ll probably say a lot, but <a href="https://sentry.io/integrations/pagerduty/">PagerDuty</a> rotation is definitely on the list.  Why? No one wants to be woken up in the middle of the night so that they can deal with a production issue. <a href="https://blog.sentry.io/2021/01/27/track-session-data-with-sentry-for-javascript">Release Health</a> for JavaScript gets ahead of the panic and answers “did anything break?” immediately.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=345&amp;fm=webp 345w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=690&amp;fm=webp 690w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=1380&amp;fm=webp 1380w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=345 345w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=690 690w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=1380 1380w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="releases_homepage" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Release Health provides an early warning system to let dev teams know how a release is performing the moment changes are pushed to production. Sentry reports on crash-free sessions, crash-free users, version adoption, and new issues introduced in the release. That way, you can use production data to determine whether to roll back the release immediately or deal with minor issues in the following sprint. Either way, the unexpected won’t jolt you awake and you can rest easy knowing the only thing waiting for you in the morning is 2-day old coffee — you should really make a new pot. While that’s brewing, check out this handy video on getting started with Release Health.</p>
<h2 id="continuous-improvement-with-discover"><a href="#continuous-improvement-with-discover" aria-label="continuous improvement with discover permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Continuous Improvement with Discover</h2>
<p>Finally, how can developers use Sentry to maintain or improve the quality of their code? Our insights tool, <a href="https://blog.sentry.io/2021/02/09/asking-the-right-query-with-discover/">Discover</a> lets you easily query across all your projects to track release trends, errors by any category, or even performance event data over time. There are tons of other <a href="https://blog.sentry.io/2020/03/03/new-ways-to-uncover-trends-with-discover/">use cases</a>, but we’ll let you discover those yourself. Curious about how others are using Discover? Read about how our friends at <a href="https://sentry.io/customers/eventbrite/">Eventbrite</a> are using it to achieve continuous delivery or watch a recap of our <a href="https://www.youtube.com/watch?v=0vDAWwE4754">February workshop</a> with guest, Vincent Budrovich, Sr. Software Engineer at Eventbrite. Vincent outlines how his team uses Release Health to support thousands of creators listing digital events on their platform. It’s entertaining. A little <a href="https://sentry.io/customers/disney-plus/">WandaVision</a> mixed with a Sentry Release Health workshop sounds like a fantastic evening.</p>
<p>JavaScript isn’t the only language we’re investing in. Stay tuned next month for updates to our mobile SDKS. </p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QNyDZrRH1O0r2PE4b4kpw/c5bc8568557f1279a511bd3f5a8561da/jebruarySocial-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 23 Feb 2021 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Series D: Moving Faster and (Not) Breaking Things</title>
      <link>https://blog.sentry.io/2021/02/18/series-d-moving-faster-and-not-breaking-things/</link>
      <description>Can Sentaurs become unicorns? Apparently so.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In the software lifecycle, you need to know what is affecting the customer from your frontend code to your underlying infrastructure. However, no one to date has solved for monitoring the health of software code vs. systems at the level that we have taken on — or at the scale that our customers require, as everything from grocery shopping to gaming is now digital. </p>
<p>Scale in this context also means the ability to grow with our customer’s technical organization, as business priorities shift, new products are launched, and technical ownership disperses across geographies. Scaling our product innovation, our global teams, and our ecosystem of developer communities and partners is exactly why we’re excited to move even faster with <a href="https://www.businesswire.com/news/home/20210218005662/en/Sentry-Raises-60-Million-in-Series-D-Funding-at-1-Billion-Valuation">our latest fundraise of $60 million</a>. </p>
<p>We know consumers see breakages and interruptions every day — whether it’s streaming a movie from their favorite digital service or trading the latest cryptocoin. As a father and husband, my family reminds me daily that the magnitude of these problems is only growing.
While the consumer does not differentiate between poorly written code or bugs, developers must get to the root cause to solve these problems thoroughly. This means clearly seeing what matters through excellently calibrated code monitoring, solving the issue (whether it’s a mobile crash or a website performance issue), and perhaps most importantly, learning what exactly can be improved as a team. </p>
<p>Since we <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">introduced Performance Monitoring</a> to our Application Monitoring suite last July, we’ve resoundingly heard developers validate the exact gap we sought out to address: an ever-increasing need for code observability. Given the exponential pace at which code is changing now, observability of systems is simply incomplete without code observability. From frontend to backend, developers now need a broader view of their application health to deliver a seamless product experience. This means that the number of vectors across their code that a product owner cares about has also multiplied: errors, performance, releases, sessions, APIs, customer segments, customer elements and more. In the coming years, I foresee our solutions to these challenges becoming no-brainers in the developer workflow and experience.</p>
<p>Solving these problems are core to Sentry’s roots and will continue to be our primary focus with this round of investment over the next few years. We could not be more excited for the journey. </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/51x5hPcFb2nVBHqmoVroXZ/0eef5d83dee261b3527abd0f613c2d93/centauricorn-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>