<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sentry</title>
    <link>https://blog.sentry.io/feed.xml</link>
    <description></description>
    <item>
      <title>Mobile Vitals - Four Metrics Every Mobile Developer Should Care About</title>
      <link>https://blog.sentry.io/2021/08/23/mobile-vitals-four-metrics-every-mobile-developer-should-care-about/</link>
      <description>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Slow apps frustrate users, which leads to bad reviews, or customers that swipe left to competition. Unfortunately, seeing and solving performance issues can be a struggle and time-consuming.</p>
<p>Most developers use profilers within IDEs like Android Studio or Xcode to hunt for bottlenecks and automated performance tests to catch performance regressions in their code during development. However, testing an application before it ships is not enough.</p>
<p>To catch the most frustrating performance issues, you need to explore what’s happening on your users’ devices. That means visibility into how fast your app starts, duration of HTTP requests, number of slow and frozen frames, how fast your views are loading, and more. With Sentry for Mobile, you can now easily monitor your iOS and Android app’s performance in real-time without additional setup (or accumulating a pile of testing devices).</p>
<h2 id="mobile-vitals"><a href="#mobile-vitals" aria-label="mobile vitals permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Vitals</h2>
<p>We believe there are four metrics every mobile team should track to better understand how their app is performing: Cold starts, warm starts, slow frames, and frozen frames. These four metrics, as a core part of Sentry’s performance monitoring, gives you the details you need to not only prioritize critical performance issues but trace the issue down to the root cause to solve them faster.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="mobile vitals" title="" src="https://images.ctfassets.net/em6l9zw4tzag/KDyGPoSl0jhWsZePPzM9g/3f539bd7b37cf02460ffe3fcb1d09a9d/Screen_Shot_2021-07-22_at_16.53.32.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="measuring-app-start"><a href="#measuring-app-start" aria-label="measuring app start permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Measuring App Start</h2>
<p>When a user taps on your app icon, it should start fast. On iOS, Apple recommends your app take at most 400ms to render the first frame. On Android, the <a href="https://developer.android.com/topic/performance/vitals/launch-time#av">Google Play console</a> warns you when a cold start takes longer than 5 seconds or a warm start longer than 2 seconds. </p>
<ul>
<li><strong>Cold start</strong>: App launched for the first time, after a reboot or update.</li>
<li><strong>Warm start</strong>: App launched at least once and is partially in memory.</li>
</ul>
<p>The exact definitions differ slightly per platform. For more details, so please check out our <a href="https://docs.sentry.io/platforms/apple/guides/ios/performance/instrumentation/automatic-instrumentation/">iOS</a> and <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a> docs.</p>
<p>No matter the platform, it is crucial that your app starts quickly to provide a delightful user experience. That’s why on iOS, Mac Catalyst, tvOS, and Android we track how long your app needs to draw your first frame. We grab this information and add spans for different phases of the app start. Here is an example from iOS:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-app-start" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4uqYjVkOqx4L7HTqP2YdnU/ffc6a9c1a7467af958a71a743633c5ce/Screen_Shot_2021-07-23_at_13.51.33.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>On Android, it is trickier to hook into the initialization phases of the app start, and therefore we currently add one span from the application launch to the first auto-generated UI transaction. Still, this information is very useful and can help you to improve the duration of your app start.</p>
<h2 id="slow-and-frozen-frames"><a href="#slow-and-frozen-frames" aria-label="slow and frozen frames permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Slow and Frozen Frames</h2>
<p>Unresponsive UI, animation hitches, or just jank annoy users and degrade the user experience. Two measurements to track this unwanted experience are slow and frozen frames. A phone or tablet typically renders with 60 frames per second (fps). </p>
<p>The frame rate can also be higher, especially as 120 fps displays are becoming more popular. With 60 fps, every frame has 16.67 ms to render. If your app needs more than 16.67 ms for a frame, it is a slow frame. </p>
<p>Frozen frames are UI frames that take longer than 700 ms. An app that is running smoothly should not experience either. That’s why the SDK adds these two measurements to all transactions captured. The detail view of the transaction displays the slow, frozen, and total frames to the right.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios-frozen-frames" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5YGEWngSyj5y4mzrukJ0wc/ec802bbe8767f134fd9ef1f1afdf04cd/Screen_Shot_2021-07-23_at_13.57.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Mobile Vitals are a core part of Sentry’s performance monitoring for mobile and unlocks more ways to spot bottlenecks and speed up your apps. </p>
<h2 id="mobile-performance-monitoring"><a href="#mobile-performance-monitoring" aria-label="mobile performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Mobile Performance Monitoring</h2>
<p>The purpose of Sentry’s performance monitoring is to track your application’s performance across multiple services. To measure Mobile Vitals, the SDKs capture distributed traces consisting of transactions and spans.</p>
<p>Distributed tracing is a standard technology used for understanding what’s going on across distributed services, but it is still relatively new for mobile applications. A trace represents an operation you want to measure, like signing in or loading a view in your app. Both mentioned operations don’t only involve your app but also backend actions. Each trace consists of one or more transactions, which can contain one or more spans. For example, the trace of a login could then include a transaction of your app and two transactions of your backend services. </p>
<p>Every transaction contains several spans representing a single unit of work, like reading a file or querying the database. The spans have a parent-child relationship, meaning a span can have multiple children and grandchildren. Here’s an example trace, broken down into transactions and spans:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transactions traces and spans" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2fir8oN3Oa5Ddz7Pqqr5SQ/6d4ba27e1f32cdb04ea4dbcad43a416d/Untitled__3_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If you want to dig deeper into these concepts, check out <a href="https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/">Distributed Tracing 101 for Full Stack Developers</a> by our very own, Ben Vinegar, VP of Engineering. For this blog post, let’s focus on transactions and take a look at an example creating a transaction with two child spans in Swift:</p>
<div data-language="swift"><pre><code><span>let</span> transaction <span>=</span> 
	<span>SentrySDK</span><span>.</span><span>startTransaction</span><span>(</span>name<span>:</span> <span>&#34;Load Messages&#34;</span><span>,</span> operation<span>:</span> <span>&#34;ui.load&#34;</span><span>)</span>

<span>let</span> getMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;http&#34;</span><span>,</span> description<span>:</span> <span>&#34;GET /my/api/messages&#34;</span><span>)</span>
<span>getMessages</span><span>(</span><span>)</span>
getMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>let</span> renderMessagesSpan <span>=</span> 
	transaction<span>.</span><span>startChild</span><span>(</span>operation<span>:</span> <span>&#34;ui&#34;</span><span>,</span> description<span>:</span> <span>&#34;Render Messages&#34;</span><span>)</span>
<span>renderMessages</span><span>(</span><span>)</span>
renderMessagesSpan<span>.</span><span>finish</span><span>(</span><span>)</span>

<span>// Finishes the transaction and sends it to Sentry</span>
transaction<span>.</span><span>finish</span><span>(</span><span>)</span></code></pre></div>
<p>After running the code we can take a look at the transaction in Sentry:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios transaction" title="" src="https://images.ctfassets.net/em6l9zw4tzag/P4TafLxduVx8dMXb4NwP1/efbb0912db04935bd803585e78d6804b/Screen_Shot_2021-07-28_at_09.02.13.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Creating rich transactions manually would require writing a lot of code. That’s why we’ve made things easier with auto instrumentation. You can save yourself the headache of writing and maintaining code while still accessing the performance insights you need.</p>
<h2 id="automatic-instrumentation"><a href="#automatic-instrumentation" aria-label="automatic instrumentation permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Automatic Instrumentation</h2>
<p>The automatic instrumentation lets you explore how long your views take to render, and HTTP requests need to finish. The SDK for Apple generates transactions for UIViewControllers on iOS, tvOS, and Mac Catalyst and creates spans for outgoing HTTP requests on all platforms. The SDK for Android captures transactions for Activities and Fragments and provides an integration for OkHttp. Sentry SDK for React Native can capture transactions automatically when using React Navigation router, and spans for both XHR and fetch requests. In the following months, we are working on adding support for Flutter.</p>
<p>Here is an example of an auto-generated transaction on iOS for a <code>UIViewController</code>. As we can see in the screenshot below, the SDK creates spans for each lifecycle method. In <code>viewWillAppear</code>, we fire off an HTTP request for which a span is added. Our SDKs don’t automatically add spans for querying the database (yet), but I’m interested in how long my query runs. Therefore I have to add a span manually. We can achieve this by using <code>SentrySDK.span</code> to access the current active span and call <code>SentrySDK.span.startChild</code> to create the desired child span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span" title="" src="https://images.ctfassets.net/em6l9zw4tzag/64OFd8GHyuj97DXIGn7Zan/a4caccb036f7fc41d153b55801579b25/Screen_Shot_2021-07-28_at_08.55.15.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With the above transaction, I learn where my bottlenecks in the <code>UIViewController</code> are. The <code>viewDidLoad</code> method looks suspicious because it takes around 70 ms to complete, and I should investigate it. After looking at the code, I realize that I’m doing remarkable I/O on the main thread, which of course, is a no-go, and need to fix it immediately. Moreover, loading some entries from the database takes way longer than the HTTP request to finish, which also looks dubious and requires further investigation. After moving the I/O in <code>viewDidLoad</code> to a background thread and adding an index to speed up my database query, the transaction looks way better now. Of course, the speed of the HTTP request will vary depending on the network conditions, but I cleared out the controllable bottlenecks, which speeds up my transaction from 250ms to around 20ms. This is a huge improvement.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ios span improvement" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QcLHqX4ZowNAF3T7yjtMK/f5d41d6f5437d675a84901246308c925/Screen_Shot_2021-07-28_at_08.53.34.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The duration of a transaction can vary greatly because of many circumstances. Stepping through individual transactions doesn’t give you a clear picture to understand if your app gets faster or slows down. Therefore, we provide graphs to explore how the duration of a transaction changes over time. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction duration breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/11NvmgnuvWLQY8fco8cjj3/07e17224e2b35f2b492e9900d870acf0/Screen_Shot_2021-07-08_at_10.24.35.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry also offers the possibility to explore slow, fastest, outlier, or recent transactions to find the misery or delight your users experience quickly.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5O8FzWH3MtwLT1OqzWsZEK/1357a0a458cf858268ac084bbd765369/Screen_Shot_2021-07-08_at_10.32.07.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Along with many other possibilities to explore your transactions, Sentry links the related errors captured during a transaction at the bottom of the transaction summary page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="related ios errors" title="" src="https://images.ctfassets.net/em6l9zw4tzag/wedTce5zjvRmWQE96M5cS/9545a6f41651315b01317076600ba0a0/Screen_Shot_2021-07-23_at_13.04.04.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Auto-generated transactions combined with manual transactions unlocks rich data so you can see Mobile Vitals as well as other metrics such as <a href="https://docs.sentry.io/product/performance/metrics/#user-misery">User Misery</a> to give you a complete view into the performance of your application.</p>
<p>To learn more, check out our docs for <a href="https://docs.sentry.io/platforms/apple/performance/instrumentation/automatic-instrumentation/">Apple</a>, <a href="https://docs.sentry.io/platforms/android/performance/instrumentation/automatic-instrumentation/">Android</a>, and <a href="https://docs.sentry.io/platforms/react-native/performance/instrumentation/automatic-instrumentation/">React-Native</a> and give automatic performance instrumentation on mobile a try. Watch out for beta releases of the <a href="https://github.com/getsentry/sentry-dart">Flutter GitHub</a> repo. We have plans to add these features to Flutter soon.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/50UzSUWSUJjoBTEbzysVtD/4560ee13e22c2a7f55ed22cd5ebf2373/moonlighting2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Distributed Tracing 101 for Full Stack Developers</title>
      <link>https://blog.sentry.io/2021/08/12/distributed-tracing-101-for-full-stack-developers/</link>
      <description>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Welcome to Part 1 of our multipart series on Distributed Tracing for Full Stack Developers. In this series, we’ll be learning the ins-and-outs of distributed tracing and how it can assist you in monitoring the increasingly complex requirements of full stack applications.</em></p>
<p>In the early days of the web, writing web applications was simple. Developers generated HTML on the server using a language like PHP, communicated with a single relational database like MySQL, and most interactivity was driven by static HTML form components. While debugging tools were primitive, understanding the execution flow of your code was straightforward.</p>
<p>In today’s modern web stack it’s anything but. Full stack developers are expected to write JavaScript executing in the browser, interop with multiple database technologies, and deploy server side code on different server architectures (e.g. serverless). Without the right tools, understanding how a user interaction in the browser cascades into a 500 server error deep in your server stack is nigh-impossible. Enter: distributed tracing.</p>
<p><strong>Distributed tracing</strong> is a monitoring technique that links the operations and requests occurring between multiple services. This allows developers to “trace” the path of an end-to-end request as it moves from one service to another, letting them pinpoint errors or performance bottlenecks in individual services that are negatively affecting the overall system.</p>
<p>In this post, we’ll learn more about distributed tracing concepts, go over an end-to-end tracing example in code, and see how to use tracing metadata to add valuable context to your logging and monitoring tools. When we’re done, you’ll not only understand the fundamentals of distributed tracing, but how you can apply tracing techniques to be more effective in debugging your full stack web applications.</p>
<p>But first, let’s go back to the beginning: what’s distributed tracing again?</p>
<h2 id="distributed-tracing-basics"><a href="#distributed-tracing-basics" aria-label="distributed tracing basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Distributed tracing basics</h2>
<p>Distributed tracing is a method of recording the connected operations of multiple services. Typically, these operations are initiated by requests from one service to another, where a “request” could be an actual HTTP request, or work invoked through a task queue or some other asynchronous means.</p>
<p>Traces are composed of two fundamental components:</p>
<ul>
<li>A <strong>span</strong> describes an operation or “work” taking place on a service. Spans can describe broad operations – for example, the operation of a web server responding to an HTTP request – or as granular as a single invocation of a function.</li>
<li>A <strong>trace</strong> describes the end-to-end journey of one or more connected <strong>spans</strong>. A trace is considered to be a <strong>distributed trace</strong> if it connects spans (“work”) performed on multiple services.</li>
</ul>
<p>Let’s take a look at an example of a hypothetical distributed trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451&amp;fm=webp 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901&amp;fm=webp 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802&amp;fm=webp 1802w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=451 451w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=901 901w,
https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png?w=1802 1802w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Mw7WN2QgOE0OGWqHgQnYM/221577b3f76d22ce714e1768b8dca73b/Screen_Shot_2021-08-11_at_5.15.41_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>The diagram above illustrates how a trace begins in one service – a React application running on the browser – and continues through a call to an API web server, and even further to a background task worker. The spans in this diagram are the work performed within each service, and each span can be “traced” back to the initial work kicked off by the browser application. Lastly, since these operations occur on different services, this trace is considered to be distributed.</p>
<p><em>Aside: Spans that describe broad operations (e.g. the full lifecycle of a web server responding to an HTTP request) are sometimes referred to as <strong>transaction spans</strong> or even just <strong>transactions</strong>. We’ll talk more about transactions vs. spans in Part 2 of this series.</em></p>
<h2 id="trace-and-span-identifiers"><a href="#trace-and-span-identifiers" aria-label="trace and span identifiers permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace and span identifiers</h2>
<p>So far we’ve identified the components of a trace, but we haven’t described how those components are linked together.</p>
<p>First, each trace is uniquely identified with a <strong>trace identifier</strong>. This is done by creating a unique randomly generated value (i.e. a UUID) in the <strong>root span</strong> – the initial operation that kicks off the entire trace. In our example above, the root span occurs in the Browser Application.</p>
<p>Second, each span first needs to be uniquely identified. This is similarly done by creating a unique <strong>span identifier</strong> (or <code>span_id</code>) when the span begins its operation. This <code>span_id</code> creation should occur at every span (or operation) that takes place within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443&amp;fm=webp 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885&amp;fm=webp 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770&amp;fm=webp 1770w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=443 443w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=885 885w,
https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png?w=1770 1770w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/14IFqR5JxfyihYP7pH3Kk8/951008e67f31c34371ca79cb3c8a27de/Screen_Shot_2021-08-11_at_5.18.21_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Let’s revisit our hypothetical trace example. In the diagram above, you’ll notice that a trace identifier uniquely identifies the trace, and each span within that trace also possesses a unique span identifier.</p>
<p>Generating <code>trace_id</code> and <code>span_id</code> isn’t enough however. To actually connect these services, your application must propagate what’s known as a <strong>trace context</strong> when making a request from one service to another.</p>
<h2 id="trace-context"><a href="#trace-context" aria-label="trace context permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Trace context</h2>
<p>The trace context is typically composed of just two values:</p>
<ul>
<li><strong>Trace identifier</strong> (or <code>trace_id</code>): the unique identifier that is generated in the root span intended to identify the entirety of the trace. This is the same trace identifier we introduced in the last section; it is propagated unchanged to every downstream service.</li>
<li><strong>Parent identifier</strong> (or <code>parent_id</code>): the span_id of the “parent” span that spawned the current operation.</li>
</ul>
<p>The diagram below visualizes how a request kicked off in one service propagates the trace context to the next service downstream. You’ll notice that trace_id remains constant, while the parent_id changes between requests, pointing to the parent span that kicked off the latest operation.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922&amp;fm=webp 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844&amp;fm=webp 1844w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=922 922w,
https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png?w=1844 1844w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7oOE4tSCpscHffsIiWATjo/25debdd5303b27a71de618d4ae63549f/Screen_Shot_2021-08-11_at_5.19.10_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With these two values, for any given operation, it is possible to determine the originating (root) service, and to reconstruct all parent/ancestor services in order that led to the current operation.</p>
<h2 id="a-working-example-with-code"><a href="#a-working-example-with-code" aria-label="a working example with code permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A working example with code</h2>
<p>To understand this all better, let’s actually implement a bare-bones tracing implementation, using the example we’ve been returning to, wherein a browser application is the initiator of a series of distributed operations connected by a trace context.</p>
<p>First, the browser application renders a form: for the purposes of this example, an “invite user” form. The form has a submit event handler, which fires when the form is submitted. Let’s consider this submit handler our <strong>root span</strong>, which means that when the handler is invoked, both a <code>trace_id</code> and <code>span_id</code> are generated.</p>
<p>Next, some work is done to gather user-inputted values from the form, then finally a <code>fetch</code> request is made to our web server to the <code>/inviteUser</code> API endpoint. As part of this fetch request, the trace context is passed as two custom HTTP headers: <code>trace-id</code> and <code>parent-id</code> (which is the current span’s  <code>span_id</code>).</p>
<div data-language="javascript"><pre><code><span>// browser app (JavaScript)</span>
<span>import</span> uuid <span>from</span> <span>&#39;uuid&#39;</span><span>;</span>

<span>const</span> traceId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
<span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>

console<span>.</span><span>log</span><span>(</span><span>&#39;Initiate inviteUser POST request&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>

<span>fetch</span><span>(</span><span>&#39;/api/v1/inviteUser?email=&#39;</span> <span>+</span> <span>encodeURIComponent</span><span>(</span>email<span>)</span><span>,</span> <span>{</span>
   method<span>:</span> <span>&#39;POST&#39;</span><span>,</span>
   headers<span>:</span> <span>{</span>
       <span>&#39;trace-id&#39;</span><span>:</span> traceId<span>,</span>
       <span>&#39;parent-id&#39;</span><span>:</span> spanId<span>,</span>
   <span>}</span>
<span>}</span><span>)</span><span>.</span><span>then</span><span>(</span><span>(</span><span>data</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Success!&#39;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>.</span><span>catch</span><span>(</span><span>(</span><span>err</span><span>)</span> <span>=&gt;</span> <span>{</span>
   console<span>.</span><span>log</span><span>(</span><span>&#39;Something bad happened&#39;</span><span>,</span> <span><span>`</span><span>traceId: </span><span><span>${</span>traceId<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>Note these are non-standard HTTP headers used for explanatory purposes. There is an active effort to standardize tracing HTTP headers as part of the W3C <a href="https://www.w3.org/TR/trace-context/">traceparent</a> specification, which is still in the “Recommendation” phase.</em> </p>
<p>On the receiving end, the API web server handles the request and extracts the tracing metadata from the HTTP request. It then queues up a job to send an email to the user, and attaches the tracing context as part of a “meta” field in the job description. Last, it returns a response with a 200 status code indicating that the method was successful.</p>
<p>Note that while the server returned a successful response, the actual “work” isn’t done until the background task worker picks up the newly queued job and actually delivers an email.</p>
<p>At some point, the queue processor begins working on the queued email job. Again, the trace and parent identifiers are extracted, just as they were earlier in the web server.</p>
<div data-language="javascript"><pre><code><span>// API Web Server</span>
<span>const</span> Queue <span>=</span> <span>require</span><span>(</span><span>&#39;bull&#39;</span><span>)</span><span>;</span>
<span>const</span> emailQueue <span>=</span> <span>new</span> <span>Queue</span><span>(</span><span>&#39;email&#39;</span><span>)</span><span>;</span>
<span>const</span> uuid <span>=</span> <span>require</span><span>(</span><span>&#39;uuid&#39;</span><span>)</span><span>;</span>

app<span>.</span><span>post</span><span>(</span><span>&#34;/api/v1/inviteUser&#34;</span><span>,</span> <span>(</span><span>req<span>,</span> res</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>,</span>
    traceId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;trace-id&#34;</span><span>]</span><span>,</span>
    parentId <span>=</span> req<span>.</span>headers<span>[</span><span>&#34;parent-id&#34;</span><span>]</span><span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Adding job to email queue&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  emailQueue<span>.</span><span>add</span><span>(</span><span>{</span>
    title<span>:</span> <span>&#34;Welcome to our product&#34;</span><span>,</span>
    to<span>:</span> req<span>.</span>params<span>.</span>email<span>,</span>
    meta<span>:</span> <span>{</span>
      traceId<span>:</span> traceId<span>,</span>

      <span>// the downstream span&#39;s parent_id is this span&#39;s span_id</span>
      parentId<span>:</span> spanId<span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>)</span><span>;</span>

  res<span>.</span><span>status</span><span>(</span><span>200</span><span>)</span><span>.</span><span>send</span><span>(</span><span>&#34;ok&#34;</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>// Background Task Worker</span>
emailQueue<span>.</span><span>process</span><span>(</span><span>(</span><span>job<span>,</span> done</span><span>)</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> spanId <span>=</span> uuid<span>.</span><span>v4</span><span>(</span><span>)</span><span>;</span>
  <span>const</span> <span>{</span> traceId<span>,</span> parentId <span>}</span> <span>=</span> job<span>.</span>data<span>.</span>meta<span>;</span>

  console<span>.</span><span>log</span><span>(</span>
    <span>&#34;Sending email&#34;</span><span>,</span>
    <span><span>`</span><span>[traceId: </span><span><span>${</span>traceId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>parentId: </span><span><span>${</span>parentId<span>}</span></span><span>,</span><span>`</span></span><span>,</span>
    <span><span>`</span><span>spanId: </span><span><span>${</span>spanId<span>}</span></span><span>]</span><span>`</span></span>
  <span>)</span><span>;</span>

  <span>// actually send the email</span>
  <span>// ...</span>

  <span>done</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p><em>If you’re interested in running this example yourself, you can find the source code on <a href="https://github.com/getsentry/distributed-tracing-examples">GitHub</a>.</em></p>
<h2 id="logging-with-distributed-systems"><a href="#logging-with-distributed-systems" aria-label="logging with distributed systems permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Logging with distributed systems</h2>
<p>You’ll notice that at every stage of our example, a logging call is made using console.log that additionally emits the current <strong>trace, span,</strong> and <strong>parent</strong> identifiers. In a perfect synchronous world – one where each service could log to the same centralized logging tool – each of these logging statements would appear sequentially:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210&amp;fm=webp 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838&amp;fm=webp 838w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=210 210w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png?w=838 838w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2JJOHB6ERQm3a7DPcdruqn/4146ae0fbf1dfdc5375dca179ca458f2/part1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>If an exception or errant behavior occurred during the course of these operations, it would be relatively trivial to use these or additional logging statements to pinpoint a source. But the unfortunate reality is that these are <em>distributed services</em>, which means:</p>
<ul>
<li><strong>Web servers typically handle many concurrent requests.</strong> The web server may be performing work (and emitting logging statements) attributed to other requests.</li>
<li><strong>Network latency can cloud the order of operations.</strong> Requests made from upstream services might not reach their destination in the same order they were fired.</li>
<li><strong>Background workers may have queued jobs.</strong> Workers may have to first work through earlier queued jobs before reaching the exact job queued up in this trace.</li>
</ul>
<p>In a more realistic example, our logging calls might look something like this, which reflects multiple operations occurring concurrently:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209&amp;fm=webp 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837&amp;fm=webp 837w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=209 209w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png?w=837 837w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-part2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1PxZtyBXE9sKDL4gi5BfQL/2b155109a8a13292ab1da0664b92cc70/part2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Without tracing metadata, understanding the topology of which action invoked which action would be impossible. But by emitting tracing meta information at every logging call, it’s possible to quickly filter on all logging calls within a trace by filtering on <code>traceId</code>, and to reconstruct the exact order by examining <code>spanId</code> and <code>parentId</code> relationships.</p>
<p>This is the power of distributed tracing: by attaching metadata describing the current operation (span id), the parent operation that spawned it (parent id), and the trace identifier (trace id), we can augment logging and telemetry data to better understand the exact sequence of events occurring in your distributed services.</p>
<h2 id="tracing-in-the-real-world"><a href="#tracing-in-the-real-world" aria-label="tracing in the real world permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tracing in the real world</h2>
<p>Over the course of this article, we have been working with a somewhat contrived example. In a real distributed tracing environment, you wouldn’t generate and pass all your span and tracing identifiers manually. Nor would you rely on <code>console.log</code> (or other logging) calls to emit your tracing metadata yourself. You would use proper tracing libraries to handle the instrumentation and emitting of tracing data for you.</p>
<h2 id="opentelemetry"><a href="#opentelemetry" aria-label="opentelemetry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>OpenTelemetry</h2>
<p><a href="https://opentelemetry.io/">OpenTelemetry</a> is a collection of open source tools, APIs, and SDKs for instrumenting, generating, and exporting telemetry data from running software. It provides language-specific implementations for most popular programming languages, including both browser <a href="https://github.com/open-telemetry/opentelemetry-js">JavaScript and Node.js</a>.</p>
<h2 id="sentry"><a href="#sentry" aria-label="sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry</h2>
<p><a href="https://sentry.io">Sentry</a> is an open source application monitoring product that helps you identify errors and performance bottlenecks in your code. It provides client libraries in every major programming language which instrument your software’s code to capture both error data and tracing telemetry.</p>
<p>Sentry uses this telemetry in a number of ways. For example, Sentry’s <a href="https://sentry.io/for/performance/">Performance Monitoring</a> feature set uses tracing data to generate waterfall diagrams that illustrate the end-to-end latency of your distributed services’ operations within a trace.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="tracing-image4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5hDdIoY4LoUIGZnP4VENHj/51c60bf16a78740fdba335255dee77bc/tracing-image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Sentry additionally uses tracing metadata to augment its Error Monitoring capabilities to understand how an error triggered in one service (e.g. server backend) can propagate to an error in another service (e.g. frontend).</p>
<p>You can learn more about <a href="https://sentry.io/features/distributed-tracing/">Sentry and distributed tracing here</a>.</p>
<h2 id="next-span-trees-opentelemetry-and-sentry"><a href="#next-span-trees-opentelemetry-and-sentry" aria-label="next span trees opentelemetry and sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next: Span trees, OpenTelemetry, and Sentry</h2>
<p>Congratulations: you’ve graduated from part 1 of our series on distributed tracing for full stack developers. At this point you should understand what a trace is, how trace information is propagated through services via tracing context, and how trace context can be used to connect logging statements between multiple distributed services.</p>
<p>Stay tuned for the next post in this series, where we’ll expand on the OpenTelemetry set of tracing tools, and take a further dive into how Sentry incorporates tracing context to augment error and performance monitoring telemetry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3eypAaYgkGx1UcxtcLenNI/e8198055602f3c9d68d97d050143acb9/Tracing2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 12 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Guest Post: Troubleshooting Feature Flags with Komodor and Sentry</title>
      <link>https://blog.sentry.io/2021/08/10/guest-post-troubleshooting-feature-flags-with-komodor-and-sentry/</link>
      <description>Mickael Alliel is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em><a href="https://www.linkedin.com/in/mickaelalliel/">Mickael Alliel</a> is a DevOps Engineer who enjoys experimenting with new technologies and methodologies. Mickael is currently developing the next-gen K8s troubleshooting platform at <a href="https://komodor.com/">Komodor</a>, and doubling as a French cuisine connoisseur.</em></p>
<h2 id="meet-komodor"><a href="#meet-komodor" aria-label="meet komodor permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Meet Komodor</h2>
<p>Komodor is a Kubernetes-native platform we’ve created to streamline troubleshooting. It was born out of frustrations we felt as developers, when we were required to waste hours of our time on troubleshooting, instead of focusing on what we really wanted to do - creating and innovating. </p>
<p>Komodor sits on top of your K8s cluster and integrates with every existing tool you have, be it CI/CD, repo, monitoring, alerting, or communication. All K8s changes and changes from every integration are consolidated into a single timeline view. Developers can also see how related services are impacted by changes in your K8s cluster by stacking timelines on top of each other. </p>
<p>With the help of these and many other features, Komodor and its Sentry integration help dev teams move fast and deploy with confidence, knowing that if something breaks they can always fix things quickly on their own, without skipping a beat. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="1-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/229M9CsQjanhJGDsJOOW0s/aff0d0ff7af3be555cb065da282b3dad/1-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="integrating-komodor-with-sentry"><a href="#integrating-komodor-with-sentry" aria-label="integrating komodor with sentry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Integrating Komodor with Sentry</h3>
<ol>
<li>It all starts with our Integrations tab - click Install on the Sentry tile.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118&amp;fm=webp 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236&amp;fm=webp 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471&amp;fm=webp 471w" sizes="(max-width: 471px) 100vw, 471px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=118 118w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=236 236w,
https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png?w=471 471w" sizes="(max-width: 471px) 100vw, 471px"/>
          <img alt="2-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2caYsnoO13iph3nM0PeJih/9571ea06d072b9b83113670dd0bd69ac/2-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ol start="2">
<li>You will be prompted with step-by-step instructions on how to finish the installation properly on your Sentry account.</li>
</ol>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155&amp;fm=webp 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310&amp;fm=webp 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619&amp;fm=webp 619w" sizes="(max-width: 619px) 100vw, 619px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=155 155w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=310 310w,
https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png?w=619 619w" sizes="(max-width: 619px) 100vw, 619px"/>
          <img alt="3-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3O9JsZ41TWbmkRrIXL1Yol/e9148b7579422705f4633baabd7747ea/3-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<ul>
<li>Go to the Sentry Settings in your account (you will be required to have admin permissions on that account).</li>
<li>In the Developer Settings, create a ‘New Internal Integration’ and paste the webhook found previously on Komodor’s Integrations tab, along with the required permission scope found in our documentation.</li>
<li>Once you save the settings, you will be able to copy your internal integration Client Secret and paste it into Komodor to finish the installation.</li>
</ul>
<p>Sentry provides data on the exception or performance issue; how many times a given issue occured,  stack trace, browser information, and more. Komodor adds the ability to tie it into the context of the service itself - when was it deployed, and what changed in this specific version by connecting all your cloud 3rd party service providers. </p>
<h3 id="common-use-case-feature-flags"><a href="#common-use-case-feature-flags" aria-label="common use case feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Common Use Case: Feature Flags</h3>
<p>Toggling a feature flag might be the easiest way to break an application. It’s a click away from completely changing business logic, breaking something, and causing exceptions, LIVE in front of your end-users. </p>
<p>Luckily, by using Komodor and Sentry together you can easily triage any incident triggered by enabling or disabling a feature flag. For instance, Komodor’s Slackbot can notify the relevant team members that a ‘rest-API’ service was unhealthy for 3 minutes. </p>
<p>With just one click you can jump from Slack to Komodor’s troubleshooting platform, and see the full timeline of changes for that specific service. Here you can see that before the service turned unhealthy, a feature flag related to the DB was deployed, followed by a Sentry exception: ‘QueryFailedError: null value in column “branch” violates not-null constraint’.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358&amp;fm=webp 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716&amp;fm=webp 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432&amp;fm=webp 1432w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=358 358w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=716 716w,
https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png?w=1432 1432w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="4-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4zTdTVu8eroXrWdMYcRjNd/d1554d461503a6b83ebd9563f7e6c13a/4-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Clicking on the exception provides you with extra details and the option to view the exception on Sentry’s platform, where you can see more data enriched with tags (environment, mechanism, feature flag, etc.) and a stack trace that allows you to follow the breadcrumbs all the way to the specific line of code that caused the exception. Now you can use all the time and energy you’ve saved to focus on actually debugging. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399&amp;fm=webp 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798&amp;fm=webp 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595&amp;fm=webp 1595w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=399 399w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=798 798w,
https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png?w=1595 1595w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="5-komodor" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1gHe7UkKVdpTLF9kKVQQK2/374c257ae67d8dd06152160205100a38/5-komodor.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Check out the <a href="https://youtu.be/RGUZDRr5l54">live demo</a> or to learn more about komodor, visit komodor.com. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/52dijgURqFH4Dx6g4Ptq5u/f78c652cc05768a8f4fc3ce4eca50c79/meta-komodor.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Fluttering our Mobile Wings</title>
      <link>https://blog.sentry.io/2021/08/03/fluttering-our-mobile-wings/</link>
      <description>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Once a year we let our imagination go wild for a whole week during our annual Hackweek event. It’s where we come up with product updates, like <a href="https://blog.sentry.io/2021/03/16/building-dark-mode/">dark mode</a> support, design them and implement prototypes. </p>
<p>The mobile engineering team came up with the idea for a Sentry mobile app that focuses on Release Health. We wanted to give developers a concise but comprehensive view of whether a release a release was healthy, errored, or experiencing abnormal crash sessions across multiple projects.</p>
<p>Because we wanted to bring this to both <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">iOS</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Android</a>, and we only had a week to build a proof of concept we decided to build the app in Flutter. Oh by the way, we also have a <a href="https://sentry.io/for/flutter/">Flutter Sentry SDK</a>, it’s great.</p>
<h2 id="application-overview"><a href="#application-overview" aria-label="application overview permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Application Overview</h2>
<h3 id="sessions"><a href="#sessions" aria-label="sessions permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sessions</h3>
<p>We fetch all projects from all your linked organizations that have session data. Every card represents one project and shows the name, organization, platform and a graph with the total session data over the last 24 hours. Below the cards the sessions are split up into healthy, errored, abnormal and crashed, all with individual graphs. There are also two cards showing crashfree sessions and users in percent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-sessions" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OyHn1wQfjozT3wdHRsBmk/ea05d32f893d4731814d8f03231a76bb/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="settings"><a href="#settings" aria-label="settings permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Settings</h3>
<p>In the settings screen users can view a list of all projects and favorite them. Those will show up first on the main screen. Apart from that, we show the usual suspects, like terms, sharing and logout, in the settings screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150&amp;fm=webp 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600&amp;fm=webp 600w" sizes="(max-width: 600px) 100vw, 600px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=150 150w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png?w=600 600w" sizes="(max-width: 600px) 100vw, 600px"/>
          <img alt="mobile-app-settings" title="" src="https://images.ctfassets.net/em6l9zw4tzag/PAPw56I1qUdiN9jfUlw9S/22bccb24eeaede8f29ce9e44f63e7bf6/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="widgets"><a href="#widgets" aria-label="widgets permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Widgets!</h3>
<p>Flutter takes the main concept of view rendering from react. The user interface is described using widgets which are derived from the applications state. When the state changes, the system creates the new widgets from it and only redraws the interface elements. You can head over to the <a href="https://flutter.dev/docs/development/ui/widgets-intro">widgets intro documentation</a> to learn more about this.</p>
<h3 id="redux"><a href="#redux" aria-label="redux permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Redux</h3>
<p>We use Redux for state management. There is a central object holding the global application state. When an event in the application occurs, let’s say a reload of the session data, an action is dispatched.</p>
<p>This action then goes through multiple middlewares. In this case, it would go through our API middleware, where it would trigger a network request. This request would then itself trigger new actions when it (asynchronously) finishes with success or a failure. All those actions travel through other middlewares as well and finally reach the reducer.</p>
<p>The reducer is the only place where the global app state is mutated. In the sample above it would set a loading state when started and replace the loaded data upon success, or set an error state when there was a problem we want the user to know about.</p>
<p>Pros</p>
<ul>
<li>When state changes, widgets can be updated automatically. With the help of ViewModels implementing BLA, the Widget will only be rendered if the derived state changed. Neat!</li>
<li>With the reducer it,s explicit where state is mutated</li>
</ul>
<p>Cons</p>
<ul>
<li>The global state tends to get large quickly, even for such a small application. As the app will grow, we will have to think about how to best split this up.</li>
<li>Some Flutter API relies on Futures which does not yet play well with the Redux concept. One example of this is the “RefreshIndicator” widget.</li>
</ul>
<h3 id="sentry-sdk"><a href="#sentry-sdk" aria-label="sentry sdk permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry SDK</h3>
<p>Of course we use our own Sentry SDK to check for issues. This was especially helpful during development, as we started out without sound null safety (more on that below) and were able to catch many issues with our SDK that would just show up in the console and could go easily unnoticed otherwise.</p>
<h3 id="custom-drawing"><a href="#custom-drawing" aria-label="custom drawing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Custom Drawing</h3>
<p>The prototype used a dependency with embedded <a href="https://pub.dev/packages/flutter_echarts">ECharts</a> for chart drawing. This made use of web views, so every chart we would draw would also embed a full blown web view into our widget hierarchy. We would quickly encounter performance issues as well as flickering UI when redrawing.</p>
<p>This was a great way for us to get started during hackweek, as we use this JS dependency in the Sentry web application, but it was clear to us that we would need to replace this for the production app.</p>
<p>We decided to draw the charts that our designers prepared for us in the Figma design ourselves with the help of the canvas API. Android developers will feel right at home with this API, as it is basically the same on Android. Flutter also uses Skia as the drawing library, so no surprise there.</p>
<p>So in just a couple of lines of code we were able to draw the charts that our designers came up with, including gradients and cubic lines (which we removed again). Drawing was faster, pixel perfect and we could also get rid of a large dependency. </p>

<h3 id="android-studio"><a href="#android-studio" aria-label="android studio permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Android Studio</h3>
<p>We mainly used Android Studio with the Flutter plugin for application development. This is especially convenient for Android developers, as they can use a familiar environment when starting out with Flutter applications. Of course, you have the freedom to use <a href="https://flutter.dev/docs/get-started/editor">whichever editor</a> you are comfortable with.</p>
<h3 id="fastlane"><a href="#fastlane" aria-label="fastlane permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fastlane</h3>
<p>Fastlane is an open source tool written in Ruby. It is mostly used by the iOS community, but also works exceptionally well for Android. We use it locally to create release builds and ship them to the respective stores, as well as upload debug symbols to Sentry. </p>
<h3 id="static-analysis"><a href="#static-analysis" aria-label="static analysis permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Static Analysis</h3>
<p>We used the <a href="https://github.com/flutter/flutter/wiki/Using-the-Dart-analyzer">Dart analyzer</a> during development. It helped us to keep track of code issues that might come up during development.</p>
<h3 id="sound-null-safety"><a href="#sound-null-safety" aria-label="sound null safety permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sound Null Safety</h3>
<p>We migrated the application to <a href="https://dart.dev/null-safety">sound null safety</a> during development when we were already pretty far along with the app. Luckily, the Flutter team came up with an <a href="https://dart.dev/null-safety/migration-guide">incremental way</a> to do this. So we were able to convert file by file and have a working application during migration. I’m sure there are some Swift developers reading this who remember migrating in the early days. Yeah, my deepest condolences, I have been there.</p>
<h2 id="thats-a-wrap"><a href="#thats-a-wrap" aria-label="thats a wrap permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>That’s a wrap</h2>
<p>Everything we do at Sentry is built in the open. Find us on <a href="https://github.com/getsentry/sentry-mobile">GitHub</a>.</p>
<p>We have many ideas for future releases of the application, but ultimately it should be a tool that users find useful. So we can’t wait to hear your feedback, please give it a try!</p>
<p>Download it now on the <a href="https://apps.apple.com/us/app/sentry-io/id1546709967">Apple App Store</a> and <a href="https://play.google.com/store/apps/details?id=io.sentry.mobile.app">Google PlayStore</a> and become a part of our Flutter journey.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/2ugLNDbMbX6VlbMYdQuXkm/0f3dd8459bdc5d7a6b31499d98270c56/mobileApp-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Instrumenting Our Frontend Test Suite (...and fixing what we found)</title>
      <link>https://blog.sentry.io/2021/07/27/instrumenting-our-frontend-test-suite-and-fixing-what-we-found/</link>
      <description>Adding Instrumentation to Jest Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="adding-instrumentation-to-jest"><a href="#adding-instrumentation-to-jest" aria-label="adding instrumentation to jest permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Adding Instrumentation to Jest</h2>
<p>Here at Sentry, we like to dogfood our product as much as possible. Sometimes, it results in unusual applications of our product and sometimes these unusual applications pay off in a meaningful way. In this blog post, we’ll examine one such case where we use the Sentry JavaScript SDK to instrument <a href="https://jestjs.io/">Jest</a> (which runs our frontend test suite) and how we addressed the issues that we found.</p>
<p>We have high-level metrics for how well (or not) our CI is performing. This is useful to get a general sense of the health of the system, however, it does not help when doing a deeper dive into why a system is slow. We decided to instrument our CI jobs at the test runner level in order to get insights into the performance of the individual tests. We needed to be able to see if our test suite was slowing down because we were adding more tests or if it was because we had poor-performing tests.</p>
<p>As mentioned above, we use Jest as our test runner. It’s important to note, that our instrumentation method requires using <a href="https://github.com/facebook/jest/blob/master/packages/jest-circus/README.md">jest-circus</a> test runner. This is the default for Jest version 27, however, it can be used with earlier versions of Jest. <code>jest-circus</code> is required because it allows us to listen to events from Jest by using a <a href="https://jestjs.io/docs/configuration#testenvironment-string">custom environment</a> and defining a <code>handleTestEvent</code> method. Below is a basic test snippet annotated with an approximation of where <code>jest-circus</code>’s events are fired.</p>
<div data-language="text"><pre><code>// --&gt; setup
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; start_describe_definition
// --&gt; add_hook&lt;beforeAll&gt;
// --&gt; add_hook&lt;beforeEach&gt;
// --&gt; add_hook&lt;afterEach&gt;
// --&gt; add_hook&lt;afterAll&gt;
// --&gt; add_test
// --&gt; finish_describe_definition
// --&gt; run_start
describe(&#39;describe&#39;, function () {
  // --&gt; run_describe_start
  // --&gt; hook_start&lt;beforeAll&gt;
  // --&gt; hook_success&lt;beforeAll&gt;

  beforeAll(function () {});
  beforeEach(function () {});
  afterEach(function () {});
  afterAll(function () {});

  // --&gt; test_start
  // --&gt; hook_start&lt;beforeEach&gt;
  // --&gt; hook_success&lt;beforeEach&gt;
  it(&#39;test&#39;, function () {
    // --&gt; test_fn_start
    expect(true).toBe(true);
  }); // --&gt; test_fn_success
  // --&gt; hook_start&lt;afterEach&gt;
  // --&gt; hook_success&lt;afterEach&gt;
  // --&gt; test_done

  // --&gt; hook_start&lt;afterAll&gt;
  // --&gt; hook_success&lt;afterAll&gt;
}); // --&gt; run_describe_finish
// --&gt; run_finish
// --&gt; teardown</code></pre></div>
<p><a href="https://docs.sentry.io/platforms/javascript/performance/instrumentation/custom-instrumentation/">Sentry’s Performance Monitoring instrumentation</a> is tree-like in structure with a transaction as the root node, and spans as child nodes. We can use a combination of the event name and the test name to determine if we should either create a transaction, create a child span from an existing transaction or end a span/transaction. Here’s an <a href="https://github.com/getsentry/sentry/blob/master/tests/js/instrumentedEnv/index.js">example of how we implemented it</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-image-1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6c4Pa6YmjNXY8snzCb5xMK/5af284ed3f3cee0ef42acd900526feba/Screen_Shot_2021-06-11_at_3.21.53_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="fixing-performance-issues"><a href="#fixing-performance-issues" aria-label="fixing performance issues permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Fixing Performance Issues</h2>
<p>Starting an investigation into a slow Jest test is a bit like peering into a black box because there’s so much abstraction. So the first steps are - find out which tests to look at and then find out what they’re spending time doing. The slowest tests were all larger page views with many subcomponents and components that access data from our data stores. Bigger components should be slower, right?</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-span-2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5mlfk6qSNhNeTsAZELRaPa/1c6947ecd9a2b7fd90c1240b57851d42/Untitled.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Looking at the “alert rules index” test we can see that the <code>beforeEach</code> function is getting slower after every test, yet the code in the <code>beforeEach</code> block remains the same and should take just as much time on the first test as it does on the last test. Looking at what is in the <code>beforeEach</code> function wasn’t enough to decide what was slowing it down. <code>beforeEach</code> contained a few api mocks and a call to <code>ProjectsStore.loadInitialData([]);</code> that was initializing the project  store with an empty array. But none of that should be slow, so let’s have node tell us what is happening.</p>
<p>Start jest using the node debugger on just the one test file. The <code>--inspect-brk</code> flag tells node to wait until we have attached our profiler.</p>
<div data-language="sql"><pre><code>node <span>--inspect-brk node_modules/.bin/jest --runInBand --no-cache tests/js/spec/views/alerts/rules/index.spec.jsx</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/43QFpiiTEmBP6tWmTlF60X/f5544d389bcb6747cac5158a97ad1952/Untitled__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>After profiling the test and zooming into the area where the tests are running, we located the code that runs during the <code>beforeEach</code>. In this screenshot, we’ve renamed the anonymous <code>beforeEach</code> function to a named function <code>badBeforeEach</code> so it can be found easier. Below it is one call to <code>ProjectsStore.loadInitialData</code> followed by several calls to <code>setState</code> and a bunch of react work being kicked off. This shouldn’t be happening as there shouldn’t be a component listening to the store yet.</p>
<p>This led us to check that the component was being unmounted after each test. We added a <code>componentWillUnmount</code> to the class component being tested with a <code>console.log</code> inside to see if it was being called. When we did not see the <code>console.log</code>, we tested it manually by  unmounting the component after every test.</p>
<p>The result: our <code>beforeEach</code> function takes a fraction of a second every iteration instead of running change detection in components that should have been unmounted and our test has its overall total time cut nearly in half. The <a href="https://enzymejs.github.io/enzyme/docs/api/mount.html">enzyme docs</a> warn you that calling <code>mount</code> instead of <code>shallowMount</code> will persist components in the DOM and the reason we’re seeing a larger impact on this test is because the store is still triggering change detection in components that should’ve been destroyed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292&amp;fm=webp 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585&amp;fm=webp 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169&amp;fm=webp 1169w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=292 292w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=585 585w,
https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png?w=1169 1169w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3CSm3wi1TeZ9fdJnw4aQ7z/09ffb5f974a125faef1053c3b56c1639/Untitled__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Using Sentry’s Performance Trends feature, we can confirm the performance impact these changes made to the tests.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275&amp;fm=webp 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550&amp;fm=webp 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100&amp;fm=webp 1100w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=275 275w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=550 550w,
https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png?w=1100 1100w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jest-5" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3P8Yf3qfTCzW4RCtBxI89l/a2ab0c33e1bb16dbf60f4af8a468ed88/Screen_Shot_2021-06-09_at_1.34.51_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="instrumenting-your-own-tests"><a href="#instrumenting-your-own-tests" aria-label="instrumenting your own tests permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting your own tests</h2>
<p>We provided an example <a href="https://github.com/billyvg/jest-sentry-environment">Jest environment</a> that you can use if you’re interested in instrumenting your own Jest tests. You’ll need to install the <code>jest-sentry-environment</code> package and update your Jest configuration to use the fore-mentioned package, as well as supplying your Sentry DSN. For further instructions, please see the <a href="https://github.com/billyvg/jest-sentry-environment">repository</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5HiwVLXePFUDh53vwTPDfD/9e6e3fbf92c1ff6b52b22acf1af63059/DogFood1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 27 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Root out the odd operation with Operations Breakdown</title>
      <link>https://blog.sentry.io/2021/07/15/root-out-the-odd-operation-with-operations-breakdown/</link>
      <description>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Transactions are sent when your service receives a request and sends a response, like an API call or a page load. Within each transaction is a series of operations. We built <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> to help you, the developer, quickly see how much time was spent in each operation within a transaction. Why? Simple, so you can address the operations with the longest duration and likely causing annoying performance issues for your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299&amp;fm=webp 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196&amp;fm=webp 1196w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=299 299w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png?w=1196 1196w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6yQcYKAcHCaJabop86dsLe/a94cbaed3687861fb45513088b469ee4/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Each color denotes the type of operation, such as http, db, resource and browser. It also allows you to visualize change over time for each operation type and find transactions with unusual distributions of operations that could point to an underlying problem.</p>
<p>Fun fact: We use Sentry to monitor Sentry, shocker. We started using Operations Breakdown when it was early in development. Seeing that some transactions spent much more time in the database than other similar transactions surfaced a previously unknown n+1 issue. Checkout the <a href="https://github.com/getsentry/sentry/pull/25144">PR</a> for the fix.</p>
<p>In the example below, most <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/">transactions</a> have a pattern that shows a mix of different operations, and one that is entirely composed of http operations, marked in yellow. That event is worth investigating some more…</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214&amp;fm=webp 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428&amp;fm=webp 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856&amp;fm=webp 856w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=214 214w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=428 428w,
https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png?w=856 856w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-zoom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/vXtHeQSq977GfQhnT8aT3/9ac5a797aac0d23048afd066c5d1d952/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>You can dive deeper into an individual event and see the details of a particular span.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587&amp;fm=webp 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174&amp;fm=webp 1174w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=587 587w,
https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png?w=1174 1174w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="operations-breakdown-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TgfR40opTUqVrbTGIzG8I/798244a2c840148fd8299c8e94a50d91/image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="when-transactions-go-awry"><a href="#when-transactions-go-awry" aria-label="when transactions go awry permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>When Transactions go Awry</h2>
<p>Another way you can use Operations Breakdown is to track the distribution of operations over time to see if the distribution changes dramatically. If an irregularity develops, this could indicate a slow database query that could be caused by a growing database. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446&amp;fm=webp 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892&amp;fm=webp 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783&amp;fm=webp 1783w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=446 446w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=892 892w,
https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png?w=1783 1783w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="span-operation-breakdown" title="" src="https://images.ctfassets.net/em6l9zw4tzag/108xNEmveO5Ds2o57CkHD4/a44232cc094a7513a8ccf99a329c416e/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Whether it’s timeouts, slow loading pages, or errors causing performance problems, with <a href="https://docs.sentry.io/product/sentry-basics/tracing/event-detail/#operations-breakdown">Operations Breakdown</a> you see which operations have the greatest impact on your performance so your team can make improvements that drive the biggest gains.</p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 15 Jul 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Become A Hidden Champion.  Work With Me In Vienna.</title>
      <link>https://blog.sentry.io/2021/07/13/become-a-hidden-champion-work-with-me-in-vienna/</link>
      <description>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A term of business endearment — if there is such a thing — is to call a company a hidden champion. It’s bestowed on businesses who quietly sustain their success through a combination of culture, innovation, and product quality.  And while the term is usually applied to manufacturing companies, our office in Vienna represents a hidden champion mindset — both in who we are, and what we’re looking for in our future developers.</p>
<p>For employees who work at hidden champions, loyalty is reciprocated, not demanded.  The high retainment rate in our Vienna office speaks to this, as well as our belief that employees both contribute to — and benefit from  — a culture of high performance. While some companies need to invent unproductive work (perhaps this is your current situation), Sentry’s rapid growth ensures there’s more work than people — instead of the other way around. </p>
<p>Sentry’s open-source tradition is core to our Vienna office. Some of my own open-source libraries (such as the Flask web framework) are now powering parts of LinkedIn, and many of the applications we use today rely on open-source projects created in Vienna. Sentry itself started out as an open-source project (in Django), and has grown into a platform which gives developers insights into what went wrong or why things are slow.</p>
<p>A big part of company culture is company location.  It’s why we chose Vienna as our European hub, as it was recently voted the most livable city in the world. Vienna’s excellent child care facilities, geographic proximity (located in the center of Europe), and mix of urban convenience and natural beauty. And in Vienna, we give our developers a throughline to Silicon Valley without the hustle, bustle, and drama that can accompany living in it. </p>
<p>Working at Sentry means building products — and professional relationships — that endure. If that’s what you’re looking for in the next stop of your career, then I hope  you consider becoming a hidden champion working with me at Sentry. </p>
<p>Check out our <a href="https://sentry.io/careers/">open positions</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3wWJj2Xamb0cT0EWtRh7v/936bbe3ea380bf00bafed4bb22a93ae0/Vienna.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 13 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack June: A Recap</title>
      <link>https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/</link>
      <description>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:  Our Next.js SDK monitors…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><div><a href="https://twitter.com/intent/tweet?text=Jamstack%20June%3A%20A%20Recap%20https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;rl=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;via=getsentry&amp;amp;related=getsentry"><div><svg color="#1DA1F2" viewBox="0 0 16 16" version="1.1"><path d="M16,3a6.56,6.56,0,0,1-1.89.52,3.29,3.29,0,0,0,1.44-1.82,6.57,6.57,0,0,1-2.08.8,3.3,3.3,0,0,0-5.59,3A9.32,9.32,0,0,1,1.11,2.1a3.32,3.32,0,0,0,1,4.38A3.27,3.27,0,0,1,.64,6.07,3.32,3.32,0,0,0,3.28,9.33a3.32,3.32,0,0,1-1.48.06,3.29,3.29,0,0,0,3.07,2.28A6.66,6.66,0,0,1,0,13a9.48,9.48,0,0,0,10.71-.39,9.61,9.61,0,0,0,3.65-7.9A6.67,6.67,0,0,0,16,3C15.41,3.3,15.56,3.7,16,3Z" fill="currentColor"></path></svg><p><span>Share on Twitter</span></p></div></a><a href="https://facebook.com/sharer.php?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/"><div><svg color="#156df0" viewBox="0 0 16 16" version="1.1"><path d="M15.1 0H.89A.89.89 0 0 0 0 .9v14.2a.89.89 0 0 0 .89.9h7.89V9.6H6.39V7.2h2.39V5.6c0-2.06 1-3.17 2.84-3.17.88 0 1.71-.05 2 0V4.8H12c-1 0-.8.11-.8.8v1.6h2.4l-.8 2.4h-1.6V16h3.9a.89.89 0 0 0 .9-.9V.9a.89.89 0 0 0-.9-.9z" fill="currentColor" fill-rule="evenodd"></path></svg><p><span>Share on Facebook</span></p></div></a><a href="http://news.ycombinator.com/submitlink?u=https://blog.sentry.io/2021/07/01/jamstack-june-a-recap/&amp;amp;t=Jamstack%20June%3A%20A%20Recap"><div><svg color="#ff6600" viewBox="0 0 16 16" version="1.1"><path d="M0 0v16h16V0zm15 15H1V1h14zM7.61 9a.57.57 0 0 1 0 .32v3.06h1.17V9.23a.41.41 0 0 1 0-.19c.77-1.46 1.56-2.92 2.33-4.38.09-.21.22-.4.29-.62a7.46 7.46 0 0 0-1.16 0c-.54 1.11-1.11 2.27-1.7 3.41-.1.18-.18.37-.29.54-.13-.21-.23-.44-.35-.66L6.34 4.11S6.3 4 6.24 4H5c.14.32.32.62.48.93C6.18 6.31 6.9 7.64 7.61 9z" fill="currentColor"></path></svg><p><span>Share on HackerNews</span></p></div></a></div><article><p><time datetime="2021-07-01T00:00">July 1, 2021</time></p><ul><li><a href="https://blog.sentry.io/sdk-updates/"><span>SDK Updates</span></a></li></ul><div><p>Like any jam session, Jamstack June must end. But not before we reprise a few of our greatest licks of the month:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">Our Next.js SDK</a> monitors your Next.js projects to capture errors, automatically upload source maps, and trace errors to the commit that broke your code — all so stack traces look like your original code. </p>
<p>We teamed up with Netlify to walk you through <a href="https://www.youtube.com/watch?v=xEikLxEcNiU">how to build, deploy, and monitor your Next.js applications</a>. </p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/xEikLxEcNiU/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/sddefault.webp 640w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/xEikLxEcNiU/default.webp 120w"/><img src="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/xEikLxEcNiU/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/xEikLxEcNiU/sddefault.jpg 640w, https://i.ytimg.com/vi/xEikLxEcNiU/hqdefault.jpg 480w, https://i.ytimg.com/vi/xEikLxEcNiU/mqdefault.jpg 320w, https://i.ytimg.com/vi/xEikLxEcNiU/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<p>What makes JavaScript great is also what makes it frustrating to debug. Find out <a href="https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/">why debugging Javascript sucks — and what you can do about it</a>.</p>
<p>And this month, we’ll be riffing on ways you can trace performance issues from the frontend to the backend — stay tuned. In the meantime, drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article><div><p>Your code is broken. Let&#39;s Fix it.</p><p><a href="https://sentry.io/signup"><span>Get Started</span></a></p></div></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Why Debugging JavaScript Sucks — And What You Can Do About It</title>
      <link>https://blog.sentry.io/2021/06/29/why-debugging-javascript-sucks-and-what-you-can-do-about-it/</link>
      <description>What makes JavaScript great is also what makes it frustrating to debug. Its asynchronous nature makes it easy to manipulate the DOM in…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>What makes JavaScript great is also what makes it frustrating to debug. Its asynchronous nature makes it easy to manipulate the DOM in response to user events, but it also makes it difficult to locate problems. And JavaScript’s ubiquity has resulted in a variety of runtimes (e.g. Chromium’s V8,  Safari’s JavaScriptCore, and Firefox’s SpiderMonkey) but having so many platforms can cause dizzying idiosyncracies — all of which need to be supported equally.</p>
<p>This makes pinning down the root cause of your JavaScript errors difficult. Is it a memory leak?  Browser-specific bug? Or maybe you referenced the wrong value of <code>this</code>? And while there are options to debug your JavaScript, none of them are particularly pleasant: </p>
<p><strong>Reproducing the issue</strong> is the equivalent of cooking a poorly received dinner again just to taste what went wrong. And it’s borderline impossible to reproduce the exact conditions of runtime environments, hardware, and network inconsistencies.</p>
<p>While <strong>console.log</strong> is great if you’re debugging locally, it’s not really helpful if you can’t reproduce it — or if you want to debug in production. That’s because logging merely identifies where in the codebase you are — but not what the problem is.   </p>
<p>If you have managed to successfully reproduce a bug, <strong>in-browser debugging tools</strong> are the next step, but if you don’t have <a href="https://docs.sentry.io/platforms/javascript/sourcemaps/">source maps</a> available in production, good luck finding the root cause as you squint at minified JavaScript and opaque error codes.</p>
<h2 id="its-ok-to-be-lazy"><a href="#its-ok-to-be-lazy" aria-label="its ok to be lazy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>It’s Ok To Be Lazy</h2>
<p>Let’s be honest: you didn’t get this far by working hard. You did it by figuring out which tools can do the hard work for you. And <a href="http://sentry.io/for/javascript">Sentry’s suite of monitoring tools</a> seamlessly hooks into your runtime environment to do the heavy lifting of debugging for you:</p>
<p><strong><a href="https://docs.sentry.io/platforms/javascript/">Sentry for JavaScript</a></strong> gives you complete context in the form of full stack traces, support for source maps that unminify your code, and direct integration with your source code management tool to help you <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/configure-scms/">identify the commit</a> that broke your code.</p>
</div><div>
<p>Our <strong><a href="https://docs.sentry.io/product/issues/issue-details/">Issue Details</a></strong> page gives you the device, OS, browser of your user to give you full visibility into what led up to your JavaScript incident. And if you are using <code>console.log</code> to debug in production, we can capture <a href="https://docs.sentry.io/product/issues/issue-details/breadcrumbs/">breadcrumbs</a> to create the trail of events that happened prior to an issue — then use our rich, structured data to see beyond what any log can give you.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188&amp;fm=webp 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750&amp;fm=webp 750w" sizes="(max-width: 750px) 100vw, 750px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=188 188w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png?w=750 750w" sizes="(max-width: 750px) 100vw, 750px"/>
          <img alt="smallScreen Shot 2021-06-28 at 8.47.49 PM copy" title="" src="https://images.ctfassets.net/em6l9zw4tzag/86E4dfSSOOGpWwBzKbjA4/4b05d1013226a23135251ed2de5a70c5/Screen_Shot_2021-06-28_at_8.47.49_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And with <strong><a href="https://docs.sentry.io/product/discover-queries/">Discover</a></strong>, our intuitive query builder, you can debug with pre-built searches that filter your JavaScript events, unique errors, errors by URL, and client. Check out Discover’s <a href="https://blog.sentry.io/2020/02/11/new-debugging-superpowers-with-discover">debugging superpowers</a> — and how we used it to root out our own <a href="https://blog.sentry.io/2021/02/11/patching-a-flood-of-404s">404 errors</a>.</p>
<p>Brian Kernighan — the inventor of Unix — said the most effective debugging tool is careful thought. Well, Kernighan didn’t have to debug why a valid regular expression throws an exception on Safari — or deal with the rapid increase of JavaScript-driven web APIs. But with Sentry’s application monitoring tools, you can save your careful thought for where it belongs: your code, not your errors.</p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6L8G5xKVLlbfRGF3BcVb6Z/222282ceff456d9020f9a7cd0cc87d14/Errors2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 29 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Jamstack, Next.js, Netlify, and Sentry: How The Pieces Fit</title>
      <link>https://blog.sentry.io/2021/06/17/jamstack-next-js-netlify-and-sentry-how-the-pieces-fit/</link>
      <description>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Jamstack (Javascript + APIs + Markup) is a web architecture that combines the convenience of pre-built websites with the capacity to handle custom APIs and serverless functions. By separating the frontend UI from backend databases,  Jamstack allows developers to structure their application in ways that deliver  dynamic content faster. Jamstack also gives you the ability to deploy your frontend directly to a CDN, which enables modular development that can leverage a huge ecosystem of third-party tools  — including Sentry.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-nextjs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4LfWG3BtvhqtctS8GaZ0ep/6ec509bb84019611bf56b515216c6b22/hero-nextjs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="nextjs"><a href="#nextjs" aria-label="nextjs permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Next.js</h2>
<p>Next.js offers everything you want in a JavaScript framework: minimal configuration, TypeScript support, smart bundling, and route prefetching. </p>
<p>  <em>We manage several large customer-facing properties and Next.js gives us     the flexibility to easily build static and dynamic pages without spinning   up servers or sacrificing the end-user experience. With Next.js, we can     see our changes locally in 100s of milliseconds and have reduced build       times for our larger projects from 35 minutes to 7.</em><br/>
<strong>Michael Wickett, Group Manager, Web Development, HashiCorp</strong></p>
<p>And when you install our <a href="https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js">freshly-released Next.js SDK</a>, you get the necessary context to understand how certain events can lead to errors or performance issues in your application.  Our <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">Next.js SDK</a> automatically captures errors, breadcrumbs that show what led to an issue, and all the meta data required to fully diagnose a critical problem. </p>
<h2 id="netlify"><a href="#netlify" aria-label="netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Netlify</h2>
<p>The <a href="https://www.netlify.com/products/?utm_source=netlify.com%2Fblog%2F&amp;utm_medium=blog&amp;utm_campaign=partner-post-sentry">Netlify platform</a> combines modern build workflows, serverless functions, and an edge network to deliver simple, secure, and scalable Jamstack applications. With Netlify’s custom testing environments, you’re able to evaluate multiple new features at the same time without needing to schedule feature previews for approval on a single test instance. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="hero-netlify" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7sCHriPWRH4klwTSURb6B9/7a8aa4f7df62bbc395089cb84fd1f492/hero.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="sentry-build-plugin-for-netlify"><a href="#sentry-build-plugin-for-netlify" aria-label="sentry build plugin for netlify permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sentry Build Plugin for Netlify</h2>
<p>And just as Netlify hosts your Jamstack application, Sentry monitors it with our <a href="https://blog.sentry.io/2020/06/08/automating-sentry-releases-with-our-netlify-build-plugin">Build Plugin</a>. Not only does our Build Plugin automatically notify you of new releases, it uploads source maps and configures suspect commits within the Sentry platform. And if you do see anything suspicious, Netlify makes it easy to instantly roll back to a previous, sturdier version of your application.</p>
<p><em>The most noticeable for us was saving an average of three hours per week on performing deploys, setting up configurations and maintaining        infrastructure. For a small web dev team, this has a huge impact.</em><br/>
<strong>Primož Bevk, Senior IT Strategist at Outfit7</strong></p>
<h2 id="discover"><a href="#discover" aria-label="discover permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover</h2>
<p>It’s not enough to know when a performance issue happened. You need to know who’s impacted by that issue, to what extent, and how it occurred. <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">Discover</a> solves these needs, as you can identify application performance issues, analyze releases, define a metric alert to get notified of similar issue — in addition to evaluating the line of code that’s causing the error.</p>
<p>Just as application errors are related, the tools to fix those errors should be related as well. It’s why you don’t need a bunch of disconnected tools to monitor your application; you need an integrated, intuitive approach to investigate problems. With Jamstack’s simplicity and Sentry’s visibility, you’re well on your way toward creating — and maintaining  —  the type of applications that your customers demand.</p>
<p>Looking for best practices on building, deploying, and monitoring your Next.js applications? Neil Manvar (Solutions Engineer @Sentry) and Ramin Sedighi (Solutions Engineer @Netlify) are hosting a webinar on June 24th. Register <a href="https://us06web.zoom.us/webinar/register/2216239684811/WN_znhaqwALTXWf-3Rqtf8mBQ">here</a>.</p>
<p>In the meantime, try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6nDncXOAUbcY8Xy0zLdHQ0/c943c8fb7e8de9a33f7d5c6efc4cb8fc/Jamstack-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Find the Root Cause Faster with Trace View and Trace Navigator</title>
      <link>https://blog.sentry.io/2021/06/15/find-the-root-cause-faster-with-trace-view-and-quick-trace/</link>
      <description>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner: Why is my page slow? &#xA;Guess…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like a bratty teenager, traditional monitoring answers your questions, but does so in a terse, unhelpful manner:</p>
<p>Why is my page slow? <br/>
<em>Guess it’s the API call. It’s a 504 thing — you wouldn’t understand.</em></p>
<p>Ok, so why is the API call slow? <br/>
<em>Ask your DB query. Gosh!</em></p>
<p>You need a better conversation with your code — one which gives you contextual clues about your application’s performance. And that’s what we’ve delivered with our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a> features.</p>
<h2 id="connect-your-slow-loading-dots-with-trace-view"><a href="#connect-your-slow-loading-dots-with-trace-view" aria-label="connect your slow loading dots with trace view permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Connect your slow-loading dots with Trace View</h2>
<p>Trace View gives you a throughline between transactions across all your projects. Now you can follow poor performance to its root cause by drilling down into the details of a single trace as well as crisscrossing between front- and back-end transactions in that trace. </p>
<p>For example: say you have a React single-page app, and it makes a call to a backend API in Python, which then queries the database. By using Trace View, you can see how your code progresses from the initial call to the final query — and see how related errors react to each other in context. </p>
</div><div>
<p>In this tutorial, see how you can use Trace View to jump between parent and child transactions and, ultimately, gain a better understanding of your endpoints.</p>
<h2 id="tldr-your-errors-with-trace-navigator"><a href="#tldr-your-errors-with-trace-navigator" aria-label="tldr your errors with trace navigator permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tl;dr your errors with Trace Navigator</h2>
<p>You don’t read logs — you scan them. So why should your application monitoring be any different? Trace Navigator gives you the context you need to see details at a glance as well as get visibility into the bigger picture. The minimap helps you navigate related errors and children transactions. With it, you can flit between related errors and performance issues while also being able to order metadata like device, OS, and browser. </p>
</div><div>
<p>Developers know that there’s no such thing as an isolated issue. Many of your frontend errors will have roots in your backend infrastructure — and vice versa. With our new <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View and Trace Navigator</a>, you’re able to see the problem clearly — so that you can solve it quicker.  </p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact us at <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1aJZCx78Fbhi1G5Wjde0oC/f7ed0d10764b6bc489bcef7dd9ed56be/performance3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Sentry Application Monitoring for Next.js</title>
      <link>https://blog.sentry.io/2021/06/10/sentry-application-monitoring-for-next-js/</link>
      <description>As you could probably tell from the title, we shipped an SDK for Next.js. This means you can capture errors, measure performance, manage…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>As you could probably tell from the title, we shipped an <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/">SDK for Next.js</a>. This means you can capture errors, measure performance, manage releases, configure suspect commits, and automatically upload sourcemaps to view unminified JavaScript and TypeScript with zero(-ish) configuration. </p>
<p>Why was Next.js next on our list? Well, it’s one of the fastest-growing <a href="https://docs.sentry.io/platforms/javascript/guides/react/">React</a> frameworks and developers love it. Next.js provides a developer experience that helps with building features rapidly, seeing local changes quickly, and reducing build times. </p>
<blockquote>
<p>Next.js turns traditionally complex decisions into simple implementation details. Spinning up new pages with our existing React components and Material UI went from days to hours with Next. </p>
</blockquote>
<p><em>Sean Parmelee, Applications Architect, <a href="https://www.care.com/">Care.com</a></em></p>
<p>To monitor Next.js projects in the past, you had to install our <code>@sentry/node</code> and <code>@sentry/react</code> SDKs — installing both and configuring your environment correctly was time-consuming and literally no fun. The new Next.js SDK does all that for you, and works swimmingly with our <a href="https://www.npmjs.com/package/@sentry/webpack-plugin">Webpack Plugin</a> or <a href="https://docs.sentry.io/product/cli/"><code>sentry-cli</code></a> to upload your source maps.</p>
<p>To get started with Sentry for Next.js, simply install the SDK:</p>
<p><code>yarn add @sentry/nextjs</code></p>
<p>And then configure: </p>
<p><code>npx @sentry/wizard -i nextjs</code></p>
<p>Configure <a href="https://docs.sentry.io/platforms/javascript/guides/nextjs/performance/">performance monitoring</a> by setting a <code>tracesSampleRate</code> when you initialize the SDK, in both <code>sentry.client.config.js</code> &amp; <code>sentry.server.config.js</code> :</p>
<div data-language="javascript"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
  <span>// ...</span>
  tracesSampleRate<span>:</span> <span>1.0</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>Once you’ve done that, frontend transactions will be captured automatically. To capture API request transactions, wrap your handlers in our <code>withSentry</code> helper. (Hint: If you’re already using our SDK to capture errors in those routes, you will have already done this. No extra configuration needed.)</p>
<div data-language="javascript"><pre><code><span>import</span> <span>{</span> <span>*</span> <span>as</span> Sentry <span>}</span> from ‘@sentry<span>/</span>nextjs’<span>;</span>
Sentry<span>.</span><span>init</span><span>(</span><span>{</span> <span>...</span> <span>}</span><span>)</span><span>;</span>

<span>function</span> <span>handler</span><span>(</span><span>req<span>,</span> res</span><span>)</span> <span>{</span>
  <span>// ...</span>
<span>}</span>

<span>export</span> <span>default</span> Sentry<span>.</span><span>withSentry</span><span>(</span>handler<span>)</span><span>;</span></code></pre></div>
<p>You can quickly track down poor-performing APIs or slow database queries. With new features like Trace Navigator, <a href="https://docs.sentry.io/product/sentry-basics/tracing/trace-view/">Trace View</a>, and Suspect Tags, Sentry connects frontend issues to root causes in the backend and vice versa.  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598&amp;fm=webp 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195&amp;fm=webp 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390&amp;fm=webp 2390w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=598 598w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=1195 1195w,
https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png?w=2390 2390w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="quick-trace" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3QzwWs8eByNe4WrCNxxvvH/d78e77c8599617effc60f79c28be064f/02_embed_transaction__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Trace View gives a waterfall view of a given transaction and dependencies across all projects on a single screen.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296&amp;fm=webp 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591&amp;fm=webp 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182&amp;fm=webp 1182w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=296 296w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=591 591w,
https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg?w=1182 1182w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="trace-view" title="" src="https://images.ctfassets.net/em6l9zw4tzag/76mIKgxggz9oMuF1tIXkiL/a77233a58100997eff147a5a436474bb/trace-view-original_copy.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Early adopters of our SDK — like Stefen Alper, Co-Founder of eesel, a content search and centralization tool — are already using Sentry for Next.js to capture errors. Now they (and you) can also capture performance data. </p>
<blockquote>
<p>We moved to Next.js for the dev experience and the scalability. As longtime users of Sentry’s error monitoring offering, we’re looking forward to start monitoring performance and managing releases with Sentry’s new Next.js SDK.  </p>
</blockquote>
<p><em>Stefen Alper, Co-Founder, <a href="https://eesel.app/">eesel.app</a> </em></p>
<p>Install our <a href="https://sentry.io/for/nextjs">Next.js SDK</a> and get a pretty good idea of which commit caused the issue and who is likely responsible, and automatically upload source maps so your stack trace looks like the original code you wrote. Also, <a href="https://us06web.zoom.us/webinar/register/4016233661429/WN_znhaqwALTXWf-3Rqtf8mBQ">join us</a> on June 24th, 2021 for a live workshop on how to build, deploy, and monitor Next.js applications with Sentry and Netlify. </p>
<p>If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5oKTFLPvebgADv7SWHSMqA/4f282f6c579d1cc8667d8913d83a5668/meta-nextjs.png" length="0" type="image/png"></enclosure>
      <pubDate>Thu, 10 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Better Alerts [as in, far more specific and just generally way better]</title>
      <link>https://blog.sentry.io/2021/06/08/better-alerts/</link>
      <description>A couple of weeks back, we broke sign-ups. And in the most meta fashion, we learned about this because someone here had the foresight to set…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>A couple of weeks back, we <a href="https://twitter.com/zeeg/status/1395062746983530498?s=20">broke sign-ups</a>. And in the most meta fashion, we learned about this because someone here had the foresight to <a href="https://sentry.io/resources/alert-rules/">set up an alert</a> in Sentry to notify us if sign-ups dropped to zero.</p>
<p>Getting alerted kicked off our incident response process. A team was formed to tackle “What broke?”, “How do we fix this?”, “How long has this been happening?”, “Are any other services impacted?”, and much more.</p>
<p>Previously, with enough time and digging around in Sentry, you (and we) would eventually find these answers — but it wasn’t straightforward. That’s frustrating, especially when time is of the essence.</p>
<p>So, we updated <a href="https://docs.sentry.io/product/alerts-notifications/metric-alerts/#alert-details">Alert Details</a> to make answering those burning questions easier. In our example of broken sign-ups, the new Alert Details view gives us the entire issue history, what <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-1-create-the-project">project</a>, what team is responsible, and who created the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488&amp;fm=webp 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976&amp;fm=webp 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952&amp;fm=webp 1952w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=488 488w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=976 976w,
https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png?w=1952 1952w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-details-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6UA7TYfKKV7VeeQf5pOqeH/cd2fab5914b44ae9064a0030128cd02f/alert-details-examples.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But that’s just the beginning; we also wanted to make the alerts page more valuable by providing <a href="https://blog.sentry.io/2020/07/07/dont-be-alarmed-by-alerts">contextual information</a>, so you have everything you need to resolve issues quickly. Below the chart, we now display a panel that shows a list of related errors or performance issues. From there you can jump off into <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to determine the root cause of the alert.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315&amp;fm=webp 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631&amp;fm=webp 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261&amp;fm=webp 1261w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=315 315w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=631 631w,
https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png?w=1261 1261w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="discover-errors-by-url" title="" src="https://images.ctfassets.net/em6l9zw4tzag/OvuSU2qBzs22NhfTbrScM/08c9d97553249ba3d4e3474083465f9f/discover-errors-by-url.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="learning-how-to-improve-uptime-with-better-alerts"><a href="#learning-how-to-improve-uptime-with-better-alerts" aria-label="learning how to improve uptime with better alerts permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learning how to improve uptime with better Alerts</h2>
<p>We also refreshed our alert wizard so it’s much easier to <a href="https://docs.sentry.io/product/sentry-basics/guides/integrate-frontend/create-new-project/#step-2-create-an-alert-rule">set alerts</a> that make sense for your team. The new wizard makes it easy to see which alerts to add and what <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/metric-alerts/#5-set-a-threshold">thresholds</a> to use. Once you select an alert type, we provide threshold recommendations so that you can improve your signal-to-noise ratio. This means better alerts and fewer pages at night.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460&amp;fm=webp 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920&amp;fm=webp 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840&amp;fm=webp 1840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=460 460w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=920 920w,
https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png?w=1840 1840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alert-wizard" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1bi5yZERoKv4zt2i6SvyVi/bbed4b55883249115eb1784a0bf02e07/Screen_Shot_2021-05-06_at_5.38.35_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="see-issues-clearly-with-alert-list"><a href="#see-issues-clearly-with-alert-list" aria-label="see issues clearly with alert list permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See issues clearly with Alert List</h2>
<p>We created <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/">Alert List</a> to show you the status of all your alerts - so you can quickly ensure that your product or service is covered and that all the alerts are linked to the owners. That way, each triggered alert will be <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/routing-alerts/#issue-owners">routed to the right team</a>. You can also filter alerts by name to narrow your focus to the alerts that matter to you. That’s right—now, you and your team can turn addressing latency alerts into a fun little game called “Who’s  Lagging?” […so sorry.] Alert List is so on top of it, in fact, that it’ll identify and alert you when an alert hasn’t been assigned. Inception.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487&amp;fm=webp 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974&amp;fm=webp 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948&amp;fm=webp 1948w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=487 487w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=974 974w,
https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png?w=1948 1948w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="alerts-example" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Bh0QrBFcBBT5mUeRjeDlV/2e46d58281552af84ff8eedc94313e13/alerts-example.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With Alert List, it should be easier to see the alerts that matter to you and solve them quickly and thoroughly. We hope these improvements make Sentry more useful. Because we really wouldn’t want to make Sentry less useful.</p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3RgWxFDQ1MPjxainqnjlPm/f540e950de207a3ff79c1ea1513227e5/alertImprove-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Dogfooding Chronicles: Never Be Content With Your Content (Security Policies)</title>
      <link>https://blog.sentry.io/2021/05/27/dogfooding-chronicles-never-be-content-with-your-content/</link>
      <description>In this Dogfooding Chronicle, I’ll walk you through how we updated our Content Security Policy using Discover — and how we’re keeping watch…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In this Dogfooding Chronicle, I’ll walk you through how we updated our Content Security Policy using <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> — and how we’re keeping watch with <a href="https://sentry.io/features/dashboards/">Dashboards</a>.</p>
<h2 id="defining-content-security-policies"><a href="#defining-content-security-policies" aria-label="defining content security policies permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Defining Content Security Policies</h2>
<p>As the Internet evolves, so must our security mechanisms. It’s why same-origin policies (a Netscape-era directive in which resources from one origin are unable to modify or read data from another origin) put your application at risk for clickjacking and cross-site scripting attacks. That’s because same-origin policies have a weakness that enables third-party entities to have the same access rights as trusted entities. Content Security Policies (CSPs) address this blind spot by approving specific content types —  everything from <a href="http://sentry.io/for/javascript">JavaScript</a> sources to CSS fonts, HTML frames and embeddable Java applets. </p>
<p>Put simply, a CSP lets a browser know which content sources are to be trusted — and which aren’t. And when there is a CSP violation, browsers can submit the error to a <code>report-uri</code>. What’s more, if you have Sentry, these violation reports are integrated into your application’s monitoring dashboards.</p>
<p>During our most recent penetration test, we found that some of the CDN domains in our allow list were hosting potentially dangerous scripts. One of our recommendations from this audit was to refine and improve our CSP rules.   </p>
<h2 id="discover-ing-report-only-mode"><a href="#discover-ing-report-only-mode" aria-label="discover ing report only mode permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Discover-ing ‘report-only’ mode</h2>
<p>Content Security Policies have two modes. The first mode enforces and actively blocks resource loading and execution, while the second collects the errors that would happen if the rules were active. This mode is set via the invaluable <code>Content-Security-Policy-Report-Only</code> header that defines your CSP rules. </p>
<p>When I combined this ‘report-only’ feature with <a href="http://sentry.io/features/custom-queries">Discover queries</a>, I was able to visualize all the errors coming from <code>report-only</code> mode. Now I could view the impact of fixes in real time, and see which rules were being broken — without disrupting customers.</p>
<h2 id="sussing-out-safari"><a href="#sussing-out-safari" aria-label="sussing out safari permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sussing out Safari</h2>
<p>While <code>report-only</code> mode worked well, I did encounter some hiccups in Safari, as it’s been known to jumble its report-only and enforced modes. This meant I was getting errors for sources that should be allowed. To verify that these errors were caused by Safari bugs, I used our staging environment to test Safari with only the new rules being enforced. And using <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, I was able to fully view Safari’s impact on our CSP errors.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254&amp;fm=webp 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508&amp;fm=webp 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016&amp;fm=webp 1016w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=254 254w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=508 508w,
https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png?w=1016 1016w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="cc" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3SSb59kIs6SSz1NRswiiJ5/50c19c85aa718ffbf921cee0829595bb/cc.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="a-glance-at-the-solution"><a href="#a-glance-at-the-solution" aria-label="a glance at the solution permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>A glance at the solution</h2>
<p>Like reading a good detective novel, once I solved this problem, another, more confounding problem bubbled up to take its place. Our Jira integration was having trouble integrating with our CSP. Because our <a href="http://sentry.io/integrations/jira">Jira integration</a> includes an embedded ‘glance view’, I could view Sentry data alongside other fields like assignee, priority and labels. After reviewing these embedded views, I discovered the issue: outdated libraries that relied on <code>eval()</code> expressions which are not allowed in our CSP rules. </p>
<p>While upgrading these libraries to newer versions resolved a large number of errors, it didn’t solve them all.  And though I was unable to reproduce these last few errors, I was able to use Discover’s tag breakdowns to narrow things back down to — you guessed it — a Safari-specific issue:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78&amp;fm=webp 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156&amp;fm=webp 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312&amp;fm=webp 312w" sizes="(max-width: 312px) 100vw, 312px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=78 78w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=156 156w,
https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png?w=312 312w" sizes="(max-width: 312px) 100vw, 312px"/>
          <img alt="dd" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2O54ifTOk2YEPCgLaZ3QV8/dfeba6f057367c16a32bd664eb596715/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="csp-3-coming-to-a-browser-near-you"><a href="#csp-3-coming-to-a-browser-near-you" aria-label="csp 3 coming to a browser near you permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>CSP 3: Coming to a browser near you.</h2>
<p>The newest iteration of CSP has been in production for years, and is about to be fully released. Which is why we have defined rules for all three levels to get the broadest — and sturdiest — coverage possible. Doing so has both simplified our CSP configuration and improved our resilience to cross-site scripting. Which brings me to my last tip: it’s important to define directives in the order of their levels. Browsers will often stop parsing a directive when they find something they don’t know, so it’s important that there are specific directives for all three CSP levels.</p>
<p>Developing a Content Security Policy isn’t about being fussy — it’s about being functional. Data and code from untrusted sources should not have the same privileges as the trusted programmer’s code. By implementing a well-defined CSP, you can mitigate attacks, control assets, and breathe easier.  </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3oXGtdjqkwjIGE1O1ioWCe/3a83d856f5afed3d1040feec43f1351c/DogFood2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 27 May 2021 09:30:00 +0000</pubDate>
    </item>
    <item>
      <title>Establishing the New Normal in Pandemic-Aftertimes</title>
      <link>https://blog.sentry.io/2021/05/25/establishing-the-new-normal-in-pandemic-aftertimes/</link>
      <description>Three Hundred and Eighty-One Three hundred and eighty-one. The number of days it’s been since our Sentry offices shut down, in what we…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><h2 id="three-hundred-and-eighty-one"><a href="#three-hundred-and-eighty-one" aria-label="three hundred and eighty one permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>[Three Hundred and Eighty-One]</h2>
<p>[Three hundred and eighty-one]. The number of days it’s been since our Sentry offices shut down, in what we believed at that time to be a very short-term temporary measure while we took stock of the events unfolding around us. In this last year of the pandemic, like so many companies, we were initially left scrambling with how to handle the complexities of our newly distributed workforce, while juggling the uncertainties we have faced in what I hope is a once-in-our-lifetime global phenomenon. The results of the pandemic have left businesses reevaluating and reimagining how their operations can effectively operate not just in the chaos of the immediate-term, but also with longer-term sustainability. A few monoliths have swung the pendulum hard and shifted entirely to a permanently distributed workforce, while other companies have opted for a hybrid approach. At Sentry, we believe that investing in flexible solutions while maintaining the connectedness an office hub affords, is the work of the future.</p>
<h2 id="building-connections-irl"><a href="#building-connections-irl" aria-label="building connections irl permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Building Connections IRL</h2>
<p>So why not go fully remote? Many jobs in tech aren’t bound to physical locations - grab a laptop, you can work virtually from anywhere! And yes - while this is a (mostly) true statement, this largely ignores the invaluable in-person interactions with teams &amp; coworkers that one doesn’t get to experience with fully distributed teams. Interactions like turning to a coworker for quick conversations, informal, serendipitous “watercooler” chats, the deeper personal relationship-building that happens over a coffee walk or a lunch gathering, or simply engaging in a quick friendly interaction during a minute wait outside of a meeting room. </p>
<p>We’re also looking to solve for the problems folks face when they lack that physical separation and boundaries between work and home life. Having an office environment that is specifically set up to suit work needs, using commutes for focus, being able to participate in the camaraderie of team building events during the day or after-hours. All of these serve as ways to stay mentally healthy, productive, and engaged within teams and the company as a whole.</p>
<h2 id="an-ethos-of-flexibility"><a href="#an-ethos-of-flexibility" aria-label="an ethos of flexibility permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>An Ethos of Flexibility</h2>
<p>And so, instead of reactively hard-pivoting to a fully-distributed model - one that doesn’t positively impact our company culture - we have proactively focused on the ethos of flexibility. We have always provided a flex model - days, time, time-off. We are expanding on this programs where folks can collaborate in-office three days and work from wherever the other two; flexibility in working hours while maintaining some amount of time of overlap with their peers; and empowerment for our people leaders that allows each team to figure out right model of collaboration and engagement to foster environments where folks can do their best work, and live their best lives.</p>
<p>With this in mind, our focus at Sentry has been to create and provide spaces that allow for different levels of in-office flexibility. Our HQ in downtown San Francisco is thoughtfully designed to provide a variety of situations that address differing work styles and needs. From breakout spaces for teams to collaborate and whiteboard, a Library where individuals can have moments of quiet and heads down time, to wellness rooms and spaces to casually collaborate, providing an overall office space where people have defined separation of home and work adds value to life-work equilibrium. </p>
<p>The connective tissue of making deep, long-lasting human connections lies in the unique value in being an office-first culture to an organization, value which significantly diminishes when you remove the ability to regularly meet and collaborate in person. And, whereas a distributed model likely means most interactions are taking place asynchronously, and therefore perhaps allows for less conscientious comments, being in person encourages folks to engage in more intentional, thoughtful interactions. It adds layers of colour that are missed in written text or video chats, through tone and body language, and a lot of things can go awry when you permanently take away these key pieces of communications. </p>
<p>On the flip side, life isn’t just work, and it rarely fits into a nice little set of structured time boxes. Providing employees with work-from-wherever flex days gives room and opportunity for our folks to take care of things that inevitably crop up in general life, without needing to significantly reorganize their schedules. We also have a diverse population where a good number of folks are caregivers who have faced immense challenges to all aspects of their lives in this past year. We believe that wholly supporting employees in those circumstances with the ability to be flexible in their schedules is a win-win. </p>
<p>The challenges of this past year have given us opportunities to reflect on how we as an organization contribute to the health and wellness of our people. We began pandemotimes by expanding some of our stipends - setting up a Remote Tools reimbursement for our employees to get their home setup more comfortable, adding a Wellness Stipend to supplement and support mental and physical health, and very recently adding additional company-wide holidays through the year to give longer weekends to disconnecting and foster downtime.</p>
<h2 id="in-closing"><a href="#in-closing" aria-label="in closing permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>In Closing</h2>
<p>Having [virtually] met with every single one of our [60] new hires who have joined Sentry since the beginning of the pandemic, a common sentiment I’ve heard is “I can’t wait to meet everyone finally and be back in an office again! This is hard!” It <em>is</em> hard. Psychologically, emotionally, to operate in a world where almost everything has become transactional by nature. Zoom fatigue is real, and burnout from being stuck in the groundhog day of pandemotimes is wearying, at best, and utterly mentally exhausting, at worst.</p>
<p>We believe in the power of humanizing connections and a massive aspect of this is the ability to build relationships in real life. The pandemic has shown us just how much we miss out on, when we don’t have the chance to connect with each other within in-person spaces. We’ll continue to invest in our employees by maintaining a human-centric approach to our ethos of in-office work, through supporting the needs for flexibility in reimagining work-life entwinements. We’re squirrelling away to establish the new normal and we’d love for you to come and join us on this journey - we’re really nice people 😎.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5AijIxWlOxOvwSnR7sgnrs/c9ecdcb122f96768637df33bc202b6f8/BackToOffice-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 25 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>No-code AWS Lambda Monitoring</title>
      <link>https://blog.sentry.io/2021/05/24/no-code-aws-lambda-monitoring/</link>
      <description>Auto-instrumenting AWS Lambda Monitoring didn’t originate through a focus group or business plan. It started as a hackathon project that…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Auto-instrumenting AWS <a href="https://sentry.io/for/serverless/">Lambda Monitoring</a> didn’t originate through a focus group or business plan. It started as a hackathon project that addressed the tedium of removing manual code instrumentation. Developer environments often include hundreds of AWS Lambda functions. And our existing instrumentation required initialization code to be manually placed on every single function. So to fix this, our growth team used Amazon CloudWatch to build a prototype that could instrument AWS Lambda functions. </p>
<p>This prototype began by using AWS CloudFormation stack to automatically create resources in a customer environment. Then we streamed Amazon CloudWatch Logs to Sentry through the Amazon Kinesis Data Firehose. This made it so all you had to do was put in your AWS account ID and create the stack using a pre-configured AWS CloudFormation stack.</p>
<p>But in order to get this production-ready, we had to take a closer look at a few things:</p>
<ul>
<li>Since we just picked a mocked-up stack trace for our demo, the streamed logs were not grouped into issues — or even formatted to pull out stack traces. </li>
<li>While the Amazon CloudWatch logs could display stack traces, they didn’t even come close to Sentry’s representation of stack traces, as they had a different use case (though that’s a conversation for another day).</li>
<li>Through this automated instrumentation, it wasn’t possible to choose or create a project for your AWS Lambda functions, as we had hard-coded these values for the hackathon.</li>
</ul>
<p>Ultimately, this meant that we would not use logs to productize no-code AWS Lambda monitoring, as logs would limit our tracing capabilities. Instead, we used <a href="https://aws.amazon.com/blogs/compute/introducing-aws-lambda-extensions-in-preview/">AWS Lambda Extensions</a>, which tied Sentry’s <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html">AWS Lambda Layers</a> — along with environment variables and code wrapping — to instrument AWS Lambda functions. Doing so ensured that:</p>
<ul>
<li>We were a part of the runtime environments that captured issues/performance and reported them in real-time.</li>
<li>We could connect developers to formatted stack traces along with in-context environment variables and breadcrumbs.</li>
<li>Developers were able to make changes to Sentry’s instrumentation rather than creating in a black box.</li>
<li>Developers could control the sample rate for the function traces, as well as activation/deactivation of Sentry directly from the UI.</li>
</ul>
<p>Using the AWS Lambda Layers approach and skipping the Amazon CloudWatch had two minor — but manageable — downsides:</p>
<ul>
<li>We needed a specific SDK AWS Lambda Layer for every programming language. We launched with support for Node and Python.</li>
<li>We’d miss out on some metrics like memory usage and timeout issues since they are reported after an AWS Lambda function has finished executing.  </li>
</ul>
<h2 id="outcome"><a href="#outcome" aria-label="outcome permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Outcome</h2>
<p>Instrumenting Sentry on your AWS Lambda functions is now as easy as following a following few simple, UI-specific <a href="https://docs.sentry.io/product/integrations/aws-lambda/">steps</a>:</p>
<h3 id="1-select-project"><a href="#1-select-project" aria-label="1 select project permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>1. Select Project</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202&amp;fm=webp 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404&amp;fm=webp 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807&amp;fm=webp 807w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=202 202w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=404 404w,
https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png?w=807 807w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1dpBODBAkJ4sqYNwUoRJjK/6cca75fc646f0c820322775b0ec89926/project.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="2-add-cloudformation-stack"><a href="#2-add-cloudformation-stack" aria-label="2 add cloudformation stack permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>2. Add CloudFormation Stack</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208&amp;fm=webp 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416&amp;fm=webp 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831&amp;fm=webp 831w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=208 208w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=416 416w,
https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png?w=831 831w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="aws account 1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1KJ53G0kwfrGTTC1TlnxPU/75e124381ce563401b52598512917643/aws_account_1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="3-select-functions-to-instrument"><a href="#3-select-functions-to-instrument" aria-label="3 select functions to instrument permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>3. Select Functions to Instrument</h3>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204&amp;fm=webp 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409&amp;fm=webp 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817&amp;fm=webp 817w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=204 204w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=409 409w,
https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png?w=817 817w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="select lambdas" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2WigDfLEVRwkuGtxKdZr2z/30a5fd9c0f16537faffa3f9096a61742/select_lambdas.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And that’s it! You can even toggle function instrumentation on the fly from the AWS integration management page.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="configure" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6HUDJ56yhYAY7iyLDSQdq/21b4e7296326642babee8cbbb4c0711a/configure.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Ok, so why should you care? Well, developers seem to appreciate the value in auto-instrumentation — more than a third of our instrumentations for AWS Lambda monitoring are now coming through auto-instrumentation. The folks at AWS thought it wasn’t bad either. They helped us become an <a href="https://partners.amazonaws.com/partners/0010L00001sCEb6QAG/Sentry">AWS Partner</a> and gave us a <a href="https://aws.amazon.com/partners/programs/service-ready/">AWS Lambda Ready</a> Designation. </p>
<p>You can learn more about Sentry’s support for Serverless Monitoring <a href="https://docs.sentry.io/product/integrations/#cloud-monitoring">here</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/nZzDgCxgbstByzkPfxvyW/3c087b8f2ea21828a6dc6a63d291f2bf/Errors1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Great Moments in Application Monitoring</title>
      <link>https://blog.sentry.io/2021/05/20/great-moments-in-application-monitoring/</link>
      <description>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-05-20T12:00">May 20, 2021</time></p><ul><li><a href="https://blog.sentry.io/discover/"><span>Discover</span></a></li></ul><div><p>The consequences of poor application performance are both real and terrifying: lost customers, lost trust from your team, and lost confidence in your abilities. It’s why every developer remembers those moments where their solution improves both process and performance. We’ve seen this happen firsthand with our customers, and want to share their Great Moments in Application Monitoring:</p>
<h2 id="doordash"><a href="#doordash" aria-label="doordash permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>DoorDash</h2>
<p>When you’re connecting hungry customers with hurried drivers, you can’t afford to have debugging eat up development time. Unfortunately, whenever a <a href="https://sentry.io/customers/doordash/">DoorDash</a> developer tried something new without informing the larger team, resources would be wasted debugging their unknown logic. With Sentry’s automated stack traces, however, DoorDash developers could finally — and clearly — understand their colleagues’ code. By including $request_id in their access logs, passing that value downstream to their application servers, and then modifying the application’s entry point, DoorDash was able to utilize <code>$request_id</code> as a logging variable. Now, whenever there’s an error, DoorDash can search <code>$request_id</code> and immediately see the exact issue and exception. The result? Scalable production, the ability to trace every request end‑to‑end, and a process that’s as cool as a cucumber bisque.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/LVVKvjUaCSg/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/sddefault.webp 640w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/LVVKvjUaCSg/default.webp 120w"/><img src="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/LVVKvjUaCSg/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/LVVKvjUaCSg/sddefault.jpg 640w, https://i.ytimg.com/vi/LVVKvjUaCSg/hqdefault.jpg 480w, https://i.ytimg.com/vi/LVVKvjUaCSg/mqdefault.jpg 320w, https://i.ytimg.com/vi/LVVKvjUaCSg/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>As the one service that’s consistently able to catch these types of NGINX variables, Sentry is really valuable at tracing exceptions of errors. And by providing automatic feedback, we’re able to see things clearly and gain a better understanding of what’s going wrong.</p>
</blockquote>
<p><em>Zhaobang Liu, DevOps Engineer, DoorDash</em></p>
<h2 id="eventbrite"><a href="#eventbrite" aria-label="eventbrite permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Eventbrite</h2>
<p>For event marketer <a href="https://sentry.io/customers/eventbrite/">Eventbrite</a>, their errors were talking over one another, as their team was constantly being distracted by alerts on duplicate issues. So they hired Sentry to emcee their errors. After instrumenting Sentry’s <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging</a> features, the Eventbrite team was able to create a list of errors prioritized by user impact and frequency. Unlike triaging in the past — where the Eventbrite team had to parse through countless duplicate issues — now they were only focused on solving what mattered most. What’s more, using <a href="https://docs.sentry.io/product/releases/">Release Health</a>, Eventbrite improved the quality of their releases by gauging adoption levels as well as the percentage of both crash-free sessions and crash-free users.</p>
<blockquote>
<p>Sentry helps our team fix the most important issues in each release. We can track how a release is trending by percent of crash-free sessions. With this data, we can remediate issues that impact the most users and move on to building more features.</p>
</blockquote>
<p><em>Jaylum Chen, Staff Software Engineer at Eventbrite</em> </p>
<h2 id="cloudflare"><a href="#cloudflare" aria-label="cloudflare permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cloudflare</h2>
<p>The year was 2019. And <a href="https://sentry.io/customers/cloudflare/">Cloudflare</a>’s release process consisted of manually tagging a release and then manually running through their dashboard to find errors. Not only was this process tedious, it made the Cloudflare team susceptible to errors and redundant work. But with Sentry’s <a href="https://docs.sentry.io/product/releases/">Releases</a>, the Cloudflare team was able to part the skies of gloomy manual work. By setting up an automated release plan, the Cloudflare team could now safely deploy code, monitor every step of their deployment process, and link all releases back to the Releases page. When automated tools — not manual brains — do the work, both Cloudflare’s code and their customers win.</p>
</div><div><picture><source type="image/webp" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi_webp/JiOMNx-2oOo/maxresdefault.webp 1280w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/sddefault.webp 640w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/hqdefault.webp 480w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/mqdefault.webp 320w, https://i.ytimg.com/vi_webp/JiOMNx-2oOo/default.webp 120w"/><img src="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg" alt="Click to start the video" sizes="(min-width: 1280) 1280px, (min-width: 640) 640px, (min-width: 480) 480px, (min-width: 320) 320px, (min-width: 120) 120px, 100vw" srcset="https://i.ytimg.com/vi/JiOMNx-2oOo/maxresdefault.jpg 1280w, https://i.ytimg.com/vi/JiOMNx-2oOo/sddefault.jpg 640w, https://i.ytimg.com/vi/JiOMNx-2oOo/hqdefault.jpg 480w, https://i.ytimg.com/vi/JiOMNx-2oOo/mqdefault.jpg 320w, https://i.ytimg.com/vi/JiOMNx-2oOo/default.jpg 120w" decoding="async" loading="lazy" width="16" height="9"/></picture></div><div>
<blockquote>
<p>Sometimes errors on the front-end have roots on the backend. We use Sentry’s tags and metadata about a request that comes in to pass along a version of distributed tracing to link these back.</p>
</blockquote>
<p><em>Tony Stuck, Engineering Manager, Cloudflare</em></p>
<h2 id="volley"><a href="#volley" aria-label="volley permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Volley</h2>
<p>With trivia games like Song Quiz, Yes Sire, and Are You Smarter Than a 5th Grader?, <a href="https://sentry.io/customers/volley/">Volley</a> entertains millions of families on smart speaker devices every month. But with all those players blurting out answers at their voice-controlled devices, Volley engineers knew that they needed complete visibility into their code so they could  properly scale their product.   </p>
<p>Using our <a href="https://docs.sentry.io/product/performance/">performance monitoring</a> offering, the Volley team observed that their voice-controlled LaunchRequest was waiting for an API call to update the user’s subscription status. Once Volley moved this call to only those sections of the code which needed it, they noticed an improved Apdex score, faster user interactions, and their time to launch was cut in half. </p>
<blockquote>
<p>Sentry has become part of my daily routine. Every morning, I check to see if there are any new issues, and look at yesterday’s performance to see if any of our latest changes affect it negatively or positively.</p>
</blockquote>
<p><em>Devin Ozel, Sr. Software Engineer, Volley</em></p>
<p>With Great Moments in <a href="https://sentry.io/for/full-stack/">Application Monitoring</a>, we recognize those intrepid developers who were able to get their application to perform the way it was intended - and the way their customers demand.</p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4cxMW8XlkrdBdFRQN7J85q/50ceaff57776b53b272b4abed22e6543/habits_successful_customer-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 20 May 2021 12:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring Success with Sentry</title>
      <link>https://blog.sentry.io/2021/05/18/measuring-success-with-sentry/</link>
      <description>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In the early days of web development, there was one way to measure code: WTFs per minute. It was a metric that could be applied across all languages, as every developer knew what WTF meant (Works That Frustrate, obviously). </p>
<p>Today, however, code is too intricate — and important — for clever, opaque metrics. You need objective data that communicates the quality and stability of your code — KPIs such as events accepted, transaction outcomes, and crash-free sessions.</p>
<p>For <a href="https://sentry.io/for/full-stack/">Measurement May</a>, we’re building out features designed to deliver the right metrics, all so you can drive the right outcomes for your organization.</p>
<h2 id="create-your-0wn-visibility-with-custom-dashboards"><a href="#create-your-0wn-visibility-with-custom-dashboards" aria-label="create your 0wn visibility with custom dashboards permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Create Your 0wn Visibility with Custom Dashboards</h2>
<p>Understanding the state of your application starts with understanding the errors, transactions, and attachments that make up your event data. With our latest update to <a href="https://docs.sentry.io/product/dashboards/custom-dashboards/">Dashboards</a>, you’re able to surface critical event data as well as share that data across your organization. While we’ve equipped Dashboards with a library of <a href="https://sentry.io/features/dashboards/">prebuilt widgets</a> — issues by region, performance over time, release quality over time — you can also build your own custom queries within your personal dashboard.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294&amp;fm=webp 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588&amp;fm=webp 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176&amp;fm=webp 1176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=294 294w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=588 588w,
https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png?w=1176 1176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-custom" title="" src="https://images.ctfassets.net/em6l9zw4tzag/73OltikqARGMLOmjJkd0Q8/89a2109003ebc600a220c937a323c0aa/dashboard_custom.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>And you can enhance your visibility even more when you combine Dashboards with Discover, our query builder. Say you’ve built a widget that compiles top issues across all your projects: </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215&amp;fm=webp 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429&amp;fm=webp 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858&amp;fm=webp 858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=215 215w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=429 429w,
https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png?w=858 858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashboard-widget-top-issues " title="" src="https://images.ctfassets.net/em6l9zw4tzag/4Cy5V3fMl6jDq6ihrKD0F/c658e0f2a39ccfab2b6c9c635c09bac9/Screen_Shot_2021-05-16_at_8.45.38_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>When you open this widget in <a href="https://sentry.io/features/custom-queries/">Discover</a>, you can measure progress across multiple projects over time while also comparing additional filters — unhandled errors, URL, browser type, etc. This way, instead of scrolling through listed queries, you’re able to provide clear visualizations to higher-level managers so you can achieve consensus over what to do next. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645&amp;fm=webp 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289&amp;fm=webp 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578&amp;fm=webp 2578w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=645 645w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=1289 1289w,
https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png?w=2578 2578w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dashbaord-to-discover" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4aPpjhdedg6QwzdjqOjFCT/341c19ac44b073d7f5a308081c594ea7/Screen_Shot_2021-05-16_at_8.47.24_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="all-details-one-view-with-project-details"><a href="#all-details-one-view-with-project-details" aria-label="all details one view with project details permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All Details, One View with Project Details</h2>
<p>It’s a common plight among developers: twenty tabs open, just to figure out one problem. Your errors, transactions, and sessions shouldn’t be spread across different screens. They should be available on one screen, and at a glance. Our new <a href="https://docs.sentry.io/product/projects/project-details/">Project Details</a> page unifies a developer’s monitoring experience across all aspects of a project - health, speed, recent alerts, and releases. With it, you’re able to see project-wide KPIs for stability (crash-free sessions), velocity (number of releases), and performance (Apdex score). You can also compare this data over time so that you’re able to track incremental progress.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297&amp;fm=webp 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595&amp;fm=webp 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189&amp;fm=webp 1189w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=297 297w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=595 595w,
https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png?w=1189 1189w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="project-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2974hx3YpvHoBQqYsTXf9i/547b473031c396eacc2ae84ecc8a2973/project_details.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="know-how-much-sentry-youre-using-with-org-stats"><a href="#know-how-much-sentry-youre-using-with-org-stats" aria-label="know how much sentry youre using with org stats permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Know How Much Sentry You’re Using with Org Stats</h2>
<p>For developers who manage other developers, statistics is the language you use to control spend, manage quotas, and create efficiencies. With our new <a href="https://docs.sentry.io/product/accounts/quotas/org-stats/">Org Stats</a> page, you now have the information you need to see which areas of your codebase demand the most resources. With it, you can track how many issues are being created — and resolved — per week for each project. Charts and tables also provide insight into per-project usage over time of your errors, transactions, and attachments. Now you can not only see which projects had a recent spike, but you can also link to the project details screen and immediately see what needs to be addressed.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549&amp;fm=webp 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099&amp;fm=webp 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197&amp;fm=webp 2197w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=549 549w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=1099 1099w,
https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png?w=2197 2197w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="org-stats-page" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5WaKnb3DOYGNHXfFXMwrqV/fde6607dd7730913e9b44c72da4bcd74/org-stats-page.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Measurement May is upon us. Here’s a primer on Google’s upcoming <a href="https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/">Web Vitals update</a>, and also <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">join us</a> on May 20th for a live demo on how to build custom dashboard widgets and much more. </p>
<p>New to Sentry? Try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or contact <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/1ZqOhxApeXd6EInQds1r65/bdee0730777914cbf0e0e2e6f3e99b84/discover1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Supporting Native Android Libraries Loaded From APKs</title>
      <link>https://blog.sentry.io/2021/05/13/supporting-native-android-libraries-loaded-from-apks/</link>
      <description>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>Like mechanics who restore their own cars or plastic surgeons who self-rhinoplasty, our developers put their skills to interesting uses during their free time. Here, Native Platform Engineer, Arpad Borsos breaks down how memory mappings and dynamic library loading works and how it relates to native Android libraries loaded from APKs.</em></p>
<p>Libraries are key to modular programming, as they offer functionality in a single unit which can be shared with other developers. As you’re no doubt aware, there are two types of libraries: static and dynamic. Static libraries are directly embedded into your application at build time, while dynamic libraries are linked when starting the application, or at any later point.</p>
<p>This concept is important because dynamic libraries can be updated without modifying the application itself for things like fixing security issues or improving performance. Applications can also be split into multiple, dynamically-loaded libraries for organizational reasons, or when an application consists of a User Interface and a separate service running in the background.</p>
<p>When working with the Android NDK, native libraries written in C, Rust, or similar low-level languages are loaded dynamically by the Java layer. That is how <code>sentry-native</code> gets loaded into Android Apps that use the NDK.</p>
<p>Usually, these libraries are individual files on disk. You might have seen a few of these “.dll” files next to Windows Applications, which are similar on other operating systems. The dynamic loader on Android, which is itself a system library, has the ability to load libraries directly from Android “.apk” packages without needing to first extract them to disk. This is quite beneficial, as it saves precious disk space on your mobile device. </p>
<p>So far, <code>sentry-native</code>, and in turn, NDK support for our Android SDK, relied on these files being extracted to disk. This has created a lot of friction — especially for new customers — as newer Android Versions no longer extract “.apk” packages by default. To get around this, application developers had to set some explicit configuration flags, many of which were frequently overlooked when setting up Sentry for Android.</p>
<p>Starting with version 5 of our Android SDK, we added support for libraries loaded from “.apk”, which will remove the need to change configuration flags while also improving disk space usage of Apps that use the Sentry SDK.</p>
<p>Let us take a deeper dive into how all of this works, and what we need to change in order to support this use case.</p>
<h2 id="which-libraries-are-loaded"><a href="#which-libraries-are-loaded" aria-label="which libraries are loaded permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Which libraries are loaded?</h2>
<p>On most platforms, you can query the list of loaded libraries directly from the dynamic loader via an API. For example, Windows has the <a href="https://docs.microsoft.com/en-us/windows/win32/api/tlhelp32/nf-tlhelp32-createtoolhelp32snapshot">Tool Help Library</a>, and on Apple platforms there are some <a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/dyld.3.html"><code>dyld</code></a> functions available. Unfortunately, Linux has no standardized userspace tools. While GNU/Linux has the <a href="https://man7.org/linux/man-pages/man3/dl_iterate_phdr.3.html"><code>dl_iterate_phdr</code></a> function, it is notably not available on older Android systems (<a href="https://android.googlesource.com/platform/bionic/+/master/docs/status.md">Bionic Status</a> lists the API as available starting with API 21, aka Android 5, released at the end of 2014). That means in order to support ancient Android versions, you will need to get the list of loaded libraries from somewhere else.</p>
<p>Standard practice here is to find the mapped ELF files by parsing the memory map info from <code>/proc/XXX/maps</code>. This is what <a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/client/linux/minidump_writer/linux_dumper.cc#541">Breakpad</a> (<a href="https://chromium.googlesource.com/breakpad/breakpad/+/master/src/processor/proc_maps_linux.cc#29">in two places</a>), <a href="https://chromium.googlesource.com/crashpad/crashpad/+/refs/heads/master/util/linux/memory_map.cc#57">Crashpad</a>, <a href="https://cs.android.com/android/platform/superproject/+/master:system/libprocinfo/include/procinfo/process_map.h;drc=master;l=92">Android’s libunwindstack</a>, and <a href="https://github.com/llvm/llvm-project/blob/62ec4ac90738a5f2d209ed28c822223e58aaaeb7/lldb/source/Plugins/Process/Utility/LinuxProcMaps.cpp#L26">LLDB</a> do. In my opinion, they take this approach because they’re outside observers in the sense that they just can’t query the dynamic loader from inside the process.</p>
<p>This approach makes sense: it’s how I approached loading libraries for <code>sentry-native</code>. That said, you have to be careful to cover all cases — notably .so files loaded directly from inside Android .apk packages. And so, I went about finding ways to support these .apk cases.</p>
<h2 id="the-procxmaps-format"><a href="#the-procxmaps-format" aria-label="the procxmaps format permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The <code>/proc/X/maps</code> format</h2>
<p>In Linux, all the executables and libraries are ELF files. <a href="https://blog.cloudflare.com/how-to-execute-an-object-file-part-1/">Cloudflare</a> has a great tutorial on how a loader parses and processes these ELF files. The documentation for the <code>/proc/X/maps</code> output format is described in this <a href="https://man7.org/linux/man-pages/man5/proc.5.html">manpage</a>. The format includes the start/end of the virtual address space, permission information, information about the inode (file), and the offset inside that file.</p>
<p>While there are cases when a library needs just one mapping, most of the time, it’s split into two or more mappings. Usually that consists of a read-only mapping that includes the ELF headers and metadata, and an executable mapping that holds the actual program code. On my Linux system, I saw up to six mappings for a single file:</p>
<div data-language="text"><pre><code>7f8cd3467000-7f8cd3475000 r--p 00000000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd3475000-7f8cd34da000 r-xp 0000e000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34da000-7f8cd34f6000 r--p 00073000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f6000-7f8cd34f7000 ---p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34f7000-7f8cd34fa000 r--p 0008f000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0
7f8cd34fa000-7f8cd34fc000 rw-p 00092000 00:1c 7597971                    /usr/lib/libcurl.so.4.7.0</code></pre></div>
<p>The interesting case here is that the fourth mapping is not readable, and basically creates a gap in the address space.</p>
<p>These two mappings load the exact same libraries, once extracted to disk, once directly from the apk:</p>
<div data-language="text"><pre><code>77a85dbda000-77a85dbdd000 r-xp 00000000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dbdd000-77a85dbde000 ---p 00000000 00:00 0
77a85dbde000-77a85dbdf000 r--p 00003000 fd:05 40992                      /data/app/x/y/lib/x86_64/libsentry-android.so
77a85dc15000-77a85dd6c000 r-xp 00000000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 00157000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so
77a85dd79000-77a85dd7a000 rw-p 00163000 fd:05 40991                      /data/app/x/y/lib/x86_64/libsentry.so</code></pre></div>
<div data-language="text"><pre><code>77a85dbf0000-77a85dbf3000 r-xp 00001000 fd:05 40977                      /data/app/x/y/base.apk
77a85dbf3000-77a85dbf4000 ---p 00000000 00:00 0
77a85dbf4000-77a85dbf5000 r--p 00004000 fd:05 40977                      /data/app/x/y/base.apk
77a85dc15000-77a85dd6c000 r-xp 00006000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd6c000-77a85dd6d000 ---p 00000000 00:00 0
77a85dd6d000-77a85dd79000 r--p 0015d000 fd:05 40977                      /data/app/x/y/base.apk
77a85dd79000-77a85dd7a000 rw-p 00169000 fd:05 40977                      /data/app/x/y/base.apk</code></pre></div>
<p>The mappings are basically the same — it’s just that in the case of the base .apk, the file offsets are different. And the Android loader, again, inserts a non-readable gap in between.</p>
<h2 id="so-how-do-we-get-the-library-list-from-there"><a href="#so-how-do-we-get-the-library-list-from-there" aria-label="so how do we get the library list from there permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>So how do we get the library list from there?</h2>
<p>So far, the sentry-native modulefinder implementation has been a bit too conservative. Because of concerns reading arbitrary memory, we mmap-ed the file into memory and tried to extract ELF headers. Unfortunately, that approach doesn’t work with those libraries that are loaded directly from apk files, as the ELF headers are at a certain offset in that file. Plus, as we demonstrated above, there were some issues related to non-contiguous mappings and double mappings that caused problems in the old implementation, as it worked based on the filename that it saw.</p>
<p>So my new approach is to keep track of readable mappings, their file offsets, and the gaps in between them. For each readable mapping, I am looking for the magic ELF signature. If I find one, I process the previously saved mappings, while also taking care of possible duplicates.</p>
<p>This approach still has unanswered questions. One is trying to read arbitrary memory. I think I’m pretty safe as I’m only considering readable mappings, but one improvement would be to use <a href="https://man7.org/linux/man-pages/man2/process_vm_readv.2.html"><code>process_vm_readv</code></a> here. That said, I have also seen problems with using that mapping on Android. Another potential issue is how to correctly deal with mappings which have gaps in them, or even ones that appear multiple times. The ELF file might instruct the loader to load the executable code at a different offset to the ELF header in RAM than the offset on disk — or it might not. It very much depends on how well we use this information to post-process crash reports.</p>
<p>This problem is not unique to the way that <code>sentry-native</code> used to read the list of libraries. We also saw some breakpad tools get this wrong by creating minidumps with invalid mappings that fail later on in the post-processing pipeline.</p>
<p>Loading libraries is a non-trivial problem, and I am confident that I’m not the only one struggling with it. And make no mistake: it’s some work to investigate failures and patch the relevant code for such a specific use case. But with Android adoption picking up more and more traction, it’s necessary work that will save space for your user - and stress on yourself.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4Bu0Mt2AWsJkZNl2A4d9o3/523b9b14ef29f2a6ac4945528c395e40/tracing-og.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Measuring User Experience with Web Vitals</title>
      <link>https://blog.sentry.io/2021/05/05/measuring-user-experience-with-web-vitals/</link>
      <description>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to Web Vitals taking place in…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Top of search for you means top of mind for your customers. And with Google’s upcoming Page Experience update to <a href="https://sentry.io/for/web-vitals">Web Vitals</a> taking place in a few weeks, now’s the right time to optimize your user experience. But before you can optimize your user’s experience, you need to be able to measure it. We’re kicking off Measurement May by breaking down how Google uses Web Vitals data — and how you can instrument that data with Sentry. </p>
<h2 id="web-vitals-basics"><a href="#web-vitals-basics" aria-label="web vitals basics permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals Basics</h2>
<p>This past May, Google introduced <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">Web Vitals</a>, a set of three key user experience metrics:</p>
<p>Largest Contentful Paint (LCP) measures a page’s <strong>loading</strong>. The goal here should be a LCP within 2.5 seconds once the page starts loading. </p>
<p>First Input Delay (FID)  measures a page’s <strong>interactivity</strong>. A solid user experience here means there’s a FID of less than 100 milliseconds.</p>
<p>Cumulative Layout Shift (CLS) measures a page’s <strong>visual stability</strong>. For a good user experience, CLS should be less than 0.1 seconds..</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288&amp;fm=webp 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576&amp;fm=webp 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152&amp;fm=webp 1152w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=288 288w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=576 576w,
https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png?w=1152 1152w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dd" title="" src="https://images.ctfassets.net/em6l9zw4tzag/393zMaJyvc56O9Nku46LAN/bc6e592f9e2af5d252519d0a83a06f4a/dd.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="web-vitals--page-experience"><a href="#web-vitals--page-experience" aria-label="web vitals  page experience permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Web Vitals + Page Experience</h2>
<p>After their upcoming Page Experience update, Google will evaluate your web pages moving forward with these four metrics:</p>
<p><strong>Mobile Friendliness</strong> determines whether content is responsive to mobile devices — making sure joins and on-page components are stable for a spectrum of devices.</p>
<p><strong>Safe Browsing</strong> assesses whether a site has issues with malware, phishing, and hacked content.</p>
<p><strong>HTTPS</strong> evaluates whether the site’s association is secure and if the site is being served over HTTPS.</p>
<p><strong>Non-Intrusive Interstitials</strong> ensures that certain content won’t be blocked for pop-up content as a user explores the page.</p>
<h2 id="the-results-are-in-your-content"><a href="#the-results-are-in-your-content" aria-label="the results are in your content permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The Results Are In (Your Content)</h2>
<p>It makes sense that <em>Google’s</em> Web Vitals will impact how your website will be ranked in search. But Google’s aim here isn’t to be some fussy stickler about how you build out your content — it’s to raise the conversation around content itself. With these new guardrails, Google is able to push down content created for its own sake, and elevate content that’s created with a user’s experience in mind. </p>
<h2 id="the-e-commerce-impact"><a href="#the-e-commerce-impact" aria-label="the e commerce impact permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The E-Commerce Impact</h2>
<p>Because they’re often large (thousands of SKUs), complex (dynamic pricing and backend security measures), and dependent on search (via keywords), e-commerce services in particular will benefit from increased Web Vitals and site performance. And because each page in an e-commerce domain is indexable and searchable, every product page now represents an opportunity to generate revenue — if it has strong Web Vitals data. </p>
<h2 id="be-performant-use-performance"><a href="#be-performant-use-performance" aria-label="be performant use performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Be Performant. Use Performance.</h2>
<p>With Performance, you’re able to compare user metrics such as network speed, browser, device, and region against Web Vitals thresholds. This helps you see those specific transactions which are slowing your user’s experience down. You can hone in even further by building a custom query in Discover — say, adding event tags as filters to your query. </p>
<p>In this webinar, Sentry Product Manager, Jeremy Bourque demonstrates how you can set up Sentry’s performance monitoring to surface poor-performing pages through Web Vitals. </p>
</div><p>While gathering Web Vitals data is important, you still need visibility of that data across all your projects. With our new Trace Navigator, you’re able to easily navigate between errors and performance issues via a mini-map. And our Trace View gives you a waterfall visualization across all your transaction times, so you can see what project is responsible for the most problems. With it, you’re able to see dependencies of any given trace in a single view as well as what projects they live in. </p><div>
<p>For some, Web Vitals represents an inconvenient data hoop that their code has to jump through. For others — and hopefully, you — Web Vitals is an opportunity to distinguish yourself in the marketplace, as less than 15% of sites are optimized well enough to pass a Core Web Vitals assessment. It’s the metric that can be the difference between your customer buying — or bouncing.</p>
<p>Measurement May is just getting started.  In an upcoming <a href="https://us06web.zoom.us/webinar/register/1916196546728/WN_cTW7PIYURvqn2eJz2FQ9rg">live workshop</a>,  a Sentry Solutions Engineer will show you how you can analyze event data to measure the health of your application.</p>
<p>Get started with <a href="https://docs.sentry.io/product/performance/">Performance</a> and drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">Discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7Hp7vnsdrPN9Mx9pt6bqsw/ab39d6d7f7e2b7fbe081d21d20416a33/discover3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Silencing Distractions with Review List and Automations</title>
      <link>https://blog.sentry.io/2021/04/20/silencing-distractions-with-review-list-and-automations/</link>
      <description>By organizing information and automating mundane tasks, Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Responding to and ignoring notifications can be a full-contact sport. It makes sense, though, from GitHub, Slack, to Jira and Sentry; our world revolves around robots telling us everything is important, critical, and urgent. Just like that, it’s near impossible to see what actually matters so you can solve quicker and more comprehensively.</p>
<p>To bring a little focus back to our days (we build software too), we extended Sentry’s filtering conditions, built a curated list of issues that need your immediate attention, dropped convenient links to your repository, and automated ticket creation. All so you can focus on what’s actually important and critical to your code health and users.</p>
<p><a href="https://docs.sentry.io/product/issues/issue-owners/"><em>Filter by ownership</em></a> - Instead of seeing other team’s issues, you can now filter to only show issues by assignee AND suggested assignee. This means you see issues that you’re responsible for or caused by changes that you or your team committed.</p>
<p><em><a href="https://docs.sentry.io/product/issues/states-triage/">Review List</a></em> - Unless you write pristine code and your services are faster than the Flash, you’re sending a good amount of events to Sentry. Which means it could get a bit noisy from time to time. Now <a href="https://docs.sentry.io/product/sentry-basics/guides/grouping-and-fingerprints/">grouping and merging issues</a> help drown out the background noise like in-ear headphones. Review List, however, is the noise-canceling button for those headphones. It’s the only thing you need to look at when you pop into Sentry. Regressions, new critical issues, and previously ignored issues that can’t be ignored anymore are all collected in one simple to parse list so you can solve what is truly urgent.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309&amp;fm=webp 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618&amp;fm=webp 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236&amp;fm=webp 1236w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=309 309w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=618 618w,
https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png?w=1236 1236w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="ReviewList" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2uB7umdCWR6SsoHhofuFaF/9a2a93de3bfffd070bd0582ede2a1b32/Screen_Shot_2021-04-18_at_1.22.15_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a>
Review List is being rolled out to everyone over the next few weeks. Be on the lookout for an in-app notification.</p>
<p><em><a href="https://docs.sentry.io/product/integrations/integration-platform/ui-components/#stack-trace-link">Stack Trace Linking</a></em> - Instead of infinite scrolling through countless lines of code, Sentry’s formatted stack trace lets developers jump past the library code directly into the code you care about. And now, with stack trace linking, you can deep-link to your repo in <a href="https://docs.sentry.io/product/integrations/github/">GitHub</a> to see the broken code in the context of where it lives in your codebase.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153&amp;fm=webp 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307&amp;fm=webp 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613&amp;fm=webp 613w" sizes="(max-width: 613px) 100vw, 613px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=153 153w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=307 307w,
https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png?w=613 613w" sizes="(max-width: 613px) 100vw, 613px"/>
          <img alt="StackTraceLinking" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4GsMLXdClnUSXktbuhjOHq/7a84f99e8ccf61a9b1f1ea32eded8736/Screen_Shot_2021-04-19_at_5.21.11_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><em><a href="https://docs.sentry.io/product/integrations/jira/">Rule-Based Jira</a></em> and <em><a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">Azure DevOps</a></em> Issue Creation - But hey, you’re on it — issues are merged, you comb through the review list, notifications skip your inbox and go right to Slack, metric alerts are configured, and if something catastrophic happens you route issues via <a href="https://docs.sentry.io/product/integrations/pagerduty/">PagerDuty</a>. If I had to guess, the next thing you do is manually fill out a <a href="https://docs.sentry.io/product/integrations/jira/">Jira Issue</a> or <a href="https://docs.sentry.io/product/integrations/azure-devops/#automatically">AzureDevOps</a> ticket to make sure things get fixed and not lost in the shuffle.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461&amp;fm=webp 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921&amp;fm=webp 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842&amp;fm=webp 1842w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=461 461w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=921 921w,
https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png?w=1842 1842w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="jira-azure-devops-integration" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6OQlavVQQ5ustP0NfhKgIO/d433b9d594e59c0e35c3220f94c46324/jira-azure-devops-integration.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This is fine, but suboptimal. We updated our Jira and Azure Devops integrations to automate that whole flow. So a previously ignored issue is seen by 100 users in one minute, matches a specific URL tag, just let Sentry create the Jira or Azure DevOps ticket for you. Sentry will populate all the relevant details, add it to the backlog you specify and automatically assign it to the developer that can fix the issue. </p>
<p>Look, distractions and unnecessary notifications will probably continue to fight for our attention for a while. But by organizing information and automating mundane tasks Sentry is able to remove any ambiguity around if an issue should be addressed, by whom, and in what priority order. Dare I say, it may even make being on bug fix rotation… fun. </p>
<p>Let us know what you think — drop us a line at our <a href="https://forum.sentry.io/">forum</a> or on <a href="https://discord.com/invite/sentry">discord</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/7LLI0QOFlsyNpnThyXZyFr/51ec12e9014a31639ffb5d8f23641279/Errors3-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 20 Apr 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Slow and Steady: Converting Sentry’s Entire Frontend to TypeScript</title>
      <link>https://blog.sentry.io/2021/04/12/slow-and-steady-converting-sentrys-entire-frontend-to-typescript/</link>
      <description>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><article><p><time datetime="2021-04-12T00:00">April 12, 2021</time></p><ul><li><a href="https://blog.sentry.io/sentry/"><span>Sentry</span></a></li></ul><div><p>Recently, Sentry converted 100% of its frontend React codebase from JavaScript to TypeScript. This year-long effort spanned over a dozen members of the engineering team, 1,100 files, and 95,000 lines of code.</p>
<p>In this blog post, we share our process, techniques, challenges, and ultimately, what we learned along this journey.</p>
<h3 id="the-pitch"><a href="#the-pitch" aria-label="the pitch permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The pitch</h3>
<p>Back in 2019, we were shipping more frontend bugs than what was acceptable. After looking at the underlying causes of these incidents, it became clear that many of these bugs could have been prevented by static analysis and type checking.</p>
<p>During that year’s Hackweek event, Lyn Nagara, Alberto Leal, and Daniel Griesser pitched introducing TypeScript to the Sentry frontend. This team bootstrapped the TypeScript compiler to our build process as well as converted a few non-trivial views — and their related components — to TypeScript.</p>
<p><em>Hackweek is an event that takes place once a year, giving all Sentry employees the opportunity to set aside their usual work to focus solely on innovative projects and ideas. Hackweek has given birth to numerous applications and tools that are now important parts of our product, like the recently launched <a href="https://blog.sentry.io/2021/03/16/building-dark-mode">Dark Mode project</a>.</em></p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/5FVblIPCJmZKNOaqbgMHNo/3e3d17bad9503530ccc035bcdb27bf01/Untitled_design-High-Quality__1_.jpg" alt="Typescript project presentation during Hackweek 2019." title="Typescript project presentation during Hackweek 2019."/></p><figcaption><p>Typescript project presentation during Hackweek 2019.</p></figcaption></figure><div>
<p>After considering the presentation, we felt Typescript was a strong fit for Sentry because:</p>
<ul>
<li>Several classes of bugs could be detected — and eliminated — during compilation.</li>
<li>We could improve the developer experience through editor integrations such as auto-completion, faster code navigation, and inline compiler feedback.</li>
<li>We could reduce the need for API documentation, as type annotations help produce self-describing code.</li>
<li>TypeScript has an active community with a clear and maintained development <a href="https://github.com/Microsoft/TypeScript/wiki/Roadmap">roadmap</a> in addition to rapid <a href="https://github.com/microsoft/TypeScript/releases">releases</a>.</li>
<li>Many of the libraries we use (including React) already have <a href="https://github.com/borisyankov/DefinitelyTyped">type definitions</a> available.</li>
<li>TypeScript can be adopted incrementally. That meant we can start writing new code with TypeScript and incrementally convert over time.</li>
</ul>
<p>There were some potential drawbacks of adopting TypeScript, though:</p>
<ul>
<li>It’s a large time investment. Our frontend code is non-trivial in scope, so it would take significant effort to convert it. That complexity meant additional build time.</li>
<li>We would need to educate the frontend team in TypeScript and support them as they learned.</li>
<li>TypeScript and JavaScript would need to coexist in the code base for a significant period of time.</li>
</ul>
<h3 id="maturing-the-prototype"><a href="#maturing-the-prototype" aria-label="maturing the prototype permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Maturing the prototype</h3>
<p>Shortly after Hackweek, excitement was high and a more formal proposal was brought to our Frontend Technical Steering Committee (TSC). This group meets every two weeks to guide our frontend architecture. While TypeScript wasn’t among the “winning” projects for Hackweek, we were confident that it would be a worthwhile investment that would ultimately pay off in the long run.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3ecz3pdrHVp3MHd1X3aRST/849551707dc244095e3066dc8345e63b/91289EEA-B731-45AA-8BE6-0997F0CA67F5_1_201_a.jpeg" alt="Typescript Pull Request" title="Typescript Pull Request"/></p><figcaption><p>Sentry’s first Typescript Pull Request: <a href="https://github.com/getsentry/sentry/pull/13786">https://github.com/getsentry/sentry/pull/13786</a></p></figcaption></figure><div>
<h3 id="overall-strategy"><a href="#overall-strategy" aria-label="overall strategy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Overall strategy</h3>
<p>We broke our high-level strategy into several phases:</p>
<ol>
<li><strong>Educate</strong>. In this phase we needed to let people know that TypeScript was coming, and provide the right learning resources to help folks onboard.</li>
<li><strong>New code in TypeScript</strong>. In this phase we needed to have all new development being done in TypeScript. If we continued to create new JavaScript, we would never finish the conversion phase.</li>
<li><strong>Conversion</strong>. In this phase, all new work would be done in TypeScript, giving us a finite number of files to convert. Then it is “just work”™️.</li>
</ol>
<p>Our most controversial decision was agreeing to not undergo any other major refactors until the code base was converted 100% to TypeScript. This meant we would not take on other quality-of-life improvements — things like upgrading our state-management library or introducing React hooks — until the TypeScript conversion was complete.</p>
<h3 id="educating-the-team"><a href="#educating-the-team" aria-label="educating the team permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Educating the team</h3>
<p>Early on, we recognized that the broader development team at Sentry would need additional resources and materials to learn TypeScript. To help folks who were new to TypeScript, we shared a list of introductory articles and resources for configuring various editors.</p>
<p>Additionally, members of the TSC took the time to review code and help educate those folks eager to learn TypeScript. Having this support system in place helped create more TypeScript “believers” who would, over time, write new code in TypeScript.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/4EwzgBASmgwyFlpuMOXYma/0b581c31441f29d3ab288b95703f38b7/Untitled__3_.png" alt="Example of a TypeScript code review." title="Example of a TypeScript code review."/></p><figcaption><p>Example of a TypeScript code review.</p></figcaption></figure><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/7hcpu6wvYr2lUVWfHXx640/c8d0fcd955055ac390c8065e0aafba0d/Screenshot_2021-04-01_at_10.33.07.png" alt="Slack shoutout for TypeScript conversion." title="Slack shoutout for TypeScript conversion."/></p><figcaption><p>Slack shoutout for TypeScript conversion.</p></figcaption></figure><div>
<h3 id="taking-root-in-green-fields"><a href="#taking-root-in-green-fields" aria-label="taking root in green fields permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Taking root in green fields</h3>
<p>While we were educating the broader team, folks who were keen on TypeScript not only began building out their new feature work in TypeScript, but also found opportunities to convert files which overlapped with new features. This approach let us build up our type definitions and gain more experience writing Typescript in lower-risk parts of the product that were not exposed to customers.</p>
<p>As the broader team gained more experience and found value in what TypeScript provides, they naturally stopped creating more JavaScript. While we never used tooling to stop people from creating new JavaScript, our education efforts and social agreements helped prevent new JavaScript from being created.</p>
<h3 id="work-out-from-the-core--and-in-from-the-leaves"><a href="#work-out-from-the-core--and-in-from-the-leaves" aria-label="work out from the core  and in from the leaves permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Work out from the core — and in from the leaves</h3>
<p>Once TypeScript had a firm foothold, we needed a strategy to work through the 1,100+ files that needed conversion. Here, we audited our imports, ordering them by how frequently each module was imported. We used this list to prioritize which modules were converted first. By converting frequently used modules, we would be able compound our gains as we converted files.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1QW71rhpxcsqVPrTAmnYVD/58c9800b023c4d3a79e6fdcce5d2921e/Screenshot_2021-04-01_at_10.53.12.png" alt="" title="ts-4"/></p><figcaption><p>The list we used to prioritize and assign conversion work based on import frequency.</p></figcaption></figure><div>
<p>This approach worked well in the beginning, as some modules have dramatically more imports than others. But because most of our modules have fewer than 10 imports, we quickly plateaued. Our next approach was starting from “leaf node” modules that are imported in one place. Converting these files enabled us to accumulate progress more quickly. </p>
<h3 id="all-we-have-to-do-now-is-convert-1100-files"><a href="#all-we-have-to-do-now-is-convert-1100-files" aria-label="all we have to do now is convert 1100 files permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>All we have to do now is convert 1,100+ files…</h3>
<p>Like many software projects, our initial rollout plans were overly ambitious. We started off by retroactively calculating a timeline where we completed within 2019. With approximately 15 weeks before the end of the year, that meant would need to convert approximately 74 files per week. This assumed that we would not accumulate any additional JavaScript files (we did), and that we could sustain that effort (we didn’t). After eight weeks, we checked in on our progress.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1cdGkTs3c2cJ7Vtpsp9ZyN/9c1dd4fb63acd29c0083fd6aeecb4869/typescript_chart_annotated.png" alt="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019." title="Despite promising progress during our first 8 weeks, we knew we weren&#39;t going to finish in 2019."/></p><figcaption><p>Despite promising progress during our first 8 weeks, we knew we weren’t going to finish in 2019.</p></figcaption></figure><div>
<p>It was obvious that we were not going to complete in 2019. Given projections from the current effort a more likely completion date would be mid-2020. </p>
<p>During the fall and winter of 2019, progress was slow. People were focusing on meeting product goals, and didn’t have as much time to devote to TypeScript conversion. In February of 2020 we reached equilibrium. We were no longer making new JavaScript and our backlog of conversion work became fixed.</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/1ooSqS6jFkCZvspS1oJYYP/bb79ec6a1249ac442561e48d168c74da/Screen_Shot_2021-03-29_at_9.38.22_PM.png" alt="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity." title="Our conversion progress over time. Note there are several lulls as well as periods of renewed activity."/></p><figcaption><p>Our conversion progress over time. Note there are several lulls as well as periods of renewed activity.</p></figcaption></figure><div>
<h3 id="challenges-encountered"><a href="#challenges-encountered" aria-label="challenges encountered permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Challenges encountered</h3>
<p>Although the introduction of TypeScript was definitely a game changer, we also faced a few challenges during the conversion process. Most of these were due to interoperability issues between TypeScript and React: </p>
<ol>
<li>
<p><strong>Default Props</strong></p>
<p>When using <code>defaultProps</code> on classes, TypeScript is able to correctly infer that the props are not required when using the component, but when using Higher Order Components, the types for <code>defaultProps</code> generally don’t work, and the previously optional properties would become required. </p>
<p>An example of how <code>defaultProps</code> interacts poorly with Higher Order Components is:</p>
<div data-language="jsx"><pre><code><span>const</span> defaultProps <span>=</span> <span>{</span>
  statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
  canSelect<span>:</span> <span>true</span><span>,</span>
  withChart<span>:</span> <span>true</span><span>,</span>
  useFilteredStats<span>:</span> <span>false</span><span>,</span>
<span>}</span><span>;</span>

type Props <span>=</span> <span>{</span>
  id<span>:</span> string<span>;</span>
  selection<span>:</span> GlobalSelection<span>;</span>
  organization<span>:</span> Organization<span>;</span>
  displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
  query<span>?</span><span>:</span> string<span>;</span>
  hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
  memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
  onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
  showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
  index<span>?</span><span>:</span> number<span>;</span>
<span>}</span> <span>&amp;</span> <span>typeof</span> defaultProps

type State <span>=</span> <span>{</span><span>...</span><span>}</span><span>;</span>

<span>class</span> <span>StreamGroup</span> <span>extends</span> <span>React<span>.</span>Component</span><span>&lt;</span>Props<span>,</span> State<span>&gt;</span> <span>{</span>
  <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
  <span>...</span>
<span>}</span>

<span>export</span> <span>default</span> <span>withGlobalSelection</span><span>(</span><span>withOrganization</span><span>(</span>StreamGroup<span>)</span><span>)</span><span>;</span></code></pre></div>
</li>
</ol>
<p>Normally, TypeScript would be able to use the <code>defaultProps</code> attribute of our class component to infer that those properties are not required. However, when wrapped in a Higher Order Component, TypeScript displays the following errors:</p>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/3mZ5ElMCrj8VLFbtKrm4m6/1b658ed4cc7d87b3c45c6207e8b70938/Screenshot_2021-04-12_at_08.38.25.png" alt="Types" title="Types"/></p></figure><div>
<p>Here our solution was to use <code>Partial</code> on the <code>defaultProps</code> and rely on React to fill in the default values.</p>
<div data-language="jsx"><pre><code>    <span>const</span> defaultProps <span>=</span> <span>{</span>
      statsPeriod<span>:</span> <span>DEFAULT_STREAM_GROUP_STATS_PERIOD</span><span>,</span>
      canSelect<span>:</span> <span>true</span><span>,</span>
      withChart<span>:</span> <span>true</span><span>,</span>
      useFilteredStats<span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>

    type Props <span>=</span> <span>{</span>
      id<span>:</span> string<span>;</span>
      selection<span>:</span> GlobalSelection<span>;</span>
      organization<span>:</span> Organization<span>;</span>
      displayReprocessingLayout<span>?</span><span>:</span> boolean<span>;</span>
      query<span>?</span><span>:</span> string<span>;</span>
      hasGuideAnchor<span>?</span><span>:</span> boolean<span>;</span>
      memberList<span>?</span><span>:</span> User<span>[</span><span>]</span><span>;</span>
      onMarkReviewed<span>?</span><span>:</span> <span>(</span><span>itemIds<span>:</span> string<span>[</span><span>]</span></span><span>)</span> <span>=&gt;</span> <span>void</span><span>;</span>
      showInboxTime<span>?</span><span>:</span> boolean<span>;</span>
      index<span>?</span><span>:</span> number<span>;</span>
    <span>}</span> <span>&amp;</span> Partial<span><span><span>&lt;</span>typeof</span> <span>defaultProps</span><span>&gt;</span></span><span>

    type State = </span><span>{</span><span>...</span><span>}</span><span>;

    class StreamGroup extends React.Component&lt;Props, State&gt; </span><span>{</span>
      <span>static</span> defaultProps <span>=</span> defaultProps<span>;</span>
      <span>...</span>
    <span>}</span><span>

    export default withGlobalSelection(withOrganization(StreamGroup));</span></code></pre></div>
<p>You can find a more complete implementation of <a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/components/stream/group.tsx">this approach here</a>.</p>
<ol start="2">
<li>
<p><strong>Libraries adding incorrect types</strong></p>
<p>One downside to relying on the type definitions in DefinitelyTyped is that occasionally the library types are not written by the maintainers. Instead, community users contribute types, and because of that some types are missing or incorrectly defined. We encountered this with the versions of <a href="https://echarts.apache.org/en/index.html">ECharts</a> and <a href="https://github.com/reflux/refluxjs">Reflux</a> we were using. Our solution here was to add additional type definitions in our code.</p>
</li>
<li>
<p><strong>React.forwardRef is not compatible with generics</strong></p>
<p>Using generic types with <code>React.forwardRef</code> is not directly possible, as it requires concrete types. In more detail, the <code>forwardRef</code> function has only one parameter named <code>render</code>. The type of this parameter is <code>ForwardRefRenderFunction</code>, which is not a generic function declaration, so higher order function type inference cannot propagate free type parameters on to the calling function <code>React.forwardRef</code>.  We had to make <a href="https://github.com/getsentry/sentry/pull/23766/files">compromises and use “any” when this situation arose</a>.</p>
</li>
</ol>
<h3 id="sustaining-motivation-and-energy"><a href="#sustaining-motivation-and-energy" aria-label="sustaining motivation and energy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Sustaining motivation and energy</h3>
<p>Toward the end of the conversion, many contributors were feeling the burning toil this project was having.</p>
<p>In the summer of 2020 – a full year after this project began – we crossed the 70% threshold. This revitalized folks, as we knew the end was near. We were able to sustain that energy and focus though the summer and fall by using part of our TSC meeting as a check in and collecting “conversion pledges” for the next meeting. This introduced a light-hearted social game that helped us stay focused.</p>
<p>In addition, our fantastic tools team introduced a slackbot that would allow us to track progress on demand. Seeing the number go up every day was a big motivator in the final stages, so much so it’s something we’ll likely to use again. You can find the early versions of that bot <a href="https://github.com/getsentry/TypeScript-slack-bot">here</a>.</p>
<h3 id="the-end-finally"><a href="#the-end-finally" aria-label="the end finally permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>The end, finally</h3>
</div><figure><p><img src="https://images.ctfassets.net/em6l9zw4tzag/SBDOSDuCKafM1jklm0kIO/5f1d32747e2f39e1811a1f86dcfb35d1/Screenshot_2021-04-01_at_10.52.18.png" alt="TypeScript Conversion Finally Completed" title="TypeScript Conversion Finally Completed"/></p></figure><div>
<p>After 18 months of migrating our frontend code base to TypeScript, the day everyone at Sentry had been working toward had finally arrived. When we started on our TypeScript journey, we had 1,100+ files to convert. Now, we have over 1,915 Typescript files. It’s worth mentioning that at no time was a GitHub check added to block new JavaScript files. After developers saw the benefits that TypeScript would bring, writing new code in TypeScript was an organic choice. </p>
<p>With TypeScript, we now have an extra layer of protection in our code, which means we’re able to ship with greater confidence, higher productivity, and most importantly, fewer bugs. Some of our newer frontend developers have never seen a production incident caused by a frontend change.</p>
<h3 id="looking-back"><a href="#looking-back" aria-label="looking back permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Looking back</h3>
<p>Like everything in life, we also learned a few things along this journey.</p>
<ol>
<li>
<p><strong>Incremental conversion is key</strong></p>
<p>Our strategy to gradually migrate our files to TypeScript worked out well. We were able to balance converting our code to TypeScript, without delaying important product work. It’s important to highlight that from the beginning, we were not in a hurry to achieve our goal, but instead we wanted to proceed carefully and do a great job.</p>
</li>
<li>
<p><strong>Stay current with TypeScript releases</strong></p>
<p>During our conversion process, several new releases of TypeScript came out. Each one helped us refine our types further with new features like optional chaining, nullish coalesce, named tuples, and more. While upgrading did take additional effort, the benefits were well worth it. It’s why we recommend staying as current as you can with TypeScript releases.</p>
</li>
<li>
<p><strong>Gradually build complex types</strong></p>
<p>At the beginning of the migration, it was impossible to know the correct type of everything. After all, Sentry possesses a large code base, and not everyone is familiar with all parts of the application. Which meant we had to build our more complex types incrementally. As we were converting files, we became more familiar with their types and as we converted related files, we were able to better identify whether the types we had previously defined were updated with the new insights.</p>
</li>
<li>
<p><strong>Use TODO Comments to note future work</strong></p>
<p>In Sentry, we generally use TODO comments in the code to help us track something we need to review later. This approach proved to be very useful during our migration to TypeScript. When we encountered an unclear type, or problematic component we would leave a <code>TODO(ts)</code> for later review. We are now incrementally reviewing the TODO list and further refining and improving our types.</p>
<div data-language="jsx"><pre><code><span>import</span> <span>{</span>Frame<span>}</span> <span>from</span> <span>&#39;app/types&#39;</span><span>;</span>

<span>// TODO(ts): define correct stack trace type</span>
<span>function</span> <span>getRelevantFrame</span><span>(</span><span>stacktrace<span>:</span> any</span><span>)</span><span>:</span> Frame <span>{</span>
  <span>if</span> <span>(</span><span>!</span>stacktrace<span>.</span>hasSystemFrames<span>)</span> <span>{</span>
    <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
  <span>}</span>
  <span>for</span> <span>(</span><span>let</span> i <span>=</span> stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>;</span> i <span>&gt;=</span> <span>0</span><span>;</span> i<span>--</span><span>)</span> <span>{</span>
    <span>const</span> frame <span>=</span> stacktrace<span>.</span>frames<span>[</span>i<span>]</span><span>;</span>
    <span>if</span> <span>(</span>frame<span>.</span>inApp<span>)</span> <span>{</span>
      <span>return</span> frame<span>;</span>
    <span>}</span>
  <span>}</span>
  <span>// this should not happen</span>
  <span>return</span> stacktrace<span>.</span>frames<span>[</span>stacktrace<span>.</span>frames<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
<span>}</span>

<span>export</span> <span>default</span> getRelevantFrame<span>;</span></code></pre></div>
</li>
</ol>
<h3 id="moving-forward"><a href="#moving-forward" aria-label="moving forward permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Moving forward</h3>
<p>Migrating to TypeScript was just the beginning. The frontend team at Sentry will continue to gradually improve types, making sure they are correct as possible, including the removal of all React PropTypes.</p>
<p>We’re also seriously considering introducing end-to-end type safety, so that a backend engineer can make changes in the API without unknowing breaking clients, and frontend engineers can be confident in the data that will be coming back from the server.</p>
<p>This important achievement would not have been possible without the patience, persistence, attention to detail, passion and hard work of everyone involved. A big thank you to all the Sentaurs who contributed to this enormous effort.</p>
<hr/>
<p>Eager for a challenging project like this one? Then join us at Sentry. <a href="https://sentry.io/careers/">We are hiring!</a></p></div></article></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/6kbtdGkqHZOk46Eb1yodEz/b0b6ee467e0ada16857888ee14db32ff/TypescriptMigration-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Feature Flags in Sentry</title>
      <link>https://blog.sentry.io/2021/04/07/using-feature-flags-in-sentry/</link>
      <description>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>From testing in production to running A/B tests, feature flags have a range of uses. At Sentry, one way we use feature flags is to safely allow beta access to new features for some of our “Early Adopter” customers. </p>
<p>Because you can set multiple combinations of feature flags, every user is likely to have a different experience. While that’s great for finding answers and iterating on product, it can be increasingly difficult to determine where certain <a href="https://sentry.io/for/full-stack/">errors</a> and <a href="https://sentry.io/for/performance/">performance</a> issues are coming from. Are my users having trouble because they are part of experiment A or experiment B — or some combination of the two?</p>
<h3 id="tagging-feature-flags"><a href="#tagging-feature-flags" aria-label="tagging feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Tagging feature flags</h3>
<p>Thankfully, Sentry can answer these questions using tags. Tags are key/value string pairs that you can bind to your events and transactions.</p>
<p>You’ll want to set a new tag for each feature flag you want to surface in Sentry. Here is some code in one of my apps that passes in the <code>show_widget</code> feature flag for a given user:</p>
<div data-language="jsx"><pre><code>Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
	dsn<span>:</span> <span>&#39;__DSN__&#39;</span><span>,</span>
	<span>// ...</span>
<span>}</span><span>)</span><span>;</span>

Sentry<span>.</span><span>setTag</span><span>(</span><span>&#34;show_widget&#34;</span><span>,</span> user<span>.</span>showWidget<span>)</span><span>;</span></code></pre></div>
<p>After you start passing in feature flag data, you’ll begin seeing your new tags in Sentry. In the example below, you can see that this issue primarily impacts those users who are seeing our new widget feature.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326&amp;fm=webp 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652&amp;fm=webp 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304&amp;fm=webp 1304w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=326 326w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=652 652w,
https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png?w=1304 1304w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1TfLBdKcLqOoxfgA7AjLm4/166d33972e3fe9597870b40369b837a8/screenshot-issue-details-focus.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="using-discover--tags"><a href="#using-discover--tags" aria-label="using discover  tags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Using Discover + Tags</h3>
<p>Once you have your tags set up, you can use <a href="https://docs.sentry.io/product/discover-queries/">Discover</a> to see which combination of feature flags are causing errors or performance issues.
In Sentry, navigate to Discover and click Build A New Query. Then, add columns for each of the feature flags/experiments in question.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181&amp;fm=webp 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363&amp;fm=webp 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725&amp;fm=webp 725w" sizes="(max-width: 725px) 100vw, 725px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=181 181w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=363 363w,
https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png?w=725 725w" sizes="(max-width: 725px) 100vw, 725px"/>
          <img alt="flg2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/32OrNRVSazTN97AaNfnZ9a/a69db0832c64408b3883000d36006b6d/screenshot-discover-columns-focused.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once you’ve done that, you’ll be able to see which flags are causing problems for your users.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380&amp;fm=webp 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760&amp;fm=webp 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519&amp;fm=webp 1519w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=380 380w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=760 760w,
https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png?w=1519 1519w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flg3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2oJ0J0209ixlHSCxgb8bnV/fdb359e2a23b74a3b9d58941ef943b49/screenshot-discover.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It looks as if errors were primarily impacting the intersection of users who have both the show widget feature enabled and variation 2 of our new checkout experiment. From here, we’re able to use Discover to drill down exactly what issue is causing problems. Then we can decide which feature flag needs to be disabled until we have had the chance to fix the problem. Crisis averted.</p>
<p>Feature flags allow you to control access for a variety of release scenarios: new features for early adopters, organizations with special plans, or even incremental releases. By safely activating — or deactivating — certain features, flags can close your feedback loop, while allowing you to address an issue without the pressure and stress of a live incident.</p>
<p>Want to learn more about what we’ve done with feature flags? Here’s our latest <a href="https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant">Dogfooding Chronicles</a> post. If you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5WLPKcqEgQllLkIv6HhpSF/852cf1499b70189b037792067fc9705f/feature-flags-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 07 Apr 2021 10:00:00 +0000</pubDate>
    </item>
    <item>
      <title>A Sanity Listicle for Mobile Developers</title>
      <link>https://blog.sentry.io/2021/03/30/a-sanity-listicle-for-mobile-developers/</link>
      <description>Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what&#39;s coming next</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Just like that Mobile March Madness 2021 is almost in our rearview. Before we look to April, let’s recap some of our most notable mobile updates from this past month with a few tips on how to solve what matters faster and a sneak peek of what’s coming next. That’s right. We’re constantly improving our mobile monitoring solution independent of our alliteration-based marketing campaigns.</p>
<h2 id="make-sure-your-application-works-as-intended"><a href="#make-sure-your-application-works-as-intended" aria-label="make sure your application works as intended permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Make sure your application works as intended</h2>
<p>Here, we turn to <strong>error and crash reporting</strong>. And if you are developing on the <a href="https://blog.sentry.io/2021/03/03/with-flutter-and-sentry-you-can-put-all-your-eggs-in-one-repo/">Flutter platform</a>, we just added support so your team can monitor Dart/Flutter and Native SDKs. You can follow a user’s trail using breadcrumbs, UI events, and HTTP requests to see if they are engaged. Any errors you find are automagically symbolicated. If a crash occurs when a user’s device goes offline or a fatal crash occurs, Sentry also provides <a href="https://docs.sentry.io/platforms/flutter/?__hstc=76629258.5d9b8fe311f953e074827cc57a65f20c.1612992579902.1615308531962.1615842060846.16&amp;__hssc=76629258.1.1615842060846&amp;__hsfp=3446579172">offline caching</a> so that you don’t miss any critical error reports.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700&amp;fm=webp 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400&amp;fm=webp 1400w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400 1400w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter-breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>In cases where you need more information from your customer, we’ve added <a href="https://blog.sentry.io/2021/02/03/how-to-use-sentry-attachments-with-mobile-applications/">attachment support</a> for Android to help provide critical context. You can upload crash reports, giving you the extra clues you need to investigate and zap a bug. This feature is available for <a href="https://docs.sentry.io/platforms/apple/enriching-events/attachments/">iOS</a>, <a href="https://docs.sentry.io/platforms/android/enriching-events/attachments/">Android</a>, <a href="https://docs.sentry.io/platforms/java/enriching-events/attachments/">Java</a>, <a href="https://docs.sentry.io/platforms/javascript/enriching-events/attachments/">JavaScript</a>, <a href="https://docs.sentry.io/platforms/native/enriching-events/attachments/">Native</a>, <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/enriching-events/attachments/">Xamarin</a>, and <a href="https://docs.sentry.io/platforms/dotnet/enriching-events/attachments/">.NET</a>. But errors only tell half the story…</p>
<h2 id="see-slow-faster-with-performance-monitoring"><a href="#see-slow-faster-with-performance-monitoring" aria-label="see slow faster with performance monitoring permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>See slow faster with Performance Monitoring</h2>
<p>Because applications are so complex, it’s sometimes difficult to determine what is causing an application to run slow. Unfortunately, untreated performance issues can lead to more serious errors. With Performance Monitoring, you can connect your user’s frustration to a poor-performance back-end call. If it takes 2 minutes to process a transaction, you’ve probably lost your customer.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305&amp;fm=webp 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610&amp;fm=webp 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220&amp;fm=webp 1220w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=305 305w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=610 610w,
https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png?w=1220 1220w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="transaction summary" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2iW7jSnWPu3T1FDU06wAxj/afbc0ec6b7eb540617cd6f80fd406ad1/01_performance__2_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We recently added Performance Monitoring support for <a href="https://docs.sentry.io/platforms/dotnet/guides/xamarin/">Xamarin</a>, <a href="https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/">Android</a>, and <a href="https://blog.sentry.io/2021/03/11/performance-monitoring-support-for-react-native/">React-Native</a>. Using <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom</a> and auto-<a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">instrumentation</a>, we can trace transactions and render them for better visibility. Also, in a few weeks, you’ll be able to capture HTTP requests to create spans for active transactions as well as record breadcrumbs.</p>
<h2 id="track-the-health-of-every-release"><a href="#track-the-health-of-every-release" aria-label="track the health of every release permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Track the Health of Every Release</h2>
<p>Once your application has made it to the marketplace, it’s important to track new releases to gauge version adoption of the latest features and the % of crash-free sessions. With <a href="https://docs.sentry.io/product/releases/health/">Release Health</a>, you can use all the data you’ve captured to gain insights about your releases to improve your application over time. We recently added support for the <a href="https://docs.sentry.io/platforms/flutter/">Flutter SDK</a>, and as standard across all our mobile languages, Release Health comes enabled by default.</p>
<h2 id="learn-how-to-improve"><a href="#learn-how-to-improve" aria-label="learn how to improve permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Learn how to Improve</h2>
<p>A sign of a great team is a continuous push for improvement. With all the data already captured by Sentry, we now make it easy for you to <a href="https://docs.sentry.io/product/sentry-basics/guides/discover/">analyze trends</a>. An excellent way to find such opportunities is to query all the fatal crashes caused by unhandled errors. That way, you can improve the experience for your users. More importantly, you can share the results with other teams or turn your query into an alert to keep tabs and ensure that a handled problem doesn’t rear its ugly head again. <a href="https://www.youtube.com/watch?v=Bw8DIaHScZ4">Check out this video</a> to learn more.</p>
<h2 id="watch-how-wix-builds-great-mobile-experiences"><a href="#watch-how-wix-builds-great-mobile-experiences" aria-label="watch how wix builds great mobile experiences permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Watch how Wix Builds Great Mobile Experiences</h2>
<p>Wix joined our monthly workshop to share how they manage releases on React Native apps while scaling mobile monitoring. <a href="https://www.youtube.com/watch?v=OYUNLtRCGxo">Check out this recording</a> to learn more.</p>
<p>While getting mobile apps right takes a lot of work, having the right tools is key to making sure your users are engaged. If you’re using Sentry, make sure you <a href="https://docs.sentry.io/platforms/react-native/">update your SDKs</a> to take advantage of these latest features. And if you have a friend who could use this, <a href="https://sentry.io/referrals/mobile/">refer them</a> and you both get 3 months of free Sentry. Because friends don’t let friends ship without Sentry.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/FdF5nmvSvD0iyblfhnywP/bab558ea322c9ca897125d684dd4c60d/mobile-meta.jpeg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 30 Mar 2021 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Using Sentry Performance To Make Sentry Performant</title>
      <link>https://blog.sentry.io/2021/03/25/using-sentry-performance-to-make-sentry-performant/</link>
      <description>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, Sentry uses feature flags to determine when certain users see certain features. Recently, we decided to switch our feature flag software to an open-source system called <a href="https://github.com/checkr/flagr">Flagr</a>. And while implementing Flagr, we used our new <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">Performance</a> tools to find — and ultimately fix — a serious issue in how we were fetching our flags. </p>
<h2 id="flagging-down-feature-flags"><a href="#flagging-down-feature-flags" aria-label="flagging down feature flags permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Flagging Down Feature Flags</h2>
<p>Here’s how we approach feature flags: as the page loads, we make a call to our Flagr instance to fetch all of the flags and cache the results. And while our initial implementation evaluated each flag individually, due to the sheer number of flags we needed to check, it became necessary to switch to a batch evaluation. Fortunately, Flagr has an autogenerated Python library, which made implementing the batch request simple enough:</p>
<div data-language="python"><pre><code><span>def</span> <span>bulk_has</span><span>(</span>features<span>,</span> actor<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.bulk_has&#34;</span><span>)</span><span>:</span>
        <span># generate feature list, check if cached</span>
        <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span>op<span>=</span><span>&#34;feature.flagr.evaluation&#34;</span><span>)</span><span>:</span>
	response <span>=</span> flagr<span>.</span>EvaluationApi<span>(</span>self<span>.</span>_client<span>)</span><span>.</span>post_evaluation_batch<span>(</span>
    	    body<span>=</span>flagr<span>.</span>EvaluationBatchRequest<span>(</span>
        	        flag_keys<span>=</span><span>[</span>feature<span>.</span>name <span>for</span> feature <span>in</span> flagr_features<span>]</span><span>,</span>
        	        entities<span>=</span>entities<span>,</span>
        	        enable_debug<span>=</span><span>False</span><span>,</span>
    	    <span>)</span><span>,</span>
    	    <span># connection, and read timeout</span>
    	    _request_timeout<span>=</span><span>(</span><span>0.1</span><span>,</span> <span>0.01</span> <span>*</span> <span>len</span><span>(</span>flagr_features<span>)</span><span>)</span><span>,</span>
	<span>)</span>
        <span># Parse, cache and return results</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320&amp;fm=webp 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639&amp;fm=webp 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278&amp;fm=webp 1278w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=320 320w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=639 639w,
https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif?w=1278 1278w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="deserialize" title="" src="https://images.ctfassets.net/em6l9zw4tzag/JJR8h0pif4zvvSA12kZdJ/275d1f0533796ac0a8037acb8427aa32/Large_GIF__1278x630_.gif" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we pass each flag we’re evaluating to the <code>flag_keys</code> parameter, so each flag knows which entity to evaluate. And when we try this with all 50 feature flags, we not only see that the whole function took roughly 900ms, but that the <code>feature.flagr.evaluation</code> span occupied the bulk of that time (500ms).  </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flone" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3rks7d91V46WBWYublg0FU/e636c5866b00c8e01b0fbe49728dd74c/flone.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>At first glance, it seems as if evaluating all 50 feature flags is the reason for the 500ms delay. But thanks to Performance’s auto-instrumentation, we can see that the HTTP call to the Flagr API only took 70ms. So the next step here was to manually instrument Flagr’s Python client to get a better understanding of what was going on. Our assumption was that the main performance hit was happening when we were trying to deserialize the flags:</p>
<div data-language="python"><pre><code><span>def</span> <span>__deserialize</span><span>(</span>self<span>,</span> data<span>,</span> klass<span>)</span><span>:</span>
    <span>with</span> sentry_sdk<span>.</span>start_span<span>(</span><span>&#34;flagr.deserialize&#34;</span><span>)</span><span>:</span>
        <span>if</span> data <span>is</span> <span>None</span><span>:</span>
            <span>return</span> <span>None</span>

        <span># The rest of the deserialize function</span></code></pre></div>
<p>You can see that the deserialize function is called quite frequently, and is in fact the major cause of the performance issues. We felt that the size of the JSON response may perhaps be related to the amount of time required for deserializing — a hunch that’s supported by how quickly a single flag check takes. The gap after the http span is minuscule — far less than a millisecond:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="fltwo" title="" src="https://images.ctfassets.net/em6l9zw4tzag/e6KtuBEvF0W1fVrTmFOHn/2ec77849edc5b0dfe2fb5c91fc59f2b7/fltwo.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>We can confirm this theory by using Performance on the batch request. We put more manual instrumentation into the Flagr client — specifically, adding the span <code>flagr.json_loads</code> around those lines of code that perform the JSON parsing. While slow, it became clear that the majority of the time is still spent deserializing JSON:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flthree" title="" src="https://images.ctfassets.net/em6l9zw4tzag/785sLafofJbPyt4jDjJgNb/db3cea3e96b607c7e5b1cf67bb23c8d1/flthree.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="de-deserializing-json"><a href="#de-deserializing-json" aria-label="de deserializing json permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>De-deserializing JSON</h2>
<p>As we dug into the client more, we noticed that deserialization was turning the entire JSON blob (i.e. the flag results) into a Python object. While deserializing JSON is convenient from a development perspective, because we were only using a few JSON fields, the cost just wasn’t worth it. After patching our own deserializer with a simple <code>json.loads(response.data)</code> we saw a huge improvement in speed — so much so that other areas began to look slow by comparison:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfour" title="" src="https://images.ctfassets.net/em6l9zw4tzag/19UahFK5wKcnmVMnhSJ7BW/bd2e6204a9233b62c20f813a39179140/flfour.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Here, we see that the gaps both before and after our evaluation taking up nearly 100ms. And by manually instrumenting suspect code (again), we were able to attribute the delay to the cache writing — and checking — each flag that’s in it. Since we know Flagr is taking a fraction of that time, we can conclude that using the cache is slowing us down. By removing the cache, we were able to check all 50 flags in 200ms.</p>
<p>But we can go deeper. Let’s check this large JSON blob that is taking us 140ms to parse. We see there are 2500 objects in the response, far more than the 50 we would expect. It looks like our earlier assumption — that we had to pass an entity for each flag — was incorrect due to the fact that Flagr actually checks each flag for all entities. And since we had passed one entity for each flag, we were essentially performing 2500 checks (i.e. 50x50) rather than the 50 we were expecting. After updating the code so that it checks each flag only once, the time to check all 50 flags — voila —dropped to 10ms:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flfive" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3Ki13mSyk2ADcHJNxXKrGn/558b8183eb9dbaca8da5c83c2c1d51a1/flfive.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, the work identifying the issues with <code>deserialize</code> was not wasted, as the original <code>deserialize</code> still takes magnitudes longer, and was much easier to identify with a larger set of flags to evaluate.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400&amp;fm=webp 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800&amp;fm=webp 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600&amp;fm=webp 1600w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=400 400w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=800 800w,
https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png?w=1600 1600w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flsix" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7o5tmxTHky3a2mH7uRmZES/95768a8804e217594b1ce77774ee4c29/flsix.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Feature flags are a great tool to control operational aspects of a system’s behavior without destabilizing the codebase. But to use feature flags properly, you need to know which way the wind’s blowing. And for us, Performance does that: it’s the saliva on our index fingers that we hold up to the wind.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5DvBhuWGl7g4caBuyrcdZ8/eb5e36b71e43ba5a4c73a9beed8d5886/meta-dogfooding.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Performance Monitoring for Android Applications</title>
      <link>https://blog.sentry.io/2021/03/18/performance-monitoring-for-android-applications/</link>
      <description>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Android is arguably the most ubiquitous operating system in the world. Whether it’s a tablet, phone, folding phone, computer, TV, or IoT device, chances are you’ve interacted with Android OS. And to help developers get full visibility into how their customers experience Android’s myriad applications, we’re extending <a href="https://docs.sentry.io/platforms/android/performance/">Performance</a> to <a href="http://sentry.io/for/android">Android</a>. </p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-android" title="" src="https://images.ctfassets.net/em6l9zw4tzag/2w2RdGgHc4UeBbeG2JbaWo/8b239b74b77b3c20722dad846d082174/meta-android.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Being an Android developer means thinking through countless scenarios. If something goes wrong, you need to imagine what that support ticket would look like. That means collecting everything from hardware model to software version, in addition to crucial details like screen orientation and battery level. Sentry provides all of that context out of the box — and has done so for some time. And if your users lose their connection while encountering an error, Sentry still captures these events so they can be reported back when the app restarts.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377&amp;fm=webp 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754&amp;fm=webp 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507&amp;fm=webp 1507w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=377 377w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=754 754w,
https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png?w=1507 1507w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-issue-detail" title="" src="https://images.ctfassets.net/em6l9zw4tzag/oRH5fkl3Vu1UqiMqQWmd8/64337f32f0d842fc11e6d590cf3a655b/Screen_Shot_2021-03-15_at_10.09.46_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But errors are only half of the story. Android developers also need to see how their application performs. That means visibility into when a user writes to disk, fetches media, or loads an object in a given viewport. Without this data, untreated performance problems run the risk of becoming serious errors. But now that you have Sentry’s performance monitoring, you can finally connect your user’s frustrated taps to its poor-performing backend call.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544&amp;fm=webp 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088&amp;fm=webp 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176&amp;fm=webp 2176w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=544 544w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=1088 1088w,
https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png?w=2176 2176w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="android-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/4RWaU9QiSccsusNH3ZDRM6/3e541b089dc1638e361a2d47d2f0c2cc/Screen_Shot_2021-03-15_at_7.20.23_PM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>To install the Android SDK, add it to your <code>build.gradle</code> file:</p>
<div data-language="groovy"><pre><code><span>// Make sure mavenCentral is there.</span>
repositories <span>{</span>
    <span>mavenCentral</span><span>(</span><span>)</span>
<span>}</span>

<span>// Enable Java 1.8 source compatibility if you haven&#39;t yet.</span>
android <span>{</span>
    compileOptions <span>{</span>
        sourceCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
        targetCompatibility <span>=</span> JavaVersion<span>.</span>VERSION_1_8
    <span>}</span>
<span>}</span>

<span>// Add Sentry&#39;s SDK as a dependency.</span>
dependencies <span>{</span>
    implementation <span>&#39;io.sentry:sentry-android:4.3.0&#39;</span>
<span>}</span></code></pre></div>
<p>After you’ve completed setting up a project in Sentry, we’ll give you a value — which we call a DSN or Data Source Name — to add to your <code>AndroidManifest.xml</code> file.</p>
<div data-language="html"><pre><code><span><span><span>&lt;</span>application</span><span>&gt;</span></span>
  <span><span><span>&lt;</span>meta-data</span> <span><span>android:</span>name</span><span><span>=</span><span>&#34;</span>io.sentry.dsn<span>&#34;</span></span> <span><span>android:</span>value</span><span><span>=</span><span>&#34;</span>https://example@sentry.io/example<span>&#34;</span></span> <span>/&gt;</span></span>
<span><span><span>&lt;/</span>application</span><span>&gt;</span></span></code></pre></div>
<p>The current version of our Android SDK supports <a href="https://docs.sentry.io/platforms/android/performance/included-instrumentation/">auto instrumentation</a> activity rendering, which can be expanded on through <a href="https://docs.sentry.io/platforms/android/performance/custom-instrumentation/">custom instrumentation</a>. Additionally, in the coming weeks, you’ll be able to automatically create spans for active transactions as well as record <a href="https://docs.sentry.io/platforms/android/enriching-events/breadcrumbs/">breadcrumbs</a> for outgoing HTTP requests.</p>
<p>iOS developers: if you’re getting SDK envy, rest easy knowing that Performance is on the way for you as well. </p>
<p>Have a friend who wants to manage releases, solve issues faster, and speed up their mobile applications? <a href="https://sentry.io/referrals/mobile/">Refer</a> them to Sentry and we’ll give them — and you — three free months on our Team plan.</p>
<p>To start using Sentry with Android, configure the <a href="https://docs.sentry.io/platforms/android/">SDK</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/3IsaoRlm059mQ43DRNC4bP/8a32928dc38d7450c312e981358a92b4/performance1-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Building Dark Mode</title>
      <link>https://blog.sentry.io/2021/03/16/building-dark-mode/</link>
      <description>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which blared entrance music for anyone who stepped foot in our…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Like many companies, we have a Hack Week at Sentry. In 2017, we coded an app which <a href="https://blog.sentry.io/2017/11/16/hackweek-winter-2017">blared entrance music</a> for anyone who stepped foot in our office. In 2019, we encouraged folks to be <a href="https://blog.sentry.io/2019/10/17/how-a-hack-week-project-encourages-people-to-be-nice-on-the-internet">nice on the Internet</a>. Noble causes, sure, but for this year’s Hack Week I was determined to advance a cause near and dear to my cold British heart: dark mode.</p>
<p>Little did I know that what started as a minor hack week project would become a major lift that included pantone colors, hex codes and all sorts of variables.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411&amp;fm=webp 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823&amp;fm=webp 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645&amp;fm=webp 1645w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=411 411w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=823 823w,
https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png?w=1645 1645w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/1Vnuu1vtrXycBki27e7zBE/ba0275711a5b9e022aaea5da8dc6d907/Screen_Shot_2021-01-23_at_9.17.54_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>But first things first. If you head on over to User Settings &gt; Theme you can toggle Dark Mode on. We also added an option where you can switch it based on your default system theme:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597&amp;fm=webp 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194&amp;fm=webp 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388&amp;fm=webp 2388w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=597 597w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=1194 1194w,
https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png?w=2388 2388w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/38kbhYCyLcP1Mdbl6sFVjM/8202ba1a9cd6d3f8d7177ff2bb2dc7c0/Screen_Shot_2021-01-22_at_4.41.07_PM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Given its recent popularity, you might believe dark mode is a fad. But from a design perspective, dark mode is exceptionally useful. That’s because a big part of design is about building relationships between colors. And so implementing dark mode essentially forced everyone on the team to think long, hard, and consistently about our front-end design components. In short, dark mode helped our design system not only look good, but make sense. </p>
<p>We organized the work into three buckets:</p>
<ol>
<li>Cleaning up variables</li>
<li>Designing the system</li>
<li>Creating aliases and refactoring components</li>
</ol>
<h2 id="cleaning-up-variables"><a href="#cleaning-up-variables" aria-label="cleaning up variables permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Cleaning Up Variables</h2>
<p>As I began spelunking around our codebase, I found all sorts of color inconsistencies. Things like scattered hex codes and one-off variables such as <code>blueLightest</code> or <code>offWhite</code> being used in all sorts of curious ways. This meant that whenever an engineer wanted to actually to build something, they were forced to think way too long and much too hard about which color they should use.</p>
<p>Here’s an example: I want to add a border to a component. Okay, cool. Which variables can I use? Lemme see. I like gray, so let’s use gray. Simple enough, right?  Well, there are eighteen grays — not to mention its border variables and hex codes. Which one should I use? Why is the design I’m looking at using a new border color? Where in my life did everything go wrong?</p>
<p>No engineer should be forced to answer these questions, and so we went about cleaning up all this junk. To kick things off I made a map of every variable that uses React components. This map was nothing more than a spreadsheet (gross), but it did serve an important purpose: I now knew which deprecated color variables should be replaced. This spreadsheet would help us make a lot of small pull requests where we could change <code>yellowLightest</code> into a new variable called <code>yellow400</code>. Also, by making lots of small pull requests for each variable, we could also limit regressions.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715&amp;fm=webp 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429&amp;fm=webp 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858&amp;fm=webp 2858w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=715 715w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=1429 1429w,
https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png?w=2858 2858w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5nS680oKbuok1Eoiv18WBr/53b63b4c20fedcdcd295c3d156e5663e/CleanShot_2021-03-15_at_11.11.432x.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Thankfully, most of these variables were stored in one place, as we had been pretty strict about storing them in the <code>theme.tsx</code> file we imported into our React components. Within those components, we applied those styles to  <a href="https://emotion.sh/docs/introduction">emotion</a>, our css plugin. That sounds like a lot — and it is — but emotion is well worth the overhead when building complex apps, as it allows us to isolate our CSS all in a single component like <code>Dropdown</code> so we don’t have to worry about those styles bleeding into other files or pages. </p>
<p>Here’s an example of a component that uses emotion:</p>
<div data-language="javascript"><pre><code><span>import</span> React <span>from</span> <span>&#39;react&#39;</span><span>;</span>
<span>import</span> styled <span>from</span> <span>&#39;@emotion/styled&#39;</span><span>;</span>

<span>const</span> ComponentName <span>=</span> <span>styled</span><span>(</span><span>&#39;div&#39;</span><span>)</span><span><span>`</span><span>
  color: </span><span><span>${</span><span>p</span> <span>=&gt;</span> p<span>.</span>theme<span>.</span>offWhite2<span>}</span></span><span>;
</span><span>`</span></span><span>;</span>

<span>export</span> <span>default</span> ComponentName<span>;</span></code></pre></div>
<p>To remove a color like <code>offwhite2</code>, I needed to search across both our codebases and find all the React components that used that particular variable. Only then could I replace it with something more sensible. Within our <code>theme.tsx</code> file we then organized them into something like this: </p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>

  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>

  yellow100<span>:</span> <span>&#39;#FDE8b4&#39;</span><span>,</span>
  yellow200<span>:</span> <span>&#39;#FFD577&#39;</span><span>,</span>
  yellow300<span>:</span> <span>&#39;#FFC227&#39;</span><span>,</span>

  purple100<span>:</span> <span>&#39;#D4D1EC&#39;</span><span>,</span>
  purple200<span>:</span> <span>&#39;#A396DA&#39;</span><span>,</span>
  purple300<span>:</span> <span>&#39;#6C5FC7&#39;</span><span>,</span>

  blue100<span>:</span> <span>&#39;#D2DFF7&#39;</span><span>,</span>
  blue200<span>:</span> <span>&#39;#92A8EA&#39;</span><span>,</span>
  blue300<span>:</span> <span>&#39;#3D74DB&#39;</span><span>,</span>

  orange100<span>:</span> <span>&#39;#FFF1ED&#39;</span><span>,</span>
  orange200<span>:</span> <span>&#39;#F9C7B9&#39;</span><span>,</span>
  orange300<span>:</span> <span>&#39;#F69C7D&#39;</span><span>,</span>
  orange400<span>:</span> <span>&#39;#FF7738&#39;</span><span>,</span>
  orange500<span>:</span> <span>&#39;#BA4A23&#39;</span><span>,</span>

  red100<span>:</span> <span>&#39;#FCC6C8&#39;</span><span>,</span>
  red200<span>:</span> <span>&#39;#FD918F&#39;</span><span>,</span>
  red300<span>:</span> <span>&#39;#F55459&#39;</span><span>,</span>

  green100<span>:</span> <span>&#39;#B6ECDF&#39;</span><span>,</span>
  green200<span>:</span> <span>&#39;#7DD6BE&#39;</span><span>,</span>
  green300<span>:</span> <span>&#39;#33BF9E&#39;</span><span>,</span>

  pink100<span>:</span> <span>&#39;#FDC9D7&#39;</span><span>,</span>
  pink200<span>:</span> <span>&#39;#FA93AB&#39;</span><span>,</span>
  pink300<span>:</span> <span>&#39;#F05781&#39;</span><span>,</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>In total, this process took weeks of part-time refactoring work, but once it was done it was quite satisfying. We finally had a list of colors that were mostly consistent, to the point that whenever an engineer came to build something they’d know to use these variables. And now that there were fewer options in our system, we could start thinking about the relationships between all these colors.</p>
<h2 id="designing-the-color-system"><a href="#designing-the-color-system" aria-label="designing the color system permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Designing the Color System</h2>
<p>We still had some daunting questions to answer. How are we using color in our app today? What are the default active, hover, and focus states? What are the common border colors? What should our text colors be? And finally, how are those states represented across dropdowns, form fields, buttons, toggles, links, and tags? </p>
<p>To tackle these questions, we needed mockups. After gathering our most common components together in Figma, we found a bunch of inconsistencies in our text and form styles, as well as how we applied border colors to all of our components. And so by unifying all these visual inconsistencies (by creating a smaller list of variables) we could make our UI work for both light and dark mode at the same time. </p>
<p>Here’s an early mockup of those updated components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920&amp;fm=webp 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840&amp;fm=webp 3840w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=1920 1920w,
https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png?w=3840 3840w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="06 presentation-compressed" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5Xa2eo874vWpWimde2YKSr/0e04e75fab6d2ad875223f15240dddaa/06_presentation-compressed.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>This work involved looking across multiple Sentry features — Issues, Discover, Releases, Performance, Alerts — to make sure that the color system that worked for our charts also worked across dark mode. </p>
<p>Next, we created a separate dark mode color palette for our charts:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img7" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6vfHw9ufh5C1LEp3adfvIZ/b4c7c7f9ab389b0102819dc39535e509/Graph.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217&amp;fm=webp 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435&amp;fm=webp 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869&amp;fm=webp 869w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=217 217w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=435 435w,
https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png?w=869 869w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img8" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WykNcmZckhIu2pXfxdp54/a4dfa32a85de6fab1612d3a623732511/Component_4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Once we felt the base styles had good coverage, we began structuring the UI together in Figma. This not only let us think about how some of these changes might affect customers, but how we could improve accessibility across the board for all our components:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img9" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7x8PHJJAqOBIHzsyuUY5bZ/39a7b27fe98b4e89599c85727ab72a2c/010_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480&amp;fm=webp 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960&amp;fm=webp 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920&amp;fm=webp 1920w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=480 480w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=960 960w,
https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png?w=1920 1920w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img10" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6LNOko0jwpRXju6HozSWuQ/7f8c242b7e3f85a485bf2a3cb9c969c6/011_presentation.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>After moving back and forth between our smaller components and our layouts, we finally nailed down our new color palette. Again, remember the idea here isn’t just to support dark mode, but to resolve all the outstanding questions surrounding how to build new components. Folks shouldn’t have to Slack the design team to figure out which gray to use for gray text.</p>
<p>A fact of life for designers is being annoyed by your own solutions. For example, I was a little irked that we have a separate <code>background</code> variable here, instead of just adding a new gray. But it makes sense for our product — and how we want to use our color system. When my system clashes with a real-world problem, my system needs to bend to the problem — not the other way around. Consistency is more important than ideological purity.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370&amp;fm=webp 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739&amp;fm=webp 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478&amp;fm=webp 1478w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=370 370w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=739 739w,
https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png?w=1478 1478w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img11" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3jBnLRh9iDqu2psMwL75Ti/fc623354c59f7ac805c8e16f399bbd13/Colors.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It was at this point that we added our design system’s variables to Figma, so that any new colors we used in the future would use these updated versions, too:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747&amp;fm=webp 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494&amp;fm=webp 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988&amp;fm=webp 2988w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=747 747w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=1494 1494w,
https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png?w=2988 2988w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="img12" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3dOOQP7H1FvjSHnzzOKUcL/beb6a6b50e69eab02a05d97839900f7e/Screen_Shot_2021-01-23_at_11.04.55_AM__1_.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Now all we had to do is build the dang thing.</p>
<h2 id="creating-aliases-and-refactoring-components"><a href="#creating-aliases-and-refactoring-components" aria-label="creating aliases and refactoring components permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Creating Aliases and Refactoring Components</h2>
<p>We knew we wanted our paragraph text to be <code>gray500</code> in light mode but then switch to <code>white</code> in dark mode. This toggling between light and dark modes would require an alias such as <code>textColor</code> to flip between these two options. To do this, we needed to create a whole bunch of aliases within our <code>theme.tsx</code> file.</p>
<p>In this file, we first define our range of colors and then we create those aliases like <code>textColor</code>, <code>subText</code>, and <code>borderColor</code>. But this was not an easy process: we argued <em>a lot</em> about the naming conventions and their use across our components. It wasn’t until we started refactoring our components that these names began to make a bit more sense.</p>
<div data-language="javascript"><pre><code><span>const</span> colors <span>=</span> <span>{</span>
  white<span>:</span> <span>&#39;#FFFFFF&#39;</span><span>,</span>
  black<span>:</span> <span>&#39;#1D1127&#39;</span><span>,</span>
  gray100<span>:</span> <span>&#39;#E7E1EC&#39;</span><span>,</span>
  gray200<span>:</span> <span>&#39;#C6BECF&#39;</span><span>,</span>
  gray300<span>:</span> <span>&#39;#9386A0&#39;</span><span>,</span>
  gray400<span>:</span> <span>&#39;#776589&#39;</span><span>,</span>
  gray500<span>:</span> <span>&#39;#2B1D38&#39;</span><span>,</span>
  <span>// other vars go here</span>
<span>}</span> <span>as</span> <span>const</span><span>;</span>

<span>const</span> aliases <span>=</span> <span>{</span>
  <span>/**
   * Primary text color
   */</span>
  textColor<span>:</span> colors<span>.</span>gray500<span>,</span>

  <span>/**
   * Text that should not have as much emphasis
   */</span>
  subText<span>:</span> colors<span>.</span>gray400<span>,</span>

  <span>/**
   * More...
   */</span>
<span>}</span></code></pre></div>
<p>The aliases above are the colors for our light mode. Next, we started to create the dark mode aliases in this file while refactoring our components and adding new aliases as we found them. In this same file, we have a new object that contains all our colors for dark mode: </p>
<div data-language="javascript"><pre><code><span>const</span> darkAliases <span>=</span> <span>{</span>
  <span>...</span>aliases<span>,</span>
  bodyBackground<span>:</span> colors<span>.</span>black<span>,</span>
  headerBackground<span>:</span> colors<span>.</span>gray500<span>,</span>
  background<span>:</span> colors<span>.</span>black<span>,</span>
  backgroundSecondary<span>:</span> colors<span>.</span>gray500<span>,</span>
  border<span>:</span> colors<span>.</span>gray400<span>,</span>
  innerBorder<span>:</span> colors<span>.</span>gray500<span>,</span>
  textColor<span>:</span> colors<span>.</span>white<span>,</span>
  <span>// more aliases go here </span>
<span>}</span> <span>as</span> <span>const</span><span>;</span></code></pre></div>
<p>This involved multiple conversations about how our components look across different features — what might work for one component in one place, might not work for another component somewhere else. </p>
<p>We started by refactoring each of our components to work with these new aliases. Here, we identified common patterns where we would have to replace every instance of a variable with these new aliases. One example is text color: sometimes this was as easy as switching out all the <code>gray400</code>s in our components, and sometimes it would involve checking each component to find where we were setting <code>gray500</code> on the <code>color</code> CSS property. This meant many trials — and errors.</p>
<p>However, one of the hardest parts about this refactoring project is that all our styles weren’t located in one place. While our variables and aliases were (somewhat) neatly stored in our <code>theme.tsx</code> file, our styles were still spread out across the following mini-systems of CSS:</p>
<ul>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/includes/bootstrap.less">Bootstrap styles</a>: We’re still breaking up these styles into individual <code>.less</code> files and then refactoring those into our React components. There’s a ton of unused styles here that need to go and we don’t style anything with our <code>theme.tsx</code> variables here.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/less/base.less">Base styles</a>:  This is a <code>base.less</code> file that’s a reset and a normalize <code>.less</code> file that we made after refactoring a ton of stuff from Bootstrap. These are the core styles for default HTML elements, so we also can’t use our fancy variables from <code>theme.tsx</code> here either.</li>
<li><a href="https://github.com/getsentry/sentry/blob/master/src/sentry/static/sentry/app/styles/global.tsx">Global styles</a>: This is a <code>.tsx</code> file that’s overriding a bunch of stuff from Bootstrap and Base styles and <em>does</em> use styles from our theme. Ideally, everything from Base should be refactored into our Global styles, but that’s not possible since some of our pages aren’t in React yet.</li>
<li><a href="https://github.com/getsentry/sentry/tree/master/src/sentry/static/sentry/app/components">Components</a>: As I mentioned, each of our components use emotion (which I both love and am somewhat annoyed by) which override our Global styles, which themselves override our Base styles. <em>Phew</em>.</li>
<li>Styled components: These are one-off variants or modifications to our components used in a feature like Issues or Alerts. This is where emotion falls somewhat short for me (and we would like to extend it perhaps with something like Tachyons instead). While some of these modifications are due to the fact that our components need tidying up, others are necessary because our defaults in Base and Bootstrap need deleting entirely. <em>Double Phew</em>.</li>
</ul>
<p>If you think all of this sounds and looks like an utter nightmare, well, I won’t argue with you. And yet I think that’s sort of the value inherent within building dark mode: you can now see all the relationships between your components and your styles and your design system.</p>
<p>I’ve worked on a few refactoring projects like this in the past and I know how easy it is to see every problem as the Most Important Problem Of All Time. But that’s almost never the case: in every codebase there’s always stuff that needs refactoring. And so you need to be careful about what you refactor and why. </p>
<p>I subscribe to the belief that there’s <a href="https://css-tricks.com/the-three-types-of-code/">three types of code</a>.  There’s Boring code: the good part of your codebase that doesn’t need refactoring. If you’re building a large-scale web app, it’s unlikely you have much code like this. Next, there’s Salt Mine code. This is the stuff that’s poorly written but doesn’t need to be refactored because it isn’t doing active harm. It’s gross, but it’s fine. And then finally there’s Radioactive code. Not only is it poorly written, it’s doing active harm by leaking into other parts of your codebase and continuously creating toxic problems:</p>
<blockquote>
<p>Radioactive code is the real problem at the heart of every engineering team. It’s the let’s-not-go-to-work-today sort of code. It’s the stuff that’s worse than bad — it’s actively poisoning our codebase. Imagine a codebase as a nuclear reactor; radioactive code is the stuff that’s breached the container and is now leaking into every part of our codebase.</p>
</blockquote>
<p>For most front-end codebases, the design of your color system shows you where your radioactive styles are. It shows you how things are tied together, and what depends on what.  Sure, we wanted dark mode to look great. But we also wanted to make sure that dark mode doesn’t slow us down by introducing even more problems than we already have. </p>
<p>And I think that’s what our team achieved here. We made our designs more consistent, buried those radioactive styles, made relationships between colors, and hopefully <em>slightly</em> improved the way we build front-end components moving forward.</p>
<p>It’s certainly the long, hard, and stressful way of doing things, but more important, it’s the way that worked for us.</p>
<hr/>
<p>If you’ve read this far, you’re either a bot — or passionate about design.  Turns out <a href="https://sentry.io/careers/">we’re hiring</a>. Come join us!</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/76aNJOkrbgWw2iTODFX7Gl/605ba5aa92df76d61082f33d63df1466/darkmode_meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Performance Monitoring Support for React Native</title>
      <link>https://blog.sentry.io/2021/03/11/performance-monitoring-support-for-react-native/</link>
      <description>March Mobile Madness continues with Performance support for React Native. Our friend, Jenn Mueng shares how Performance supports his mobile…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p><em>March Mobile Madness continues with Performance support for React Native. Our friend, Jenn Mueng shares how Performance supports his mobile appliction.</em></p>
<p>In addition to working with Sentry, I also contribute to <a href="https://tourapp.co">Tour</a>, a travel app which helps people plan trips with a drag-and-drop interface. Because Tour is built with React Native, we’ve always had issues accurately gauging how people use our app and its performance. We wrote our own analytics trackers to try and get ahead of these issues, but it was still difficult to monitor the app’s performance.</p>
<p>But now that <a href="https://docs.sentry.io/platforms/react-native/performance/">Performance from Sentry</a> is available on React Native, I’d like to introduce some creative recipes that helped me instrument Tour outside of the instrumentation already included with the Sentry SDK. But first things first. Let’s start with setting the SDK up for basic Performance Monitoring.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=300&amp;fm=webp 300w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=600&amp;fm=webp 600w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=1200&amp;fm=webp 1200w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=300 300w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=600 600w,
https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png?w=1200 1200w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="meta-react-native" title="" src="https://images.ctfassets.net/em6l9zw4tzag/57PPjofyW4XFwJLjkjXt2x/050406e6a08e808ce9177dbb362f649e/meta-react-native.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://docs.sentry.io/platforms/react-native/">Install and set up</a> our React Native SDK:</p>
<div data-language="text"><pre><code>yarn add @sentry/react-native
yarn sentry-wizard -i reactNative -p ios android
cd ios
pod install</code></pre></div>
<p><a href="https://docs.sentry.io/platforms/react-native/performance/#enable-tracing">Enable performance monitoring</a> along with the <a href="https://docs.sentry.io/platforms/react-native/performance/included-instrumentation/#enable-routing-instrumentation">routing instrumentation</a> of your choice:</p>
<div data-language="typescript"><pre><code><span>import</span> <span>*</span> <span>as</span> Sentry <span>from</span> <span>&#34;@sentry/react-native&#34;</span><span>;</span>

<span>const</span> routingInstrumentation <span>=</span> <span>new</span> <span>Sentry</span><span>.</span><span>ReactNavigationV5Instrumentation</span><span>(</span><span>)</span><span>;</span>

Sentry<span>.</span><span>init</span><span>(</span><span>{</span>
  dsn<span>:</span> <span>&#34;DSN&#34;</span><span>,</span>
  tracesSampleRate<span>:</span> <span>1</span><span>,</span>
  integrations<span>:</span> <span>[</span>
    <span>new</span> <span>Sentry</span><span>.</span><span>ReactNativeTracing</span><span>(</span><span>{</span>
      tracingOrigins<span>:</span> <span>[</span><span>&#34;localhost&#34;</span><span>,</span> <span>&#34;my-site-url.com&#34;</span><span>,</span> <span><span>/</span><span>^\/</span><span>/</span></span><span>]</span><span>,</span>
      routingInstrumentation
      <span>// ... other options</span>
    <span>}</span><span>)</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>And that’s it. You’ll start to see transactions for every screen containing Spans for XHR &amp; fetch requests. Before you continue reading, for additional tips and use cases for your app, the following section assumes that you have some knowledge about transactions and spans in Sentry. You can learn more about <a href="https://docs.sentry.io/product/performance/distributed-tracing/#traces-transactions-and-spans">traces, transactions, and spans</a> in our docs.</p>
<h2 id="recipes-for-performance"><a href="#recipes-for-performance" aria-label="recipes for performance permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Recipes for Performance</h2>
<p>Because Tour uses TypeScript, these code snippets will be in TypeScript —although you can easily adapt them back into plain JavaScript.</p>
<p><strong>Note:</strong> These are intermediate recipes that assume prior knowledge of our React Native SDK. If you just want to learn how to get started, see our <a href="https://docs.sentry.io/platforms/react-native/">docs</a>.</p>
<h3 id="promises"><a href="#promises" aria-label="promises permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Promises</h3>
<p>Sentry’s Performance instrumentation records duration-based events, which are then visualized in the Sentry UI to help you identify slow operations. Because they’re typically attached to network calls or other asynchronous tasks, Promises are a great place to surface poorly performing code – if properly instrumented.</p>
<p>While Promises need to be instrumented manually, simple Promises can be easily wrapped with a helper function instead of writing the instrumentation manually. I created these wrappers so I can instrument any Promise with either a transaction or a span:</p>
<div data-language="typescript"><pre><code><span>const</span> withTransaction <span>=</span> <span>&lt;</span><span>P</span><span>&gt;</span><span>(</span>
  promise<span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span><span>,</span>
  context<span>:</span> TransactionContext
<span>)</span><span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>context<span>)</span><span>;</span>

  <span>return</span> promise
    <span>.</span><span>catch</span><span>(</span><span>(</span>e<span>)</span> <span>=&gt;</span> <span>{</span>
      transaction<span>.</span><span>setStatus</span><span>(</span>SpanStatus<span>.</span>UnknownError<span>)</span><span>;</span>

      <span>throw</span> e<span>;</span>
    <span>}</span><span>)</span>
    <span>.</span><span>finally</span><span>(</span><span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
      transaction<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<div data-language="typescript"><pre><code><span>const</span> withSpan <span>=</span> <span>&lt;</span><span>P</span><span>&gt;</span><span>(</span>
  promise<span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span><span>,</span>
  context<span>:</span> SpanContext<span>,</span>
  <span>/** Leave empty to use scope transaction */</span>
  _transaction<span>?</span><span>:</span> Transaction <span>|</span> <span>null</span>
<span>)</span><span>:</span> <span>Promise</span><span>&lt;</span><span>P</span><span>&gt;</span> <span>=&gt;</span> <span>{</span>
  <span>const</span> transaction <span>=</span>
    _transaction <span>??</span> Sentry<span>.</span><span>getCurrentHub</span><span>(</span><span>)</span><span>?.</span><span>getScope</span><span>(</span><span>)</span><span>?.</span><span>getTransaction</span><span>(</span><span>)</span><span>;</span>

  <span>const</span> span <span>=</span> transaction<span>?.</span><span>startChild</span><span>(</span>context<span>)</span><span>;</span>

  <span>return</span> promise
    <span>.</span><span>catch</span><span>(</span><span>(</span>e<span>)</span> <span>=&gt;</span> <span>{</span>
      span<span>?.</span><span>setStatus</span><span>(</span>SpanStatus<span>.</span>UnknownError<span>)</span><span>;</span>

      <span>throw</span> e<span>;</span>
    <span>}</span><span>)</span>
    <span>.</span><span>finally</span><span>(</span><span>(</span><span>)</span> <span>=&gt;</span> <span>{</span>
      span<span>?.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span></code></pre></div>
<p>Note that the third parameter of <code>withSpan</code> is optional. If you pass a transaction object, then the span will be attached to that transaction. If the parameter is omitted, then that span will be attached to the active transaction on the current Sentry scope. This allows <code>withSpan</code> to easily integrate with the included routing instrumentation that automatically attaches route change transactions to the scope.</p>
<p>This is how we use <code>withSpan</code> inside Tour: by instrumenting each call to the client individually, our venue client can either make an API call or load from the local device cache.</p>
<div data-language="typescript"><pre><code><span>fetchVenues</span><span>(</span>venueIds<span>:</span> <span>string</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>Promise</span><span>&lt;</span>Venue<span>&gt;</span> <span>{</span>
    <span>return</span> <span>Promise</span><span>.</span><span>all</span><span>(</span>
      venueIds<span>.</span><span>map</span><span>(</span>
        <span>withSpan</span><span>(</span>venueClient<span>.</span><span>getVenue</span><span>(</span>venueId<span>)</span><span>,</span> <span>{</span>
          description<span>:</span> <span><span>`</span><span>venueId: </span><span><span>${</span>venueId<span>}</span></span><span>`</span></span><span>,</span>
          op<span>:</span> <span>&#34;get.foursquare&#34;</span><span>,</span>
        <span>}</span><span>)</span>
      <span>)</span>
    <span>)</span><span>;</span>
  <span>}</span></code></pre></div>
<p>Below is how they’re rendered in Sentry:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=460&amp;fm=webp 460w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=919&amp;fm=webp 919w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=1838&amp;fm=webp 1838w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=460 460w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=919 919w,
https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png?w=1838 1838w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="react-native-tour2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6qxSYLG5amvZIUvNoCT8Vn/b836ac3a77b7135bba282625ba1bb1d1/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h3 id="transaction-hub"><a href="#transaction-hub" aria-label="transaction hub permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Transaction Hub</h3>
<p>As I instrumented my code, I discovered that passing transaction objects around quickly became tedious. That’s because Tour’s code is designed in a functional way: pure functions take some parameters, read the global Redux state, perform some computation, and then finally output something. This made it extremely difficult to instrument at first, which is what led me on the path to creating what I’ve dubbed the transaction hub.</p>
<p>The transaction hub is a simple exported object declared in a file where all of the active transactions live. Each type of transaction has a unique <code>op</code> (operation), such as <code>&#34;trip.initialize&#34;</code>. And by using this <code>op</code> field, we were able to add only a few  lines of code to each function in order to start or stop a transaction anywhere in the app.</p>
<p>For example, for the op <code>&#34;trip.initialize&#34;</code> we would start a transaction when the initialization of the trip screen begins. And then, once the screen is mounted, we could easily finish it on the transaction hub.</p>
<div data-language="typescript"><pre><code><span>const</span> transactionHub <span>=</span> <span>{</span>
  transactions<span>:</span> <span>[</span><span>]</span><span>,</span>
  <span>startTransaction</span><span>(</span>transactionContext<span>:</span> TransactionContext<span>)</span><span>:</span> Transaction <span>{</span>
    <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>transactionContext<span>)</span><span>;</span>

    <span>this</span><span>.</span>transactions<span>.</span><span>push</span><span>(</span>transaction<span>)</span><span>;</span>

    <span>return</span> transaction<span>;</span>
  <span>}</span><span>,</span>
  <span>finishTransaction</span><span>(</span>op<span>:</span> <span>string</span><span>)</span><span>:</span> Transaction<span>[</span><span>]</span> <span>{</span>
    <span>// Find all the transactions with this op.</span>
    <span>const</span> selectedTransactions <span>=</span> <span>this</span><span>.</span>transactions<span>.</span><span>filter</span><span>(</span>t <span>=&gt;</span> t<span>.</span>op <span>==</span> op<span>)</span><span>;</span>

    <span>// Finish each of the transactions with this op.</span>
    selectedTransactions<span>.</span><span>forEach</span><span>(</span>t <span>=&gt;</span> t<span>.</span><span>finish</span><span>(</span><span>)</span><span>)</span><span>;</span>

    <span>// Remove these finished transactions from the transaction hub</span>
    <span>this</span><span>.</span>transactions <span>=</span> <span>this</span><span>.</span>transactions<span>.</span><span>filter</span><span>(</span>t <span>=&gt;</span> t<span>.</span>op <span>!=</span> op<span>)</span><span>;</span>

    <span>return</span> selectedTransactions<span>;</span>
  <span>}</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>;</span></code></pre></div>
<p>So when you want to start a transaction on the hub, you would call:</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>startTransaction</span><span>(</span><span>{</span>
	op<span>:</span> <span>&#39;trip.initialize&#39;</span><span>,</span>
	name<span>:</span> <span>&#39;Initialize New Trip&#39;</span><span>,</span>
	tags<span>:</span> <span>{</span>
		tripId
	<span>}</span><span>,</span>
	trimEnd<span>:</span> <span>true</span>
<span>}</span><span>)</span><span>;</span></code></pre></div>
<p>And when you want to finish the transaction, you can call: <code>finishTransaction</code> like below from anywhere in the app.</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>finishTransaction</span><span>(</span><span>&#39;trip.initialize&#39;</span><span>)</span></code></pre></div>
<h4 id="instrumenting-our-real-time-data-flow"><a href="#instrumenting-our-real-time-data-flow" aria-label="instrumenting our real time data flow permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Instrumenting our real-time data flow</h4>
<p>We took the transaction hub a little further.</p>
<p>In Tour, we have a data flow where any changes that you make on the UI are first computed on the app itself before being updated on the Firestore document update. Only then does the change come back down to be stored in our persist store, before being shown on the UI. The UI only accesses data from the persist store and never listens to Firestore directly. This is done to ensure that this flow is done in real time, meaning the result is the same whether you are online or offline.</p>
<p>This too seemed like a difficult task to instrument, but with a little playing around we found a way forward by extending the transaction hub. Here, each change gets assigned a timestamp as well as a list of all the documents it changes. Then we have the hub listen for the event that triggers the document update until it finally finishes the transaction.</p>
<div data-language="typescript"><pre><code><span>// Simplified and shortened example</span>
<span>const</span> transactionHub <span>=</span> <span>{</span>
  transactions<span>:</span> <span>[</span><span>]</span><span>,</span>
  <span>// A map of spans by their write ids</span>
  spansByWriteId<span>:</span> <span>{</span><span>}</span><span>,</span>
  <span>startWriteTransaction</span><span>(</span>
    writes<span>:</span> <span>{</span>
      id<span>:</span> <span>string</span><span>;</span>
      name<span>:</span> <span>string</span><span>;</span>
    <span>}</span><span>[</span><span>]</span><span>,</span>
    name<span>?</span><span>:</span> <span>string</span>
  <span>)</span><span>:</span> Transaction <span>{</span>
    <span>const</span> transactionContext <span>=</span> <span>{</span>
      op<span>:</span> <span>&#34;db.write&#34;</span><span>,</span>
      name<span>:</span> name <span>??</span> <span>&#34;Database Write&#34;</span><span>,</span>
    <span>}</span><span>;</span>

    <span>// Start the parent transaction</span>
    <span>const</span> transaction <span>=</span> Sentry<span>.</span><span>startTransaction</span><span>(</span>transactionContext<span>)</span><span>;</span>

    <span>// Create spans for each write operation</span>
    writes<span>.</span><span>forEach</span><span>(</span><span>(</span>write<span>)</span> <span>=&gt;</span> <span>{</span>
        <span>// We store each span to the map via ID so we can find them again</span>
      <span>this</span><span>.</span>spansByWriteId<span>[</span>write<span>.</span>id<span>]</span> <span>=</span> transaction<span>.</span><span>startChild</span><span>(</span><span>{</span>
        op<span>:</span> <span>&#34;db.doc.write&#34;</span><span>,</span>
        data<span>:</span> <span>{</span>
          id<span>:</span> write<span>.</span>id<span>,</span>
        <span>}</span><span>,</span>
        description<span>:</span> write<span>.</span>name<span>,</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>

    <span>this</span><span>.</span>transactions<span>.</span><span>push</span><span>(</span>transaction<span>)</span><span>;</span>

    <span>return</span> transaction<span>;</span>
  <span>}</span><span>,</span>
  <span>onDbUpdate</span><span>(</span>id<span>:</span> <span>string</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>const</span> span <span>=</span> <span>this</span><span>.</span>spansByWriteId<span>[</span>id<span>]</span><span>;</span>
    <span>if</span> <span>(</span>span<span>)</span> <span>{</span>
      <span>// Finish the write span</span>
      span<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>

      <span>if</span> <span>(</span>
        <span>// Check that each child span has been finished</span>
        span<span>.</span>transaction <span>&amp;&amp;</span>
        span<span>.</span>transaction<span>.</span>spanRecorder<span>.</span>spans
          <span>.</span><span>filter</span><span>(</span><span>(</span>s<span>)</span> <span>=&gt;</span> s <span>!==</span> span<span>.</span>transaction<span>)</span>
          <span>.</span><span>every</span><span>(</span><span>(</span>s<span>)</span> <span>=&gt;</span> s<span>.</span>endTimestamp<span>)</span>
      <span>)</span> <span>{</span>
        <span>// If every child is finished, we finish the transaction</span>
        span<span>.</span>transaction<span>.</span><span>finish</span><span>(</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>;</span></code></pre></div>
<p>By calling <code>startWriteTransaction</code> when we write to Firestore and calling <code>onDbUpdate</code> when the write comes in, this allows us to engage what I believe to be the most important transaction in the whole app. Although it looks simple, it allows us to essentially gauge User Misery every time a user makes a change to their trip plans!</p>
<div data-language="typescript"><pre><code><span>// Changes will be made to the trip and user document</span>
transactionHub<span>.</span><span>startWriteTransaction</span><span>(</span><span>[</span>
  <span>{</span>
    id<span>:</span> <span><span>`</span><span><span>${</span>trip<span>.</span>id<span>}</span></span><span>-</span><span><span>${</span>trip<span>.</span>metadata<span>.</span>timestamp<span>}</span></span><span>`</span></span><span>,</span>
    name<span>:</span> <span>&#34;Trip&#34;</span><span>,</span>
  <span>}</span><span>,</span>
  <span>{</span>
    id<span>:</span> <span><span>`</span><span><span>${</span>uid<span>}</span></span><span>-</span><span><span>${</span>userUpdateTimestamp<span>}</span></span><span>`</span></span><span>,</span>
    name<span>:</span> <span>&#34;User&#34;</span><span>,</span>
  <span>}</span><span>,</span>
<span>]</span><span>)</span><span>;</span></code></pre></div>
<p>And when the changes get updated on the database listener, you would call <code>onDbUpdate</code> like so:</p>
<div data-language="typescript"><pre><code>transactionHub<span>.</span><span>onDbUpdate</span><span>(</span><span><span>`</span><span><span>${</span>trip<span>.</span>id<span>}</span></span><span>-</span><span><span>${</span>trip<span>.</span>timestamp<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
transactionHub<span>.</span><span>onDbUpdate</span><span>(</span><span><span>`</span><span><span>${</span>uid<span>}</span></span><span>-</span><span><span>${</span>userData<span>.</span>updateTimestamp<span>}</span></span><span>`</span></span><span>)</span><span>;</span></code></pre></div>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=457&amp;fm=webp 457w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=914&amp;fm=webp 914w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=1828&amp;fm=webp 1828w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=457 457w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=914 914w,
https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png?w=1828 1828w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="react-native-tour1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/CbfkzxXV4X7wPnVhto7Of/87772ae8e4163dddd798b2d5049a0f7f/image1.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>I am still experimenting with <a href="https://docs.sentry.io/product/performance/">Performance</a> and am sure there will be a lot more recipes and techniques for instrumenting apps. I hope you’ll be able to come up with some cool ones as well!</p>
<p>To start using Sentry with React Native, configure the <a href="https://docs.sentry.io/platforms/react-native/">SDK</a>. And if you’re new to Sentry, you can try it for <a href="https://sentry.io/orgredirect/try-business/">free</a> today.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QZG2yK5t2KOOr5Lg1981n/750ca39d8375c5069928798263243b32/performance2-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Issue Detail Performance Improvements</title>
      <link>https://blog.sentry.io/2021/03/09/issue-detail-performance-improvements/</link>
      <description>One of Sentry’s most-trafficked pages is our issue details page, as it helps our customers understand the root cause of an error. For those…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>One of Sentry’s most-trafficked pages is our issue details page, as it helps our customers understand the root cause of an error. For those of you who are new to Sentry, we define an issue as a group of similar events. And to render these issue details, we need to fetch a significant amount of data from these events — counts, charts, and other metadata.</p>
<p>There are two components to this page: latest event, and summary statistics. And the problem we faced was that the page was loading the latest event only after loading the summary statistics, creating response times of more than a second.</p>
<p>We had no idea what — or why — this was happening. First, we worked toward solving the what. Using <a href="https://sentry.io/for/performance/">Performance</a>, we noticed that the latest event loaded only after the summary statistics loaded; that is, we could see the second request could only start after the first request had finished.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=419&amp;fm=webp 419w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=838&amp;fm=webp 838w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=1676&amp;fm=webp 1676w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=419 419w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=838 838w,
https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png?w=1676 1676w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues1" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7ne4bx9Rvnth02fm4I5kHO/d9bf251b8d69fcd61835b160ce484eab/image3.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Next, the why: looking into the issue page’s <a href="https://docs.sentry.io/platforms/javascript/guides/react/performance/">React</a> component tree, we noticed that the latest event component was a child of the summary component.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=1310&amp;fm=webp 1310w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=2620&amp;fm=webp 2620w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=5240&amp;fm=webp 5240w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=1310 1310w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=2620 2620w,
https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg?w=5240 5240w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues2" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7x4sYNyd8k1Xg6mMlka19D/b97788c7b811d37fa0452325a98ea985/Group_1.jpg" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Although we were fetching the data for the latest event in its component, because this component could only begin rendering after its parent has fully rendered (which in turn is blocked by the parent request), the two requests were not parallelized.</p>
<p>Our fix was to begin loading data from both endpoints higher in the component tree, allowing us to parallelize both requests. Then we passed the result down so each component can render as soon as its data became available.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=381&amp;fm=webp 381w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=762&amp;fm=webp 762w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=1524&amp;fm=webp 1524w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=381 381w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=762 762w,
https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png?w=1524 1524w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues3" title="" src="https://images.ctfassets.net/em6l9zw4tzag/698SmrDiQIZO6jfNdfNqND/78ef343dd2c82ff8b9c23ddaaffa7247/image4.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>After the fix, the issue page’s P75 response time dropped by about 1 second:</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=500&amp;fm=webp 500w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1000&amp;fm=webp 1000w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1999&amp;fm=webp 1999w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=500 500w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1000 1000w,
https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png?w=1999 1999w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="dogfood-issues4" title="" src="https://images.ctfassets.net/em6l9zw4tzag/5sH13CrBVSRdBkjw6KfLYT/9efd71304acdc77f2b2bfb0ddbac747c/image2.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a> </p>
<p>You can’t fix what you can’t see. And because Performance gave us the visibility into the two requests that needed to be parallelized (but weren’t), we were able to find the quickest path to a solution — and a faster page for our customers.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/5DvBhuWGl7g4caBuyrcdZ8/eb5e36b71e43ba5a4c73a9beed8d5886/meta-dogfooding.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>With Flutter and Sentry, You Can Put All Your Eggs in One Repo</title>
      <link>https://blog.sentry.io/2021/03/03/with-flutter-and-sentry-you-can-put-all-your-eggs-in-one-repo/</link>
      <description>This month we’re updating several of our mobile SDKs. You might think it’s madness… Mobile March Madness. First up is Flutter.  It’s fair to…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>This month we’re updating several of our mobile SDKs. You might think it’s madness… Mobile March Madness. First up is <a href="https://docs.sentry.io/platforms/flutter/">Flutter</a>.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=630&amp;fm=webp 630w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=1260&amp;fm=webp 1260w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=2520&amp;fm=webp 2520w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=630 630w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=1260 1260w,
https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png?w=2520 2520w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="march-flutter-sentry-hero" title="" src="https://images.ctfassets.net/em6l9zw4tzag/sFsfT6lrJjyMU0thYuzWN/5586b920caa0413e2edd952bb52016b1/hero-flutter.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>It’s fair to say that all of us have had a bad mobile experience which frustrated us enough to warrant switching apps. Getting the experience right requires a lot of work due to the variety of OSes, screen sizes and orientations. Using Sentry’s new <a href="https://sentry.io/for/flutter/">Flutter</a> SDK gives you the advantage of being able to fix issues once and have the solution work everywhere.</p>
<p>Built upon the original Dart SDK written by <a href="https://flutter.dev/">Google</a>, we expanded functionality to report device and operating system details, native crashes, session data, and version adoption so developers can quickly determine if a release is successful or if it should be rolled back. Our new Flutter SDK makes it easy for developers to segment issues to determine which users are adopting the latest versions or encountering crashes or in the not-so-ideal case, both.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=750&amp;fm=webp 750w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=1500&amp;fm=webp 1500w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=750 750w,
https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png?w=1500 1500w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter releases" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6YyfaWK8Jv9X9IJncf6MO3/5f52635ca374852e7936098415e081e4/flutter-releases.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<blockquote>
<p>Flutter provides customers with a fast path to building beautiful apps for multiple platforms from a single codebase. But one big challenge for mobile app developers is dealing with all the dependencies that can affect an application’s uptime and performance across multiple platforms. Thanks to Sentry’s Flutter support, developers now have access to a great suite of tools for monitoring and maintaining their app.</p>
</blockquote>
<p>  <em><a href="https://www.linkedin.com/in/timsneath/">Tim Sneath</a>, Director of PM, Flutter &amp; Dart, Google</em></p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=375&amp;fm=webp 375w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=750&amp;fm=webp 750w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=1500&amp;fm=webp 1500w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=375 375w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=750 750w,
https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png?w=1500 1500w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter release" title="" src="https://images.ctfassets.net/em6l9zw4tzag/7Eii97hwq1NRYfsLwXMVwG/32e7b32bd2385d4bd8d7dadf2ff4e4e6/flutter-release.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p><a href="https://docs.sentry.io/platforms/flutter/configuration/">Configuring Sentry takes only a few minutes</a>. Get the SDK from pub.dev by adding the following to your <code>pubspec.yaml</code>:</p>
<div data-language="yaml"><pre><code><span>dependencies</span><span>:</span>
  <span>sentry_flutter</span><span>:</span> ^4.0.0</code></pre></div>
<p>Import Sentry and initialize it:</p>
<div data-language="dart"><pre><code><span>import</span> <span>&#39;package:flutter/widgets.dart&#39;</span><span>;</span>
<span>import</span> <span>&#39;package:sentry_flutter/sentry_flutter.dart&#39;</span><span>;</span>

<span>Future</span><span><span>&lt;</span><span>void</span><span>&gt;</span></span> <span>main</span><span>(</span><span>)</span> <span>async</span> <span>{</span>
  <span>await</span> <span>SentryFlutter</span><span>.</span><span>init</span><span>(</span>
    <span>(</span>options<span>)</span> <span>=</span><span>&gt;</span> options<span>.</span>dsn <span>=</span> <span>&#39;https://&lt;key&gt;@sentry.io/&lt;project&gt;&#39;</span><span>,</span>
    appRunner<span>:</span> <span>(</span><span>)</span> <span>=</span><span>&gt;</span> <span>runApp</span><span>(</span><span>MyApp</span><span>(</span><span>)</span><span>)</span><span>,</span>
  <span>)</span><span>;</span>
<span>}</span></code></pre></div>
<p>Additionally, developers can monitor Dart/Flutter and Native SDKs (Kotlin, Java for Android, Swift, Objective-C for iOS, and C/C++ for both platforms). We also symbolicate Flutter apps, capture UI events and HTTP requests as <a href="https://docs.sentry.io/platforms/flutter/enriching-events/breadcrumbs/">breadcrumbs</a> so that you can follow the trail for each user. In the off chance a user’s device goes offline or a fatal crash occurs, Sentry provides <a href="https://docs.sentry.io/platforms/flutter/">offline caching and fatal crash support</a>. In these scenarios, Sentry will be able to send the reports once the device comes online again, so you won’t miss these valuable reports.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350&amp;fm=webp 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700&amp;fm=webp 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400&amp;fm=webp 1400w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=350 350w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=700 700w,
https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png?w=1400 1400w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="flutter breadcrumbs" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WTqG78UzT8mShSOS6u1BC/839bc818f068dec7ed366124a4f95afd/flutter-breadcrumbs.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>With our event query tool, <a href="https://docs.sentry.io/product/discover-queries/">Discover</a>, you can understand how an issue impacts users across any segment (device type, os, region, URL, etc). Set up an <a href="https://docs.sentry.io/product/sentry-basics/guides/alert-notifications/metric-alerts/">alert</a> based on this saved query so that you are notified when that issue develops again.</p>
<p>We don’t just tell you that there is a crash; we tie the user experience back to the impact, so you can focus on building what’s next great thing rather than debugging hard-to-find bugs.</p>
<p>With Sentry’s SDK for Flutter, you can get notified of errors that occur on Android, iOS, or native platforms in real-time:</p>
<ul>
<li><strong>See</strong> errors and crashes that were introduced in every release</li>
<li><strong>Solve</strong> issues quickly with full context: contextualized stack traces, events that lead to the error, client, hardware information, and the very commit that introduced the error.</li>
<li><strong>Learn</strong> and analyze event data to reduce regressions and ultimately improve user adoption and engagement</li>
</ul>
<p>To start using Sentry with Flutter, <a href="https://docs.sentry.io/platforms/flutter/">configure the SDK</a>, or if you’re new to Sentry, <a href="https://sentry.io/orgredirect/try-business/">try it for free today</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/4xbaRVirQWySg79cIRblqV/2b3ebe7ec7eb5fb18a570c557ca36228/MarchMadness_Desktop__1_.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Wed, 03 Mar 2021 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Python 3 Compatibility: What To Know</title>
      <link>https://blog.sentry.io/2021/02/25/python-3-compatibility-what-to-know/</link>
      <description>Compatibility is a moving target. This is particularly true for backwards-incompatible languages such as Python 3, as it forces developers…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>Compatibility is a moving target. This is particularly true for backwards-incompatible languages such as Python 3, as it forces developers to shoehorn Python 3 features into Python 2 via backporting.
We’ve recently updated our platform to be compatible with Python 3.6. Here’s what that means: </p>
<h2 id="retiring-python-2"><a href="#retiring-python-2" aria-label="retiring python 2 permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Retiring Python 2</h2>
<p>Running a supported version of Python is important, since unsupported versions are not only more likely to have vulnerabilities, but won’t receive patches on detected vulnerabilities. With 3.6, you’re able to integrate third-party dependencies that rely on Python 3, including running the latest Celery and Django dependencies.</p>
<h2 id="type-hinting"><a href="#type-hinting" aria-label="type hinting permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Type Hinting</h2>
<p>Introduced at Python 3.5, type hinting is a formal solution that indicates different values within your Python code. The labels produced by type hinting help the interpreter better understand your code’s behavior. With it, you can uniformly annotate the types of Python functions, arguments, and variables across various tools.</p>
<h2 id="laying-the-groundwork-for-38"><a href="#laying-the-groundwork-for-38" aria-label="laying the groundwork for 38 permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Laying the Groundwork for 3.8</h2>
<p>Sentry ingests an astronomical number of events per second. Due to our large volume of event ingestion, our Kafka consumers are getting close to the maximum number of events they can process. A typical way to continue to scale here is to use multithreading to allow each consumer to make use of multiple cores on their machine. Unfortunately, due to Python’s Global Interpreter Lock, we are unable to do this in Python as we’re primarily CPU constrained.</p>
<p>Another option is to use multiprocessing. This can work, but comes with higher overheads for sharing data between processes. In previous versions of Python these costs would likely have been prohibitive, but thankfully, there’s a solution on the horizon, as Python’s multiprocessing.shared_memory module provides a mechanism for efficiently sharing binary data between processes with minimal overhead. While this solution is in 3.8, supporting Python 3.6 gets us one step closer to our goal here.</p>
</div><div>
<p>It’s undeniable that Python 3.6 will make Sentry more efficient. After Instagram implemented their 3.6 patch, they noticed a 12 percent CPU savings on Django, and 30 percent memory savings on Celery. But more than any memory savings or new integration, this update represents another step in making Sentry that much more compatible for your needs.</p>
<p>If you’re a person who finds Python compatibility interesting, we’re a company that will find you interesting. Check out our open roles <a href="https://sentry.io/careers/">here</a>.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/71Q0i090p06pCDqQsj2aH2/34949d67c8f1020955219c8aa07bd26e/python-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 25 Feb 2021 09:00:00 +0000</pubDate>
    </item>
    <item>
      <title>3 Ways to Improve JavaScript Applications</title>
      <link>https://blog.sentry.io/2021/02/23/3-ways-to-improve-javascript-applications/</link>
      <description>In January we brought Release Health to JavaScript. This month we’ve been thinking about the overall experience for JavaScript developers…</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In January we brought Release Health to JavaScript. This month we’ve been thinking about the overall experience for JavaScript developers, some could call it JavaScript Jebruary. </p>
<p>Think back to your last frustrating experience. It was probably caused by slow page loads or getting dizzy from staring at the ever-ending spinner.</p>
<p><a href="https://www.websitebuilderexpert.com/building-websites/website-load-time-statistics/#:~:text=One%20analysis%20of%205%20million,and%2027.3%20seconds%20on%20mobile.&amp;text=Indeed%2C%20mobile%20minutes%20accounted%20for,in%20the%20US%20in%202019.">One survey</a> showed that the average desktop load time on a <strong>webpage was 10.3 seconds</strong> and on <strong>mobile, it was 27.3 seconds.</strong> These load times are just long enough for your customer to swipe to a competitor.</p>
<h2 id="does-it-really-work-if-its-too-slow"><a href="#does-it-really-work-if-its-too-slow" aria-label="does it really work if its too slow permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Does it really work, if it’s too slow?</h2>
<p>So we <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">introduced performance monitoring</a>. Performance makes it simple to troubleshoot any slowness your customers are experiencing. Our performance offering supports the most widely used <a href="http://sentry.io/for/javascript">JavaScript libraries</a>. Now developers can see which part of the application is causing the bottleneck.</p>
<p>Additionally, we added support for <a href="https://blog.sentry.io/2020/11/10/sentry-fall-semester-web-vitals-101">Google Web Vitals</a> to help you understand how your users are actually experiencing your site. We give you real measurements vs the synthetic lab data that others provide. We measure things like First Paint, First Contentful Paint and Largest Contentful Paint, contextualized with variable network speed, browser, device, region, and so forth. We also provide a metric called <a href="https://docs.sentry.io/product/performance/metrics/#user-misery">user misery</a>, which tells you the number of unique users who are frustrated based on the Apdex threshold level.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=661&amp;fm=webp 661w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=1322&amp;fm=webp 1322w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=2644&amp;fm=webp 2644w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=661 661w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=1322 1322w,
https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png?w=2644 2644w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="performance-waterfall" title="" src="https://images.ctfassets.net/em6l9zw4tzag/6WWGbQ13OMdKcly8WR4SSR/93f4a6c88e3a2c619d9624c52ebf0079/Screen_Shot_2021-02-22_at_9.39.48_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<h2 id="release-health---so-you-can-rest-easy"><a href="#release-health---so-you-can-rest-easy" aria-label="release health   so you can rest easy permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Release Health - so you can rest easy</h2>
<p>Ask a developer what they are most terrified of? They’ll probably say a lot, but <a href="https://sentry.io/integrations/pagerduty/">PagerDuty</a> rotation is definitely on the list.  Why? No one wants to be woken up in the middle of the night so that they can deal with a production issue. <a href="https://blog.sentry.io/2021/01/27/track-session-data-with-sentry-for-javascript">Release Health</a> for JavaScript gets ahead of the panic and answers “did anything break?” immediately.</p>
<p><a href="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png" target="_blank" rel="noopener">
          <span>
        <span>
          <picture>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=345&amp;fm=webp 345w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=690&amp;fm=webp 690w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=1380&amp;fm=webp 1380w" sizes="(max-width: 800px) 100vw, 800px" type="image/webp"/>
          <source srcset="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=345 345w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=690 690w,
https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png?w=1380 1380w" sizes="(max-width: 800px) 100vw, 800px"/>
          <img alt="releases_homepage" title="" src="https://images.ctfassets.net/em6l9zw4tzag/3pdsnHcvc5tIWD8nl6ZJUz/5a7b5818f258910fd620e4d0e8920826/Screen_Shot_2021-01-06_at_11.27.47_AM.png" loading="lazy"/>
        </picture>
        </span>
      </span>
        </a></p>
<p>Release Health provides an early warning system to let dev teams know how a release is performing the moment changes are pushed to production. Sentry reports on crash-free sessions, crash-free users, version adoption, and new issues introduced in the release. That way, you can use production data to determine whether to roll back the release immediately or deal with minor issues in the following sprint. Either way, the unexpected won’t jolt you awake and you can rest easy knowing the only thing waiting for you in the morning is 2-day old coffee — you should really make a new pot. While that’s brewing, check out this handy video on getting started with Release Health.</p>
<h2 id="continuous-improvement-with-discover"><a href="#continuous-improvement-with-discover" aria-label="continuous improvement with discover permalink"><svg viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <path d="M10.8786797,6.05025253 L15,1.92893219 C16.7967298,0.132202428 19.6206785,-0.0112433245 21.5814287,1.49859493 C21.7515515,1.62959474 21.9151761,1.77304049 22.0710678,1.92893219 C24.0236893,3.88155365 24.0236893,7.04737854 22.0710678,9 L17.9497475,13.1213203 C17.5592232,13.5118446 16.9260582,13.5118446 16.5355339,13.1213203 C16.1450096,12.7307961 16.1450096,12.0976311 16.5355339,11.7071068 L20.6568542,7.58578644 C21.8284271,6.41421356 21.8284271,4.51471863 20.6568542,3.34314575 C19.4852814,2.17157288 17.5857864,2.17157288 16.4142136,3.34314575 L12.2928932,7.46446609 C11.9023689,7.85499039 11.2692039,7.85499039 10.8786797,7.46446609 C10.4881554,7.0739418 10.4881554,6.44077682 10.8786797,6.05025253 Z M13.1213203,17.9497475 L9,22.0710678 C7.04737854,24.0236893 3.88155365,24.0236893 1.92893219,22.0710678 C-0.0236892706,20.1184464 -0.0236892706,16.9526215 1.92893219,15 L6.05025253,10.8786797 C6.44077682,10.4881554 7.0739418,10.4881554 7.46446609,10.8786797 C7.85499039,11.2692039 7.85499039,11.9023689 7.46446609,12.2928932 L3.34314575,16.4142136 C2.17157288,17.5857864 2.17157288,19.4852814 3.34314575,20.6568542 C4.51471863,21.8284271 6.41421356,21.8284271 7.58578644,20.6568542 L11.7071068,16.5355339 C12.0976311,16.1450096 12.7307961,16.1450096 13.1213203,16.5355339 C13.5118446,16.9260582 13.5118446,17.5592232 13.1213203,17.9497475 Z M4.75735931,17.8284271 L17.8284271,4.75735931 C18.2189514,4.36683502 18.8521164,4.36683502 19.2426407,4.75735931 C19.633165,5.1478836 19.633165,5.78104858 19.2426407,6.17157288 L6.17157288,19.2426407 C5.78104858,19.633165 5.1478836,19.633165 4.75735931,19.2426407 C4.36683502,18.8521164 4.36683502,18.2189514 4.75735931,17.8284271 Z" fill="currentColor">
  </path>
</svg>
</a>Continuous Improvement with Discover</h2>
<p>Finally, how can developers use Sentry to maintain or improve the quality of their code? Our insights tool, <a href="https://blog.sentry.io/2021/02/09/asking-the-right-query-with-discover/">Discover</a> lets you easily query across all your projects to track release trends, errors by any category, or even performance event data over time. There are tons of other <a href="https://blog.sentry.io/2020/03/03/new-ways-to-uncover-trends-with-discover/">use cases</a>, but we’ll let you discover those yourself. Curious about how others are using Discover? Read about how our friends at <a href="https://sentry.io/customers/eventbrite/">Eventbrite</a> are using it to achieve continuous delivery or watch a recap of our <a href="https://www.youtube.com/watch?v=0vDAWwE4754">February workshop</a> with guest, Vincent Budrovich, Sr. Software Engineer at Eventbrite. Vincent outlines how his team uses Release Health to support thousands of creators listing digital events on their platform. It’s entertaining. A little <a href="https://sentry.io/customers/disney-plus/">WandaVision</a> mixed with a Sentry Release Health workshop sounds like a fantastic evening.</p>
<p>JavaScript isn’t the only language we’re investing in. Stay tuned next month for updates to our mobile SDKS. </p>
<p>Try Sentry for <a href="https://sentry.io/orgredirect/try-business/">free</a> or write to <a href="mailto:sales@sentry.io">sales@sentry.io</a> to get started.</p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/QNyDZrRH1O0r2PE4b4kpw/c5bc8568557f1279a511bd3f5a8561da/jebruarySocial-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Tue, 23 Feb 2021 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>Series D: Moving Faster and (Not) Breaking Things</title>
      <link>https://blog.sentry.io/2021/02/18/series-d-moving-faster-and-not-breaking-things/</link>
      <description>Can Sentaurs become unicorns? Apparently so.</description>
      <content:encoded><![CDATA[<div id="readability-page-1" class="page"><div><p>In the software lifecycle, you need to know what is affecting the customer from your frontend code to your underlying infrastructure. However, no one to date has solved for monitoring the health of software code vs. systems at the level that we have taken on — or at the scale that our customers require, as everything from grocery shopping to gaming is now digital. </p>
<p>Scale in this context also means the ability to grow with our customer’s technical organization, as business priorities shift, new products are launched, and technical ownership disperses across geographies. Scaling our product innovation, our global teams, and our ecosystem of developer communities and partners is exactly why we’re excited to move even faster with <a href="https://www.businesswire.com/news/home/20210218005662/en/Sentry-Raises-60-Million-in-Series-D-Funding-at-1-Billion-Valuation">our latest fundraise of $60 million</a>. </p>
<p>We know consumers see breakages and interruptions every day — whether it’s streaming a movie from their favorite digital service or trading the latest cryptocoin. As a father and husband, my family reminds me daily that the magnitude of these problems is only growing.
While the consumer does not differentiate between poorly written code or bugs, developers must get to the root cause to solve these problems thoroughly. This means clearly seeing what matters through excellently calibrated code monitoring, solving the issue (whether it’s a mobile crash or a website performance issue), and perhaps most importantly, learning what exactly can be improved as a team. </p>
<p>Since we <a href="https://blog.sentry.io/2020/07/14/see-slow-faster-with-performance-monitoring">introduced Performance Monitoring</a> to our Application Monitoring suite last July, we’ve resoundingly heard developers validate the exact gap we sought out to address: an ever-increasing need for code observability. Given the exponential pace at which code is changing now, observability of systems is simply incomplete without code observability. From frontend to backend, developers now need a broader view of their application health to deliver a seamless product experience. This means that the number of vectors across their code that a product owner cares about has also multiplied: errors, performance, releases, sessions, APIs, customer segments, customer elements and more. In the coming years, I foresee our solutions to these challenges becoming no-brainers in the developer workflow and experience.</p>
<p>Solving these problems are core to Sentry’s roots and will continue to be our primary focus with this round of investment over the next few years. We could not be more excited for the journey. </p></div></div>]]></content:encoded>
      <enclosure url="https://images.ctfassets.net/em6l9zw4tzag/51x5hPcFb2nVBHqmoVroXZ/0eef5d83dee261b3527abd0f613c2d93/centauricorn-meta.jpg" length="0" type="image/jpeg"></enclosure>
      <pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>