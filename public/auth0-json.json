{
  "version": "https://jsonfeed.org/version/1",
  "title": "Auth0",
  "home_page_url": "https://auth0.com/blog/rss.xml",
  "items": [
    {
      "id": "",
      "url": "https://auth0.com/blog/auth0-marketplace-now-offers-netid-solution/",
      "title": "Auth0 Marketplace Now Offers netID Solution",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cstrong\u003eLondon/Montabaur, Germany – August 17, 2021 –\u003c/strong\u003e \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAuth0\u003c/a\u003e, the modern identity platform, and the \u003ca href=\"https://enid.foundation/en/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eEuropean netID Foundation\u003c/a\u003e today announced the availability of netID Single Sign-On on \u003ca href=\"https://marketplace.auth0.com/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAuth0 Marketplace\u003c/a\u003e, a catalog of trusted technology integrations to extend the functionality of Auth0’s identity management platform. \u003c/p\u003e\u003cp\u003e\u003ca href=\"https://marketplace.auth0.com/integrations/netid-single-sign-on\" target=\"_blank\" rel=\"noreferrer noopener\"\u003enetID\u003c/a\u003e enables users to sign into apps and websites with their netID account and to decide privately and transparently which data to share. As an independent European identity provider with more than 38 million active user accounts in Germany, netID provides the necessary infrastructure for \u003ca href=\"https://auth0.com/blog/what-is-single-sign-on-a-non-developer-s-guide/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSingle Sign-On (SSO)\u003c/a\u003e but does not store any user data itself. Users can manage the consents they’ve given at any time in netID’s Privacy Center.\u003c/p\u003e\u003cp\u003e“Whether in finance, e-commerce, or online publishing, engaging with users in an all trusted and transparent way is key to driving success. We are excited about the partnership with Auth0 and the availability of the netID Single Sign-On integration. Joint customers can now seamlessly integrate our product and offer users a European alternative to U.S. social login providers,” says Achim Schlosser, board member, and chief technology officer of the European netID Foundation.\u003c/p\u003e\u003cp\u003e“After speaking with many customers, we have identified the integrations that matter to them. The availability of netID on Auth0 Marketplace is a direct response to the growing need for privacy-enhancing technologies in Europe and part of our continued commitment to international markets,” said Cassio Sampaio, SVP of Product at Auth0. “We are thrilled to have netID as a vetted and valuable vendor in Auth0 Marketplace.” \u003c/p\u003e\u003cp\u003eAuth0 reviews partner integration functionality and makes available integrations that are easy to discover and integrate for customers. Partners can participate in the growing demand for digital identity solutions and increase their visibility as part of the Auth0 Marketplace and can learn more here: \u003ca href=\"https://auth0.com/partners\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehttps://auth0.com/partners\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://auth0.com/blog/okta-acquisition-announcement/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAuth0, recently acquired by Okta\u003c/a\u003e, provides a modern identity platform that helps organizations meet the security, privacy, and convenience needs of their users. Please visit \u003ca href=\"https://auth0.com/identity-os\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAuth0 identity OS\u003c/a\u003e to learn more.\u003c/p\u003e\u003ch2 id=\"About-the-European-netID-Foundation\"\u003eAbout the European netID Foundation\u003c/h2\u003e\u003cp\u003eThe European netID Foundation was established in March 2018 by Mediengruppe RTL Deutschland, ProSiebenSat.1, and United Internet with its brands WEB.DE and GMX. With an independent market solution, the foundation supports Internet offerings from all industry sectors with the implementation of the new European data protection law and, for this purpose, has created the open login standard netID. The initiators of the foundation together reach around 50 million unique users every month and together have more than 38 million active accounts. The foundation is explicitly open to additional partners and initiatives. Further information is available at \u003ca href=\"https://auth0.com/blog/auth0-marketplace-now-offers-netid-solution/www.enid.eu\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ewww.enid.eu\u003c/a\u003e.\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"About-Auth0\"\u003eAbout Auth0 \u003c/h2\u003e\u003cp\u003eAuth0’s modern approach to identity enables organizations to provide secure access to any application, for any user. The Auth0 platform is a highly customizable identity operating system that is as simple as development teams want and as flexible as they need. Safeguarding billions of login transactions each month, Auth0 delivers convenience, privacy, and security so customers can focus on innovation. For more information, visit \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://auth0.com\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003ch3 id=\"Media-Contacts\"\u003eMedia Contacts\u003c/h3\u003e\u003cp\u003eAlexandra Roszkowski\u003cbr/\u003e\u003ca href=\"mailto:presse@enid.eu\" target=\"_blank\" rel=\"noreferrer noopener\"\u003epresse@enid.eu\u003c/a\u003e\u003cbr/\u003e+49 162 25 27-188\u003cbr/\u003e\u003c/p\u003e\u003cp\u003eSarah Konarski \u0026amp; Nele Mascher\u003cbr/\u003eFinn Partners for Auth0, DACH\u003cbr/\u003e\u003ca href=\"mailto:auth0de@finnpartners.com\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eauth0de@finnpartners.com\u003c/a\u003e\u003cbr/\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Auth0 integrates netID to support customer privacy needs in Europe",
      "image": "https://images.ctfassets.net/23aumh6u8s0i/43MPYfmrpOsj5kCbpAVd5n/b85a1ac23a977be6568255f91b80aea9/Announcement2.png",
      "date_published": "2021-08-17T01:20:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/the-7-most-common-types-of-cybersecurity-attacks-in-2021/",
      "title": "The 7 Most Common Types of Cybersecurity Attacks in 2021",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eWith more people working remotely or online post-2020, the \u003ca href=\"https://thehill.com/policy/cybersecurity/493198-fbi-sees-spike-in-cyber-crime-reports-during-coronavirus-pandemic\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eFBI reports\u003c/a\u003e that cybercriminals are quadrupling the number of cyberattacks they use to disrupt online activities. Research also shows the impact to organizations and their users from a single successful cyberattack is growing each year.\u003c/p\u003e\u003cp\u003eFor example, in 2017, nearly \u003ca href=\"https://www.statista.com/statistics/273550/data-breaches-recorded-in-the-united-states-by-number-of-breaches-and-records-exposed/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003cem\u003e197 million records\u003c/em\u003e\u003c/a\u003e were exposed due to data breaches. In 2020, that number \u003ca href=\"https://pages.riskbasedsecurity.com/hubfs/Reports/2020/2020%20Year%20End%20Data%20Breach%20QuickView%20Report.pdf\" target=\"_blank\" rel=\"noreferrer noopener\"\u003egrew to 37 billion\u003c/a\u003e, even though the overall number of data breaches had decreased. And IBM reports that the costs are growing for organizations that fall victim to these attacks in countries like the United States, where the average cost of a data breach grew from $7.91M to $8.64M between \u003ca href=\"https://www.ibm.com/downloads/cas/861MNWN2\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e2018\u003c/a\u003e and \u003ca href=\"https://www.ibm.com/security/data-breach\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e2020\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eMany of the methods cybercriminals use to breach organizations rely on human error. Even your sharpest employees can become your greatest weakness if they click on a malicious link without realizing it. However, other cyberattacks exploit gaps in your \u003ca href=\"https://auth0.com/blog/what-is-data-security/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003edata security\u003c/a\u003e efforts to gain access to sensitive data.\u003c/p\u003e\u003cp\u003eBelow are seven of the most common cyberattacks your organization will face in 2021 and the ways to protect yourself against the data breaches they have the potential to cause.\u003c/p\u003e\u003ch2 id=\"1--Malware-Attacks\"\u003e1. Malware Attacks\u003c/h2\u003e\u003cp\u003eMalware refers to many different types of malicious software designed to infiltrate, spy on, or create a backdoor and control an organization’s systems or data. This includes ransomware, worms, trojans, adware, and spyware. \u003ca href=\"https://monstercloud.com/blog/2020/03/23/coronavirus-alert-ransomware-attacks-up-by-800/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eExperts report\u003c/a\u003e that malware usage is up almost 800% since early 2020.\u003c/p\u003e\u003cp\u003eMalware has the potential to cause major data breaches and severely disrupt business operations. Microsoft was the victim of a major ransomware attack, where WannaCry \u003ca href=\"https://en.wikipedia.org/wiki/WannaCry_ransomware_attack\" target=\"_blank\" rel=\"noreferrer noopener\"\u003etook advantage of a weak spot in their operating system\u003c/a\u003e and displayed the following message to banks, health care providers, manufacturers, and other businesses across the globe:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/1eCk2eoRxo2dlqfakT2rLF/3d36517813cea24b63b795f7fe3a256c/Uploaded_from_The_7_Most_Common_Types_of_Cybersecurity_Attacks_in_2021\" alt=\"image.png\"/\u003e\n\u003c/p\u003e\u003cp\u003e\u003ci\u003e\u003ca href=\"https://blog.malwarebytes.com/cybercrime/2017/05/wanacrypt0r-ransomware-hits-it-big-just-before-the-weekend/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSource\u003c/a\u003e\u003c/i\u003e\u003c/p\u003e\u003cp\u003eTo regain access to their computers, along with any files that hadn’t been backed up, businesses had to pay a ransom to the creators of the WannaCry program in \u003ca href=\"https://bitcoin.org/en/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eBitcoin\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eMalware is typically downloaded unwittingly by clicking a malicious link or by tricking a user into thinking they\u0026#39;re downloading something legitimate when they’re not.\u003c/p\u003e\u003ch3 id=\"How-to-Protect-Against-Malware-Attacks\"\u003eHow to Protect Against Malware Attacks\u003c/h3\u003e\u003cp\u003eTeaching your employees how to spot suspicious links and pop-ups that could contain malware will help reduce the chance that it could infect your systems.\u003c/p\u003e\u003cp\u003eAdditional ways to protect against malware include keeping your operating systems up to date to ensure known security gaps are patched and using anti-virus software. For example, the \u003ca href=\"https://www.wired.com/story/equifax-breach-no-excuse/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eEquifax\u003c/a\u003e data breach could have been prevented had a known patch been installed in time.\u003c/p\u003e\u003ch2 id=\"2--Phishing-Attacks\"\u003e2. Phishing Attacks\u003c/h2\u003e\u003cp\u003ePhishing attacks attempt to steal information from users or trick them into downloading malware by sending malicious emails or text messages (SMS) that look like real requests but are, in fact, a Scam. Here’s a Dropbox email asking users to verify their email address that’s actually a phishing attack:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/2ISbM89J8qjqwVy4kUpgOf/a1b52597302c386ee8381bfd6f6948d9/Uploaded_from_The_7_Most_Common_Types_of_Cybersecurity_Attacks_in_2021\" alt=\"image.png\"/\u003e \n\u003c/p\u003e\u003cp\u003e\u003ci\u003e\u003ca href=\"https://www.bankinfosecurity.com/locky-returns-via-spam-dropbox-themed-phishing-attacks-a-10250\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSource\u003c/a\u003e\u003c/i\u003e\u003c/p\u003e\u003cp\u003eAccording to \u003ca href=\"https://enterprise.verizon.com/resources/reports/dbir/2020/results-and-analysis/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eVerizon’s 2020 Data Breach Investigations Report\u003c/a\u003e, phishing attacks are the most common cause of data breaches globally and have been the root cause of notable instances of cybercrime in the last decade.\u003c/p\u003e\u003cp\u003eThe cybercriminals who breached the AP News Twitter account and falsely \u003ca href=\"https://www.bbc.com/news/world-us-canada-21508660\" target=\"_blank\" rel=\"noreferrer noopener\"\u003etweeted\u003c/a\u003e that the White House was under attack used a targeted phishing attack (spear-phishing) to gain access to the account, as did the bad actors who leaked sensitive emails from Hillary Clinton’s campaign chairman \u003ca href=\"https://www.cbsnews.com/news/the-phishing-email-that-hacked-the-account-of-john-podesta/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ebefore the 2016 election\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"How-to-Protect-Against-Phishing-Attacks\"\u003eHow to Protect Against Phishing Attacks\u003c/h3\u003e\u003cp\u003eThe best way to protect your organization against phishing attacks is to educate your employees on how to spot a questionable email or text message. The training programs below can help you do this:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cem\u003eDigital Defense’s\u003c/em\u003e \u003ca href=\"https://www.digitaldefense.com/professional-services/secured-training/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003cem\u003eSecurED training program\u003c/em\u003e\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003cem\u003eInspired eLearning’s\u003c/em\u003e \u003ca href=\"https://inspiredelearning.com/security-awareness/awareness-c-suite/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003cem\u003eSecurity Awareness\u003c/em\u003e\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eAdditionally, CSO has compiled a list of resources that can help you train your teams to spot phishing attacks \u003ca href=\"https://www.csoonline.com/article/3225471/please-dont-send-me-to-cybersecurity-training.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"3--Distributed-Denial-of-Service-Attacks\"\u003e3. Distributed Denial of Service Attacks\u003c/h2\u003e\u003cp\u003eDistributed denial of service (DDoS) attacks disrupt the traffic to a website, application, server, service, or network by overwhelming it with a flood of traffic from compromised computer networks (\u003ca href=\"https://usa.kaspersky.com/resource-center/threats/botnet-attacks\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ebotnets\u003c/a\u003e) that prevents real users from accessing it. In 2018, GitHub experienced the largest DDoS attack ever when it was hit with 1.35 terabits of traffic per second and was \u003ca href=\"https://www.wired.com/story/github-ddos-memcached/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eoffline for almost 20 minutes as a result\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eDDoS attacks are common and increased by 50% in 2020 compared to 2019, with a large surge occurring in early 2020 during the pandemic, according to security company \u003ca href=\"https://securelist.com/ddos-attacks-in-q3-2020/99171/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eKaspersky\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"How-to-Protect-Against-DDoS-Attacks\"\u003eHow to Protect Against DDoS Attacks\u003c/h3\u003e\u003cp\u003eDDoS attacks are tricky to identify because they’re often hard to distinguish from legitimate traffic. Some \u003ca href=\"https://www.cloudflare.com/learning/ddos/what-is-a-ddos-attack/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003emethods of protecting against DDoS attacks\u003c/a\u003e include blocking all traffic for a short period of time, rate-limiting traffic to a website, using a web application firewall to detect suspicious traffic patterns, or scattering traffic across a network of servers to reduce the attack’s impact.\u003c/p\u003e\u003ch2 id=\"4--Man-in-the-Middle-Attacks\"\u003e4. Man-in-the-Middle Attacks\u003c/h2\u003e\u003cp\u003eMan-in-the-middle (MitM) attacks are when bad actors spy on or intercept communication between you and your users or employees. MitM attacks are most commonly used to steal personal or company information or to redirect that information to another destination or in espionage situations, such as when \u003ca href=\"https://www.theguardian.com/world/2018/oct/04/how-russian-spies-bungled-cyber-attack-on-weapons-watchdog\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eRussian hackers\u003c/a\u003e attempted to breach the Organisation for the Prohibition of Chemical Weapons (OPCW).\u003c/p\u003e\u003cp\u003eMitM attacks are \u003ca href=\"https://www.csoonline.com/article/3340117/what-is-a-man-in-the-middle-attack-how-mitm-attacks-work-and-how-to-prevent-them.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003enot the most common cyberattack\u003c/a\u003e because many of the same objectives can be achieved using malware. However, MitM attacks do present a threat for organizations because they’re often hard to spot and because \u003ca href=\"https://www.businesswire.com/news/home/20201215005287/en/Upwork-Study-Finds-22-of-American-Workforce-Will-Be-Remote-by-2025\" target=\"_blank\" rel=\"noreferrer noopener\"\u003emore employees are working remotely\u003c/a\u003e post-2020.\u003c/p\u003e\u003cp\u003eFor example, fake WiFi networks are \u003ca href=\"https://hackernoon.com/a-hacker-intercepted-your-wifi-traffic-stole-your-contacts-passwords-financial-data-heres-how-4fc0df9ff152\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eeasy to deploy\u003c/a\u003e in public places like coffee shops where remote employees often work. People often connect to these networks without realizing it, allowing bad actors to spy on them while they use the network.\u003c/p\u003e\u003ch3 id=\"How-to-Protect-Against-MitM-Attacks\"\u003eHow to Protect Against MitM Attacks\u003c/h3\u003e\u003cp\u003eEnd-to-end encryption protocols like \u003ca href=\"https://www.cloudflare.com/learning/ssl/transport-layer-security-tls/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eTransport Layer Security\u003c/a\u003e (TLS) are the best way to protect against MitM attacks. Additionally, requiring your employees to use a VPN to access company networks over public WiFi will ensure that any information shared during their session remains private, regardless of whether the network belongs to a bad actor or if their coffee shop’s WiFi is simply unsecured.\u003c/p\u003e\u003ch2 id=\"5--Credential-Stuffing-Attacks\"\u003e5. Credential Stuffing Attacks\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://auth0.com/blog/what-is-credential-stuffing/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eCredential stuffing\u003c/a\u003e is a type of brute-force cyber-attack where bad actors use stolen usernames and passwords from one data breach to access user accounts at another organization.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/1WPDZfXKzHLheBp0XbP2em/6769d8d365597a77b9de207e48c303d8/Uploaded_from_The_7_Most_Common_Types_of_Cybersecurity_Attacks_in_2021\" alt=\"image.png\"/\u003e\u003c/p\u003e\u003cp\u003eCredential stuffing is possible because, statistically, \u003ca href=\"https://services.google.com/fh/files/blogs/google_security_infographic.pdf\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e65% of all people\u003c/a\u003e reuse the same password across multiple accounts. As a result, credential stuffing attacks are one of the \u003ca href=\"https://enterprise.verizon.com/resources/reports/dbir/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003emost common\u003c/a\u003e causes of data breaches globally.\u003c/p\u003e\u003ch3 id=\"How-to-Protect-Against-Credential-Stuffing-Attacks\"\u003eHow to Protect Against Credential Stuffing Attacks\u003c/h3\u003e\u003cp\u003eThe best way to protect against credential stuffing attacks is by either implementing \u003ca href=\"https://auth0.com/passwordless/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003epasswordless authentication\u003c/a\u003e or \u003ca href=\"https://auth0.com/multifactor-authentication\" target=\"_blank\" rel=\"noreferrer noopener\"\u003emulti-factor authentication\u003c/a\u003e (MFA). Passwordless authentication prevents bad actors from using stolen credentials by eliminating them altogether, while MFA requires bad actors to verify their identity in one or more ways in addition to the stolen credentials they’re using to log in.\u003c/p\u003e\u003ch2 id=\"6--Password-Spraying-Attacks\"\u003e6. Password Spraying Attacks\u003c/h2\u003e\u003cp\u003ePassword spraying is also a type of brute-force attack where bad actors attempt to guess a user’s password from a list of common passwords like “123456” or “password.”\u003c/p\u003e\u003cp\u003eLike credential stuffing, password spraying is quite common. For example, Verizon’s 2020 Data Breach Report showed that over \u003ca href=\"https://enterprise.verizon.com/content/verizonenterprise/us/en/index/resources/reports/2020-data-breach-investigations-report.pdf\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e80% of all hacking-related data breaches\u003c/a\u003e involved brute-force methods like password spraying.\u003c/p\u003e\u003ch3 id=\"How-to-Protect-Against-Password-Spraying-Attacks\"\u003eHow to Protect Against Password Spraying Attacks\u003c/h3\u003e\u003cp\u003ePassword spraying attacks can be prevented by using passwordless authentication or MFA, just like credential stuffing attacks can be. However, you can also reduce the risk and impact of a data breach via password spraying by following the \u003ca href=\"https://auth0.com/blog/dont-pass-on-the-new-nist-password-guidelines/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eNIST Password Guidelines\u003c/a\u003e, which are considered the best password standards in the world.\u003c/p\u003e\u003ch2 id=\"7--Mobile-Device-Attacks\"\u003e7. Mobile Device Attacks\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://www.t-mobile.com/content/dam/tfb/pdf/T-Mobile-for-Business-2020-Workplace-Mobility-Report.pdf?icid=TFB_TMO_P_TFBFTRWRKS_7LCBNVDVYBXY27WF321599\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMany organizations are working to increase the mobility\u003c/a\u003e of their workforce because it improves operational efficiency and productivity. However, cybercriminals are well aware of this fact and are targeting mobile devices more frequently \u003ca href=\"https://www.zdnet.com/article/mobile-malware-attacks-are-booming-in-2019-these-are-the-most-common-threats/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eyear\u003c/a\u003e over \u003ca href=\"https://www.mcafee.com/content/dam/consumer/en-us/docs/2020-Mobile-Threat-Report.pdf\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eyear\u003c/a\u003e with a variety of attacks on this list, which puts organizations at risk for a data breach through more devices than before.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://blog.lookout.com/lookout-trident-pegasus-enterprise-discovery\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eThe Pegasus attack\u003c/a\u003e on Apple’s iOS software is a prime example. Pegasus infected iPhones through phishing text messages that asked recipients to click on a link inside the text message. Clicking the link triggered the installation of spyware capable of monitoring people through their camera and microphone. And once infected, users had their login credentials stolen from WhatsApp, Gmail, and other sensitive communication applications.\u003c/p\u003e\u003ch3 id=\"How-to-Protect-Against-Mobile-Device-Attacks\"\u003eHow to Protect Against Mobile Device Attacks\u003c/h3\u003e\u003cp\u003eProtecting your organization against mobile security threats requires a strong enterprise mobility management (EMM) program, as well as mobile device management (MDM) tools that help you protect any company data that may be on your employees’ personal or work devices. Identity and access management tools like multi-factor authentication can also help secure any work applications that contain sensitive information from unauthorized access.\u003c/p\u003e\u003ch2 id=\"Create-Additional-Layers-of-Security-at-the-Login-Stage\"\u003eCreate Additional Layers of Security at the Login Stage\u003c/h2\u003e\u003cp\u003eThe impact of many cyberattacks on this list (as well as \u003ca href=\"https://www.google.com/url?q=https://auth0.com/resources/whitepapers/state-of-security-identity-report\u0026amp;sa=D\u0026amp;source=editors\u0026amp;ust=1624045583510000\u0026amp;usg=AOvVaw0jtWJoRiARLi1pwCySdu1J\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eothers that many companies face\u003c/a\u003e) can be mitigated or prevented with strong authentication protocols.\u003c/p\u003e\u003cp\u003eFirst and foremost, this means good password policies and sound employee education. However, taking the next step to \u003ca href=\"https://www.google.com/url?q=https://auth0.com/login-security\u0026amp;sa=D\u0026amp;source=editors\u0026amp;ust=1624045583512000\u0026amp;usg=AOvVaw2FeIurZ9Qr026LNUW7RDFZ\" target=\"_blank\" rel=\"noreferrer noopener\"\u003esecure login procedures\u003c/a\u003e with security functionality like multi-factor authentication, \u003ca href=\"https://auth0.com/docs/attack-protection/brute-force-protection\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ebrute-force protection\u003c/a\u003e, or passwordless authentication can add a new dimension of safety to your system.\u003c/p\u003e\u003cp\u003eAuth0 makes it easy to build secure authentication for the right people without compromising on user experience — \u003ca href=\"https://auth0.com/resources/videos/platform-introduction-video-2020\" target=\"_blank\" rel=\"noreferrer noopener\"\u003elearn more about Auth0’s platform here\u003c/a\u003e.\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"About-Auth0\"\u003eAbout Auth0 \u003c/h2\u003e\u003cp\u003eAuth0’s modern approach to identity enables organizations to provide secure access to any application, for any user. The Auth0 platform is a highly customizable identity operating system that is as simple as development teams want and as flexible as they need. Safeguarding billions of login transactions each month, Auth0 delivers convenience, privacy, and security so customers can focus on innovation. For more information, visit \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://auth0.com\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Learn which cybersecurity tactics and tools will help you combat today's common cyberattacks.",
      "date_published": "2021-08-16T15:44:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/async-await-in-swift/",
      "title": "Async Await in Swift",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eThis year, WWDC came with a bunch of new features and updates. Maybe one of the most expected was the introduction of the new concurrency system by using async/await syntax. This is a huge improvement in the way that we write asynchronous code. \u003c/p\u003e\u003ch2 id=\"Before-Async-Await\"\u003eBefore Async/Await\u003c/h2\u003e\u003cp\u003eImagine that we are working on an app for a grocery store and, we want to display its list of products. We are probably going to have something like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e_\u003c/span\u003e completion\u003cspan\u003e:\u003c/span\u003e @\u003cspan\u003eescaping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eVoid\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003evar\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nfetchProducts \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eweak\u003c/span\u003e \u003cspan\u003eself\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e products \u003cspan\u003ein\u003c/span\u003e\n    \u003cspan\u003eguard\u003c/span\u003e \u003cspan\u003elet\u003c/span\u003e strongSelf \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eself\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n    strongSelf\u003cspan\u003e.\u003c/span\u003eproducts\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eappend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003econtentsOf\u003cspan\u003e:\u003c/span\u003e products\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eA pretty standard and well-known code using completion blocks. Now suppose that the grocery store has, once in a while, some kind of offers for some products (e.g., \u0026#34;Take 2, pay 1\u0026#34;). And, we want to hold a list with these offers. Let\u0026#39;s adjust our code by creating a new function to retrieve a String with the promotion text, given a specific product.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e_\u003c/span\u003e completion\u003cspan\u003e:\u003c/span\u003e @\u003cspan\u003eescaping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eVoid\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003egetOffer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003efor\u003c/span\u003e product\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eInt\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e @\u003cspan\u003eescaping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eVoid\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003etypealias\u003c/span\u003e \u003cspan\u003eProductOffer\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eproductId\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eInt\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e offer\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003evar\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003evar\u003c/span\u003e offers \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProductOffer\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\nfetchProducts \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eweak\u003c/span\u003e \u003cspan\u003eself\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e products \u003cspan\u003ein\u003c/span\u003e\n    \u003cspan\u003eguard\u003c/span\u003e \u003cspan\u003elet\u003c/span\u003e strongSelf \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eself\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003efor\u003c/span\u003e product \u003cspan\u003ein\u003c/span\u003e products \u003cspan\u003e{\u003c/span\u003e\n        strongSelf\u003cspan\u003e.\u003c/span\u003eproducts\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eappend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eproduct\u003cspan\u003e)\u003c/span\u003e\n\n        \u003cspan\u003egetOffer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003efor\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e product\u003cspan\u003e.\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eweak\u003c/span\u003e \u003cspan\u003eself\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e offerText \u003cspan\u003ein\u003c/span\u003e\n            \u003cspan\u003eguard\u003c/span\u003e \u003cspan\u003elet\u003c/span\u003e strongSelf \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eself\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n            \u003cspan\u003elet\u003c/span\u003e productOffer \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eProductOffer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eproductId\u003cspan\u003e:\u003c/span\u003e product\u003cspan\u003e.\u003c/span\u003eid\u003cspan\u003e,\u003c/span\u003e offer\u003cspan\u003e:\u003c/span\u003e offerText\u003cspan\u003e)\u003c/span\u003e\n            strongSelf\u003cspan\u003e.\u003c/span\u003eoffers\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eappend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eproductOffer\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe only have two nested closures for a simple feature, and you can see that our code starts to get a little messed up.\u003c/p\u003e\u003ch2 id=\"Async-Await\"\u003eAsync/Await\u003c/h2\u003e\u003cp\u003eFrom Swift 5.5 onwards, we can start using async/await functions to write asynchronous code without using completion handlers to returns values. Instead, we are allowed to return the values in the return object directly.\u003c/p\u003e\u003cp\u003eTo mark a function as asynchronous, we only have to put the keyword \u003cstrong\u003easync\u003c/strong\u003e before the return type.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e async \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003egetOffer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003efor\u003c/span\u003e product\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eInt\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e async \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis is much easier and simple to read, but the best part comes from the caller\u0026#39;s side. When we want to use the result of a function marked as \u003cstrong\u003easync,\u003c/strong\u003e we need to make sure that its execution is already completed. To make this possible, we need to write the \u003cstrong\u003eawait\u003c/strong\u003e keyword in front of the function call. By doing this, the current execution will be paused until the result is available for its use.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003elet\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003efor\u003c/span\u003e product \u003cspan\u003ein\u003c/span\u003e products \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003elet\u003c/span\u003e offerText \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003egetOffer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003efor\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e product\u003cspan\u003e.\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003eofferText\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eisEmpty\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003elet\u003c/span\u003e productOffer \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eProductOffer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eproductId\u003cspan\u003e:\u003c/span\u003e product\u003cspan\u003e.\u003c/span\u003eid\u003cspan\u003e,\u003c/span\u003e offer\u003cspan\u003e:\u003c/span\u003e offerText\u003cspan\u003e)\u003c/span\u003e\n        offers\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eappend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eproductOffer\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAlthough, if we want to execute other tasks while the async function is being executed, we should put the keyword \u003cstrong\u003easync\u003c/strong\u003e in front of the variable (or let) declaration. In this case, the \u003cstrong\u003eawait\u003c/strong\u003e keyword will need to be placed in front of the variable (or let) where we are accessing the result of the async function.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003easync \u003cspan\u003elet\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\n\u003cspan\u003e// Do some work\u003c/span\u003e\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\n\u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eawait products\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"Parallel-Asynchronous-Functions\"\u003eParallel Asynchronous Functions\u003c/h3\u003e\u003cp\u003eNow imagine that in our app, we want to fetch products by category—for example, just the frozen products. Let\u0026#39;s go ahead and make the adjustments to our code.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eenum\u003c/span\u003e \u003cspan\u003eProductCategory\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003ecase\u003c/span\u003e frozen\n    \u003cspan\u003ecase\u003c/span\u003e meat\n    \u003cspan\u003ecase\u003c/span\u003e vegetables\n    \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efromCategory category\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eProductCategory\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e async \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003elet\u003c/span\u003e frozenProducts \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efromCategory\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003efrozen\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003elet\u003c/span\u003e meatProducts \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efromCategory\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003emeat\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003elet\u003c/span\u003e vegetablesProducts \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efromCategory\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003evegetals\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis is ok, but the code will run in serial mode,  which means that we won\u0026#39;t start fetching the meat products until the frozen products are retrieved. Same for the vegetables. Remember, we write the \u003cstrong\u003eawait\u003c/strong\u003e keyword if we want to pause our execution until the function completes its work. However, in this particular scenario, we could start fetching the three categories at the same time, running in parallel.\u003c/p\u003e\u003cp\u003eIn order to accomplish this, we need to write the \u003cstrong\u003easync\u003c/strong\u003e keyword in front of the var (or let) declaration and use the \u003cstrong\u003eawait\u003c/strong\u003e keyword when we want to use it.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003easync \u003cspan\u003elet\u003c/span\u003e frozenProducts \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efromCategory\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003efrozen\u003cspan\u003e)\u003c/span\u003e\nasync \u003cspan\u003elet\u003c/span\u003e meatProducts \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efromCategory\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003emeat\u003cspan\u003e)\u003c/span\u003e\nasync \u003cspan\u003elet\u003c/span\u003e vegetablesProducts \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003efromCategory\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003evegetables\u003cspan\u003e)\u003c/span\u003e \n\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\n\n\u003cspan\u003elet\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e await \u003cspan\u003e[\u003c/span\u003efrozenProducts\u003cspan\u003e,\u003c/span\u003e meatProducts\u003cspan\u003e,\u003c/span\u003e vegetablesProducts\u003cspan\u003e]\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"Error-handlers\"\u003eError handlers\u003c/h3\u003e\u003cp\u003eOur fetching functions might have some errors that make it impossible to return the expected data values. How do we handle this in our async/await context?\u003c/p\u003e\u003cp\u003eWe have a couple of options. The first one is to return the well-known Result object.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e async \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eResult\u003c/span\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eError\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003elet\u003c/span\u003e result \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003etry\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003eswitch\u003c/span\u003e result \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003ecase\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esuccess\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003elet\u003c/span\u003e products\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003e// Handle success\u003c/span\u003e\n    \u003cspan\u003ecase\u003c/span\u003e \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efailure\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003elet\u003c/span\u003e error\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003e// Handle error\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnother one is to use the try/catch approach.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e async \u003cspan\u003ethrows\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\n\u003cspan\u003edo\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003elet\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003etry\u003c/span\u003e await \u003cspan\u003efetchProducts\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003ecatch\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003e// Handle the error\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe main benefit that we had when using the Result type was to improve our completion handlers. In addition to that, we got a cleaner code at the moment we used the result, being able to switch between success and failure cases.\u003c/p\u003e\u003cp\u003eOn the other hand, the use of throw errors adds extra readability in the function\u0026#39;s definition because we only need to put the result type that the function will return. The errors handling is hidden in the function\u0026#39;s implementation.\u003c/p\u003e\u003ch3 id=\"Asynchronous-Sequences\"\u003eAsynchronous Sequences\u003c/h3\u003e\u003cp\u003eLet\u0026#39;s say that we have a requirement to load a list of products from some .csv file. A traditional way to do this is to load all the lines at once and then start processing them. But, what happens if we want to start doing some work as soon as we have one of the lines available? We can now do this using an asynchronous sequence.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003elet\u003c/span\u003e url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eURL\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003estring\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;http://www.grocery.com/products.csv\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003efor\u003c/span\u003e \u003cspan\u003etry\u003c/span\u003e await \u003cspan\u003ein\u003c/span\u003e url\u003cspan\u003e.\u003c/span\u003elines \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003e// Do some work\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eUsing this new feature also allows us to handle this particular case (reading a file) in a simpler way than before. You can check this \u003ca href=\"https://stackoverflow.com/questions/24581517/read-a-file-url-line-by-line-in-swift\" target=\"_blank\" rel=\"noreferrer noopener\"\u003estackoverflow discussion\u003c/a\u003e to see how we had to do this and see the advantages that this approach has over the previous one.\u003c/p\u003e\u003ch3 id=\"Async-Await-vs--Completion-Handlers\"\u003eAsync/Await vs. Completion Handlers\u003c/h3\u003e\u003cp\u003eAs we saw in the previous sections, the use of async/await syntax comes with a lot of improvements in contrast with using completion blocks. Let\u0026#39;s make a quick recap.\u003c/p\u003e\u003ch4 id=\"Advantages\"\u003eAdvantages\u003c/h4\u003e\u003cul\u003e\u003cli\u003eAvoid the Pyramid of Doom problem with nested closures\u003c/li\u003e\u003cli\u003eReduction of code\u003c/li\u003e\u003cli\u003eEasier to read\u003c/li\u003e\u003cli\u003eSafety. With async/await, a result is guaranteed, while completion blocks might or might not be called.\u003c/li\u003e\u003c/ul\u003e\u003ch4 id=\"Disadvantages\"\u003eDisadvantages\u003c/h4\u003e\u003cul\u003e\u003cli\u003eIt\u0026#39;s only available from Swift 5.5 and iOS 15 onwards.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"Actors\"\u003eActors\u003c/h2\u003e\u003cp\u003eTake a look at the following example, just a simple Order class in which we will be adding products and eventually make the checkout.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eOrder\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \n    \u003cspan\u003evar\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003evar\u003c/span\u003e finalPrice \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\n\n    \u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003eaddProduct\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e_\u003c/span\u003e product\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        products\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eappend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eproduct\u003cspan\u003e)\u003c/span\u003e\n        finalPrice \u003cspan\u003e+\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e product\u003cspan\u003e.\u003c/span\u003eprice\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf we are in a single-thread application, this code is just fine. But what happens if we have multiple threads that can access our order\u0026#39;s final price? \u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003eWe are on the product list and add some specific products to our order. The app will call the \u003cstrong\u003eaddProduct\u003c/strong\u003e function.\u003c/li\u003e\u003cli\u003eThe product is added to our order\u0026#39;s product list\u003c/li\u003e\u003cli\u003eBefore the final price gets updated, the user tries to checkout.\u003c/li\u003e\u003cli\u003eThe app will read the final price of our order\u003c/li\u003e\u003cli\u003eThe \u003cstrong\u003eaddProduct\u003c/strong\u003e function completes and updates the final price. But the user already checkout and paid less than they should.\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eThis problem is known as \u003ca href=\"https://en.wikipedia.org/wiki/Race_condition\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003cstrong\u003eData Races\u003c/strong\u003e\u003c/a\u003e when some particular resource could be accessed from multiple parts of the app\u0026#39;s code.\u003c/p\u003e\u003cp\u003eActors, also introduced in Swift 5.5 and iOS 15, resolve this problem for us. An Actor is basically like a class but with a few key differences that make them \u003cem\u003ethread-safe\u003c/em\u003e:\u003c/p\u003e\u003cul\u003e\u003cli\u003eOnly allow accessing their state by one task at a time\u003c/li\u003e\u003cli\u003eStored properties and functions can only be access from outside the Actor if the operation is performed asynchronously.\u003c/li\u003e\u003cli\u003eStored properties can\u0026#39;t be written from outside the Actor.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eOn the downside:\u003c/p\u003e\u003cul\u003e\u003cli\u003eActors do not support inheritance\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eYou can think about the Actors like a similar solution of the \u003ca href=\"https://en.wikipedia.org/wiki/Semaphore_(programming\" target=\"_blank\" rel=\"noreferrer noopener\"\u003esemaphores\u003c/a\u003e) concept.\u003c/p\u003e\u003cp\u003eTo create one, we just need to use the \u003cstrong\u003eactor\u003c/strong\u003e keyword.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eactor \u003cspan\u003eOrder\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \n    \u003cspan\u003evar\u003c/span\u003e products \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003evar\u003c/span\u003e finalPrice \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\n\n    \u003cspan\u003efunc\u003c/span\u003e \u003cspan\u003eaddProduct\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e_\u003c/span\u003e product\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eProduct\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        products\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eappend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eproduct\u003cspan\u003e)\u003c/span\u003e\n        finalPrice \u003cspan\u003e+\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003e product\u003cspan\u003e.\u003c/span\u003eprice\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAnd we can create an instance using the same initializer syntax as structures and classes. If we want to access the final price, we must do it using the keyword await (because outside the actor\u0026#39;s scope, we are only allowed to access the properties asynchronously).\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eawait order\u003cspan\u003e.\u003c/span\u003efinalPrice\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"Conclusion\"\u003eConclusion\u003c/h2\u003e\u003cp\u003eDefinitely \u003cstrong\u003easync/await\u003c/strong\u003e brings to the table an easier way to write asynchronous code, removing the need to use completion blocks. In addition, we get more readable and flexible code if our application starts scaling up. \u003c/p\u003e\u003cp\u003eHowever, the minimum iOS deployment target will be an entry barrier for most of us unless you start a project from scratch, in which case is highly recommended to wait until the official release of iOS 15 + Xcode 13 + Swift 5.5  to take full advantage of the new concurrency system.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "A guide to fully understand the new concurrency system in Swift.",
      "date_published": "2021-08-12T15:07:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/build-and-secure-an-api-with-spring-boot/",
      "title": "Build and Secure an API with Spring Boot and Kotlin",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cstrong\u003eTL;DR:\u003c/strong\u003e In this article, you’ll learn how to quickly build a RESTful API using the Spring Boot framework and the Kotlin programming language. You’ll then use Auth0 to secure the API so that only authorized parties can use its key functions. You can find the final code for the project developed throughout this article in \u003ca href=\"https://github.com/AccordionGuy/HotSauces\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ethis GitHub repository\u003c/a\u003e.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003e\u003cstrong\u003eLook for the 🌶 emoji if you’d like to skim through the content while focusing on the build and execution steps.\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"Spring-Framework--Spring-Boot--and-Kotlin--An-Overview\"\u003eSpring Framework, Spring Boot, and Kotlin: An Overview\u003c/h2\u003e\u003cp\u003eBefore we start building the project, let’s look at the frameworks and language you’ll use.\u003c/p\u003e\u003ch3 id=\"Spring-Framework\"\u003eSpring Framework\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/6WdgKiAbhNyVIQWDECzf48/fc4dd3f38700ba0f9a143bdaee8c9479/spring_icon.png\" alt=\"Spring Framework icon\"/\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://spring.io/projects/spring-framework\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSpring Framework\u003c/a\u003e, often shortened to just “Spring”, is a popular open source application framework for the Java platform. It’s built on the principle of \u003ca href=\"https://dzone.com/articles/understanding-inversion-of-control-and-dependency\" target=\"_blank\" rel=\"noreferrer noopener\"\u003einversion of control\u003c/a\u003e, whose name implies that control of a Spring application is the opposite of how program control works in traditional applications. Instead of your code directing the application and calling on functionality from a library, the framework directs the application and calls on functionality from your code.\u003c/p\u003e\u003cp\u003eThis approach makes it possible to write an application as a collection of components, with the connections between them maintained by Spring. Spring provides a lot of ready-built components called \u003cem\u003edependencies\u003c/em\u003e that provide functionality that applications commonly require. The end result is a system for building applications that are modular, flexible, quicker to write, and easy to maintain.\u003c/p\u003e\u003cp\u003eSpring is often described — especially by Java developers, who’ve grown used to working with unwieldy frameworks — as lightweight. It provides a set of built-in often-needed capabilities such as MVC, caching, messaging, security, and data access. It significantly reduces the amount of code you have to write and lets you focus on the functionality specific to your application.\u003c/p\u003e\u003cp\u003eWhile Spring is often used for web and server-based applications, it’s a general application framework and it can be used to write desktop and mobile applications as well.\u003c/p\u003e\u003ch3 id=\"Spring-Boot\"\u003eSpring Boot\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/17rXel2g1r2rxiGkpeHNSy/dd64d06b65c7e095b6bcdeffecbd0a9f/spring_boot_icon.png\" alt=\"Spring Boot icon\"/\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://spring.io/projects/spring-boot\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSpring Boot\u003c/a\u003e is a framework built on top of Spring that simplifies Spring development. It does this by enforcing an \u003ca href=\"https://www.quora.com/What-is-a-Opinionated-Framework\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eopinionated\u003c/a\u003e approach to Spring application development through \u003ca href=\"https://facilethings.com/blog/en/convention-over-configuration\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e“convention over configuration”\u003c/a\u003e, the use of default setups that applications are likely to use, and a standardized application structure created by a generator that goes by the decidedly “Web 2.0” name of \u003ca href=\"https://www.tiobe.com/tiobe-index/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSpring Initializr\u003c/a\u003e. Thanks to this “it just works” approach, it’s the fastest way to develop applications with the Spring framework.\u003c/p\u003e\u003ch3 id=\"Kotlin\"\u003eKotlin\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/1lE1Sn0pHAIa082QVEhJ0f/b4c6184a9387900f457d260d6e0aeb38/kotlin_icon.png\" alt=\"Kotlin icon\"/\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://kotlinlang.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eKotlin\u003c/a\u003e is part of the wave of programming languages that appeared in the 2010s, which includes \u003ca href=\"https://dart.dev/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eDart\u003c/a\u003e, \u003ca href=\"https://golang.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eGo\u003c/a\u003e, \u003ca href=\"https://www.rust-lang.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eRust\u003c/a\u003e, and \u003ca href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSwift\u003c/a\u003e. These languages have a number of common traits including their own takes on object-oriented programming from the lessons of the 1990s and functional programming from the lessons of the 2000s, inferred strong static typing, and meteoric rises in popularity (all of them are in \u003ca href=\"https://www.tiobe.com/tiobe-index/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eTIOBE’s index of popular programming languages\u003c/a\u003e, and all of them except Kotlin are in the top 20).\u003c/p\u003e\u003cp\u003eAs a programming language designed by \u003ca href=\"https://developer.apple.com/swift/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ea company that makes developer tools\u003c/a\u003e, Kotlin is unique in its origin. It was designed to be an \u003ca href=\"https://kotlinlang.org/docs/reference/comparison-to-java.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eimprovement on Java\u003c/a\u003e, with many of the language features of \u003ca href=\"https://www.scala-lang.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eScala\u003c/a\u003e (but faster compile times) and with the power and convenience that comes from interoperability with Java and the Java platform. It has grown to become the preferred language for Android app development; as of July 2021, \u003ca href=\"https://developer.android.com/kotlin/stories?linkId=94116374\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e80% of the top 1,000 apps in Google Play were written in Kotlin.\u003c/a\u003e According to JetBrains’ \u003ca href=\"https://www.jetbrains.com/lp/devecosystem-2020/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003cem\u003eState of Developer Ecosystem 2020\u003c/em\u003e report,\u003c/a\u003e Kotlin is also making serious inroads into web and enterprise development territory.\u003c/p\u003e\u003cp\u003eSince Spring and Spring Boot are based on the Java platform, you can use them to build applications using any JVM-based programming language, including Kotlin. If Java’s verbosity is bringing you down, or if you’re an Android developer who wants to write the back end for your app but don’t want to switch languages, Spring and Spring Boot development in Kotlin is for you!\u003c/p\u003e\u003ch2 id=\"What-You-ll-Build--A-Hot-Sauce-API\"\u003eWhat You’ll Build: A Hot Sauce API\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/5VZbuSuMi49Zp9x0bmAK7b/fdd5ca6bac1efdd66ce9e5984e62b0ae/a-hot-sauce-api.jpg\" alt=\"A Hot Sauce API (A tray of hot sauce bottles, viewed from above))\"/\u003e\u003c/p\u003e\u003cp\u003eYou’ll build an API that acts as a catalog of \u003ca href=\"https://en.wikipedia.org/wiki/Hot_sauce\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehot sauces\u003c/a\u003e. It will be a simple one, exposing a single resource named \u003cstrong\u003ehotsauces\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eThe API will provide endpoints for:\u003c/p\u003e\u003cul\u003e\u003cli\u003eConfirming that it is operational\u003c/li\u003e\u003cli\u003eGetting a list of all the hot sauces in the catalog\u003c/li\u003e\u003cli\u003eGetting the number of hot sauces in the catalog\u003c/li\u003e\u003cli\u003eAdding a hot sauce to the catalog\u003c/li\u003e\u003cli\u003eEditing any hot sauce in the catalog\u003c/li\u003e\u003cli\u003eDeleting a hot sauce from the catalog\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIn the first part of the project, you’ll build the API. Once built, you’ll secure it so that the endpoints for CRUD operations will require authentication. The endpoint for testing to see if the API is operational will remain public.\u003c/p\u003e\u003ch2 id=\"Prerequisites\"\u003ePrerequisites\u003c/h2\u003e\u003cp\u003eTo follow along with this article, you’ll need the following installed on your local machine:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003e\u003ca href=\"https://www.oracle.com/java/technologies/javase-jdk11-downloads.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eJDK 11\u003c/a\u003e\u003c/strong\u003e\u003c/li\u003e\u003cli\u003eYou’ll need some command-line tool for issuing HTTP requests. The examples in this article will use the following:\n\u003cul\u003e\u003cli\u003eFor macOS and Linux, the \u003ca href=\"https://curl.haxx.se/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ecurl\u003c/a\u003e command line tool\u003c/li\u003e\u003cli\u003eFor Windows, \u003ca href=\"https://docs.microsoft.com/en-us/powershell/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ePowerShell\u003c/a\u003e and its \u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eRestMethod\u003c/code\u003e and \u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eWebRequest\u003c/code\u003e \u003ca href=\"https://docs.microsoft.com/en-us/powershell/scripting/developer/cmdlet/cmdlet-overview?view=powershell-7.1\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ecmdlets\u003c/a\u003e.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003eYour favorite code editor\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eYou’ll also need internet access, as you’ll be using the Spring Initializr web page and the \u003ca href=\"https://gradle.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eGradle\u003c/a\u003e build tool, which goes online to download project dependencies.\u003c/p\u003e\u003ch2 id=\"Building-the-API\"\u003eBuilding the API\u003c/h2\u003e\u003ch3 id=\"Scaffolding-with-Spring-Initializr\"\u003eScaffolding with Spring Initializr\u003c/h3\u003e\u003cp\u003eThe preferred way to set up a new Spring Boot project is to use \u003cstrong\u003e\u003ca href=\"https://start.spring.io\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSpring Initializr\u003c/a\u003e\u003c/strong\u003e, a web application that generates a basic Spring Boot project, complete with all the necessary configurations, your choice of dependencies, and Gradle or Maven build files. It’s available online at \u003ca href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003estart.spring.io\u003c/a\u003e and built into the Ultimate Edition of \u003ca href=\"https://www.jetbrains.com/idea/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eIntelliJ IDEA\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eYou \u003cem\u003ecould\u003c/em\u003e create a new project manually using Spring Boot’s command-line interface, but Spring Initializr organizes its projects using a standardized directory layout for JVM-based projects. This makes your projects easier to maintain, and lets you focus on what your application actually \u003cem\u003edoes\u003c/em\u003e.\u003c/p\u003e\u003cp\u003e🌶 Point your favorite browser at the \u003ca href=\"https://start.spring.io/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSpring Initializr page\u003c/a\u003e:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/2Tay8vTcNWBA7HRyPUakuI/b2dbcee51217aff5aa7526ddc2d3724e/spring_initializr_blank.png\" alt=\"The Spring Initializr webpage\"/\u003e\u003c/p\u003e\u003cp\u003eHere’s how you should fill it out:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cem\u003eProject:\u003c/em\u003e Select \u003cstrong\u003eGradle Project\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eLanguage:\u003c/em\u003e Select \u003cstrong\u003eKotlin\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eSpring Boot:\u003c/em\u003e Select the latest stable version. At the time of writing, it’s version \u003cstrong\u003e2.5.3\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eProject Metadata:\u003c/em\u003e\n\u003cul\u003e\u003cli\u003e\u003cem\u003eGroup:\u003c/em\u003e This should be something that uniquely identifies yourself or your organization. Typically, you’d enter your domain name in reverse notation (for example, if your domain is \u003cstrong\u003eabc123.com\u003c/strong\u003e, enter \u003cstrong\u003ecom.abc123\u003c/strong\u003e. If you don’t have a domain name, just enter \u003cstrong\u003ecom.auth0\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eArtifact:\u003c/em\u003e This should be something that identifies the project. Enter \u003cstrong\u003ehotsauces\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eName:\u003c/em\u003e This will autofill based on what you entered for \u003cem\u003eArtifact\u003c/em\u003e; just use the value in this field.\u003c/li\u003e\u003cli\u003e\u003cem\u003eDescription:\u003c/em\u003e Enter \u003cstrong\u003eA Spring Boot/Auth0 API project\u003c/strong\u003e into this field.\u003c/li\u003e\u003cli\u003e\u003cem\u003ePackage name:\u003c/em\u003e This will autofill based on what you entered for \u003cem\u003eGroup\u003c/em\u003e and \u003cem\u003eArtifact\u003c/em\u003e; just use the value in this field.\u003c/li\u003e\u003cli\u003e\u003cem\u003ePackaging:\u003c/em\u003e Select \u003cstrong\u003eJar\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eJava:\u003c/em\u003e Select \u003cstrong\u003e11\u003c/strong\u003e.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003cem\u003eDependencies:\u003c/em\u003e Click the \u003cstrong\u003eADD DEPENDENCIES...\u003c/strong\u003e button and choose the following:\n\u003cul\u003e\u003cli\u003e\u003cstrong\u003eSpring Boot DevTools\u003c/strong\u003e: A set of convenient tools for development.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eSpring Web\u003c/strong\u003e: Provides a web server and facilities for building RESTful web applications and APIs.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eSpring Data JPA\u003c/strong\u003e: Makes the process of building a data access layer almost trivial.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eH2 Database\u003c/strong\u003e: This project will use the \u003ca href=\"https://www.h2database.com/html/main.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eH2\u003c/a\u003e in-memory database.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eSpring Boot Actuator\u003c/strong\u003e: Adds a handy collection of diagnostic tools to a Spring Boot project.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eOnce filled out, the form should look like this:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/6kuJ07yRPE8vXdHRerx2ve/76fcdd422c6a1a9bdd8350277b53e40c/spring_initializr_filled.png\" alt=\"The Spring Initializr webpage, filled out with this project\u0026#39;s details\"/\u003e\u003c/p\u003e\u003cp\u003e🌶 With the form filled out, click the \u003cstrong\u003eGENERATE\u003c/strong\u003e button. The site will generate a .zip file, and it will automatically be downloaded to your local machine. Unzip the file to reveal the \u003cstrong\u003ehotsauces\u003c/strong\u003e project folder.\u003c/p\u003e\u003cp\u003eWithin the \u003cstrong\u003ehotsauces\u003c/strong\u003e folder, you’ll work in two specific areas for this exercise:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/\u003c/strong\u003e: The code for the project goes into this directory. At the moment, it contains a single file, \u003cstrong\u003eHotSaucesApplication.kt\u003c/strong\u003e. This contains a simple application class, which is the first code in the project that is executed when the application is run.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e/build.gradle.kts\u003c/strong\u003e: This is the project’s Gradle build file. Among other things, it specifies which dependencies will be used by the project. You’ll add some security-related dependencies to this file when securing the API.\u003c/li\u003e\u003c/ul\u003e\u003ch3 id=\"Defining--HotSauces---the-Class-Behind-the-API-s-Resource\"\u003eDefining \u003ccode\u003eHotSauces\u003c/code\u003e, the Class Behind the API’s Resource\u003c/h3\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/2qejaKSqZDNvVhRZwUAHTH/ec35c47e1bdb1a910909e9ff097a91c8/wide-hot-sauces-tray.png\" alt=\"A tray of different bottles of hot sauce\"/\u003e\u003c/p\u003e\u003cp\u003eThe first piece of code you’ll write is the model behind the API’s only resource: hot sauces.\u003c/p\u003e\u003cp\u003eEach hot sauce has the following attributes:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eid\u003c/code\u003e\u003c/strong\u003e — (number) The unique identifier for the hot sauce, and primary key.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003ebrandName\u003c/code\u003e\u003c/strong\u003e — (string) The name of the producer of the hot sauce.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003esauceName\u003c/code\u003e\u003c/strong\u003e — (string) The name of the hot sauce.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003edescription\u003c/code\u003e\u003c/strong\u003e — (string) A description of the hot sauce, with the appropriate keywords. This may be lengthy.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eurl\u003c/code\u003e\u003c/strong\u003e — (number) The URL for the web page for the hot sauce.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eheat\u003c/code\u003e\u003c/strong\u003e — (number) The spiciness of the hot sauce, expressed in \u003ca href=\"https://pepperheadsforlife.com/the-scoville-scale/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eScoville heat units (SHUs).\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e🌶 Create a new file named \u003cstrong\u003eHotSauce.kt\u003c/strong\u003e in the \u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/\u003c/strong\u003e directory:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e// /src/main/kotlin/com/auth0/hotsauces/HotSauce.kt\u003c/span\u003e\n\n\u003cspan\u003epackage\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003ehotsauces\n\n\u003cspan\u003eimport\u003c/span\u003e javax\u003cspan\u003e.\u003c/span\u003epersistence\u003cspan\u003e.\u003c/span\u003eEntity\n\u003cspan\u003eimport\u003c/span\u003e javax\u003cspan\u003e.\u003c/span\u003epersistence\u003cspan\u003e.\u003c/span\u003eGeneratedValue\n\u003cspan\u003eimport\u003c/span\u003e javax\u003cspan\u003e.\u003c/span\u003epersistence\u003cspan\u003e.\u003c/span\u003eGenerationType\n\u003cspan\u003eimport\u003c/span\u003e javax\u003cspan\u003e.\u003c/span\u003epersistence\u003cspan\u003e.\u003c/span\u003eId\n\u003cspan\u003eimport\u003c/span\u003e javax\u003cspan\u003e.\u003c/span\u003epersistence\u003cspan\u003e.\u003c/span\u003eLob\n\n\u003cspan\u003e@Entity\u003c/span\u003e\n\u003cspan\u003edata\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n\n    \u003cspan\u003e// This property maps to the primary key in the database.\u003c/span\u003e\n    \u003cspan\u003e@Id\u003c/span\u003e \u003cspan\u003e@GeneratedValue\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003estrategy \u003cspan\u003e=\u003c/span\u003e GenerationType\u003cspan\u003e.\u003c/span\u003eAUTO\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eval\u003c/span\u003e id\u003cspan\u003e:\u003c/span\u003e Long \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\n    \u003cspan\u003e// These properties are NOT likely to be longer than 256 characters.\u003c/span\u003e\n    \u003cspan\u003evar\u003c/span\u003e brandName\u003cspan\u003e:\u003c/span\u003e String \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n    \u003cspan\u003evar\u003c/span\u003e sauceName\u003cspan\u003e:\u003c/span\u003e String \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\n    \u003cspan\u003e// These properties might be longer than 256 characters.\u003c/span\u003e\n    \u003cspan\u003e@Lob\u003c/span\u003e\n    \u003cspan\u003evar\u003c/span\u003e description\u003cspan\u003e:\u003c/span\u003e String \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n    \u003cspan\u003e@Lob\u003c/span\u003e\n    \u003cspan\u003evar\u003c/span\u003e url\u003cspan\u003e:\u003c/span\u003e String \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n\n    \u003cspan\u003evar\u003c/span\u003e heat\u003cspan\u003e:\u003c/span\u003e Int \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\n\n\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eHotSauce\u003c/code\u003e is a Kotlin \u003cstrong\u003e\u003ca href=\"https://kotlinlang.org/docs/reference/data-classes.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003edata class\u003c/a\u003e\u003c/strong\u003e, whose job is to hold data. Data classes are all properties and no methods — or at least no \u003cem\u003eexplicitly\u003c/em\u003e defined methods, anyway. The compiler automatically provides a handful of “behind the scenes” methods to data classes, including \u003ccode\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, and \u003ccode\u003e\u003cspan\u003etoString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eKotlin classes, data classes included, have a constructor built into the class header. This constructor, called the \u003cstrong\u003eprimary constructor\u003c/strong\u003e, takes its parameters in the parentheses that follow the class name. \u003ccode\u003eHotSauce\u003c/code\u003e, like many data classes, is just a class header and primary constructor, and nothing else.\u003c/p\u003e\u003cp\u003eEven though there isn’t much to the class, it uses some annotations to pull in a lot of extra functionality:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003eHotSauce\u003c/code\u003e is annotated with \u003ccode\u003e@Entity\u003c/code\u003e, which informs the Java Persistence API (JPA, one of the dependencies that you added in Spring Initializr) that its instances will be persisted in the database.\u003c/li\u003e\u003cli\u003eThe \u003ccode\u003eid\u003c/code\u003e property is annotated with both \u003ccode\u003e@Id\u003c/code\u003e and \u003ccode\u003e@GeneratedValue\u003c/code\u003e, which makes sense, as it will map to the \u003ccode\u003eid\u003c/code\u003e field in the corresponding database table.\u003c/li\u003e\u003cli\u003eThe \u003ccode\u003e@Lob\u003c/code\u003e annotation is short for “large object”. It’s being used to annotate the \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eurl\u003c/code\u003e properties because they could contain strings longer than 256 characters. By default, JPA maps \u003ccode\u003eString\u003c/code\u003es in entities to the \u003ccode\u003e\u003cspan\u003eVARCHAR\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e256\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e type in the database; marking a \u003ccode\u003eString\u003c/code\u003e as \u003ccode\u003e@Lob\u003c/code\u003e tells JPA to map it to the \u003ccode\u003e\u003cspan\u003eTEXT\u003c/span\u003e\u003c/code\u003e type instead.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIf you’re new to Kotlin, make note of the keywords in the class’ property declarations:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003eval\u003c/code\u003e is short for “value” and declares a constant. A hot sauce’s \u003ccode\u003eid\u003c/code\u003e value shouldn’t be changed after it’s been created, so we’re declaring it with \u003ccode\u003eval\u003c/code\u003e.\u003c/li\u003e\u003cli\u003e\u003ccode\u003e\u003cspan\u003evar\u003c/span\u003e\u003c/code\u003e is short for “variable” and that’s what it declares. All the other class properties should be editable, so we’re declaring them with \u003ccode\u003e\u003cspan\u003evar\u003c/span\u003e\u003c/code\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eYou might be wondering about assigning the value \u003ccode\u003e\u003cspan\u003e0\u003c/span\u003e\u003c/code\u003e to \u003ccode\u003eid\u003c/code\u003e, which is a constant:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e@Id @\u003cspan\u003eGeneratedValue\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003estrategy \u003cspan\u003e=\u003c/span\u003e GenerationType\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eAUTO\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nval id\u003cspan\u003e:\u003c/span\u003e Long \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe line \u003ccode\u003eval id\u003cspan\u003e:\u003c/span\u003e Long \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\u003c/code\u003e might make you think that every hot sauce will have an unchangeable \u003ccode\u003eid\u003c/code\u003e set to \u003ccode\u003e\u003cspan\u003e0\u003c/span\u003e\u003c/code\u003e. As a constant, the value of \u003ccode\u003eid\u003c/code\u003e can’t be changed by any code that \u003cem\u003eyou\u003c/em\u003e write, but the \u003ccode\u003e@GeneratedValue\u003c/code\u003e annotation allows Spring to use \u003ca href=\"https://kotlinlang.org/docs/reflection.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ereflection\u003c/a\u003e to get around that limitation and assign a unique \u003ccode\u003eid\u003c/code\u003e value for every sauce. Every modern application framework incorporates “magic” like this; I’ve found that it’s simplest just to know where such instances are and to accept them.\u003c/p\u003e\u003cp\u003eWith \u003ccode\u003eHotSauce\u003c/code\u003e defined, you have a \u003cstrong\u003emodel\u003c/strong\u003e that represents hot sauces in the real world. By annotating it with \u003ccode\u003e@Entity\u003c/code\u003e, you’ve specified that instances of \u003ccode\u003eHotSauce\u003c/code\u003e should be converted into \u003cstrong\u003eentities\u003c/strong\u003e — that is, instances that have been saved to a database.\u003c/p\u003e\u003cp\u003eIt’s time to set up something to save \u003ccode\u003eHotSauce\u003c/code\u003e instances.\u003c/p\u003e\u003ch3 id=\"Adding-Data-Access-with-a--CrudRepository-\"\u003eAdding Data Access with a \u003ccode\u003eCrudRepository\u003c/code\u003e\u003c/h3\u003e\u003cp\u003eThe \u003ca href=\"https://deviq.com/repository-pattern/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eRepository pattern\u003c/a\u003e provides a layer of abstraction between an application’s models and the system used to store data. A repository provides a collection-style interface to the models, with methods for retrieving the whole collection, retrieving a specific item, and adding, editing, and deleting items. The repository insulates the models from the usual database concerns, such as connecting with it, setting up a reader, or worrying about things like cursors.\u003c/p\u003e\u003cp\u003eSpring provides a number of repository interfaces. In this project, you’ll use the \u003ca href=\"https://docs.spring.io/spring-data/commons/docs/current/api/org/springframework/data/repository/CrudRepository.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003eCrudRepository\u003c/code\u003e\u003c/a\u003e interface to act as the intermediary between \u003ccode\u003eHotSauce\u003c/code\u003e and the H2 database (another one of the dependencies you added in Spring Initializr) as shown below:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/2CCk6CDxAKOrF7RJ6F05nw/8a14bb24936eaa0efc2364a31cb551bc/repository-pattern.png\" alt=\"Repository Pattern\"/\u003e\u003c/p\u003e\u003cp\u003eIn this exercise, the underlying data store is the H2 in-memory database. The Repository pattern makes it so that changing the database doesn’t require you to make any changes to \u003ccode\u003eHotSauce\u003c/code\u003e, and Spring’s inversion of control architecture makes it so that such a change doesn’t even require a change to the \u003ccode\u003eCrudRepository\u003c/code\u003e.\u003c/p\u003e\u003cp\u003e🌶 Create a new file named \u003cstrong\u003eHotSauceRepository.kt\u003c/strong\u003e in the \u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/\u003c/strong\u003e directory:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e// /src/main/kotlin/com/auth0/hotsauces/HotSauceRepository.kt\u003c/span\u003e\n\n\u003cspan\u003epackage\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003ehotsauces\n\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003edata\u003cspan\u003e.\u003c/span\u003erepository\u003cspan\u003e.\u003c/span\u003eCrudRepository\n\n\u003cspan\u003einterface\u003c/span\u003e HotSauceRepository\u003cspan\u003e:\u003c/span\u003e CrudRepository\u003cspan\u003e\u0026lt;\u003c/span\u003eHotSauce\u003cspan\u003e,\u003c/span\u003e Long\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis code sets up an interface named \u003ccode\u003eHotSauceRepository\u003c/code\u003e that’s based on a \u003ccode\u003eCrudRepository\u003c/code\u003e of entities based on the \u003ccode\u003eHotSauce\u003c/code\u003e model, each of which is uniquely identified by a \u003ccode\u003eLong\u003c/code\u003e (namely, the \u003ccode\u003eid\u003c/code\u003e property of \u003ccode\u003eHotSauce\u003c/code\u003e).\u003c/p\u003e\u003cp\u003e\u003ccode\u003eCrudRepository\u003c/code\u003e provides a set of methods for performing the standard set of CRUD operations. Here’s the subset that you’ll use in this project:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003ecount\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e — Returns the number of entities.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003edeleteById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e — Deletes the entity with the given id.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003eexistsById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e — Returns \u003ccode\u003e\u003cspan\u003etrue\u003c/span\u003e\u003c/code\u003e if the entity with the given id exists.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003efindAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e — Retrieves all the entities.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003efindById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e — Retrieves the entity with the given id.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003esave\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e — Saves the given entity.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eYou’ll use these methods in the controller, which you’ll build next.\u003c/p\u003e\u003cp\u003eNote that you didn’t have to do anything to connect the repository to the database. Spring Boot’s inversion of control took care of that for you.\u003c/p\u003e\u003ch3 id=\"Building-the-controller\"\u003eBuilding the controller\u003c/h3\u003e\u003cp\u003eThe controller should expose the following API endpoints:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003eGET\u003c/span\u003e api\u003cspan\u003e/\u003c/span\u003ehotsauces\u003c/code\u003e\u003c/strong\u003e: Returns the entire collection of hot sauces. Accepts these optional named parameters:\n\u003cul\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003ebrandname\u003c/code\u003e\u003c/strong\u003e: Limits the results to only those sauces whose \u003ccode\u003ebrandName\u003c/code\u003e contains the given string.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003esaucename\u003c/code\u003e\u003c/strong\u003e Limits the results to only those sauces whose \u003ccode\u003esauceName\u003c/code\u003e contains the given string.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003edesc\u003c/code\u003e\u003c/strong\u003e Limits the results to only those sauces whose \u003ccode\u003edescription\u003c/code\u003e contains the given string.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003eminheat\u003c/code\u003e\u003c/strong\u003e Limits the results to only those sauces whose \u003ccode\u003eheat\u003c/code\u003e rating is greater than or equal to the given number.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003emaxheat\u003c/code\u003e\u003c/strong\u003e Limits the results to only those sauces whose \u003ccode\u003eheat\u003c/code\u003e rating is less than or equal to the given number.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003eGET\u003c/span\u003e api\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e: Returns the hot sauce with the given id.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003eGET\u003c/span\u003e api\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003ecount\u003c/code\u003e\u003c/strong\u003e: Returns the number of hot sauces.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003ePOST\u003c/span\u003e api\u003cspan\u003e/\u003c/span\u003ehotsauce\u003c/code\u003e\u003c/strong\u003e: Adds a hot sauce whose details are included in the request.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003ePUT\u003c/span\u003e api\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e: Updates the hot sauce with the given id using the details included in the request.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003e\u003ccode\u003e\u003cspan\u003eDELETE\u003c/span\u003e api\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/strong\u003e: Deletes the hot sauce with the given id.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e🌶 Create a new file named \u003cstrong\u003eHotSauceController.kt\u003c/strong\u003e in the \u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/\u003c/strong\u003e directory:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e// /src/main/kotlin/com/auth0/hotsauces/HotSauceController.kt\u003c/span\u003e\n\n\u003cspan\u003epackage\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003ehotsauces\n\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003ehttp\u003cspan\u003e.\u003c/span\u003eHttpStatus\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003ehttp\u003cspan\u003e.\u003c/span\u003eResponseEntity\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003eweb\u003cspan\u003e.\u003c/span\u003ebind\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e java\u003cspan\u003e.\u003c/span\u003eutil\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\n\u003cspan\u003e@RestController\u003c/span\u003e\n\u003cspan\u003e@RequestMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eHotSauceController\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eval\u003c/span\u003e hotSauceRepository\u003cspan\u003e:\u003c/span\u003e HotSauceRepository\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003e// GET api/hotsauces\u003c/span\u003e\n    \u003cspan\u003e@GetMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003egetAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e@RequestParam\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003evalue\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;brandname\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e required \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e defaultValue \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e brandNameFilter\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e,\u003c/span\u003e\n               \u003cspan\u003e@RequestParam\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003evalue\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;saucename\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e required \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e defaultValue \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e sauceNameFilter\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e,\u003c/span\u003e\n               \u003cspan\u003e@RequestParam\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003evalue\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;desc\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e required \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e defaultValue \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e descFilter\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e,\u003c/span\u003e\n               \u003cspan\u003e@RequestParam\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003evalue\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;minheat\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e required \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e defaultValue \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e minHeat\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e,\u003c/span\u003e\n               \u003cspan\u003e@RequestParam\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003evalue\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#34;maxheat\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e required \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e defaultValue \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e maxHeat\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e ResponseEntity\u003cspan\u003e\u0026lt;\u003c/span\u003eList\u003cspan\u003e\u0026lt;\u003c/span\u003eHotSauce\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eval\u003c/span\u003e MAX_SCOVILLE \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e3_000_000\u003c/span\u003e \u003cspan\u003e// At this point, it\u0026#39;s no longer food, but a weapon\u003c/span\u003e\n        \u003cspan\u003eval\u003c/span\u003e minHeatFilter \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003eminHeat\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eisNullOrBlank\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e minHeat\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etoInt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\n        \u003cspan\u003eval\u003c/span\u003e maxHeatFilter \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003emaxHeat\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eisNullOrBlank\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e maxHeat\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etoInt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e MAX_SCOVILLE\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efindAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efilter\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e it\u003cspan\u003e.\u003c/span\u003ebrandName\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ebrandNameFilter\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efilter\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e it\u003cspan\u003e.\u003c/span\u003esauceName\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003esauceNameFilter\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efilter\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e it\u003cspan\u003e.\u003c/span\u003edescription\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003edescFilter\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efilter\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e it\u003cspan\u003e.\u003c/span\u003eheat \u003cspan\u003e\u0026gt;=\u003c/span\u003e minHeatFilter \u003cspan\u003e}\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efilter\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e it\u003cspan\u003e.\u003c/span\u003eheat \u003cspan\u003e\u0026lt;=\u003c/span\u003e maxHeatFilter \u003cspan\u003e}\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            HttpStatus\u003cspan\u003e.\u003c/span\u003eOK\n        \u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e// GET api/hotsauces/{id}\u003c/span\u003e\n    \u003cspan\u003e@GetMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/count\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003egetCount\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e ResponseEntity\u003cspan\u003e\u0026lt;\u003c/span\u003eLong\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecount\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            HttpStatus\u003cspan\u003e.\u003c/span\u003eOK\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003e// GET api/hotsauces/count\u003c/span\u003e\n    \u003cspan\u003e@GetMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/{id}\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003egetHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e@PathVariable\u003c/span\u003e id\u003cspan\u003e:\u003c/span\u003e Long\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e ResponseEntity\u003cspan\u003e\u0026lt;\u003c/span\u003eOptional\u003cspan\u003e\u0026lt;\u003c/span\u003eHotSauce\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eexistsById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efindById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e HttpStatus\u003cspan\u003e.\u003c/span\u003eOK\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eHttpStatus\u003cspan\u003e.\u003c/span\u003eNOT_FOUND\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e// POST api/hotsauce\u003c/span\u003e\n    \u003cspan\u003e@PostMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003ecreateHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e@RequestBody\u003c/span\u003e hotSauce\u003cspan\u003e:\u003c/span\u003e HotSauce\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e ResponseEntity\u003cspan\u003e\u0026lt;\u003c/span\u003eHotSauce\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esave\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehotSauce\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e HttpStatus\u003cspan\u003e.\u003c/span\u003eCREATED\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e// PUT api/hotsauces/{id}\u003c/span\u003e\n    \u003cspan\u003e@PutMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/{id}\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003eupdateHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e@PathVariable\u003c/span\u003e id\u003cspan\u003e:\u003c/span\u003e Long\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e@RequestBody\u003c/span\u003e sauceChanges\u003cspan\u003e:\u003c/span\u003e HotSauce\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e ResponseEntity\u003cspan\u003e\u0026lt;\u003c/span\u003eHotSauce\u003cspan\u003e?\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eexistsById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003eval\u003c/span\u003e originalSauce \u003cspan\u003e=\u003c/span\u003e hotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efindById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eget\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003eval\u003c/span\u003e updatedSauce \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                id \u003cspan\u003e=\u003c/span\u003e id\u003cspan\u003e,\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003esauceChanges\u003cspan\u003e.\u003c/span\u003ebrandName \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e sauceChanges\u003cspan\u003e.\u003c/span\u003ebrandName \u003cspan\u003eelse\u003c/span\u003e originalSauce\u003cspan\u003e.\u003c/span\u003ebrandName\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003esauceChanges\u003cspan\u003e.\u003c/span\u003esauceName \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e sauceChanges\u003cspan\u003e.\u003c/span\u003esauceName \u003cspan\u003eelse\u003c/span\u003e originalSauce\u003cspan\u003e.\u003c/span\u003esauceName\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003esauceChanges\u003cspan\u003e.\u003c/span\u003edescription \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e sauceChanges\u003cspan\u003e.\u003c/span\u003edescription \u003cspan\u003eelse\u003c/span\u003e originalSauce\u003cspan\u003e.\u003c/span\u003edescription\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003esauceChanges\u003cspan\u003e.\u003c/span\u003eurl \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e sauceChanges\u003cspan\u003e.\u003c/span\u003eurl \u003cspan\u003eelse\u003c/span\u003e originalSauce\u003cspan\u003e.\u003c/span\u003eurl\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003esauceChanges\u003cspan\u003e.\u003c/span\u003eheat \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e sauceChanges\u003cspan\u003e.\u003c/span\u003eheat \u003cspan\u003eelse\u003c/span\u003e originalSauce\u003cspan\u003e.\u003c/span\u003eheat\n            \u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esave\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eupdatedSauce\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e HttpStatus\u003cspan\u003e.\u003c/span\u003eOK\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eHttpStatus\u003cspan\u003e.\u003c/span\u003eNOT_FOUND\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e// DELETE api/hotsauces/{id}\u003c/span\u003e\n    \u003cspan\u003e@DeleteMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/{id}\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003edeleteHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e@PathVariable\u003c/span\u003e id\u003cspan\u003e:\u003c/span\u003e Long\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e ResponseEntity\u003cspan\u003e\u0026lt;\u003c/span\u003eHotSauce\u003cspan\u003e?\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003ehotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eexistsById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            hotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003edeleteById\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eid\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eHttpStatus\u003cspan\u003e.\u003c/span\u003eNO_CONTENT\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eResponseEntity\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eHttpStatus\u003cspan\u003e.\u003c/span\u003eNOT_FOUND\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe code is considerably less complex than it could be, thanks to some annotations which take care of a lot of tedious REST work:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003eHotSauceController\u003c/code\u003e is annotated with \u003ccode\u003e@RestController\u003c/code\u003e, which informs Spring Web (yet another one of the dependencies that you added in Spring Initializr) that this class is a REST controller and that it should include the necessary underlying REST functionality.\u003c/li\u003e\u003cli\u003e\u003ccode\u003eHotSauceController\u003c/code\u003e is also annotated with \u003ccode\u003e@\u003cspan\u003eRequestMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e which means that every method in the class that responds to a request responds to requests whose endpoint ends with \u003ccode\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eAny method annotated with \u003ccode\u003e@\u003cspan\u003eGetMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e responds to \u003ccode\u003e\u003cspan\u003eGET\u003c/span\u003e\u003c/code\u003e requests. If \u003ccode\u003e@\u003cspan\u003eGetMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e takes a parameter, it means that it responds to requests whose endpoint begins with that parameter. Parameters in braces (\u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e) are variable parameters.\u003c/li\u003e\u003cli\u003eAny method annotated with \u003ccode\u003e@\u003cspan\u003ePostMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e@\u003cspan\u003ePutMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, and \u003ccode\u003e@\u003cspan\u003eDeleteMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e is similar to a method annotated with \u003ccode\u003e@\u003cspan\u003eGetMapping\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e except that they respond to \u003ccode\u003e\u003cspan\u003ePOST\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003ePUT\u003c/span\u003e\u003c/code\u003e, and \u003ccode\u003e\u003cspan\u003eDELETE\u003c/span\u003e\u003c/code\u003e requests respectively.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eEvery method in the class returns a \u003ca href=\"https://www.baeldung.com/spring-response-entity\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003eResponseEntity\u003c/code\u003e\u003c/a\u003e object, which represents a complete HTTP response, complete with status code, headers, and body.\u003c/p\u003e\u003cp\u003eTake a look at each of these methods to see what kind of \u003ccode\u003eResponseEntity\u003c/code\u003e they return. Sometimes, they’ll simply return an HTTP status code, as is the case with \u003ccode\u003e\u003cspan\u003edeleteHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, which returns either \u003ccode\u003e\u003cspan\u003eNO_CONTENT\u003c/span\u003e\u003c/code\u003e if the hot sauce was found and deleted or \u003ccode\u003e\u003cspan\u003eNOT_FOUND\u003c/span\u003e\u003c/code\u003e if the hot sauce requested for deletion was not in the database. Other methods may return a more complex \u003ccode\u003eResponseEntity\u003c/code\u003e, such as \u003ccode\u003e\u003cspan\u003egetHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, which returns an \u003ccode\u003e\u003cspan\u003eOK\u003c/span\u003e\u003c/code\u003e status code and a \u003ccode\u003eHotSauce\u003c/code\u003e object if the given \u003ccode\u003eid\u003c/code\u003e matches a hot sauce in the database.\u003c/p\u003e\u003cp\u003eYou may have noticed the \u003ccode\u003e@RequestParam\u003c/code\u003e annotations in the signature of the \u003ccode\u003e\u003cspan\u003egetAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method. These map the parameters in the HTTP GET query string to \u003ccode\u003e\u003cspan\u003egetAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e’s parameters. The first annotation declares that value in \u003ccode\u003ebrandname\u003c/code\u003e query parameter is mapped to the \u003ccode\u003e\u003cspan\u003egetAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method’s \u003ccode\u003ebrandNameFilter\u003c/code\u003e parameter, that \u003ccode\u003ebrandname\u003c/code\u003e is an optional query parameter, and if it isn’t used, its value should default to the empty string. The other \u003ccode\u003e@RequestParam\u003c/code\u003e annotations work in a similar manner.\u003c/p\u003e\u003ch3 id=\"Initializing-the-database\"\u003eInitializing the database\u003c/h3\u003e\u003cp\u003eYou could run the app right now and it would work. There’s just one problem: Since the database is in-memory and unitialized, you don’t have any data to work with! Let’s add a class to preload the database with some initial hot sauces.\u003c/p\u003e\u003cp\u003e🌶 Create a new file named \u003cstrong\u003eDataLoader.kt\u003c/strong\u003e in the \u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/\u003c/strong\u003e directory:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e// /src/main/kotlin/com/auth0/hotsauces/DataLoader.kt\u003c/span\u003e\n\n\u003cspan\u003epackage\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003ehotsauces\n\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003estereotype\u003cspan\u003e.\u003c/span\u003eComponent\n\u003cspan\u003eimport\u003c/span\u003e javax\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003ePostConstruct\n\n\u003cspan\u003e@Component\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eDataLoader\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003evar\u003c/span\u003e hotSauceRepository\u003cspan\u003e:\u003c/span\u003e HotSauceRepository\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003efun\u003c/span\u003e String\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndent\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ereplace\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003e@PostConstruct\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003eloadData\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        hotSauceRepository\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esaveAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003elistOf\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Truff\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Hot Sauce\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    Our sauce is a curated blend of ripe chili peppers, organic agave nectar, black truffle, and\n                    savory spices. This combination of ingredients delivers a flavor profile unprecedented to hot sauce.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://truffhotsauce.com/collections/sauce/products/truff\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e2_500\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Truff\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Hotter Sauce\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    TRUFF Hotter Sauce is a jalapeño rich blend of red chili peppers, Black Truffle and Black Truffle\n                    Oil, Organic Agave Nectar, Red Habanero Powder, Organic Cumin and Organic Coriander. Perfectly\n                    balanced and loaded with our same iconic flavor, TRUFF Hotter Sauce offers a “less sweet, more heat”\n                    rendition of the Flagship original.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://truffhotsauce.com/collections/sauce/products/hotter-truff-hot-sauce\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e4_000\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Cholula\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Original\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    Cholula Original Hot Sauce is created from a generations old recipe that features carefully-selected\n                    arbol and piquin peppers and a blend of signature spices. We love it on burgers and chicken but have\n                    heard it’s amazing on pizza. Uncap Real Flavor with Cholula Original.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://www.cholula.com/original.html\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e3_600\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Mad Dog\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;357\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                   Finally, a super hot sauce that tastes like real chile peppers. This sauce is blended\n                   with ingredients that create a sauce fit to take your breath away. About five seconds after you\n                   taste the recommended dose of one drop, prepare your mouth and mind for five to 20 minutes of agony\n                   that all true chileheads fully understand and appreciate.\n                   \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://www.saucemania.com.au/mad-dog-357-hot-sauce-148ml/\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e357_000\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Hot Ones\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Fiery Chipotle\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    This hot sauce was created with one goal in mind: to get celebrity interviewees on Hot Ones to say\n                    \u0026#34;damn that\u0026#39;s tasty, and DAMN that\u0026#39;s HOT!\u0026#34; and then spill their deepest secrets to host Sean Evans.\n                    The tongue tingling flavors of chipotle, pineapple and lime please the palate while the mix of ghost\n                    and habanero peppers make this sauce a scorcher. Hot Ones Fiery Chipotle Hot Sauce is a spicy\n                    masterpiece.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://chillychiles.com/products/hot-ones-fiery-chipotle-hot-sauce\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e15_600\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Hot Ones\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;The Last Dab\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    More than simple mouth burn, Pepper X singes your soul. Starting with a pleasant burn in the mouth,\n                    the heat passes quickly, lulling you into a false confidence. You take another bite, enjoying the\n                    mustard and spice flavours. This would be great on jerk chicken, or Indian food! But then, WHAM!\n                    All of a sudden your skin goes cold and your stomach goes hot, and you realize the power of X.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://www.saucemania.com.au/hot-ones-the-last-dab-hot-sauce-148ml/\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e1_000_000\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Torchbearer\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Zombie Apocalypse\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    The Zombie Apocalypse Hot Sauce lives up to its name, combining Ghost Peppers and Habaneros with a\n                    mix of spices, vegetables, and vinegar to create a slow burning blow torch. Some people will feel\n                    the heat right away, but others can take a few minutes for the full impact to set in. The heat can\n                    last up to 20 minutes, creating a perfect match between very high heat and amazing flavor. Try it\n                    on all your favorite foods - wings, chili, soups, steak or even a sandwich in need of a major kick.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://heatonist.com/products/zombie-apocalypse\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e100_000\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Heartbeat\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Pineapple Habanero\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    Pineapple Habanero is Heartbeat Hot Sauce’s most recent offering and their spiciest to date! They’ve\n                    yet again collaborated with an Ontario craft brewery, this time from their home town of Thunder Bay.\n                    Made with the help of Sleeping Giant Brewery’s award winning Beaver Duck session IPA, this sauce has\n                    a boldly pronounced fruitiness and a bright but savoury vibe from start to finish.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://www.saucemania.com.au/heartbeat-pineapple-habanero-hot-sauce-177ml/\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e12_200\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n            \u003cspan\u003eHotSauce\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Karma Sauce\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Burn After Eating\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;\n                    Karma Sauce Burn After Eating Hot Sauce is imbued with a unique flavour thanks to green mango,\n                    ajwain and hing powder. Forged with a top-secret blend of super hots that may or may not include\n                    Bhut Jolokia (Ghost), Scorpion, Carolina Reaper, 7-Pot Brown and 7-Pot Primo. This isn’t a sauce you\n                    eat, it’s one you survive.\n                    \u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://www.saucemania.com.au/karma-sauce-burn-after-eating-hot-sauce-148ml/\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e669_000\u003c/span\u003e\n            \u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis class has a couple of annotations:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ccode\u003eDataLoader\u003c/code\u003e is annotated with \u003ccode\u003e@Component\u003c/code\u003e, which marks it so that Spring will autodetect the class when it’s needed. Since the code in this class references the application’s instance of \u003ccode\u003eHotSauceRepository\u003c/code\u003e, this class will be instantiated when an instance of \u003ccode\u003eHotSauceRepository\u003c/code\u003e is created.\u003c/li\u003e\u003cli\u003eThe \u003ccode\u003e\u003cspan\u003eloadData\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method is annotated with \u003ccode\u003e@PostConstruct\u003c/code\u003e, which specifies that it should be called as soon as the class has been initialized. This annotation is often used to populate databases when a Spring application is launched.\u003c/li\u003e\u003c/ul\u003e\u003ch4 id=\"Kotlin-Extensions\"\u003eKotlin Extensions\u003c/h4\u003e\u003cp\u003eThis class also makes use of a handy Kotlin feature: \u003cstrong\u003e\u003ca href=\"https://kotlinlang.org/docs/reference/extensions.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eExtensions\u003c/a\u003e\u003c/strong\u003e. These are properties or functions that can be added to classes to extend their capabilities without having to access their code.\u003c/p\u003e\u003cp\u003eAt the beginning of the class, you added an extension to the \u003ccode\u003eString\u003c/code\u003e class:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efun\u003c/span\u003e String\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003etrimIndent\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ereplace\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis adds the method \u003ccode\u003e\u003cspan\u003etrimIndentsAndRemoveNewlines\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e to the \u003ccode\u003eString\u003c/code\u003e class, which removes indentations and newline characters from multiline strings. The assignments to each hot sauce’s \u003ccode\u003edescription\u003c/code\u003e property is done using multiline strings (which are delimited with triple-quotes — \u003ccode\u003e\u003cspan\u003e\u0026#34;\u0026#34;\u003c/span\u003e\u0026#34;\u003c/code\u003e) to make the code easier to read.\u003c/p\u003e\u003ch4 id=\"What-s-With-the-Numbers-\"\u003eWhat’s With the Numbers?\u003c/h4\u003e\u003cp\u003eYou may have noticed that some of the numbers in the code contain underscore characters, such as on this line of code for the final sauce in the list:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eheat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e669_000\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eKotlin — like some other languages, including Python, Ruby, and Swift — ignores undescore characters in numbers. This allows you to use them the way we typically use “separator characters” to make numbers easier to read.\u003c/p\u003e\u003cp\u003eFor example, in the U.S., we tend to write the number for “one million” as \u003cstrong\u003e1,000,000\u003c/strong\u003e, which is easier to read than 1000000. In India, the preference is to write this number as \u003cstrong\u003e10,00,000\u003c/strong\u003e, and in some countries in Europe, it’s \u003cstrong\u003e1.000.000\u003c/strong\u003e. By allowing the underscore as the grouping character for numbers and ignoring it, Kotlin lets you group digits in numbers as you see fit.\u003c/p\u003e\u003ch2 id=\"Trying-Out-the-API\"\u003eTrying Out the API\u003c/h2\u003e\u003cp\u003eYou’re now ready to take the API for a trial run!\u003c/p\u003e\u003cp\u003e🌶 Run the application by opening a terminal if you’re on macOS of Linux or opening PowerShell if you’re on Windows), navigating to the the application’s directory, and entering the following command:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e./gradlew bootRun\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis command was included in the set of files that Spring Initilizr generated. It sets Gradle in motion, causing it to download any needed plugins and dependencies, after which it launches the application.\u003c/p\u003e\u003cp\u003eWhen it starts, you’ll see a lot of status messages. Eventually, they’ll end with this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e :bootRun\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you don’t see an error message and the last line of the output is \u003ccode\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003ebootRun\u003c/code\u003e, it means that the project is running properly and listening to \u003cstrong\u003elocalhost:8080\u003c/strong\u003e for incoming requests. You can now start making API calls.\u003c/p\u003e\u003ch3 id=\"Is-this-thing-on-\"\u003eIs this thing on?\u003c/h3\u003e\u003cp\u003eOne of the dependencies that you included when setting up this project with Spring Initializr was Spring Boot Actuator. This automatically adds a number of endpoints to your application that let you monitor and interact with it.\u003c/p\u003e\u003cp\u003eLet’s use Actuator’s \u003ccode\u003ehealth\u003c/code\u003e endpoint to get client-side confirmation that your application is up and running.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this into Terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e \u003cspan\u003e\u0026#34;http://localhost:8080/actuator/health\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/actuator/health\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emacOS and Linux users should see this response...\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e\u0026#34;status\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e\u0026#34;UP\u0026#34;\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e...while Windows users should see this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003estatus\n\u003cspan\u003e--\u003c/span\u003e\u003cspan\u003e--\u003c/span\u003e\u003cspan\u003e--\u003c/span\u003e\n\u003cspan\u003eUP\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003ehealth\u003c/code\u003e endpoint is just one of of over 20 endpoints that a Spring Boot application provides when it includes the Actuator dependency. It’s indispensable for managing and monitoring apps during both development and production, as it provides logging, metrics, auditing, HTTP tracing, and process monitoring features, \u003ca href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eall of which are covered in the Spring documentation.\u003c/a\u003e\u003c/p\u003e\u003ch3 id=\"Count-hot-sauces\"\u003eCount hot sauces\u003c/h3\u003e\u003cp\u003eTo get the number of hot sauces in the database, send a GET request to the \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003ecount\u003c/code\u003e endpoint.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this into Terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/count\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/count\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you haven’t added or removed any hot sauces since starting the application, the API should report that there are 9.\u003c/p\u003e\u003ch3 id=\"List-hot-sauces\"\u003eList hot sauces\u003c/h3\u003e\u003cp\u003eTo get the complete list of hot sauces, send a GET request to the \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003c/code\u003e endpoint.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this into Terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003emacOS and Linux users will be presented with a JSON array of dictionaries, with each dictionary representing a hot sauce. Windows users will see a nicely formatted list of hot sauces and their properties.\u003c/p\u003e\u003ch3 id=\"Filtering-hot-sauces-with-parameters\"\u003eFiltering hot sauces with parameters\u003c/h3\u003e\u003cp\u003eTry using the optional parameters to limit the results. In the example below, the \u003ccode\u003emaxheat\u003c/code\u003e parameter is being used to limit the response to only those hot sauces with a Scoville rating of 10,000 or less.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this into Terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces?maxheat=10000\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces?maxheat=10000\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you haven’t added or removed any hot sauces since starting the application, the API should return three hot sauces: Truff Hot Sauce, Truff Hotter Sauce, and Cholula.\u003c/p\u003e\u003ch3 id=\"Add-a-new-hot-sauce\"\u003eAdd a new hot sauce\u003c/h3\u003e\u003cp\u003eAdd a new sauce to the database by sending a POST request to \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003c/code\u003e, along with the attributes of the new sauce — except \u003ccode\u003eid\u003c/code\u003e, which will automatically be assigned to the new sauce. The attributes should be in JSON dictionary form.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into the terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e --request POST \u003cspan\u003e\\\u003c/span\u003e\n    --url http://localhost:8080/api/hotsauces/ \u003cspan\u003e\\\u003c/span\u003e\n    -H \u003cspan\u003e\u0026#34;Content-Type: application/json\u0026#34;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n    --data \u003cspan\u003e\u0026#39;{\u0026#34;brandName\u0026#34;: \u0026#34;Dave’s Gourmet\u0026#34;, \u0026#34;sauceName\u0026#34;: \u0026#34;Temporary Insanity\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://store.davesgourmet.com/ProductDetails.asp?ProductCode=DATE\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This sauce has all the flavor of Dave’s Original Insanity with less heat. Finally, there’s sauce for when you only want to get a little crazy in the kitchen. Add to stews, burgers, burritos, and pizza, or any food that needs an insane boost. As with all super hot sauces, this sauce is best enjoyed one drop at a time!\u0026#34;, \u0026#34;heat\u0026#34;: 57000}\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$body \u003cspan\u003e=\u003c/span\u003e @\u003cspan\u003e{\u003c/span\u003e\n    brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Dave\\\u0026#39;s Gourmet\u0026#34;\u003c/span\u003e\n    sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Temporary Insanity\u0026#34;\u003c/span\u003e\n    url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://store.davesgourmet.com/ProductDetails.asp?ProductCode=DATE\u0026#34;\u003c/span\u003e\n    description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;This sauce has all the flavor of Dave\\\u0026#39;s Original Insanity with less heat. Finally, there\u0026#39;s sauce for when you only want to get a little crazy in the kitchen. Add to stews, burgers, burritos, and pizza, or any food that needs an insane boost. As with all super hot sauces, this sauce is best enjoyed one drop at a time!\u0026#34;\u003c/span\u003e\n    heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e57000\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003e|\u003c/span\u003e ConvertTo\u003cspan\u003e-\u003c/span\u003eJson\nInvoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\u003cspan\u003e\n    -Method POST \u003c/span\u003e\u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003eContentType \u003cspan\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e `\n    \u003cspan\u003e-\u003c/span\u003eBody $body\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe hot sauce will be added to the database, and the API will respond with information about the newly added sauce.\u003c/p\u003e\u003cp\u003eYou can confirm that the hot sauce has been added to the database by requesting the complete list, or by requesting it by id.\u003c/p\u003e\u003ch3 id=\"Edit-a-hot-sauce\"\u003eEdit a hot sauce\u003c/h3\u003e\u003cp\u003eMake changes to a hot sauce in the database by sending a PUT request to \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e where \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e is the hot sauce’s \u003ccode\u003eid\u003c/code\u003e value, along with the attributes you wish to change in JSON dictionary form.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into the terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e --request PUT \u003cspan\u003e\\\u003c/span\u003e\n    --url http://localhost:8080/api/hotsauces/10 \u003cspan\u003e\\\u003c/span\u003e\n    -H \u003cspan\u003e\u0026#34;Content-Type: application/json\u0026#34;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n    --data \u003cspan\u003e\u0026#39;{\u0026#34;brandName\u0026#34;: \u0026#34;NewCo\u0026#34;, \u0026#34;sauceName\u0026#34;: \u0026#34;Generic Hot Sauce\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;It’s hot. It’s sauce. That’s it.\u0026#34;, \u0026#34;heat\u0026#34;: 1000}\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$body \u003cspan\u003e=\u003c/span\u003e @\u003cspan\u003e{\u003c/span\u003e\n    brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;NewCo\u0026#34;\u003c/span\u003e\n    sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Generic Hot Sauce\u0026#34;\u003c/span\u003e\n    url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://store.davesgourmet.com/ProductDetails.asp?ProductCode=DATE\u0026#34;\u003c/span\u003e\n    description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;It\u0026#39;s hot. It\u0026#39;s sauce. That\u0026#39;s it.\u0026#34;\u003c/span\u003e\n    heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e1000\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003e|\u003c/span\u003e ConvertTo\u003cspan\u003e-\u003c/span\u003eJson\nInvoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/10\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\u003cspan\u003e\n    -Method PUT \u003c/span\u003e\u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003eContentType \u003cspan\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e `\n    \u003cspan\u003e-\u003c/span\u003eBody $body\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe hot sauce will be updated with your changes and the API will respond with information showing the changes you made.\u003c/p\u003e\u003ch3 id=\"Delete-a-hot-sauce\"\u003eDelete a hot sauce\u003c/h3\u003e\u003cp\u003eDelete a hot sauce by sending a DELETE request to \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e where \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eid\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e is the hot sauce’s \u003ccode\u003eid\u003c/code\u003e value.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into Terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e --request DELETE \u003cspan\u003e\\\u003c/span\u003e\n    --url http://localhost:8080/api/hotsauces/10\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke-RestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/10\u0026#34;\u003c/span\u003e `\n    -Method DELETE\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou can confirm that the hot sauce has been removed from the database by requesting the complete list (using \u003ccode\u003ecurl http\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003elocalhost\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e8080\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003c/code\u003e) or a count of hot sauces (using \u003ccode\u003ecurl http\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003elocalhost\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e8080\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003ecount\u003c/code\u003e).\u003c/p\u003e\u003ch2 id=\"Securing-the-API\"\u003eSecuring the API\u003c/h2\u003e\u003cp\u003eRight now, the entire API is unsecured. All its endpoints are available to anyone with the URL and the ability to send HTTP requests.\u003c/p\u003e\u003cp\u003eSuppose that we want to allow only authorized applications to have access to the endpoints of the API that allow accessing, adding, editing, and deleting hot sauces. The remaining endpoints — the test endpoint and the one that reports the number of hot sauces — can remain generally available.\u003c/p\u003e\u003cp\u003eYou’ll use Auth0 to secure the API’s CRUD endpoints, but before that happens, let’s take a look at how API authentication works.\u003c/p\u003e\u003ch3 id=\"The-Nightclub-Metaphor\"\u003eThe Nightclub Metaphor\u003c/h3\u003e\u003cp\u003eThere’s no shortage of essays and articles on the internet that try to explain API authentication. Let’s make it a little more fun and easier to grasp way by using The Nightclub Metaphor!\u003c/p\u003e\u003cp\u003eA number of nightclubs have a two-step process to control who gets in and who doesn’t. First, there’s an initial phase where the club-goer goes to a window and shows some ID...\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/6oCWbsxHYlaAJXpelHJOS1/6d7fd315a5bb60f932be7c765f198106/mclovin_drivers_license.png\" alt=\"A fake ID\"/\u003e\u003c/p\u003e\u003cp\u003e...and if the ID passes inspection, the club-goer is given something that’s easy to see in a nightclub environment. Often, it’s a wristband:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/3antgKjLDw9hqJ93J97thU/7199be675a2da2164ab71fc4532831ad/wristbands.png\" alt=\"Club wristbands\"/\u003e\u003c/p\u003e\u003cp\u003eThe wristband is visible permission — an \u003cem\u003eaccess token\u003c/em\u003e — that the club-goer wearing it has been cleared to enter the club. In order to be let into the club, the club-goer has to show their wristband to the bouncers guarding the entrance.\u003c/p\u003e\u003cp\u003eThe better-run nightclubs change their wristbands every night. One night, it’ll be blue, and on the next night, it’ll be a different color. This prevents club-goers from reusing the previous night’s wristband to get in.\u003c/p\u003e\u003cp\u003eAPI security with Auth0 works in a similar way:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003eShowing ID at the window:\u003c/strong\u003e You first assemble a set of credentials, which you submit to Auth0’s servers to obtain an access token.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eShowing your wristband to the bouncers:\u003c/strong\u003e When accessing an API endpoint that requires authorization, you include the access token as part of your request. The API communicates with Auth0 to validate the access token, and if it’s valid, provides the response to your request.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eChanging wristbands every night:\u003c/strong\u003e Like the wristbands at the better-run nightclubs, access tokens aren’t valid forever. By default, Auth0 access tokens expire 24 hours after they’re issued.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIt’s time to secure the API. This needs to be done both on the Auth0 side as well as in the application.\u003c/p\u003e\u003ch2 id=\"Setting-Up-API-Authentication-on-the-Auth0-Side\"\u003eSetting Up API Authentication on the Auth0 Side\u003c/h2\u003e\u003ch3 id=\"Registering-the-API\"\u003eRegistering the API\u003c/h3\u003e\u003cp\u003eThe first step in setting up API authentication is to register it.\u003c/p\u003e\u003cp\u003e🌶 Log into Auth0.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eIf you don’t have an Auth0 account yet, go ahead and \u003ca href=\"https://auth0.com/signup\" target=\"_blank\" rel=\"noreferrer noopener\"\u003esign up for a free one.\u003c/a\u003e You’ll find it useful for prototyping logins and API security in your projects.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003e🌶 Once you’ve logged in, \u003ca href=\"https://manage.auth0.com/?\u0026amp;_ga=2.55268258.821728906.1599742219-782382229.1597890849#/apis\" target=\"_blank\" rel=\"noreferrer noopener\"\u003enavigate to the \u003cem\u003eAPIs\u003c/em\u003e page\u003c/a\u003e...\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/48uwB1BEZbrHDz9zzeRWxO/4add50dd5a0b7317b991fd3fe1a413da/apis.png\" alt=\"Auth0 dashboard APIs page\"/\u003e\u003c/p\u003e\u003cp\u003e🌶 ...and click the \u003cstrong\u003eCreate API\u003c/strong\u003e button located near the upper right corner of the page. A form will appear, asking for basic information about the API:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/4XmypcreWQ9C4HGTmKHkul/6dfbe34de3f0fd09464f3ae89440f533/new-api.png\" alt=\"New API pop-up form\"/\u003e\u003c/p\u003e\u003cp\u003e🌶 Fill it out like so:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cem\u003eName:\u003c/em\u003e Enter \u003cstrong\u003eHotSauces\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eIdentifier:\u003c/em\u003e Enter \u003cstrong\u003e\u003ca href=\"http://hotsauces.demo\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehttp://hotsauces.demo\u003c/a\u003e\u003c/strong\u003e.\u003c/li\u003e\u003cli\u003e\u003cem\u003eSigning Algorithm:\u003c/em\u003e Select \u003cstrong\u003eRS256\u003c/strong\u003e.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e🌶 When you’re done providing this information, click the \u003cstrong\u003eCreate\u003c/strong\u003e button. The API will now be registered, which means that Auth0 can now be used to authorize access to it.\u003c/p\u003e\u003ch3 id=\"Getting-the-Credentials\"\u003eGetting the Credentials\u003c/h3\u003e\u003cp\u003eThe next step is to gather the necessary Auth0 credentials that will be needed to request an access token from Auth0 and to validate any access tokens.\u003c/p\u003e\u003cp\u003eImmediately after registering your API, you were taken to the API’s newly-created \u003cstrong\u003eQuick Start\u003c/strong\u003e page, pictured below:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/6Wr7wbTVoKREeDqP2PPccC/6e06c065b4bd2edbfb203cebf64ce3d3/hotsauces-quick-start-page.png\" alt=\"Auth0 Quick Start page for the API\"/\u003e\u003c/p\u003e\u003cp\u003eThis is technically a machine-to-machine application, which means that the API you created (a machine) wouldn’t normally be accessed directly by a human, but by an application (another machine). You’ll need to gather the credentials from the Machine to Machine Applications section.\u003c/p\u003e\u003cp\u003e🌶 Click on \u003cstrong\u003eMachine to Machine Applications\u003c/strong\u003e, which will take you to this page:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/6I4WwRBhedzzWiKaZL9Mry/b78eb788f07e9e3cf94a603fb45de80b/machine-to-machine.png\" alt=\"Auth0 Settings page\"/\u003e\u003c/p\u003e\u003cp\u003eThis is the first of two pages that provide information that you need in order to get the access token.\u003c/p\u003e\u003cp\u003e🌶 You’ll be copying four items, and you may find it helpful to open a text editor so that you have some place in which to paste them.\u003c/p\u003e\u003cp\u003e🌶 Copy the \u003cem\u003eAPI Identifier\u003c/em\u003e value, which is located just below the page’s headline...\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/5dyz7Uq4McFi1wk8hiLdMI/7131755fbdc21bf2797f98d7b1c78d4f/machine-to-machine_identifier.png\" alt=\"Identifier\"/\u003e\u003c/p\u003e\u003cp\u003e🌶 ...and paste it into the text editor.\u003c/p\u003e\u003cp\u003eYour text editor should look something like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eAPI Identifier: \u003cspan\u003e{\u003c/span\u003eAPI Identifier\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you’ve been following the steps in this exercise, {API Identifier} will be \u003cstrong\u003e\u003ca href=\"http://hotsauces.demo\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehttp://hotsauces.demo\u003c/a\u003e\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eThere will be a list of applications at the bottom of the page. One of them will be \u003cstrong\u003eHotSauces\u003c/strong\u003e. Click on its name. You’ll be taken to HotSauces’ \u003cstrong\u003eMachine to Machine → Settings\u003c/strong\u003e page, which contains information that you’ll need to get the token:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/41YnIqmEdUcsVSYSNtCqmO/82596c6774a38590976f59ff61c538db/machine-to-machine_settings.png\" alt=\"Auth0 Machine to Machine page\"/\u003e\u003c/p\u003e\u003cp\u003e🌶 Use the “copy” buttons on the right side of these fields to copy and paste their contents into the same text editor where you pasted the API Identifier:\u003c/p\u003e\u003cul\u003e\u003cli\u003eDomain\u003c/li\u003e\u003cli\u003eClient ID\u003c/li\u003e\u003cli\u003eClient Secret\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eYour text editor should now look something like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eAPI Identifier: \u003cspan\u003e{\u003c/span\u003eAPI Identifier\u003cspan\u003e}\u003c/span\u003e\nDomain: \u003cspan\u003e{\u003c/span\u003eDomain\u003cspan\u003e}\u003c/span\u003e\nClient ID: \u003cspan\u003e{\u003c/span\u003eClient ID\u003cspan\u003e}\u003c/span\u003e\nClient Secret: \u003cspan\u003e{\u003c/span\u003eClient Secret\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou’ve done all the necessary setup on the Auth0 side. It’s now time to do the same on the application side.\u003c/p\u003e\u003ch2 id=\"Setting-Up-API-Authentication-on-the-Application-Side\"\u003eSetting Up API Authentication on the Application Side\u003c/h2\u003e\u003ch3 id=\"Adding-Security-Dependencies\"\u003eAdding Security Dependencies\u003c/h3\u003e\u003cp\u003eThe first step is to add the necessary security dependencies to the Gradle build file.\u003c/p\u003e\u003cp\u003e🌶 Update the \u003ccode\u003edependencies\u003c/code\u003e block in \u003cstrong\u003e/build.gradle.kts\u003c/strong\u003e so that it looks like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e// /build.gradle.kts (excerpt)\u003c/span\u003e\n\ndependencies \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.boot:spring-boot-starter-actuator\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.boot:spring-boot-starter-data-jpa\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.boot:spring-boot-starter-web\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;com.fasterxml.jackson.module:jackson-module-kotlin\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.jetbrains.kotlin:kotlin-reflect\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.jetbrains.kotlin:kotlin-stdlib-jdk8\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003edevelopmentOnly\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.boot:spring-boot-devtools\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eruntimeOnly\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;com.h2database:h2\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003etestImplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.boot:spring-boot-starter-test\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.boot:spring-boot-starter-security\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.security:spring-security-oauth2-resource-server\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.security:spring-security-oauth2-jose\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eimplementation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;org.springframework.security:spring-security-config\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis adds four dependencies. Note that they all have “security” in their name and that two of them also include “oauth2”, a reference to the OAuth2 protocol that Auth0 uses for authorization.\u003c/p\u003e\u003cp\u003eThe first time you run the application after adding these lines to the Gradle build file, Gradle will download and install these dependencies.\u003c/p\u003e\u003ch3 id=\"Adding-a-Configuration-File\"\u003eAdding a Configuration File\u003c/h3\u003e\u003cp\u003eThe next step is to create a file that configures the application to use the correct API identifier and domain when authenticating with Auth0.\u003c/p\u003e\u003cp\u003e🌶 Create a new file named \u003cstrong\u003eapplication.yml\u003c/strong\u003e in the \u003cstrong\u003e/src/main/resources/\u003c/strong\u003e directory. It should contain the following:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e# /src/main/resources/application.yml\u003c/span\u003e\n\n\u003cspan\u003eauth0\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003eaudience\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e Domain \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003espring\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003esecurity\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003eoauth2\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003eresourceserver\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003ejwt\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n          \u003cspan\u003eissuer-uri\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e https\u003cspan\u003e:\u003c/span\u003e//\u003cspan\u003e{\u003c/span\u003eAPI Identifier\u003cspan\u003e}\u003c/span\u003e/\u003c/code\u003e\u003c/pre\u003e\u003cblockquote\u003e\u003cp\u003eIndentation is important in this file: Don’t remove any indents, and use space characters to make the indents. \u003cstrong\u003eDo NOT use tab characters!\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003e🌶 In the file shown above, replace \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003eAPI\u003c/span\u003e Identifier\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eDomain\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e with the values that you copied into your text editor. If you’ve been following the steps in this exercise, \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003eAPI\u003c/span\u003e Identifier\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e will be \u003cstrong\u003e\u003ca href=\"http://hotsauces.demo\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehttp://hotsauces.demo\u003c/a\u003e\u003c/strong\u003e.\u003c/p\u003e\u003cp\u003eThe \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003eAPI\u003c/span\u003e Identifier\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e value will be used to tell Auth0 which API is asking for authentication, and the \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eDomain\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e value allows Spring’s security to get the authorization server’s public keys and validate the access token.\u003c/p\u003e\u003ch3 id=\"Adding-Security-Classes\"\u003eAdding Security Classes\u003c/h3\u003e\u003cp\u003eThe final step in securing the API is adding a couple of security classes. These classes enable the application to make use of Auth0’s OAuth2 authorization.\u003c/p\u003e\u003cp\u003eSince these classes don’t directly have anything to do with the application’s main functionality, they’re often put into their own directory.\u003c/p\u003e\u003cp\u003e🌶 Create a new directory, \u003cstrong\u003esecurity\u003c/strong\u003e, as a subdirectory of \u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/\u003c/strong\u003e. The project’s directory structure should now look like this:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/OmSevxxVhzfafimLdeArh/c3228767798e5f33e0866f34011d8c63/hotsauces-project-structure-2.png\" alt=\"Project structure, pointing out the security folder and application.yml\"/\u003e\u003c/p\u003e\u003cp\u003eThe first security class that you’ll add is an audience validator. It confirms that the access token is actually the one for the API.\u003c/p\u003e\u003cp\u003e🌶 Create a new file named \u003cstrong\u003eAudienceValidator.kt\u003c/strong\u003e in the \u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/security/\u003c/strong\u003e directory:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e// /src/main/kotlin/com/auth0/hotsauces/security/AudienceValidator.kt\u003c/span\u003e\n\n\u003cspan\u003epackage\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003ehotsauces\u003cspan\u003e.\u003c/span\u003esecurity\n\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003ecore\u003cspan\u003e.\u003c/span\u003eOAuth2Error\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003ecore\u003cspan\u003e.\u003c/span\u003eOAuth2TokenValidator\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003ecore\u003cspan\u003e.\u003c/span\u003eOAuth2TokenValidatorResult\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003ejwt\u003cspan\u003e.\u003c/span\u003eJwt\n\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAudienceValidator\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eval\u003c/span\u003e audience\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e OAuth2TokenValidator\u003cspan\u003e\u0026lt;\u003c/span\u003eJwt\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003eoverride\u003c/span\u003e \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003evalidate\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ejwt\u003cspan\u003e:\u003c/span\u003e Jwt\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e OAuth2TokenValidatorResult \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eval\u003c/span\u003e error \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eOAuth2Error\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;invalid_token\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;The required audience is missing\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003ejwt\u003cspan\u003e.\u003c/span\u003eaudience\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eaudience\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            OAuth2TokenValidatorResult\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esuccess\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e \u003cspan\u003eelse\u003c/span\u003e OAuth2TokenValidatorResult\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efailure\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eerror\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe second security class configures API security in two ways:\u003c/p\u003e\u003cul\u003e\u003cli\u003eIt validates the access token, and\u003c/li\u003e\u003cli\u003eIt specifies the levels of access you grant to the API endpoints.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003e🌶 Create a new file named \u003cstrong\u003eSecurityConfig.kt\u003c/strong\u003e in the \u003cstrong\u003e/src/main/kotlin/com/auth0/hotsauces/security/\u003c/strong\u003e directory:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e// /src/main/kotlin/com/auth0/hotsauces/security/SecurityConfig.kt\u003c/span\u003e\n\n\u003cspan\u003epackage\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003ehotsauces\u003cspan\u003e.\u003c/span\u003esecurity\n\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003ebeans\u003cspan\u003e.\u003c/span\u003efactory\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003eValue\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003econtext\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003eBean\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003eweb\u003cspan\u003e.\u003c/span\u003ebuilders\u003cspan\u003e.\u003c/span\u003eHttpSecurity\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003eweb\u003cspan\u003e.\u003c/span\u003econfiguration\u003cspan\u003e.\u003c/span\u003eEnableWebSecurity\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003eweb\u003cspan\u003e.\u003c/span\u003econfiguration\u003cspan\u003e.\u003c/span\u003eWebSecurityConfigurerAdapter\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003ecore\u003cspan\u003e.\u003c/span\u003eDelegatingOAuth2TokenValidator\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003ecore\u003cspan\u003e.\u003c/span\u003eOAuth2TokenValidator\n\u003cspan\u003eimport\u003c/span\u003e org\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003ejwt\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\n\u003cspan\u003e@EnableWebSecurity\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e SecurityConfig \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eWebSecurityConfigurerAdapter\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003e@Value\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;\\\u003cspan\u003e\u003cspan\u003e${\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003eaudience\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eval\u003c/span\u003e audience\u003cspan\u003e:\u003c/span\u003e String \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003e@Value\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;\\\u003cspan\u003e\u003cspan\u003e${\u003c/span\u003espring\u003cspan\u003e.\u003c/span\u003esecurity\u003cspan\u003e.\u003c/span\u003eoauth2\u003cspan\u003e.\u003c/span\u003eresourceserver\u003cspan\u003e.\u003c/span\u003ejwt\u003cspan\u003e.\u003c/span\u003eissuer\u003cspan\u003e-\u003c/span\u003euri\u003cspan\u003e}\u003c/span\u003e\u003c/span\u003e\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eval\u003c/span\u003e issuer\u003cspan\u003e:\u003c/span\u003e String \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003e@Bean\u003c/span\u003e\n    \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003ejwtDecoder\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e JwtDecoder \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eval\u003c/span\u003e jwtDecoder \u003cspan\u003e=\u003c/span\u003e JwtDecoders\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003efromOidcIssuerLocation\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eissuer\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003eas\u003c/span\u003e NimbusJwtDecoder\n        \u003cspan\u003eval\u003c/span\u003e audienceValidator\u003cspan\u003e:\u003c/span\u003e OAuth2TokenValidator\u003cspan\u003e\u0026lt;\u003c/span\u003eJwt\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eAudienceValidator\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eaudience\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003eval\u003c/span\u003e withIssuer\u003cspan\u003e:\u003c/span\u003e OAuth2TokenValidator\u003cspan\u003e\u0026lt;\u003c/span\u003eJwt\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e JwtValidators\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecreateDefaultWithIssuer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eissuer\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003eval\u003c/span\u003e withAudience\u003cspan\u003e:\u003c/span\u003e OAuth2TokenValidator\u003cspan\u003e\u0026lt;\u003c/span\u003eJwt\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eDelegatingOAuth2TokenValidator\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ewithIssuer\u003cspan\u003e,\u003c/span\u003e audienceValidator\u003cspan\u003e)\u003c/span\u003e\n        jwtDecoder\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetJwtValidator\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ewithAudience\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e jwtDecoder\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Throws\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eException\u003cspan\u003e::\u003c/span\u003e\u003cspan\u003eclass\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eoverride\u003c/span\u003e \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003econfigure\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehttp\u003cspan\u003e:\u003c/span\u003e HttpSecurity\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        http\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthorizeRequests\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces/count\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003epermitAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthenticated\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces/*\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthenticated\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eand\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eoauth2ResourceServer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ejwt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTake a closer look at the \u003ccode\u003e\u003cspan\u003econfigure\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method you just entered:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e@Throws\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eException\u003cspan\u003e::\u003c/span\u003e\u003cspan\u003eclass\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003eoverride\u003c/span\u003e \u003cspan\u003efun\u003c/span\u003e \u003cspan\u003econfigure\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ehttp\u003cspan\u003e:\u003c/span\u003e HttpSecurity\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    http\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthorizeRequests\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces/count\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003epermitAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthenticated\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces/*\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthenticated\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eand\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eoauth2ResourceServer\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ejwt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThese lines specify that the \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003ecount\u003c/code\u003e endpoints will be accessible to everyone...\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces/count\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003epermitAll\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e...while these specify that the \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003c/code\u003e endpoint and any other endpoint beginning with \u003ccode\u003e\u003cspan\u003e/\u003c/span\u003eapi\u003cspan\u003e/\u003c/span\u003ehotsauces\u003cspan\u003e/\u003c/span\u003e\u003c/code\u003e require authentication.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthenticated\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emvcMatchers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/hotsauces/*\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eauthenticated\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn other words, any request to these endpoints must include a valid access token in order to work. Otherwise, those requests will get an HTTP 401 — Unauthorized — response.\u003c/p\u003e\u003cp\u003eHere’s what the project’s final directory structure looks like:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/4LJ2qRCHiTke0NprOsST7J/084c4abc7157d44c317b50158de1fef6/hotsauces-project-structure-3.png\" alt=\"Project file structure, showing the newly-added AudienceValidator and SecurityConfig files\"/\u003e\u003c/p\u003e\u003ch2 id=\"Trying-Out-the-Secured-API\"\u003eTrying Out the Secured API\u003c/h2\u003e\u003cp\u003eNow that you’ve secured the API, it’s time to try it out!\u003c/p\u003e\u003ch3 id=\"Acquiring-an-access-token\"\u003eAcquiring an access token\u003c/h3\u003e\u003cp\u003eYou now have the necessary pieces of information needed to request a token. You’ll request the token by sending a POST request containing the information.\u003c/p\u003e\u003cp\u003eYou might find it easier to assemble the POST request in the same text editor where you pasted the information.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e start with this cURL command, replacing the \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eDomain\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eClient \u003cspan\u003eID\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eClient Secret\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e, and \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003eAPI\u003c/span\u003e Identifier\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e with the corresponding values you copied.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e --request POST \u003cspan\u003e\\\u003c/span\u003e\n    --url https://\u003cspan\u003e{\u003c/span\u003eDomain\u003cspan\u003e}\u003c/span\u003e/oauth/token \u003cspan\u003e\\\u003c/span\u003e\n    --header \u003cspan\u003e\u0026#39;content-type: application/json\u0026#39;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n    --data \u003cspan\u003e\u0026#39;{\n        \u0026#34;client_id\u0026#34;: \u0026#34;{Client ID}\u0026#34;,\n        \u0026#34;client_secret\u0026#34;: \u0026#34;{Client Secret}\u0026#34;,\n        \u0026#34;audience\u0026#34;: \u0026#34;{API Identifier}\u0026#34;,\n        \u0026#34;grant_type\u0026#34;: \u0026#34;client_credentials\u0026#34;\n    }\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e use this command instead. As with the macOS/Linux version, replace the \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eDomain\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eClient \u003cspan\u003eID\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eClient Secret\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e, and \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\u003cspan\u003eAPI\u003c/span\u003e Identifier\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e with the corresponding values you copied.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e$Body\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e @\u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;client_id\u0026#34;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;{Client ID}\u0026#34;\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;client_secret\u0026#34;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;{Client Secret}\u0026#34;\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;audience\u0026#34;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;{API Identifier}\u0026#34;\u003c/span\u003e\n    \u003cspan\u003e\u0026#34;grant_type\u0026#34;\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;client_credentials\u0026#34;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e$response\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e Invoke-RestMethod \u003cspan\u003e\u0026#34;https://{Domain}/oauth/token\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\n    -Method POST \u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    -Body \u003cspan\u003e$Body\u003c/span\u003e\n\u003cspan\u003e$response\u003c/span\u003e \u003cspan\u003e|\u003c/span\u003e ConvertTo-Json\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn response, you should receive a JSON dictionary that looks like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e{\u003c/span\u003e\n  \u003cspan\u003e\u0026#34;access_token\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;{Access Token (a 720-character string)}\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n  \u003cspan\u003e\u0026#34;expires_in\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e86400\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n  \u003cspan\u003e\u0026#34;token_type\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#34;Bearer\u0026#34;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNote that one of the dictionary keys is \u003ccode\u003eexpires_in\u003c/code\u003e, which specifies that the token will expire in 86,400 seconds, or in more convenient units, 24 hours. After that time has elapsed, the token will be invalid and you’ll have to request a new one following the same steps above.\u003c/p\u003e\u003cp\u003eCopy the \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eAccess token\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e value and paste it into the text editor with the other values.\u003c/p\u003e\u003cp\u003eYour text editor should now look something like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eAPI Identifier: \u003cspan\u003e{\u003c/span\u003eAPI Identifier\u003cspan\u003e}\u003c/span\u003e\nDomain: \u003cspan\u003e{\u003c/span\u003eDomain\u003cspan\u003e}\u003c/span\u003e\nClient ID: \u003cspan\u003e{\u003c/span\u003eClient ID\u003cspan\u003e}\u003c/span\u003e\nClient Secret: \u003cspan\u003e{\u003c/span\u003eClient Secret\u003cspan\u003e}\u003c/span\u003e\n\nAccess Token: \u003cspan\u003e{\u003c/span\u003eAccess Token\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"Trying-the-Public-Endpoints\"\u003eTrying the Public Endpoints\u003c/h3\u003e\u003cp\u003e🌶 Open a terminal or PowerShell window, navigate to the project directory, and enter \u003ccode\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003egradlew bootRun\u003c/code\u003e.\u003c/p\u003e\u003cp\u003eStart with the endpoint that remained public: The one that returns the number of hot sauces in the database.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into Terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e -i http://localhost:8080/api/hotsauces/count\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003ccode\u003e\u003cspan\u003e-\u003c/span\u003ei\u003c/code\u003e option tells cURL to \u003ccode\u003ei\u003c/code\u003enclude the HTTP response headers in its output. By using it, you can see the HTTP status code for the API’s reponse.\u003c/p\u003e\u003cp\u003eThe response should still be the number of hot sauces. It will be preceded by the response header, which should look like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eHTTP/1.1 \u003cspan\u003e200\u003c/span\u003e\nX-Content-Type-Options: nosniff\nX-XSS-Protection: \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e \u003cspan\u003emode\u003c/span\u003e\u003cspan\u003e=\u003c/span\u003eblock\nCache-Control: no-cache, no-store, max-age\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e, must-revalidate\nPragma: no-cache\nExpires: \u003cspan\u003e0\u003c/span\u003e\nX-Frame-Options: DENY\nContent-Type: application/json\nTransfer-Encoding: chunked\nDate: \u003cspan\u003e{\u003c/span\u003eDate and \u003cspan\u003etime\u003c/span\u003e when the response was issued\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe status code is the number at the end of the header’s first line: \u003cstrong\u003e200\u003c/strong\u003e, or “OK”.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eWebRequest \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/count\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou\u0026#39;re using PowerShell\u0026#39;s \u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eWebRequest\u003c/code\u003e this time, which means that the response will look like this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eStatusCode        \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e200\u003c/span\u003e\nStatusDescription \u003cspan\u003e:\u003c/span\u003e\nContent           \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e9\u003c/span\u003e\nRawContent        \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003eHTTP\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1.1\u003c/span\u003e \u003cspan\u003e200\u003c/span\u003e\n                    Transfer\u003cspan\u003e-\u003c/span\u003eEncoding\u003cspan\u003e:\u003c/span\u003e chunked\n                    Keep\u003cspan\u003e-\u003c/span\u003eAlive\u003cspan\u003e:\u003c/span\u003e timeout\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e60\u003c/span\u003e\n                    Connection\u003cspan\u003e:\u003c/span\u003e keep\u003cspan\u003e-\u003c/span\u003ealive\n                    Content\u003cspan\u003e-\u003c/span\u003eType\u003cspan\u003e:\u003c/span\u003e application\u003cspan\u003e/\u003c/span\u003ejson\n                    Date\u003cspan\u003e:\u003c/span\u003e Fri\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e23\u003c/span\u003e Jul \u003cspan\u003e2021\u003c/span\u003e \u003cspan\u003e14\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e05\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e52\u003c/span\u003e \u003cspan\u003eGMT\u003c/span\u003e\n\n                    \u003cspan\u003e9\u003c/span\u003e\nForms             \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\nHeaders           \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003eTransfer\u003cspan\u003e-\u003c/span\u003eEncoding\u003cspan\u003e,\u003c/span\u003e chunked\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003eKeep\u003cspan\u003e-\u003c/span\u003eAlive\u003cspan\u003e,\u003c/span\u003e timeout\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e60\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003eConnection\u003cspan\u003e,\u003c/span\u003e keep\u003cspan\u003e-\u003c/span\u003ealive\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003eContent\u003cspan\u003e-\u003c/span\u003eType\u003cspan\u003e,\u003c/span\u003e\n                    application\u003cspan\u003e/\u003c/span\u003ejson\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e...\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\nImages            \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\nInputFields       \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\nLinks             \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\nParsedHtml        \u003cspan\u003e:\u003c/span\u003e System\u003cspan\u003e.\u003c/span\u003e__ComObject\nRawContentLength  \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe number of sauces is the value in the \u003ccode\u003eContent\u003c/code\u003e line, and as with the macOS/Linux version, the status code is the number at the end of the header’s first line: \u003cstrong\u003e200\u003c/strong\u003e, or “OK”.\u003c/p\u003e\u003ch3 id=\"Trying-the-Protected-Endpoints\"\u003eTrying the Protected Endpoints\u003c/h3\u003e\u003cp\u003eIt’s time to try the endpoints that require authorization. Before using the token, try requesting a list of all the hot sauces without it.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into Terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e -i http://localhost:8080/api/hotsauces/\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eInstead of a JSON list of dictionaries of hot sauces, you’ll get an empty reply. The first line of the header should be your hint as to why:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eHTTP\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1.1\u003c/span\u003e \u003cspan\u003e401\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eInvoke-WebRequest\u003c/span\u003e \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou\u0026#39;ll see this reply:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke\u003cspan\u003e-\u003c/span\u003eWebRequest \u003cspan\u003e:\u003c/span\u003e The remote server returned an error\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e401\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e Unauthorized\u003cspan\u003e.\u003c/span\u003e\nAt line\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e char\u003cspan\u003e:\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\n\u003cspan\u003e+\u003c/span\u003e Invoke\u003cspan\u003e-\u003c/span\u003eWebRequest \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/\u0026#34;\u003c/span\u003e\n\u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\u003cspan\u003e~\u003c/span\u003e\n    \u003cspan\u003e+\u003c/span\u003e CategoryInfo          \u003cspan\u003e:\u003c/span\u003e InvalidOperation\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eSystem\u003cspan\u003e.\u003c/span\u003eNet\u003cspan\u003e.\u003c/span\u003eHttpWebRequest\u003cspan\u003e:\u003c/span\u003eHttpWebRequest\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003eInvoke\u003cspan\u003e-\u003c/span\u003eWebRequest\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e WebExc\n   eption\n    \u003cspan\u003e+\u003c/span\u003e FullyQualifiedErrorId \u003cspan\u003e:\u003c/span\u003e WebCmdletWebResponseException\u003cspan\u003e,\u003c/span\u003eMicrosoft\u003cspan\u003e.\u003c/span\u003ePowerShell\u003cspan\u003e.\u003c/span\u003eCommands\u003cspan\u003e.\u003c/span\u003eInvokeWebRequestCommand\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe \u003cstrong\u003e401\u003c/strong\u003e status code means “Unauthorized”. To refer back to the nightclub metaphor, you’re trying to get into the club without a wristband.\u003c/p\u003e\u003ch4 id=\"Getting-a-list-of-all-the-hot-sauces-from-the-secured-API\"\u003eGetting a list of all the hot sauces from the secured API\u003c/h4\u003e\u003cp\u003eMake the request again, this time including the access token.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into the terminal, making sure to replace \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eAccess Token\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e with the value that you copied into your text editor:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e -i --request GET \u003cspan\u003e\\\u003c/span\u003e\n     --url http://localhost:8080/api/hotsauces/ \u003cspan\u003e\\\u003c/span\u003e\n     -H \u003cspan\u003e\u0026#34;Content-Type: application/json\u0026#34;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n     -H \u003cspan\u003e\u0026#34;authorization: Bearer {Access Token}\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell, making sure to replace \u003ccode\u003e\u003cspan\u003e{\u003c/span\u003eAccess Token\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e with the value that you copied into your text editor:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$accessToken \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;{Access Token}\u0026#34;\u003c/span\u003e\n$headers \u003cspan\u003e=\u003c/span\u003e @\u003cspan\u003e{\u003c/span\u003e\n    Authorization \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Bearer $accessToken\u0026#34;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n$response \u003cspan\u003e=\u003c/span\u003e Invoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/\u0026#34;\u003c/span\u003e `\n    \u003cspan\u003e-\u003c/span\u003eHeaders $headers\n$response \u003cspan\u003e|\u003c/span\u003e ConvertTo\u003cspan\u003e-\u003c/span\u003eJson\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis time, when you make the request, you’ll get the list of all the hot sauces.\u003c/p\u003e\u003ch4 id=\"Adding-a-hot-sauce-using-the-secured-API\"\u003eAdding a hot sauce using the secured API\u003c/h4\u003e\u003cp\u003eTry adding add a hot sauce using the access token.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into the terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e -i --request POST \u003cspan\u003e\\\u003c/span\u003e\n    --url http://localhost:8080/api/hotsauces/ \u003cspan\u003e\\\u003c/span\u003e\n    -H \u003cspan\u003e\u0026#34;Content-Type: application/json\u0026#34;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n    --data \u003cspan\u003e\u0026#39;{\u0026#34;brandName\u0026#34;: \u0026#34;Dave’s Gourmet\u0026#34;, \u0026#34;sauceName\u0026#34;: \u0026#34;Temporary Insanity\u0026#34;, \u0026#34;url\u0026#34;: \u0026#34;https://store.davesgourmet.com/ProductDetails.asp?ProductCode=DATE\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This sauce has all the flavor of Dave’s Original Insanity with less heat. Finally, there’s sauce for when you only want to get a little crazy in the kitchen. Add to stews, burgers, burritos, and pizza, or any food that needs an insane boost. As with all super hot sauces, this sauce is best enjoyed one drop at a time!\u0026#34;, \u0026#34;heat\u0026#34;: 57000}\u0026#39;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n    -H \u003cspan\u003e\u0026#34;authorization: Bearer {Access Token}\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$body \u003cspan\u003e=\u003c/span\u003e @\u003cspan\u003e{\u003c/span\u003e\n    brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Dave\u0026#39;s Gourmet\u0026#34;\u003c/span\u003e\n    sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Temporary Insanity\u0026#34;\u003c/span\u003e\n    url \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;https://store.davesgourmet.com/ProductDetails.asp?ProductCode=DATE\u0026#34;\u003c/span\u003e\n    description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;This sauce has all the flavor of Dave\\\u0026#39;s Original Insanity with less heat. Finally, there\u0026#39;s sauce for when you only want to get a little crazy in the kitchen. Add to stews, burgers, burritos, and pizza, or any food that needs an insane boost. As with all super hot sauces, this sauce is best enjoyed one drop at a time!\u0026#34;\u003c/span\u003e\n    heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e57000\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003e|\u003c/span\u003e ConvertTo\u003cspan\u003e-\u003c/span\u003eJson\n$response \u003cspan\u003e=\u003c/span\u003e Invoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\u003cspan\u003e\n    -Method POST \u003c/span\u003e\u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003eContentType \u003cspan\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\u003cspan\u003e\n    -Headers $headers \u003c/span\u003e\u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003eBody $body\n$response \u003cspan\u003e|\u003c/span\u003e ConvertTo\u003cspan\u003e-\u003c/span\u003eJson\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Editing-a-hot-sauce-using-the-secured-API\"\u003eEditing a hot sauce using the secured API\u003c/h4\u003e\u003cp\u003eTry editing the hot sauce with \u003ccode\u003eid\u003c/code\u003e 10.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into the terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e -i --request PUT \u003cspan\u003e\\\u003c/span\u003e\n    --url http://localhost:8080/api/hotsauces/10 \u003cspan\u003e\\\u003c/span\u003e\n    -H \u003cspan\u003e\u0026#34;Content-Type: application/json\u0026#34;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n    --data \u003cspan\u003e\u0026#39;{\u0026#34;brandName\u0026#34;: \u0026#34;NewCo\u0026#34;, \u0026#34;sauceName\u0026#34;: \u0026#34;Generic Hot Sauce\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;It’s hot. It’s sauce. That’s it.\u0026#34;, \u0026#34;heat\u0026#34;: 1000}\u0026#39;\u003c/span\u003e \u003cspan\u003e\\\u003c/span\u003e\n    -H \u003cspan\u003e\u0026#34;authorization: Bearer {Access Token}\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$body \u003cspan\u003e=\u003c/span\u003e @\u003cspan\u003e{\u003c/span\u003e\n    brandName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;NewCo\u0026#34;\u003c/span\u003e\n    sauceName \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;Generic Hot Sauce\u0026#34;\u003c/span\u003e\n    description \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e\u0026#34;It’s hot. It’s sauce. That’s it.\u0026#34;\u003c/span\u003e\n    heat \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e1000\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e \u003cspan\u003e|\u003c/span\u003e ConvertTo\u003cspan\u003e-\u003c/span\u003eJson\n$response \u003cspan\u003e=\u003c/span\u003e Invoke\u003cspan\u003e-\u003c/span\u003eRestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/10\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\u003cspan\u003e\n    -Method PUT \u003c/span\u003e\u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003eContentType \u003cspan\u003e\u0026#34;application/json\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\u003cspan\u003e\n    -Headers $headers \u003c/span\u003e\u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003eBody $body\n$response \u003cspan\u003e|\u003c/span\u003e ConvertTo\u003cspan\u003e-\u003c/span\u003eJson\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNote that since you didn’t change the \u003ccode\u003eurl\u003c/code\u003e property of the sauce, it remains the same.\u003c/p\u003e\u003ch4 id=\"Deleting-a-hot-sauce-using-the-secured-API\"\u003eDeleting a hot sauce using the secured API\u003c/h4\u003e\u003cp\u003eThen try deleting the hot sauce with \u003ccode\u003eid\u003c/code\u003e 10.\u003c/p\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on macOS or Linux,\u003c/strong\u003e enter this command into the terminal:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003ecurl\u003c/span\u003e -i --request DELETE \u003cspan\u003e\\\u003c/span\u003e\n    --ur l http://localhost:8080/api/hotsauces/10\n    -H \u003cspan\u003e\u0026#34;authorization: Bearer {Access Token}\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e🌶 \u003cstrong\u003eIf you’re on Windows,\u003c/strong\u003e enter this command into PowerShell:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eInvoke-RestMethod \u003cspan\u003e\u0026#34;http://localhost:8080/api/hotsauces/10\u0026#34;\u003c/span\u003e \u003cspan\u003e\u003cspan\u003e`\u003c/span\u003e\n    -Method DELETE \u003cspan\u003e`\u003c/span\u003e\u003c/span\u003e\n    -Headers \u003cspan\u003e$headers\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eList the hot sauces or get a count to confirm that the sauce is no longer in the list.\u003c/p\u003e\u003cp\u003eIf you’ve made it this far, congratulations! You’ve just developed and secured an API with Spring Boot, Kotlin, and Auth0!\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "See how easy it is to bootstrap a CRUD API with Spring Initializr, build it with Spring Boot and Kotlin, and secure it with Auth0.",
      "date_published": "2021-08-11T22:32:00Z",
      "author": {
        "name": "A closer look at the authorizations you just defined"
      }
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/strategy-design-pattern-in-python/",
      "title": "Strategy Design Pattern in Python",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eWhile you are developing software applications, you might run into some problems implementing the feature you need. Software design patterns are typical solutions for some of these commonly occurring problems while developing software applications using Object-oriented design. In this article, let\u0026#39;s learn about one of the popular design patterns, \u003cstrong\u003eStrategy\u003c/strong\u003e pattern, and its implementation in Python.\u003c/p\u003e\u003ch2 id=\"Introduction\"\u003eIntroduction\u003c/h2\u003e\u003cp\u003eBefore diving into the strategy pattern, you should be familiar with some of the basics concepts of \u003ca href=\"https://en.wikipedia.org/wiki/Object-oriented_programming\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eObject-Oriented Programming\u003c/a\u003e (OOP). The entire concept of design patterns revolves around \u003cem\u003eclasses\u003c/em\u003e and \u003cem\u003eobjects\u003c/em\u003e. The design patterns are more high-level solutions for commonly occurring problems. They are like the blueprint to solve a specific problem. They are not confined to a single programming language. You can use design patterns in any programming language that supports object-oriented programming; the process will be the same while the syntax changes.\n\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/4tPzU9nvm5jUwrXAeeHH3e/1badc171178aa953f7df05f08960f228/01_design-types.jpg\" alt=\"design patterns\"/\u003e\nThere are several types of design patterns, including \u003cstrong\u003eCreational\u003c/strong\u003e, \u003cstrong\u003eStructural\u003c/strong\u003e, and \u003cstrong\u003eBehavioral\u003c/strong\u003e patterns. Creational patterns are about different ways to create objects that increase the flexibility of our code. Structural patterns are about relations between the objects, making larger structures flexible using objects and classes. Behavioral patterns are about effective communications and interactions between objects.\u003c/p\u003e\u003ch2 id=\"Strategy\"\u003eStrategy\u003c/h2\u003e\u003cp\u003e\u003cstrong\u003eStrategy Pattern\u003c/strong\u003e is a design pattern that enables our application to select algorithms at runtime, making our application flexible. The original book on \u003ca href=\"https://en.wikipedia.org/wiki/Design_Patterns\" target=\"_blank\" rel=\"noreferrer noopener\"\u003edesign patterns\u003c/a\u003e written by \u003ca href=\"http://wiki.c2.com/?GangOfFour\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eGoF\u003c/a\u003e states that \u0026#34;Strategy pattern intends to define a family of algorithms, \u003ca href=\"https://auth0.com/blog/strategy-design-pattern-in-python/shorturl.at/rHJR7\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eencapsulates\u003c/a\u003e each one, and\nmake them interchangeable.\u0026#34; More specifically, it lets you define a set of algorithms that are interchangeable according to some factors at runtime. Strategy Pattern falls under the category of behavioral design patterns as it enables an algorithm\u0026#39;s behavior to be selected at runtime.\u003c/p\u003e\u003ch2 id=\"Usage\"\u003eUsage\u003c/h2\u003e\u003cp\u003eWhile developing software applications, you may have a few alternatives to accomplish something in your code. Depending on your client choices, data sources, or other factors, you want to do something different without changing the code. You often tend to define algorithms using conditional statements for different situations in the main class of the code. But it is not an elegant way of writing better code. It makes the main class of your code quite long, and it becomes too hard to maintain the application.\u003c/p\u003e\u003cp\u003eIn situations like these, the strategy pattern is an ideal solution. The strategy pattern suggests you define classes, called \u003cem\u003estrategies\u003c/em\u003e, for your algorithms of different situations. The strategy is referenced inside the main class, called \u003cem\u003econtext\u003c/em\u003e, and the code works according to that situation. The context does not select an appropriate strategy for the case. Instead, the client passes the desired strategy to the context.\u003c/p\u003e\u003cp\u003eFor example, if you have a chess application, you can select the difficulty level between easy, medium, or hard. The computer chooses an algorithm according to the level you choose. It is one of the best examples where the strategy pattern is used.\u003c/p\u003e\u003cp\u003eStrategy pattern follows the \u003ca href=\"https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eOpen/close principle\u003c/a\u003e; a software application is open for extension but closed for modification. It means you can add any number of additional strategies without modifying the main class. It makes your code more flexible and easy to maintain.\u003c/p\u003e\u003ch2 id=\"UML-Diagrams\"\u003eUML Diagrams\u003c/h2\u003e\u003cp\u003eThe following is the UML diagram of the Strategy pattern.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/21fvYspoS3Voqv7pKyDE4E/e89c3e5f81d51b3d15a436cd81e795f7/02_UML-Strategy.jpg\" alt=\"UML Strategy\"/\u003e\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003e\u003cstrong\u003eContext\u003c/strong\u003e — It is the primary class of our application. It maintains a reference to one of the concrete strategies.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eStrategy\u003c/strong\u003e — Strategy interface is common to all supported strategies. Context can communicate with other strategies only through the strategy interface.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eConcreteStrategies\u003c/strong\u003e — These are the classes that implement the algorithm using the Strategy interface.\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"Implementation\"\u003eImplementation\u003c/h2\u003e\u003cp\u003eLet\u0026#39;s see the step-by-step process of implementing a strategy pattern.\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003eYou should first identify algorithms you want to execute as concrete strategies in the primary class.\u003c/li\u003e\u003cli\u003eDefine the \u003cem\u003econtext\u003c/em\u003e (primary class) and add a reference to the strategy, a method to set the strategy, and another method to execute the strategy. You may also define a default strategy to switch between strategies only if they do not like the default one.\u003c/li\u003e\u003c/ol\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e## context - the primary class\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eContext\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    strategy\u003cspan\u003e:\u003c/span\u003e Strategy  \u003cspan\u003e## the strategy interface\u003c/span\u003e\n\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003esetStrategy\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e,\u003c/span\u003e strategy\u003cspan\u003e:\u003c/span\u003e Strategy \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e strategy \u003cspan\u003eis\u003c/span\u003e \u003cspan\u003enot\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n            self\u003cspan\u003e.\u003c/span\u003estrategy \u003cspan\u003e=\u003c/span\u003e strategy\n        \u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n            self\u003cspan\u003e.\u003c/span\u003estrategy \u003cspan\u003e=\u003c/span\u003e Default\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eexecuteStrategy\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e.\u003c/span\u003estrategy\u003cspan\u003e.\u003c/span\u003eexecute\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFirst, we define the \u003ccode\u003estrategy\u003c/code\u003e field for storing a reference to a strategy object, and two methods, \u003ccode\u003esetStrategy\u003c/code\u003e and \u003ccode\u003eexecuteStrategy\u003c/code\u003e. The \u003ccode\u003esetStrategy\u003c/code\u003e sets the strategy selected if a user selects an option, or else the \u003ccode\u003e\u003cspan\u003edefault\u003c/span\u003e\u003c/code\u003e one.\u003c/p\u003e\u003col start=\"3\"\u003e\u003cli\u003eDefine the \u003cem\u003eStrategy Interface\u003c/em\u003e, which is common to all the concrete strategies. The \u003ccode\u003eStrategy\u003c/code\u003e interface has an abstract method that you can alter in concrete strategies.\u003c/li\u003e\u003c/ol\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efrom\u003c/span\u003e abc \u003cspan\u003eimport\u003c/span\u003e ABC\u003cspan\u003e,\u003c/span\u003e abstractmethod\n\n\u003cspan\u003e## Strategy interface\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eStrategy\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eABC\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003e@abstractmethod\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eexecute\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003epass\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003col start=\"4\"\u003e\u003cli\u003eDefine the concrete strategies which should implement the \u003ccode\u003eStrategy\u003c/code\u003e interface. These concrete strategies must have a common method that overrides the \u003ccode\u003eexecute\u003c/code\u003e method of the \u003ccode\u003eStrategy\u003c/code\u003e interface.\u003c/li\u003e\u003c/ol\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e## Concrete strategies\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eConcreteStrategyA\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eStrategy\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eexecute\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e\u0026#34;ConcreteStrategy A\u0026#34;\u003c/span\u003e\n\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eConcreteStrategyB\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eStrategy\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eexecute\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e\u0026#34;ConcreteStrategy B\u0026#34;\u003c/span\u003e\n\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eDefault\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eStrategy\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eexecute\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e\u0026#34;Default\u0026#34;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003col start=\"5\"\u003e\u003cli\u003eNow, users can select the strategy they want at the runtime. Create an object of \u003cem\u003econtext\u003c/em\u003e and pass a concrete strategy.\u003c/li\u003e\u003c/ol\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e## Example application\u003c/span\u003e\nappA \u003cspan\u003e=\u003c/span\u003e Context\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nappB \u003cspan\u003e=\u003c/span\u003e Context\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nappC \u003cspan\u003e=\u003c/span\u003e Context\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003e## selecting stratigies\u003c/span\u003e\nappA\u003cspan\u003e.\u003c/span\u003esetStrategy\u003cspan\u003e(\u003c/span\u003eConcreteStrategyA\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nappB\u003cspan\u003e.\u003c/span\u003esetStrategy\u003cspan\u003e(\u003c/span\u003eConcreteStrategyB\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nappC\u003cspan\u003e.\u003c/span\u003esetStrategy\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e    \u003cspan\u003e## sets to default strategy\u003c/span\u003e\n\n\u003cspan\u003e## each object below execute different strategy with same method\u003c/span\u003e\nappA\u003cspan\u003e.\u003c/span\u003eexecuteStrategy\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nappB\u003cspan\u003e.\u003c/span\u003eexecuteStrategy\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\nappC\u003cspan\u003e.\u003c/span\u003eexecuteStrategy\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe output of the above code will be as follow:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eConcreteStrategy \u003cspan\u003eA\u003c/span\u003e\nConcreteStrategy \u003cspan\u003eB\u003c/span\u003e\nDefault\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf you want to use another strategy, replace the ConcreteStrategy instance with the strategy you want. You can add a new concrete strategy without changing anything in the context.\u003c/p\u003e\u003ch2 id=\"Example\"\u003eExample\u003c/h2\u003e\u003cp\u003eLet\u0026#39;s design a \u003ca href=\"https://en.wikipedia.org/wiki/Rock_paper_scissors\" target=\"_blank\" rel=\"noreferrer noopener\"\u003erock paper scissors\u003c/a\u003e game using strategy pattern. You can select any strategy among rock, paper, scissors, and random to play against the computer. The below example code uses the strategy pattern to implement various strategies.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e## Changing the strategy among Rock, Paper, Scissors, and Random\u003c/span\u003e\n\n\u003cspan\u003eimport\u003c/span\u003e random\n\u003cspan\u003efrom\u003c/span\u003e abc \u003cspan\u003eimport\u003c/span\u003e ABC\u003cspan\u003e,\u003c/span\u003e abstractmethod\n\n\u003cspan\u003e## Strategy interface \u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eStrategy\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eABC\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003e@abstractmethod\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eselection\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003epass\u003c/span\u003e\n\n\u003cspan\u003e## Concrete strategies\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eRock\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eStrategy\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003e## actual application will have the algorithm instead this method\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eselection\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e\u0026#34;Rock\u0026#34;\u003c/span\u003e\n\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003ePaper\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eStrategy\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eselection\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e\u0026#34;Paper\u0026#34;\u003c/span\u003e\n\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eScissors\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eStrategy\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eselection\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e\u0026#34;Scissors\u0026#34;\u003c/span\u003e\n\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eRandom\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eStrategy\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eselection\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003estr\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        options \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e\u0026#34;Rock\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;Paper\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;Scissors\u0026#34;\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e random\u003cspan\u003e.\u003c/span\u003echoice\u003cspan\u003e(\u003c/span\u003eoptions\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003e## Context class\u003c/span\u003e\n\u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eGame\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    strategy\u003cspan\u003e:\u003c/span\u003e Strategy\n\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003e__init__\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e,\u003c/span\u003e strategy\u003cspan\u003e:\u003c/span\u003e Strategy \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e strategy \u003cspan\u003eis\u003c/span\u003e \u003cspan\u003enot\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n            self\u003cspan\u003e.\u003c/span\u003estrategy \u003cspan\u003e=\u003c/span\u003e strategy\n        \u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n            self\u003cspan\u003e.\u003c/span\u003estrategy \u003cspan\u003e=\u003c/span\u003e Random\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003edef\u003c/span\u003e \u003cspan\u003eplay\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eself\u003cspan\u003e,\u003c/span\u003e sec\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e \u003cspan\u003eNone\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        s1 \u003cspan\u003e=\u003c/span\u003e self\u003cspan\u003e.\u003c/span\u003estrategy\u003cspan\u003e.\u003c/span\u003eselection\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        s2 \u003cspan\u003e=\u003c/span\u003e sec\u003cspan\u003e.\u003c/span\u003estrategy\u003cspan\u003e.\u003c/span\u003eselection\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e s1 \u003cspan\u003e==\u003c/span\u003e s2\u003cspan\u003e:\u003c/span\u003e\n            \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;It\u0026#39;s a tie\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003eelif\u003c/span\u003e s1 \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e\u0026#34;Rock\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n            \u003cspan\u003eif\u003c/span\u003e s2 \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e\u0026#34;Scissors\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n                \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Player 1 wins!\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n                \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Player 2 wins!\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003eelif\u003c/span\u003e s1 \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e\u0026#34;Scissors\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n            \u003cspan\u003eif\u003c/span\u003e s2 \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e\u0026#34;Paper\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n                \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Player 1 wins!\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n                \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Player 2 wins!\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003eelif\u003c/span\u003e s1 \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e\u0026#34;Paper\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n            \u003cspan\u003eif\u003c/span\u003e s2 \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e\u0026#34;Rock\u0026#34;\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n                \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Player 1 wins!\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003eelse\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n                \u003cspan\u003eprint\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Player 2 wins!\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003e## Example application\u003c/span\u003e\n\u003cspan\u003e## PLayer 1 can select his strategy\u003c/span\u003e\nplayer1 \u003cspan\u003e=\u003c/span\u003e Game\u003cspan\u003e(\u003c/span\u003ePaper\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003e# Player 2 gets to select\u003c/span\u003e\nplayer2 \u003cspan\u003e=\u003c/span\u003e Game\u003cspan\u003e(\u003c/span\u003eRock\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003e# After the second player choice, we call the play method\u003c/span\u003e\nplayer1\u003cspan\u003e.\u003c/span\u003eplay\u003cspan\u003e(\u003c/span\u003eplayer2\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAccording to the strategies chosen by the two players, the expected output would be:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003ePlayer \u003cspan\u003e1\u003c/span\u003e wins\u003cspan\u003e!\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTest all the other cases of the game using all the other strategies. To add extra fun to the game, try creating two more strategies to the above example according to \u003ca href=\"https://bigbangtheory.fandom.com/wiki/Rock,_Paper,_Scissors,_Lizard,_Spock\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ethe Lizard-Spock expansion\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"Conclusion\"\u003eConclusion\u003c/h2\u003e\u003cp\u003eIn this article, you have seen where and how to use the strategy pattern in your code. You can build flexible and maintainable software applications using the strategy pattern. You can switch between algorithms at runtime according to the user\u0026#39;s decision without changing the code. But if your code only has a couple of algorithms, there is no need to use strategy. It just makes your code look complex with numerous classes and objects. The Strategy pattern can work as an alternative for conditional statements for selecting the behavior of the application. But the potential drawback of strategy pattern is that the users must know how strategies differ from each other to select what they need. So it would be best if you use the strategy pattern only when the variation in behavior of the application is relevant to the users. So try to make your software applications flexible using the strategy pattern.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Learn strategy design pattern to write better code in Python",
      "date_published": "2021-08-10T14:58:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/developerday-helps-developers-build-the-future-of-identity/",
      "title": "Developer Day Helps Developers Build the Future of Identity",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eYou’ve probably heard by now that \u003ca href=\"https://auth0.com/blog/developers-explore-okta-auth0/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eOkta and Auth0 have joined forces\u003c/a\u003e. As a developer advocate for Auth0, I’m really excited to see how we can combine our forces to make identity even better for the developer community.\u003c/p\u003e\u003cp\u003eYou might not be aware that I’m a huge fan of creating events that directly address the needs of developer communities. From the first conference I ran in 2004 to the user group meetings that are still going to this day, you can imagine my excitement when I heard we (Auth0 and Okta) were going to run an online event together!\u003c/p\u003e\u003cp\u003eThis time, members of my team are taking the lead, so I\u0026#39;ll be in the same boat as many of you experiencing Developer Day as it happens, so I thought it might be helpful to share my thoughts on the event and what I’m looking forward to the most.\u003c/p\u003e\u003cp\u003eHit up the \u003ca href=\"http://community.auth0.com/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ecommunity forum\u003c/a\u003e if I miss something that’s important to you — there’s so much for everyone, I’m sure you’ll help others out too.\u003c/p\u003e\u003ch2 id=\"What-Is-Developer-Day-\"\u003eWhat Is Developer Day?\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://www.okta.com/developerday/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eDeveloper Day\u003c/a\u003e creates a space for all developers to discover how the identity space is evolving, learn best practices in privacy and security, and gain insights from developer experiences. It brings speakers from across these sectors right to your desktop, and best of all — it’s free!\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eSpeaking of free, did you know you can also \u003ca href=\"https://auth0.com/signup\" data-amp-replace=\"CLIENT_ID\" data-amp-addparams=\"anonId=CLIENT_ID(cid-scope-cookie-fallback-name)\" target=\"_blank\" rel=\"noreferrer noopener\"\u003esign up for a free Auth0 account\u003c/a\u003e at any time? Why not try it out today?\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/12g1Ga4gP8X04Xn0H0nnFt/5b4ae4b06847a028d9a784a46ec48b26/cassidy-alyssa-kapehe.png\" alt=\"Developer Day speakers Cassidy Williams, Alyssa Miller, and Kapehe\"/\u003e\u003c/p\u003e\u003cp\u003eMore specifically, it’s a one-day, single-track, virtual event, and while I’m proud to see some of my colleagues’ names in the speaker list, the lineup also features the likes of \u003cstrong\u003eCassidy Williams\u003c/strong\u003e (Director of Developer Experience at Netlify), \u003cstrong\u003eAlyssa Miller\u003c/strong\u003e (Hacker, Researcher, and Security Advocate), and \u003cstrong\u003eKapehe\u003c/strong\u003e (Developer Relations at Sanity.io, and yes, you might remember she used to \u003ca href=\"https://auth0.com/blog/authors/kapehe-jorgenson/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ework at Auth0\u003c/a\u003e too).\u003c/p\u003e\u003ch2 id=\"What-Can-I-Learn-\"\u003eWhat Can I Learn?\u003c/h2\u003e\u003cp\u003eThe first place I tend to go when looking at an event is the agenda, and skimming over this one, we’re in for a breadth and depth of information.\u003c/p\u003e\u003cp\u003eThe keynote is where the day’s journey starts, and Alyssa’s \u003cstrong\u003eupdates from the world of cyber security\u003c/strong\u003e are sure to offer a great insight that sets the foundation for the day. I’m a huge advocate for helping all developers understand security principles and states of play. Even if you never have to deal with part of it yourself, you’ll always benefit from knowing why something is done and how you’re being protected.\u003c/p\u003e\u003ch2 id=\"From-APIs-to-IoT--Live-Demos-and-Security-Fundamentals\"\u003eFrom APIs to IoT: Live Demos and Security Fundamentals\u003c/h2\u003e\u003cp\u003eFrom there, we meander down a path from securing Python APIs to securing your Home Automation and IoT devices. Personally, I’m a sucker for anything IoT-related, so I’ll be paying attention to this one.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/hd4kE3aQJFlX45nvwu3xF/6496580a2a7c7da50a6591f781035097/aaron-vittorio.png\" alt=\"Developer Day speakers Aaron Parecki and Vittorio Bertocci\"/\u003e\u003c/p\u003e\u003cp\u003eHaving grown up on YouTube videos (okay, I’m not that young...) about identity from both Aaron Parecki (or as I like to call him, Mr OAuth, but don’t tell him I told you) and Vittorio Bertocci (the man whose identity knowledge is dwarfed only by his magnificent hair), what better than a talk from both of them? The talk will not only cover where we’ve come from, but what the future of OAuth has in store for us.\u003c/p\u003e\u003ch2 id=\"Advanced-Topics-like-Verifiable-Credentials-and-Integration-with-Third-Parties\"\u003eAdvanced Topics like Verifiable Credentials and Integration with Third Parties\u003c/h2\u003e\u003cp\u003eBut identity isn’t just about logging in and loading your glamour shot from Gravatar. I just recently learned about verifiable credentials, and wow - it’s such a powerful concept with so many use cases, I just can’t even! The topic deserves its own article, but one example is around payments, and Uchi Uchibeke’s talk is going to be fascinating, to be sure.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/71FxWB7JqseFrDM9mF63Go/bd98bfcda1f9662b1c7de0bfab486599/uchi.png\" alt=\"Developer Day speaker Uchi Uchibeke\"/\u003e\u003c/p\u003e\u003cp\u003eUchi is flanked by demos on integrating Auth0 with NextJS for securing your webapps and Okta with Kong for securing continuous integration, delivery, and deployment. I think this highlights that the team who worked on the agenda really put a lot of thought into the balance between talks that can have immediate benefit to us developers, as well as enough advanced topics to keep our creative juices flowing.\u003c/p\u003e\u003cp\u003eTalking of immediately applicable information, if you want to learn how to validate REST API authentication and authorization, the JFrog talk is for you.\u003c/p\u003e\u003ch2 id=\"Authentication-in-Gaming-and-Extended-Realities\"\u003eAuthentication in Gaming and Extended Realities\u003c/h2\u003e\u003cp\u003eIf you thought the IoT talk was a bit out of the box, the Gaming and XR talk might just be in a whole other room! Not literally. I mean — it’s a virtual event. There aren’t any rooms. There aren’t any boxes either, for that matter. I digress.\u003c/p\u003e\u003cp\u003eI won’t admit to being a huge gamer. I load up Poly Bridge 2 every now and then. Does Minesweeper count? One thing I do know, though, is that the authentication experience in games can be awful, and when you get into any extended reality (XR), well. Let’s not go there.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/2REEADn8ARvYmok2WNAt5O/9185928ac397dced701f3cb2d252e4b9/nick.png\" alt=\"Developer Day speaker Nick Gamb\"/\u003e\u003c/p\u003e\u003cp\u003eWe’ll let Okta\u0026#39;s Nick Gamb go there instead, as he tells us about the propensity for this industry to be targeted by hackers. Follow his advice, and maybe we can all keep playing in the knowledge that our Minedimes are safe. (See — I told you I’m not a huge gamer.)\u003c/p\u003e\u003ch2 id=\"Adding-Pixie-Dust-to-Enhance-Security\"\u003eAdding Pixie Dust to Enhance Security\u003c/h2\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/2tBAGZHtBlb4Dt1P21WzAS/2cd4c6438265b64c39bb39b89e6945b9/milecia.png\" alt=\"Developer Day speaker Milecia McGregor\"/\u003e\u003c/p\u003e\u003cp\u003eWith two talks left for the day, I’m personally keen to catch Milecia McGregor from Mediavine talk about pixies! Stop it, autocorrect. PKCE! While most SDKs magically hide away much of the implementation, it’s still worth understanding how authentication flows work and how they can be improved. The most common OAuth flow is debatably the Authcode flow, but PKCE makes it even better! Come along to find out how. I’ll be at the front taking notes.\u003c/p\u003e\u003ch2 id=\"Closing-Keynote\"\u003eClosing Keynote\u003c/h2\u003e\u003cp\u003eIt’s a packed event — thank goodness there are a couple of breaks during the day — and we finish with a closing keynote from Cassidy Williams. The agenda teases us with the mere existence of this session, and perhaps we’ll find out more before the event. In any case, I’ll not be missing it.\u003c/p\u003e\u003cp\u003eTell us in the \u003ca href=\"http://community.auth0.com/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ecommunity forum\u003c/a\u003e what you’re looking forward to the most, and I hope to see some of you in the chat room on the day!\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "What is Developer Day? Developer Advocate, Ben Dechrai, explores the lineup and shares his thoughts from a delegate's perspective.",
      "date_published": "2021-08-09T16:30:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/here-s-something-new-for-you-identity-os/",
      "title": "Here’s Something New for You: Identity OS",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eAuthentication has become so much more than just a login box.\u003c/p\u003e\u003cp\u003eSure, that’s still what consumers see when they are eagerly clicking towards whatever pizza, handbag, or Playstation pre-sale link they want to get to ASAP.\u003c/p\u003e\u003cp\u003eBut it’s the expectation around what is happening when they click that has increased. Consumers demand the convenience of a seamless login but also want to know that their card details are secure and that their identity is protected against any breaches of privacy.\u003c/p\u003e\u003cp\u003eIn the past, it was about trade-offs. But consumers don’t expect trade-offs, so that’s why we wanted to develop an identity operating system that lets everyone —  from IT teams to devs — build authentication that works now and with whatever the future throws at it.\u003c/p\u003e\u003cp\u003eOkay, So That’s Why We Need a New Way, but...\u003c/p\u003e\u003ch2 id=\"What-Is-an-Identity-OS-\"\u003eWhat Is an Identity OS?\u003c/h2\u003e\u003cp\u003eThe Auth0 identity operating system (identity OS) is a cloud-native, adaptable platform for development teams. Built with extensible building blocks, the Auth0 identity OS enables organizations to manage the complexities of today’s identity management while also prioritizing the security, privacy, and convenience of their end-users. \u003c/p\u003e\u003cp\u003eStriking the perfect balance among these priorities requires identity to integrate a myriad of different services and creates a significant integration hurdle. Identity ecosystem operators can now manage these complex integration needs with the flexibility of full-spectrum code (pro-code, low-code, and no code solutions). \u003c/p\u003e\u003cp\u003eCustomizing to the requirements of different development teams removes their need to focus on identity infrastructure when building differentiated applications. This level of adaptability is a huge benefit for enterprises that are confronted with converging use cases and managing the eroding lines between identity for employees, business partners, and consumers.\u003c/p\u003e\u003cp\u003eSounds good, but...\u003c/p\u003e\u003ch2 id=\"What-s-the-Three-Benefits-I-Should-Really-Care-About-\"\u003eWhat’s the Three Benefits I Should Really Care About?\u003c/h2\u003e\u003ch3 id=\"1--It-s-all-about-adaptability\"\u003e1. It’s all about adaptability\u003c/h3\u003e\u003cp\u003eIf anyone reading this has never had to change their product roadmap quickly, then you are one of the lucky ones. With the explosion of consumer-friendly services made possible through digital applications, consumer expectations are constantly changing. That beautiful Netflix UX is what they expect from everything (even public sector services these days are stepping their game up). So the Auth0 identity OS is built to be as adaptable as your business needs to be, without forcing you into clunky legacy features that you will take years to strip out.\u003c/p\u003e\u003ch3 id=\"2--We-re-living-in-a-modular-world\"\u003e2. We’re living in a modular world\u003c/h3\u003e\u003cp\u003eThe best technology is the most open. There are so many amazing integrations and APIs being made by devs, so the Auth0 identity OS provides modular identity building blocks with integrations and industry blueprints.\u003c/p\u003e\u003ch3 id=\"3--Breadth-rather-than-tiny-boxes\"\u003e3. Breadth rather than tiny boxes\u003c/h3\u003e\u003cp\u003eIdentity is converging, and the lines between “use cases” are collapsing. When we talk about use cases, we mean allowing employees secure access to files and apps through Single Sign On (SSO); or allowing a subscriber of a media service access via their social accounts.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eThe Auth0 identity OS provides support for the full breadth of identity needs. \u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eTraditionally the identity industry has created single-purpose products for Workforce Identity, Business Identity, and Consumer Identity. But the company needs rarely fit into simple, separated boxes. The lines between identity use cases are eroding because rarely does a company only require one type. \u003c/p\u003e\u003ch2 id=\"Anything-Else-I-Should-Know-\"\u003eAnything Else I Should Know?\u003c/h2\u003e\u003cp\u003eIf you’ve made it this far, then you seem like the kind of person who would appreciate some of the more technical, finer points.\u003c/p\u003e\u003cp\u003eHere’s what the Auth0 identity OS offers:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003eA customizable cut-of-the-box login experience\u003c/strong\u003e — Universal Login is our first huge benefit to developers. It’s an embeddable client experience that requires zero custom code to set up while allowing developers to quickly add capabilities to it, including social login and multi-factor authentication (MFA), without making any changes to your app’s code.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eUser management built-in\u003c/strong\u003e — Auth0 gives you a secure and intuitive way of managing your user identities, including password resets, creating, blocking, and deleting users via the Users Dashboard or via the Auth0 API.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eControl \u0026amp; customization\u003c/strong\u003e — Extend with code: All applications and scenarios are different. Auth0’s Actions extend the functionality of Auth0’s base product to adapt it to your company needs and integrate it with other applications and services.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCalling APIs and external resources\u003c/strong\u003e — Once your user authenticates, Auth0 will generate an ID Token and an Access Token that will be passed back to your application. The Access Token can then be used to call your API and/or any external resource.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"And-That-s-It--Now-It-s-up-to-You-to-Build-Something-Awesome\"\u003eAnd That’s It, Now It’s up to You to Build Something Awesome\u003c/h2\u003e\u003cp\u003eThe Auth0 identity OS is here to give you the tools to build more convenient, secure, and private authentication experiences for your customers and employees. \u003c/p\u003e\u003cp\u003eRead more at \u003ca href=\"https://auth0.com/identity-os\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehttps://auth0.com/identity-os\u003c/a\u003e \u003c/p\u003e\u003cp\u003eOr get in touch today to let us know what you think.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Introducing the new way to think about and build identity",
      "date_published": "2021-08-09T14:54:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/deployment-strategies-in-kubernetes/",
      "title": "Deployment Strategies In Kubernetes",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cstrong\u003eTL;DR:\u003c/strong\u003e In this article, we will learn what are the deployment strategies while deploying containers using Kubernetes container-orchestration system. At the end of this article, we will have learned how to do deployment using different ways in Kubernetes cluster. If you find this topic interesting, keep reading! \nThe code for this tutorial is available here on \u003ca href=\"https://github.com/akhil90s/auth0/tree/main/Deployment%20Strategies%20In%20Kubernetes/Declarative%20Templates\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eGithub\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"Quick-Introduction-to-Kubernetes\"\u003eQuick Introduction to Kubernetes\u003c/h2\u003e\u003cp\u003eWith containerization gaining popularity over time and revolutionizing the process of building, shipping, and maintaining applications, there was a need to effectively manage these containers. Many container orchestration tools were introduced to manage the lifecycle of these containers in large-scale systems.\u003c/p\u003e\u003cp\u003eKubernetes is one such orchestration tool that takes care of provisioning and deployment, allocation of resources, load balancing, service discovery, providing high availability, and other important aspects of any system. With this platform, we can decompose our applications into smaller systems (called microservices) while developing; then, we can compose (or orchestrate) these systems together while deploying. \u003c/p\u003e\u003cp\u003eThe adoption of cloud-native approach has increased development of applications based on microservice architecture. For such applications, one of the biggest challenges organizations face is deployment. Having a proper strategy in terms of deployment is necessary. In Kubernetes, there are different ways to release an application; it is necessary to choose the right strategy to make your infrastructure reliable during an application deployment or update. For instance, in a production environment, it is always required to ensure that end-user shouldn\u0026#39;t experience any downtime. In Kubernetes orchestration, right strategy ensures proper management of different versions of container images. To sum up, this article will mainly be around the different deployment strategies in Kubernetes.\u003c/p\u003e\u003ch2 id=\"Prerequisites\"\u003ePrerequisites\u003c/h2\u003e\u003cp\u003eTo follow along with this article, we will need some previous experience with Kubernetes. If new to this platform, kindly check out the \u003ca href=\"https://auth0.com/blog/kubernetes-tutorial-step-by-step-introduction-to-basic-concepts/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eStep by Step Introduction to Basic Kubernetes Concepts\u003c/a\u003e tutorial. There, you can learn everything you need to follow the instructions here. We would also recommend going through the \u003ca href=\"https://kubernetes.io/docs/home/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eKubernetes documentation\u003c/a\u003e if and when required.\u003c/p\u003e\u003cp\u003eBesides that, we will need kubectl, a Command-Line Interface (CLI) tool that will enable us to control your cluster from a terminal. If you don\u0026#39;t have this tool, check the instructions on the \u003ca href=\"https://auth0.com/blog/kubernetes-tutorial-step-by-step-introduction-to-basic-concepts/#Installing.Kube.Control..kubectl.\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eInstalling Kube Control (kubectl)\u003c/a\u003e.We will also need a basic understanding of Linux and YAML.\u003c/p\u003e\u003ch2 id=\"What-Is-A-Deployment-In-Kubernetes-\"\u003eWhat Is A Deployment In Kubernetes?\u003c/h2\u003e\u003cp\u003eA Deployment is a resource object in Kubernetes that defines the desired state for our program. Deployments are declarative, meaning that we don\u0026#39;t dictate how to achieve the state. Instead, we declare the desired state and allow the Deployment-controller to automatically reach that end goal in the most efficient way. A deployment allows us to describe an application\u0026#39;s life cycle, such as which images to use for the app, the number of pods there should be, and the way in which they should be updated.\u003c/p\u003e\u003ch2 id=\"Benefits-Of-Using-Kubernetes-Deployment\"\u003eBenefits Of Using Kubernetes Deployment\u003c/h2\u003e\u003cp\u003eThe process of manually updating containerized applications can be time consuming and tedious. A Kubernetes deployment makes this process automated and repeatable. Deployments are entirely managed by the Kubernetes backend, and the whole update process is performed on the server side without client interaction.\u003c/p\u003e\u003cp\u003eMoreover, the Kubernetes deployment controller is always monitoring the health of pods and nodes. It replaces a failed pod or bypass down nodes, ensuring continuity of critical applications.\u003c/p\u003e\u003ch2 id=\"Deployment-Strategies\"\u003eDeployment Strategies\u003c/h2\u003e\u003ch3 id=\"Rolling-Update-Deployment\"\u003eRolling Update Deployment\u003c/h3\u003e\u003cp\u003eThe rolling deployment is the default deployment strategy in Kubernetes. It replaces pods, one by one, of the previous version of our application with pods of the new version without any cluster downtime. A rolling deployment slowly replaces instances of the previous version of an application with instances of the new version of the application.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/LxDl5amQZC2znii0JLZuw/87f42c35b5ba35ac1550f572d23ba943/01_rolling-deployment.jpg\" alt=\"Alt text\"/\u003e\u003c/p\u003e\u003cp\u003eWhen using the RollingUpdate strategy, there are two more options that let us fine-tune the update process:\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003e\u003cp\u003e\u003cstrong\u003emaxSurge\u003c/strong\u003e: \nThe number of pods that can be created above the desired amount of pods during an update. This can be an absolute number or percentage of the replicas count. The default is 25%.\u003c/p\u003e\u003c/li\u003e\u003cli\u003e\u003cp\u003e\u003cstrong\u003emaxUnavailable\u003c/strong\u003e: \nThe number of pods that can be unavailable during the update process. This can be an absolute number or a percentage of the replicas count; the default is 25%.\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eFirst, we create our \u003cem\u003erollingupdate.yaml\u003c/em\u003e deployment template. In the template below, we set \u003cem\u003emaxSurge\u003c/em\u003e to 2 and \u003cem\u003emaxUnavailable\u003c/em\u003e to 1.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e apps/v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Deployment\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e rollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n  \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003estrategy\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e RollingUpdate\n    \u003cspan\u003erollingUpdate\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003emaxSurge\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e\n      \u003cspan\u003emaxUnavailable\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003ematchLabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n      \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n  \u003cspan\u003ereplicas\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e\n  \u003cspan\u003etemplate\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n        \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n    \u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003econtainers\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n          \u003cspan\u003eimage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e hello\u003cspan\u003e-\u003c/span\u003eworld\u003cspan\u003e:\u003c/span\u003enanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe can then create the deployment using the kubectl command.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef rollingupdate\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOnce we have a deployment template, we can provide a way to access the instances of the deployment by creating a Service. Note that we are deploying the image \u003cem\u003ehello-world\u003c/em\u003e with version \u003cem\u003enanoserver-1709\u003c/em\u003e. So in this case we have two labels, \u0026#39;name= \u003cem\u003eweb-app-rollingupdate-strategy\u003c/em\u003e\u0026#39; and \u0026#39;version=\u003cem\u003enanoserver-1709\u003c/em\u003e\u0026#39;. We will set these as the label selector for the service below. Save this to \u0026#39;\u003cem\u003eservice.yaml\u003c/em\u003e\u0026#39; file.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Service\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n  \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003eports\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e http\n      \u003cspan\u003eport\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n      \u003cspan\u003etargetPort\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n  \u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e LoadBalancer\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow creating the service will create a load balancer that is accessible outside the cluster.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef service\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRun \u003cem\u003ekubectl get deployments\u003c/em\u003e to check if the Deployment is created. If the Deployment is still being created, the output should be similar to the following:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eget\u003c/span\u003e deployments\n\n\u003cspan\u003eNAME\u003c/span\u003e                             \u003cspan\u003eREADY\u003c/span\u003e   \u003cspan\u003eUP\u003c/span\u003e\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003eTO\u003c/span\u003e\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003eDATE\u003c/span\u003e   \u003cspan\u003eAVAILABLE\u003c/span\u003e   \u003cspan\u003eAGE\u003c/span\u003e\nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy   \u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e3\u003c/span\u003e     \u003cspan\u003e0\u003c/span\u003e            \u003cspan\u003e0\u003c/span\u003e           \u003cspan\u003e1\u003c/span\u003es\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf we run the \u003cem\u003ekubectl get deployments\u003c/em\u003e again a few seconds later. The output should be similar to this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eget\u003c/span\u003e deployments\n\n\u003cspan\u003eNAME\u003c/span\u003e                             \u003cspan\u003eREADY\u003c/span\u003e   \u003cspan\u003eUP\u003c/span\u003e\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003eTO\u003c/span\u003e\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003eDATE\u003c/span\u003e   \u003cspan\u003eAVAILABLE\u003c/span\u003e   \u003cspan\u003eAGE\u003c/span\u003e\nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy   \u003cspan\u003e3\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e3\u003c/span\u003e     \u003cspan\u003e0\u003c/span\u003e            \u003cspan\u003e0\u003c/span\u003e           \u003cspan\u003e7\u003c/span\u003es\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo see the ReplicaSet (rs) created by the Deployment, run \u003cem\u003ekubectl get rs\u003c/em\u003e. The output should be similar to this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eget\u003c/span\u003e rs\n\n\u003cspan\u003eNAME\u003c/span\u003e                                    \u003cspan\u003eDESIRED\u003c/span\u003e   \u003cspan\u003eCURRENT\u003c/span\u003e   \u003cspan\u003eREADY\u003c/span\u003e   \u003cspan\u003eAGE\u003c/span\u003e\nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e87875\u003c/span\u003ef5897   \u003cspan\u003e3\u003c/span\u003e         \u003cspan\u003e3\u003c/span\u003e         \u003cspan\u003e3\u003c/span\u003e       \u003cspan\u003e18\u003c/span\u003es\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo see the 3 pods running for deployment, run \u003cem\u003ekubectl get pods\u003c/em\u003e. The created ReplicaSet ensures that there are three Pods running. The output should be similar to the below.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eget\u003c/span\u003e pods\n\n\u003cspan\u003eNAME\u003c/span\u003e                                      \u003cspan\u003eREADY\u003c/span\u003e     \u003cspan\u003eSTATUS\u003c/span\u003e    \u003cspan\u003eRESTARTS\u003c/span\u003e   \u003cspan\u003eAGE\u003c/span\u003e       \nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e87875\u003c/span\u003ef5897\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e55\u003c/span\u003ei7o   \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e       Running   \u003cspan\u003e0\u003c/span\u003e          \u003cspan\u003e12\u003c/span\u003es       \nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e87875\u003c/span\u003ef5897\u003cspan\u003e-\u003c/span\u003eabszs   \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e       Running   \u003cspan\u003e0\u003c/span\u003e          \u003cspan\u003e12\u003c/span\u003es       \nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e87875\u003c/span\u003ef5897\u003cspan\u003e-\u003c/span\u003eqazrt   \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e       Running   \u003cspan\u003e0\u003c/span\u003e          \u003cspan\u003e12\u003c/span\u003es\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLet\u0026#39;s update the \u003cem\u003erollingupdate.yaml\u003c/em\u003e deployment template to use the \u003cem\u003ehello-world:nanoserver-1809\u003c/em\u003e image instead of the \u003cem\u003ehello-world:nanoserver-1709\u003c/em\u003e image. Then update the image of the existing running deployment using the kubectl command.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eset\u003c/span\u003e image deployment\u003cspan\u003e/\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e=\u003c/span\u003ehello\u003cspan\u003e-\u003c/span\u003eworld\u003cspan\u003e:\u003c/span\u003enanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e \u003cspan\u003e--\u003c/span\u003erecord\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe output is similar to the below.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003edeployment\u003cspan\u003e.\u003c/span\u003eapps\u003cspan\u003e/\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy image updated\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe are now deploying the image \u003cem\u003ehello-world\u003c/em\u003e with version \u003cem\u003enanoserver-1809\u003c/em\u003e. So, in this case, we will have to update the labels in the \u0026#39;\u003cem\u003eservice.yaml\u003c/em\u003e\u0026#39;. The label will be updated to \u0026#39;version=\u003cem\u003enanoserver-1809\u003c/em\u003e\u0026#39;. We will run the below kubectl command again to update the service so that it can pick new pods running on the newer image.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef service\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo see the rollout status run the kubectl command below.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl rollout status deployment\u003cspan\u003e/\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n\nWaiting \u003cspan\u003efor\u003c/span\u003e rollout to finish\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e out \u003cspan\u003eof\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003ereplicas\u003c/span\u003e have been updated\u003cspan\u003e...\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRun again to verify the rollout is successful.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl rollout status deployment\u003cspan\u003e/\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n\ndeployment \u003cspan\u003e\u0026#34;rollingupdate-strategy\u0026#34;\u003c/span\u003e successfully rolled out\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAfter the rollout is successful, we can view the Deployment by running the command \u003cem\u003ekubectl get deployments\u003c/em\u003e. The output is similar to this:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eget\u003c/span\u003e deployments\n\n\u003cspan\u003eNAME\u003c/span\u003e                             \u003cspan\u003eREADY\u003c/span\u003e   \u003cspan\u003eUP\u003c/span\u003e\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003eTO\u003c/span\u003e\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003eDATE\u003c/span\u003e   \u003cspan\u003eAVAILABLE\u003c/span\u003e   \u003cspan\u003eAGE\u003c/span\u003e\nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy   \u003cspan\u003e3\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e3\u003c/span\u003e     \u003cspan\u003e0\u003c/span\u003e            \u003cspan\u003e0\u003c/span\u003e           \u003cspan\u003e7\u003c/span\u003es\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRun \u003cem\u003ekubectl get rs\u003c/em\u003e to see that the Deployment is updated. The new Pods are created in a new ReplicaSet and are scaled up to 3 replicas. The old ReplicaSet is scaled down to 0 replicas.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eget\u003c/span\u003e rs\n\n\u003cspan\u003eNAME\u003c/span\u003e                                    \u003cspan\u003eDESIRED\u003c/span\u003e   \u003cspan\u003eCURRENT\u003c/span\u003e   \u003cspan\u003eREADY\u003c/span\u003e   \u003cspan\u003eAGE\u003c/span\u003e\nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e87875\u003c/span\u003ef5897   \u003cspan\u003e3\u003c/span\u003e         \u003cspan\u003e3\u003c/span\u003e         \u003cspan\u003e3\u003c/span\u003e       \u003cspan\u003e55\u003c/span\u003es\nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e89999\u003c/span\u003ef7895   \u003cspan\u003e0\u003c/span\u003e         \u003cspan\u003e0\u003c/span\u003e         \u003cspan\u003e0\u003c/span\u003e       \u003cspan\u003e12\u003c/span\u003es\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRun \u003cem\u003ekubectl get pods\u003c/em\u003e it should now show only the new Pods in the new ReplicaSet.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl \u003cspan\u003eget\u003c/span\u003e pods\n\n\u003cspan\u003eNAME\u003c/span\u003e                                      \u003cspan\u003eREADY\u003c/span\u003e     \u003cspan\u003eSTATUS\u003c/span\u003e    \u003cspan\u003eRESTARTS\u003c/span\u003e   \u003cspan\u003eAGE\u003c/span\u003e       \nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e89999\u003c/span\u003ef7895\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e55\u003c/span\u003ei7o   \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e       Running   \u003cspan\u003e0\u003c/span\u003e          \u003cspan\u003e12\u003c/span\u003es       \nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e89999\u003c/span\u003ef7895\u003cspan\u003e-\u003c/span\u003eabszs   \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e       Running   \u003cspan\u003e0\u003c/span\u003e          \u003cspan\u003e12\u003c/span\u003es       \nrollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e89999\u003c/span\u003ef7895\u003cspan\u003e-\u003c/span\u003eqazrt   \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e/\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e       Running   \u003cspan\u003e0\u003c/span\u003e          \u003cspan\u003e12\u003c/span\u003es\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe kubectl\u0026#39;s rollout command is very useful here. We can use it to check how our deployment is doing. The command, by default, waits until all of the Pods in the deployment have been started successfully. When the deployment succeeds, the command exits with return code zero to indicate success. If the deployment fails, the command exits with a non-zero code.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl rollout status deployment rollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n\nWaiting \u003cspan\u003efor\u003c/span\u003e deployment \u003cspan\u003e\u0026#34;rollingupdate-strategy\u0026#34;\u003c/span\u003e rollout to finish\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e \u003cspan\u003eof\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e updated replicas are available…\nWaiting \u003cspan\u003efor\u003c/span\u003e deployment \u003cspan\u003e\u0026#34;rollingupdate-strategy\u0026#34;\u003c/span\u003e rollout to finish\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e \u003cspan\u003eof\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e updated replicas are available…\nWaiting \u003cspan\u003efor\u003c/span\u003e deployment \u003cspan\u003e\u0026#34;rollingupdate-strategy\u0026#34;\u003c/span\u003e rollout to finish\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e2\u003c/span\u003e \u003cspan\u003eof\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e updated replicas are available…\n\ndeployment \u003cspan\u003e\u0026#34;rollingupdate-strategy\u0026#34;\u003c/span\u003e successfully rolled out\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf the deployment fails in Kubernetes, the deployment process stops, but the pods from the failed deployment are kept around. On deployment failure, our environment may contain pods from both the old and new deployments. To get back to a stable, working state, we can use the rollout undo command to bring back the working pods and clean up the failed deployment.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl rollout undo deployment rollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n\ndeployment\u003cspan\u003e.\u003c/span\u003eextensions\u003cspan\u003e/\u003c/span\u003erollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen we will verify the status of the deployment again.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl rollout status deployment rollingupdate\u003cspan\u003e-\u003c/span\u003estrategy\n\ndeployment \u003cspan\u003e\u0026#34;rollingupdate-strategy\u0026#34;\u003c/span\u003e successfully rolled out\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn order for Kubernetes to know when an application is ready, it needs some help from the application. Kubernetes uses readiness probes to examine how the application is doing. Once an application instance starts responding to the readiness probe with a positive response, the instance is considered ready for use. Readiness probes tell Kubernetes when an application is ready, but not if the application will ever become ready. If the application keeps failing, it may never respond with a positive response to Kubernetes. \u003c/p\u003e\u003cp\u003eA rolling deployment typically waits for new pods to become ready via a readiness check before scaling down the old components. If a significant issue occurs, the rolling deployment can be aborted. If there is a problem, the rolling update or deployment can be aborted without bringing the whole cluster down.\u003c/p\u003e\u003ch3 id=\"Recreate-Deployment\"\u003eRecreate Deployment\u003c/h3\u003e\u003cp\u003eIn recreate deployment, we fully scale down the existing application version before we scale up the new application version. In the below diagram, Version 1 represents the current application version, and Version 2 represents the new application version. When updating the current application version, we first scale down the existing replicas of Version 1 to zero and then concurrently deploy replicas with the new version.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/1FVQm06ERSn67QJkI2zlfj/49ef78e46445aa7e6a7e54349e85e2b7/02_recreate-deployment.jpg\" alt=\"Alt text\"/\u003e\u003c/p\u003e\u003cp\u003eThe below template shows deployment using the recreate strategy: First, we create our \u003cem\u003erecreate\u003c/em\u003e deployment by saving the following yaml to a file recreate.yaml\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e apps/v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Deployment\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e recreate\u003cspan\u003e-\u003c/span\u003estrategy\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003estrategy\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Recreate\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003ematchLabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erecreate\u003cspan\u003e-\u003c/span\u003estrategy\n      \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\n  \u003cspan\u003ereplicas\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e\n  \u003cspan\u003etemplate\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erecreate\u003cspan\u003e-\u003c/span\u003estrategy\n    \u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003econtainers\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erecreate\u003cspan\u003e-\u003c/span\u003estrategy\n          \u003cspan\u003eimage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e hello\u003cspan\u003e-\u003c/span\u003eworld\u003cspan\u003e:\u003c/span\u003enanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe can then create the deployment using the kubectl command.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef recreate\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOnce we have a deployment template, we can provide a way to access the instances of the deployment by creating a Service. Note that we are deploying the image \u003cem\u003ehello-world\u003c/em\u003e with version \u003cem\u003enanoserver-1809\u003c/em\u003e. So in this case we have two labels, \u0026#39;name= \u003cem\u003eweb-app-recreate-strategy\u003c/em\u003e\u0026#39; and \u0026#39;version=\u003cem\u003enanoserver-1809\u003c/em\u003e\u0026#39;. We will set these as the label selector for the service below. Save this to \u003cem\u003eservice.yaml\u003c/em\u003e file.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Service\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erecreate\u003cspan\u003e-\u003c/span\u003estrategy\n  \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erecreate\u003cspan\u003e-\u003c/span\u003estrategy\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003eports\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e http\n      \u003cspan\u003eport\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n      \u003cspan\u003etargetPort\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e web\u003cspan\u003e-\u003c/span\u003eapp\u003cspan\u003e-\u003c/span\u003erecreate\u003cspan\u003e-\u003c/span\u003estrategy\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\n  \u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e LoadBalancer\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow creating the service will create a load balancer that is accessible outside the cluster.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef service\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe recreate method involves some downtime during the update process. Downtime is not an issue for applications that can handle maintenance windows or outages. However, if there is a mission-critical application with high service level agreements (SLAs) and availability requirements, choosing a different deployment strategy would be the right approach. Recreate deployment is generally used in the development stage by the developers as it is easy to set up, and the application state is entirely renewed with the new version. What\u0026#39;s more, we don\u0026#39;t have to manage more than one application version in parallel, and therefore we avoid backward compatibility challenges for data and applications. \u003c/p\u003e\u003ch3 id=\"Blue-Green-Deployment\"\u003eBlue-Green Deployment\u003c/h3\u003e\u003cp\u003eIn a blue/green deployment strategy (sometimes also referred to as red/black), the blue represents the current application version, and green represents the new application version. In this, only one version is live at a time. Traffic is routed to the blue deployment while the green deployment is created and tested. After we are finished testing, we then route traffic to the new version.\u003c/p\u003e\u003cp\u003eAfter the deployment succeeds, we can either keep the blue deployment for a possible rollback or decommission it. Alternatively, it is possible to deploy a newer version of the application on these instances. In that case, the current (blue) environment serves as the staging area for the next release.\u003c/p\u003e\u003cp\u003eThis technique can eliminate downtime as we faced in the recreate deployment strategy. In addition, blue-green deployment reduces risk: if something unexpected happens with our new version on Green, we can immediately roll back to the last version by switching back to Blue. There is instant rollout/rollback. We can also avoid versioning issues; the entire application state is changed in one deployment.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/5vHYgyomFFI2h4okBQyUTH/98d685900acef7c6c1abdea444b947e1/03_blue-green.jpg\" alt=\"Alt text\"/\u003e\u003c/p\u003e\u003cp\u003eThe Blue-Green deployment is expensive as it requires double the resources. A proper test of the entire platform should be done before releasing it to production. Moreover, handling stateful applications is hard.\u003c/p\u003e\u003cp\u003eFirst, we create our \u003cem\u003eblue\u003c/em\u003e deployment by saving the following yaml to a \u0026#39;blue.yaml\u0026#39; file:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e apps/v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Deployment\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003edeployment\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003ematchLabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003edeployment\n      \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n  \u003cspan\u003ereplicas\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e\n  \u003cspan\u003etemplate\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003edeployment\n        \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n    \u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003econtainers\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003edeployment\n          \u003cspan\u003eimage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e hello\u003cspan\u003e-\u003c/span\u003eworld\u003cspan\u003e:\u003c/span\u003enanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe can then create the deployment using the kubectl command.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef blue\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOnce we have a deployment template, we can provide a way to access the instances of the deployment by creating a Service. Note that we are deploying the image \u003cem\u003ehello-world\u003c/em\u003e with version \u003cem\u003enanoserver-1809\u003c/em\u003e. So in this case we have two labels, \u0026#39;name= \u003cem\u003eblue-deployment\u003c/em\u003e\u0026#39; and \u0026#39;version=\u003cem\u003enanoserver-1709\u003c/em\u003e\u0026#39;. We will set these as the label selector for the service below. Save this to \u003cem\u003eservice.yaml\u003c/em\u003e file.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Service\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003egreen\u003cspan\u003e-\u003c/span\u003eservice\n  \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003edeployment\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003eports\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e http\n      \u003cspan\u003eport\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n      \u003cspan\u003etargetPort\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003edeployment\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1709\u003c/span\u003e\n  \u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e LoadBalancer\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow creating the service will create a load balancer that is accessible outside the cluster.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef service\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe now have the below setup in place.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/2mRPpKDjZb7W9UPlmh0dlF/eec0754c5c458b9017bda1ca7c863bc9/04_blue.jpg\" alt=\"Alt text\"/\u003e\u003c/p\u003e\u003cp\u003eFor the \u003cem\u003egreen\u003c/em\u003e deployment we will deploy a new deployment in parallel with the \u003cem\u003eblue\u003c/em\u003e deployment. The below template is a content of the \u003ccode\u003egreen\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e file:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e apps/v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Deployment\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e green\u003cspan\u003e-\u003c/span\u003edeployment\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003ematchLabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e green\u003cspan\u003e-\u003c/span\u003edeployment\n      \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\n  \u003cspan\u003ereplicas\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e3\u003c/span\u003e\n  \u003cspan\u003etemplate\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003eapp\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e green\u003cspan\u003e-\u003c/span\u003edeployment\n        \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\n    \u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003econtainers\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n        \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e green\u003cspan\u003e-\u003c/span\u003edeployment\n          \u003cspan\u003eimage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e hello\u003cspan\u003e-\u003c/span\u003eworld\u003cspan\u003e:\u003c/span\u003enanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNote that image \u003cem\u003ehello-world:nanoserver-1809\u003c/em\u003e tag-name has changed to 2. So we have made a separate deployment with two labels, name= \u003cem\u003egreen-deployment\u003c/em\u003e and version=\u003cem\u003enanoserver-1809\u003c/em\u003e.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef green\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo cut over to the \u003cem\u003egreen\u003c/em\u003e deployment, we will update the selector for the existing service. Edit the service.yaml and change the selector version to \u003cem\u003e2\u003c/em\u003e and name to \u003cem\u003egreen-deployemnt\u003c/em\u003e. That will make it so that it matches the pods on the \u003cem\u003egreen\u003c/em\u003e\u0026#34; deployment.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eapiVersion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e v1\n\u003cspan\u003ekind\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Service\n\u003cspan\u003emetadata\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n  \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e blue\u003cspan\u003e-\u003c/span\u003egreen\u003cspan\u003e-\u003c/span\u003eservice\n  \u003cspan\u003elabels\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e green\u003cspan\u003e-\u003c/span\u003edeployment\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\n\u003cspan\u003espec\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n  \u003cspan\u003eports\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e http\n      \u003cspan\u003eport\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n      \u003cspan\u003etargetPort\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e80\u003c/span\u003e\n  \u003cspan\u003eselector\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \n    \u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e green\u003cspan\u003e-\u003c/span\u003edeployment\n    \u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e nanoserver\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1809\u003c/span\u003e\n  \u003cspan\u003etype\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e LoadBalancer\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe create the service  again using the kubectl command:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e$ kubectl apply \u003cspan\u003e-\u003c/span\u003ef service\u003cspan\u003e.\u003c/span\u003eyaml\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/3vxIwBo5DZHGWoELo2khCL/aa6a898dcbc97234cc29f6bac6f31c52/05_green.jpg\" alt=\"Alt text\"/\u003e\u003c/p\u003e\u003cp\u003eHence concluding, we can see the blue-green deployment is all-or-nothing, unlike a rolling update deployment, where we aren\u0026#39;t able to gradually roll out the new version. All users will receive the update at the same time, although existing sessions will be allowed to finish their work on the old instances. Hence the stakes are a bit higher than everything should work once we initiate the change. It also requires allocating more server resources since we will need to run two copies of every pod.\u003c/p\u003e\u003cp\u003eFortunately, the rollback procedure is just as easy: We simply have to flip the switch again, and the previous version is swapped back into place. That\u0026#39;s because the old version is still running on the old pods. It is simply that traffic is no longer being routed to them. When we are confident that the new version is here to stay, we should decommission those pods.\u003c/p\u003e\u003ch3 id=\"Canary-Deployment\"\u003eCanary Deployment\u003c/h3\u003e\u003cp\u003eThe canary update strategy is a partial update process that allows us to test our new program version on a real user base without a commitment to a full rollout. Similar to blue/green deployments, but they are more controlled, and they use a more progressive delivery where deployment is in a phased approach. There are a number of strategies that fall under the umbrella of canary, including dark launches or A/B testing.\u003c/p\u003e\u003cp\u003eIn canary deployment, the new version of the application is gradually deployed to the Kubernetes cluster while getting a very small amount of live traffic (i.e., a subset of live users are connecting to the new version while the rest are still using the previous version).In this approach, we have two almost identical servers: one that goes to all the current active users and another with the new features that gets rolled out to a subset of users and then compared. When no errors are reported and the confidence increases, the new version can gradually roll out to the rest of the infrastructure. In the end, all live traffic goes to canaries, making the canary version the new \u003cem\u003eproduction version\u003c/em\u003e.\u003c/p\u003e\u003cp\u003eThe below picture shows the most straightforward and simple way to do a canary deployment. A new version is deployed to a subset of servers.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/4thRldlIQuLdnmwSjEcmIq/85ed566fcaa6038e74de978112a79df0/06_canary-deployment-1.jpg\" alt=\"Alt text\"/\u003e\u003c/p\u003e\u003cp\u003eWhile this happens, we watch how the upgraded machines are doing. We check for errors and performance problems, and we listen for user feedback. As we grow confident in the canary, we continue installing it on the rest of the machines until they are all running the latest release.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/4dsHDsWT30QXUL17T0uphC/5048ee861491e78ae2baa43682446a83/07_canary-deployment-2.png\" alt=\"Alt text\"/\u003e\u003c/p\u003e\u003cp\u003eWe have to take into account various things when planning a canary deployment:\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003e\u003cstrong\u003eStages\u003c/strong\u003e: how many users will we send to the canary at first, and in how many stages.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDuration\u003c/strong\u003e: how long will we plan to run the canary? Canary releases are different, as we must wait for enough clients to be updated before we can assess the results. This can happen over several days or even weeks.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eMetrics\u003c/strong\u003e: what are the metrics to record to analyze progress, including application performance and error reports? Well-chosen parameters are essential for a successful canary deployment. For instance, a very simple way to measure deployment is through HTTP status codes. We can have a simple ping service that returns 200 when the deployment is successful. It will return server end error (5xx) if there is an issue in the deployment.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eEvaluation\u003c/strong\u003e: what criteria will we use to determine if the canary is successful\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eA canary is used in scenarios where we have to test a new functionality typically on the backend of our application. Canary deployment should be used when we are not 100% confident in the new version; we predict we might have a low chance of failure. This strategy is usually used when we have a major update, like adding a new functionality or experimental feature.\u003c/p\u003e\u003ch2 id=\"Summary-K8s-Deployments-Strategies\"\u003eSummary K8s Deployments Strategies\u003c/h2\u003e\u003cp\u003eTo sum up, there are different ways to deploy an application; when releasing to development/staging environments, a recreate or ramped deployment is usually a good choice. When it comes to production, a ramped or blue/green deployment is usually a good fit, but proper testing of the new platform is necessary. If we are not confident with the stability of the platform and what could be the impact of releasing a new software version, then a canary release should be the way to go. By doing so, we let the consumer test the application and its integration into the platform. In this article, we have only scratched the surface of the capabilities of Kubernetes deployments. By combining deployments with all the other Kubernetes features, users can create more robust containerized applications to suit any need.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Learn what are the different deployment strategies available in Kubernetes and how to use them.",
      "date_published": "2021-08-06T14:59:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/spring-cloud-messaging-with-aws-and-localstack/",
      "title": "Spring Cloud Messaging With AWS and LocalStack",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003e\u003cstrong\u003eTL;DR:\u003c/strong\u003e This article demonstrates the use of LocalStack and how it can simulate many of the AWS services locally. We will use Spring Cloud Messaging to create a publisher-subscriber sample application. We will use Amazon SNS and SQS to do that.\u003c/p\u003e\u003cp\u003eThe sample app can be found \u003ca href=\"https://github.com/maniish-jaiin/spring-cloud-messaging-sample\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"Spring-Cloud-Messaging-With-AWS-and-LocalStack\"\u003eSpring Cloud Messaging With AWS and LocalStack\u003c/h2\u003e\u003ch3 id=\"Introduction\"\u003eIntroduction\u003c/h3\u003e\u003cp\u003eWith an ever-growing demand for cloud services, Spring provides amazing support to integrate with Cloud providers and relevant services. \u003ca href=\"https://spring.io/projects/spring-cloud-aws\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSpring Cloud for Amazon Web Services\u003c/a\u003e is one such project that makes it easy to integrate with AWS services using familiar Spring APIs.\u003c/p\u003e\u003cp\u003eIn this article, we will look into a simple application that acts as a message producer and a consumer using Amazon SNS and SQS. On top of that, we will not create an AWS account or use AWS services directly from AWS. We will instead use LocalStack, which will allow us to create AWS resources locally.\u003c/p\u003e\u003cp\u003eThe sample app can be found \u003ca href=\"https://github.com/maniish-jaiin/spring-cloud-messaging-sample\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"Pre-requisites-\"\u003ePre-requisites:\u003c/h3\u003e\u003col start=\"1\"\u003e\u003cli\u003eBasic knowledge of AWS, \u003ca href=\"https://github.com/aws/aws-cli\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAWS CLI\u003c/a\u003e, and related services like Amazon SQS.\u003c/li\u003e\u003cli\u003eBasic knowledge of \u003ca href=\"https://docs.oracle.com/en/java/javase/11/docs/api/index.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eJava 11\u003c/a\u003e and Spring Boot \u003ccode\u003e\u003cspan\u003e2.4\u003c/span\u003e\u003cspan\u003e.7\u003c/span\u003e\u003c/code\u003e.\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://docs.docker.com/get-docker/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eDocker\u003c/a\u003e and \u003ca href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eDocker Compose\u003c/a\u003e for the setup.\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"Introduction-to-Amazon-SNS-and-SQS\"\u003eIntroduction to Amazon SNS and SQS\u003c/h2\u003e\u003ch3 id=\"Amazon-SNS\"\u003eAmazon SNS\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/sns/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAmazon SNS\u003c/a\u003e is an acronym for Simple Notification Service. It provides developers with the highly scalable, cost-effective, and flexible capability to publish messages from an application and send them to other applications. It follows the pub-sub architecture to deliver messages from publishers to the subscribers. It is a highly decoupled service that can be linked to a variety of sources. It can be used to publish emails, messages to SQS, SMS, etc.\u003c/p\u003e\u003cp\u003eThe Publisher (e.g., CloudWatch Alarm, S3 events, SNS, Micro-service) publishes the message on a Topic which is then published to all the Subscribers (web servers, email addresses, Amazon SQS queues, AWS Lambda)  of that particular topic.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/35P87aEWHIcpTOQxYTGWbz/03840ff6c13fdc4a94552ec8188c131e/sns_architecture.jpg\" alt=\"SNS Architecture\"/\u003e\u003c/p\u003e\u003ch3 id=\"Amazon-SQS\"\u003eAmazon SQS\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://aws.amazon.com/sqs/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAmazon SQS\u003c/a\u003e is an acronym for Simple Queue Service, and the names convey a lot as it is really simple to use as it is a fully managed service from AWS. It follows similar messaging semantics of the producer putting a message on the queue and consumer reading from it.\u003c/p\u003e\u003cp\u003eOnce consumed, the message has to be deleted from the queue. Deleting is important because SQS assumes that processing can fail. To prevent that, after the consumer receives a message, it is hidden from the queue for a defined period of time, and after that, if it is not deleted, the message shows up in the queue again.\u003c/p\u003e\u003cp\u003eBoth SNS and SQS are fully managed lightweight, easy-to-use APIs. You can use Amazon SQS and SNS to decouple and scale microservices, distributed systems, and serverless applications and improve reliability.\u003c/p\u003e\u003ch3 id=\"Introduction-to-LocalStack\"\u003eIntroduction to LocalStack\u003c/h3\u003e\u003cp\u003e\u003ca href=\"https://github.com/localstack/localstack\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eLocalStack\u003c/a\u003e is an open-source mock of the real AWS services. It provides a testing environment on our local machine with the same APIs as the real AWS services. We switch to using the real AWS services only in the integration environment and beyond. There are plenty of reasons to use LocalStack, few out of which are more important than others, such as:\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003eThe ability to play with AWS services without interacting with AWS. All developers love to get their hands dirty, and what better way to learn something than to try. Localstack allows you to play with S3, SQS, DynamoDB, SNS, and the list goes on.\u003c/li\u003e\u003cli\u003eThe ability to test the applications in the local dev environment. You can write integration tests for your application using LocalStack, driving down your costs and increasing the confidence in your code.\u003c/li\u003e\u003c/ol\u003e\u003ch3 id=\"Spring-Cloud-Messaging-app-linked-to-LocalStack\"\u003eSpring Cloud Messaging app linked to LocalStack\u003c/h3\u003e\u003cp\u003eSpring Cloud AWS provides \u003ca href=\"https://aws.amazon.com/sqs/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAmazon SQS\u003c/a\u003e and \u003ca href=\"https://aws.amazon.com/sns/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAmazon SNS\u003c/a\u003e integration that simplifies the publication and consumption of messages. It reduces a lot of boilerplate code and does the heavy lifting for configuring and SNS and SQS. Let\u0026#39;s set up a Spring boot project with support for SNS and SQS.\u003c/p\u003e\u003ch4 id=\"Setting-up-Spring-Boot-app\"\u003eSetting up Spring Boot app\u003c/h4\u003e\u003cp\u003eLet us first create a Spring Boot project with the help of the \u003ca href=\"https://start.spring.io/#!type=maven-project\u0026amp;language=java\u0026amp;platformVersion=2.4.5.RELEASE\u0026amp;packaging=jar\u0026amp;jvmVersion=11\u0026amp;groupId=io.pratik\u0026amp;artifactId=springcloudsqs\u0026amp;name=springcloudsqs\u0026amp;description=Demo%20project%20for%20Spring%20cloud%20sqs\u0026amp;packageName=io.pratik.springcloudsqs\u0026amp;dependencies=web,lombok\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eSpring boot Initializr\u003c/a\u003e, and then open the project in our favorite IDE. Select Maven project and Java language. Last but not least, select Spring boot version \u003ccode\u003e\u003cspan\u003e2.4\u003c/span\u003e\u003cspan\u003e.7\u003c/span\u003e\u003c/code\u003e. Fill in the project metadata and click generate.\u003c/p\u003e\u003cp\u003eFor Spring Cloud, We need to configure Spring Cloud AWS BOM in our \u003ccode\u003epom\u003cspan\u003e.\u003c/span\u003exml\u003c/code\u003e file using this dependencyManagement block:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependencyManagement\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependencies\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n            \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eio.awspring.cloud\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n            \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003espring-cloud-aws-dependencies\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n            \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e2.3.1\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n            \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003etype\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003epom\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003etype\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n            \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003escope\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eimport\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003escope\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependencies\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependencyManagement\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFor adding the support for messaging, we need to include the module dependency for Spring Cloud AWS Messaging into our Maven configuration. We do this by adding the starter module \u003ccode\u003espring\u003cspan\u003e-\u003c/span\u003ecloud\u003cspan\u003e-\u003c/span\u003estarter\u003cspan\u003e-\u003c/span\u003eaws\u003cspan\u003e-\u003c/span\u003emessaging\u003c/code\u003e:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eio.awspring.cloud\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003espring-cloud-starter-aws-messaging\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThese are the dependencies required for Spring Cloud AWS. Next, we add some other dependencies such as Spring boot starter web and \u003ca href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eLombok\u003c/a\u003e.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependencies\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eorg.springframework.boot\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003espring-boot-starter-web\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e2.4.7\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eorg.projectlombok\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003elombok\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e1.18.20\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003escope\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eprovided\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003escope\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependencies\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis completes our setup process for the Spring boot project.\u003c/p\u003e\u003cp\u003eLet\u0026#39;s jump into adding the SNS and SQS configs and start publishing our first message.\u003c/p\u003e\u003cp\u003eAmazon SNS Config:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eauth\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAWSStaticCredentialsProvider\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eauth\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eBasicAWSCredentials\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eclient\u003cspan\u003e.\u003c/span\u003ebuilder\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAwsClientBuilder\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eservices\u003cspan\u003e.\u003c/span\u003esns\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAmazonSNS\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eservices\u003cspan\u003e.\u003c/span\u003esns\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAmazonSNSClientBuilder\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eio\u003cspan\u003e.\u003c/span\u003eawspring\u003cspan\u003e.\u003c/span\u003ecloud\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003ecore\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eNotificationMessagingTemplate\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003econtext\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eBean\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003econtext\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eConfiguration\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003econtext\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003ePrimary\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eauthga\u003cspan\u003e.\u003c/span\u003espringcloudaws\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAWSConfigConstants\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eACCESS_KEY\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eauthga\u003cspan\u003e.\u003c/span\u003espringcloudaws\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAWSConfigConstants\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eSECRET_KEY\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e@Configuration\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eSnsConfig\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003e@Bean\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eNotificationMessagingTemplate\u003c/span\u003e \u003cspan\u003enotificationMessagingTemplate\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eAmazonSNS\u003c/span\u003e amazonSNS\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eNotificationMessagingTemplate\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eamazonSNS\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Bean\u003c/span\u003e\n    \u003cspan\u003e@Primary\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAmazonSNS\u003c/span\u003e \u003cspan\u003eamazonSNS\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eAwsClientBuilder\u003cspan\u003e.\u003c/span\u003eEndpointConfiguration\u003c/span\u003e endpointConfiguration\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eBasicAWSCredentials\u003c/span\u003e credentials \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eBasicAWSCredentials\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eACCESS_KEY\u003cspan\u003e,\u003c/span\u003e SECRET_KEY\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eAmazonSNSClientBuilder\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003estandard\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ewithEndpointConfiguration\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eendpointConfiguration\u003cspan\u003e)\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ewithCredentials\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eAWSStaticCredentialsProvider\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredentials\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ebuild\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHere, we create a simple \u003ccode\u003eAmazonSNSClient\u003c/code\u003e with a custom endpoint and credentials. Spring has an auto-configured \u003ccode\u003eAmazonSNSClient\u003c/code\u003e, but that requires valid AWS credentials and actual resources. We instead want to run our service locally with AWS resources using LocalStack. More on this later. Let\u0026#39;s finish this setup.\u003c/p\u003e\u003cp\u003eAmazon SQS Config:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eauth\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAWSStaticCredentialsProvider\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eauth\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eBasicAWSCredentials\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eclient\u003cspan\u003e.\u003c/span\u003ebuilder\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAwsClientBuilder\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eservices\u003cspan\u003e.\u003c/span\u003esqs\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAmazonSQSAsync\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eamazonaws\u003cspan\u003e.\u003c/span\u003eservices\u003cspan\u003e.\u003c/span\u003esqs\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAmazonSQSAsyncClientBuilder\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eio\u003cspan\u003e.\u003c/span\u003eawspring\u003cspan\u003e.\u003c/span\u003ecloud\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eQueueMessageHandlerFactory\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eio\u003cspan\u003e.\u003c/span\u003eawspring\u003cspan\u003e.\u003c/span\u003ecloud\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003esupport\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eNotificationMessageArgumentResolver\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003econtext\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eBean\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003econtext\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eConfiguration\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003econtext\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003ePrimary\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003econverter\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eMappingJackson2MessageConverter\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003econverter\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eMessageConverter\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ejava\u003cspan\u003e.\u003c/span\u003eutil\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eList\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eauthga\u003cspan\u003e.\u003c/span\u003espringcloudaws\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAWSConfigConstants\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e*\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e@Configuration\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eSqsConfig\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003e@Bean\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAwsClientBuilder\u003cspan\u003e.\u003c/span\u003eEndpointConfiguration\u003c/span\u003e \u003cspan\u003eendpointConfiguration\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eAwsClientBuilder\u003cspan\u003e.\u003c/span\u003eEndpointConfiguration\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eENDPOINT\u003cspan\u003e,\u003c/span\u003e EU_CENTRAL_1\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Bean\u003c/span\u003e\n    \u003cspan\u003e@Primary\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAmazonSQSAsync\u003c/span\u003e \u003cspan\u003eamazonSQSAsync\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eAwsClientBuilder\u003cspan\u003e.\u003c/span\u003eEndpointConfiguration\u003c/span\u003e endpointConfiguration\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eBasicAWSCredentials\u003c/span\u003e credentials \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eBasicAWSCredentials\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eACCESS_KEY\u003cspan\u003e,\u003c/span\u003e SECRET_KEY\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eAmazonSQSAsyncClientBuilder\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003estandard\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ewithEndpointConfiguration\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eendpointConfiguration\u003cspan\u003e)\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ewithCredentials\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eAWSStaticCredentialsProvider\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredentials\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n                \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ebuild\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Bean\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eQueueMessageHandlerFactory\u003c/span\u003e \u003cspan\u003equeueMessageHandlerFactory\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eMessageConverter\u003c/span\u003e messageConverter\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003evar\u003c/span\u003e factory \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eQueueMessageHandlerFactory\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        factory\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetArgumentResolvers\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eList\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eof\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eNotificationMessageArgumentResolver\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003emessageConverter\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e factory\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Bean\u003c/span\u003e\n    \u003cspan\u003eprotected\u003c/span\u003e \u003cspan\u003eMessageConverter\u003c/span\u003e \u003cspan\u003emessageConverter\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003evar\u003c/span\u003e converter \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eMappingJackson2MessageConverter\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        converter\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetSerializedPayloadClass\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eclass\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        converter\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esetStrictContentTypeMatch\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e converter\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn the code above, we did the following:\u003c/p\u003e\u003cul\u003e\u003cli\u003eSimilar to the \u003ccode\u003eAmazonSNSClient\u003c/code\u003e, we create the \u003ccode\u003eAmazonSQSClient\u003c/code\u003e with a custom endpoint and credentials.\u003c/li\u003e\u003cli\u003eSetup \u003ccode\u003eQueueMessageHandlerFactory\u003c/code\u003e so it can convert incoming messages from SQS as String to the actual object we want, in this case, \u003ccode\u003eEvent\u003c/code\u003e, using a \u003ccode\u003eMessageConverter\u003c/code\u003e.\u003c/li\u003e\u003cli\u003eThe converter will take care of converting the \u003ccode\u003eString\u003c/code\u003e message to the actual \u003ccode\u003eEvent\u003c/code\u003e object.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThe \u003ccode\u003eEvent\u003c/code\u003e model is described below. I am using \u003ca href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eLombok\u003c/a\u003e to reduce the boilerplate code.\u003c/p\u003e\u003cp\u003e\u003ccode\u003eEvent\u003cspan\u003e.\u003c/span\u003ejava\u003c/code\u003e\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAllArgsConstructor\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eBuilder\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eData\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eNoArgsConstructor\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e@Data\u003c/span\u003e\n\u003cspan\u003e@AllArgsConstructor\u003c/span\u003e\n\u003cspan\u003e@NoArgsConstructor\u003c/span\u003e\n\u003cspan\u003e@Builder\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eEvent\u003c/span\u003e \u003cspan\u003eimplements\u003c/span\u003e \u003cspan\u003eComparable\u003c/span\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003e\u003cspan\u003eEvent\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e eventId\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e version\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e occurredAt\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eEventData\u003c/span\u003e data\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003ecompareTo\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eEvent\u003c/span\u003e o\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eint\u003c/span\u003e otherVersion \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eInteger\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eparseInt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eo\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetVersion\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eint\u003c/span\u003e thisVersion \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eInteger\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eparseInt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetVersion\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eInteger\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecompare\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ethisVersion\u003cspan\u003e,\u003c/span\u003e otherVersion\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eEventData\u003cspan\u003e.\u003c/span\u003ejava\u003c/code\u003e\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAllArgsConstructor\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eBuilder\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eData\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eNoArgsConstructor\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e@Data\u003c/span\u003e\n\u003cspan\u003e@AllArgsConstructor\u003c/span\u003e\n\u003cspan\u003e@NoArgsConstructor\u003c/span\u003e\n\u003cspan\u003e@Builder\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eEventData\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e orderId\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e owner\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eEventType\u003c/span\u003e eventType\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003ccode\u003eEventType\u003cspan\u003e.\u003c/span\u003ejava\u003c/code\u003e\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ejava\u003cspan\u003e.\u003c/span\u003eio\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eSerializable\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eenum\u003c/span\u003e \u003cspan\u003eEventType\u003c/span\u003e \u003cspan\u003eimplements\u003c/span\u003e \u003cspan\u003eSerializable\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    ORDER_CREATED\u003cspan\u003e,\u003c/span\u003e ORDER_CANCELLED\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eProducer code:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eauthga\u003cspan\u003e.\u003c/span\u003espringcloudaws\u003cspan\u003e.\u003c/span\u003emodel\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eEvent\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eio\u003cspan\u003e.\u003c/span\u003eawspring\u003cspan\u003e.\u003c/span\u003ecloud\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003ecore\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eNotificationMessagingTemplate\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003eextern\u003cspan\u003e.\u003c/span\u003eslf4j\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eSlf4j\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003ebeans\u003cspan\u003e.\u003c/span\u003efactory\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAutowired\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003estereotype\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eService\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eauthga\u003cspan\u003e.\u003c/span\u003espringcloudaws\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAWSConfigConstants\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eORDER_CREATED_TOPIC\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e@Slf4j\u003c/span\u003e\n\u003cspan\u003e@Service\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eSimpleMessageProducer\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003e@Autowired\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eNotificationMessagingTemplate\u003c/span\u003e notificationMessagingTemplate\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003epublish\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eEvent\u003c/span\u003e event\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        notificationMessagingTemplate\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econvertAndSend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eORDER_CREATED_TOPIC\u003cspan\u003e,\u003c/span\u003e event\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\u003cli\u003eWe use the \u003ccode\u003eNotificationMessagingTemplate\u003c/code\u003e created in the config above. It gives us several methods to send messages on an SNS topic. We will use the default \u003ccode\u003e\u003cspan\u003econvertAndSend\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method that takes care of converting our object to a Message using the \u003ccode\u003eMessageConverter\u003c/code\u003e that we provide in the \u003ccode\u003eSqsConfig\u003c/code\u003e class.\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eConsumer code:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eauthga\u003cspan\u003e.\u003c/span\u003espringcloudaws\u003cspan\u003e.\u003c/span\u003emodel\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eEvent\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eio\u003cspan\u003e.\u003c/span\u003eawspring\u003cspan\u003e.\u003c/span\u003ecloud\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eNotificationMessage\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eio\u003cspan\u003e.\u003c/span\u003eawspring\u003cspan\u003e.\u003c/span\u003ecloud\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003elistener\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eSqsMessageDeletionPolicy\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eio\u003cspan\u003e.\u003c/span\u003eawspring\u003cspan\u003e.\u003c/span\u003ecloud\u003cspan\u003e.\u003c/span\u003emessaging\u003cspan\u003e.\u003c/span\u003elistener\u003cspan\u003e.\u003c/span\u003eannotation\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eSqsListener\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003elombok\u003cspan\u003e.\u003c/span\u003eextern\u003cspan\u003e.\u003c/span\u003eslf4j\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eSlf4j\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003eorg\u003cspan\u003e.\u003c/span\u003espringframework\u003cspan\u003e.\u003c/span\u003estereotype\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eController\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003eimport\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003ecom\u003cspan\u003e.\u003c/span\u003eauthga\u003cspan\u003e.\u003c/span\u003espringcloudaws\u003cspan\u003e.\u003c/span\u003econfig\u003cspan\u003e.\u003c/span\u003e\u003c/span\u003e\u003cspan\u003eAWSConfigConstants\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eORDER_QUEUE\u003cspan\u003e;\u003c/span\u003e\n\n\u003cspan\u003e@Slf4j\u003c/span\u003e\n\u003cspan\u003e@Controller\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eSimpleMessageConsumer\u003c/span\u003e \u003cspan\u003eimplements\u003c/span\u003e \u003cspan\u003eMessageConsumer\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e\n    \u003cspan\u003e@SqsListener\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003evalue \u003cspan\u003e=\u003c/span\u003e ORDER_QUEUE\u003cspan\u003e,\u003c/span\u003e deletionPolicy \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eSqsMessageDeletionPolicy\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eON_SUCCESS\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003econsume\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e@NotificationMessage\u003c/span\u003e \u003cspan\u003eEvent\u003c/span\u003e event\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eevent \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            log\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003einfo\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Received order event for consumer 1: \u0026#34;\u003c/span\u003e \u003cspan\u003e+\u003c/span\u003e event\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cul\u003e\u003cli\u003eWe only need \u003ccode\u003e@SqsListener\u003c/code\u003e annotation that automatically makes our consume method get the messages from the queue.\u003c/li\u003e\u003cli\u003eWe also add \u003ccode\u003e@NotificationMessage\u003c/code\u003e annotation to have the correct deserialization and extract our Event from the SNS message because the SNS message is wrapped inside a \u003ccode\u003eMessage\u003c/code\u003e object.\u003c/li\u003e\u003c/ul\u003e\u003ch3 id=\"Setup-LocalStack-and-create-resources\"\u003eSetup LocalStack and create resources\u003c/h3\u003e\u003cp\u003eSetting up LocalStack is dead simple; you just need to use the docker-compose file below, and it will start SNS and SQS services locally. Add the \u003ccode\u003edocker compose\u003cspan\u003e.\u003c/span\u003eyml\u003c/code\u003e to the repository\u0026#39;s root directory. Start the LocalStack using: \u003ccode\u003edocker\u003cspan\u003e-\u003c/span\u003ecompose up\u003c/code\u003e.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003eversion\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e\u0026#39;3.0\u0026#39;\u003c/span\u003e\n\n\u003cspan\u003eservices\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n\n  \u003cspan\u003elocalstack\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n    \u003cspan\u003eimage\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e localstack/localstack\u003cspan\u003e:\u003c/span\u003elatest\n    \u003cspan\u003eenvironment\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003e-\u003c/span\u003e AWS_DEFAULT_REGION=eu\u003cspan\u003e-\u003c/span\u003ecentral\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\n      \u003cspan\u003e-\u003c/span\u003e EDGE_PORT=4566\n      \u003cspan\u003e-\u003c/span\u003e SERVICES=sqs\u003cspan\u003e,\u003c/span\u003esns\n    \u003cspan\u003eports\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\n      \u003cspan\u003e-\u003c/span\u003e \u003cspan\u003e\u0026#39;4566:4566\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOnce it is up and running, we can create the required AWS resources. We will create one SNS topic to which two SQS queues will be listening. The code to or publishing and listening is simple. Go to your command line, e.g., terminal, and execute the following commands.\u003c/p\u003e\u003cp\u003eTo create the topic:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eaws --endpoint-url\u003cspan\u003e=\u003c/span\u003ehttp://localhost:4566  sns create-topic  --name  order-created-topic\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo create the queues:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eaws --endpoint-url\u003cspan\u003e=\u003c/span\u003ehttp://localhost:4566  sqs create-queue  --queue-name  order-queue\naws --endpoint-url\u003cspan\u003e=\u003c/span\u003ehttp://localhost:4566  sqs create-queue  --queue-name  order-queue-2\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo subscribe the queues to the topic:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eaws --endpoint-url\u003cspan\u003e=\u003c/span\u003ehttp://localhost:4566 sns subscribe\n--topic-arn arn:aws:sns:eu-central-1:000000000000:order-created-topic\n--protocol sqs\n--notification-endpoint arn:aws:sqs:eu-central-1:000000000000:order-queue\n\naws --endpoint-url\u003cspan\u003e=\u003c/span\u003ehttp://localhost:4566 sns subscribe\n--topic-arn arn:aws:sns:eu-central-1:000000000000:order-created-topic\n--protocol sqs\n--notification-endpoint arn:aws:sqs:eu-central-1:000000000000:order-queue-2\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo verify you can list queues and subscriptions:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eaws --endpoint-url\u003cspan\u003e=\u003c/span\u003ehttp://localhost:4566  sqs list-queues\naws --endpoint-url\u003cspan\u003e=\u003c/span\u003ehttp://localhost:4566  sns list-subscriptions\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThat\u0026#39;s it!\u003c/p\u003e\u003ch3 id=\"Verify-sending-and-receiving-of-events\"\u003eVerify sending and receiving of events\u003c/h3\u003e\u003cp\u003eRun the Spring Boot app:\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003eClone the sample code from the repo. Go to the root directory.\u003c/li\u003e\u003cli\u003eUse Maven plugin to run your Spring Boot app using the command in the project directory.\u003c/li\u003e\u003c/ol\u003e\u003cpre\u003e\u003ccode\u003emvn spring-boot:run\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe groundwork is complete now. With the app running, we can send messages to the Amazon SNS Topic and read those messages from the queues. In the repo, I have created a controller to trigger the publishing of events. If you download the sample app, you should be able to run it, and going to \u003ca href=\"http://localhost:8080/create-order\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehttp://localhost:8080/create-order\u003c/a\u003e will trigger the publisher, which in turn will trigger the consumers. In the application logs, you should be able to see. This means that our producer code publishes the code to the SNS topic. The two queues that are subscribed to the topic receive those messages, and finally, the consumer receives those messages and prints the event.\u003c/p\u003e\u003cpre\u003e\u003ccode\u003eReceived order event \u003cspan\u003efor\u003c/span\u003e consumer \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\nEvent\u003cspan\u003e{\u003c/span\u003eeventId\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#39;386cca76-3669-4d36-b2db-01f388bbce5f\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e version\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#39;0\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\noccurredAt\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#39;2021-06-19T13:42:32.946781Z\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e data\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eEventData\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eorderId\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e9\u003c/span\u003ea002b95\u003cspan\u003e-\u003c/span\u003ef10b\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e428e-8\u003c/span\u003ed39\u003cspan\u003e-\u003c/span\u003ecae90d1e631d\u003cspan\u003e,\u003c/span\u003e\nowner\u003cspan\u003e=\u003c/span\u003eSampleProducer\u003cspan\u003e,\u003c/span\u003e eventType\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eORDER_CREATED\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\nReceived order event \u003cspan\u003efor\u003c/span\u003e consumer \u003cspan\u003e2\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e\nEvent\u003cspan\u003e{\u003c/span\u003eeventId\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#39;386cca76-3669-4d36-b2db-01f388bbce5f\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e version\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#39;0\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e occurredAt\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e\u0026#39;2021-06-19T13:42:32.946781Z\u0026#39;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\ndata\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eEventData\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eorderId\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003e9\u003c/span\u003ea002b95\u003cspan\u003e-\u003c/span\u003ef10b\u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e428e-8\u003c/span\u003ed39\u003cspan\u003e-\u003c/span\u003ecae90d1e631d\u003cspan\u003e,\u003c/span\u003e owner\u003cspan\u003e=\u003c/span\u003eSampleProducer\u003cspan\u003e,\u003c/span\u003e eventType\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003eORDER_CREATED\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"Conclusion\"\u003eConclusion\u003c/h2\u003e\u003cp\u003eLocalStack provides a simple and convenient way to simulate AWS services without having an actual AWS account. You can build applications using various AWS services like Amazon SNS, SQS, S3 DynamoDB, and many more.\u003c/p\u003e\u003cp\u003eIn this article, we have learned how to build a Spring Cloud Messaging app that utilizes LocalStack. We saw how Spring Cloud Messaging provides a layer of abstraction to create an Amazon SQS listener and SNS publisher with just a few lines of code. Furthermore, we saw how to use Amazon SNS and SQS to create an event-driven application.\u003c/p\u003e\u003cp\u003eYou can refer to the repository used in the article on \u003ca href=\"https://github.com/maniish-jaiin/spring-cloud-messaging-sample\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eGithub\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Learn how to simulate AWS services locally using LocalStack with a Spring Boot application.",
      "date_published": "2021-08-05T14:53:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/node-16-support-now-available-in-actions/",
      "title": "Node 16 Support Now Available in Actions",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eAs our next-generation extensibility platform, designed to replace Rules \u0026amp; Hooks, our plan is to support every current and long-term supported Node version through Actions exclusively. \u003c/p\u003e\u003cp\u003eWe recently introduced Node 16 support in Actions. Node 16 is the \u003cem\u003e\u003ca href=\"https://nodejs.org/en/about/releases/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ecurrent version published by Node\u003c/a\u003e\u003c/em\u003e. This version does not introduce any breaking changes.  \u003c/p\u003e\u003ch2 id=\"What-Does-This-Mean-for-Our-Developers-\"\u003eWhat Does This Mean for Our Developers?\u003c/h2\u003e\u003cp\u003eWe will continue to support Node 12 through the Long Term Support (LTS) end coming in April 2022 for all of our extensibility products - Actions, Rules, and Hooks.  However, we encourage developers to stay current in their Node version for security and compliance purposes.  \u003c/p\u003e\u003ch3 id=\"Developers-using-Actions\"\u003eDevelopers using Actions\u003c/h3\u003e\u003cp\u003eAll new Actions will be set to the Node 16 runtime by default. However, you do not need to migrate every Action immediately to Node 16.  \u003c/p\u003e\u003cp\u003eUnlike Rules and Hooks, Actions is designed to run actions of varying Node runtimes side by side. With Actions, you no longer need to migrate all code to a single, tenant-level Node runtime. Existing Actions can be upgraded to Node 16 by creating and \u003ca href=\"https://auth0.com/docs/actions/manage-versions\" target=\"_blank\" rel=\"noreferrer noopener\"\u003edeploying a new version\u003c/a\u003e to Node 16. If needed, existing Actions built on Node 12 can be upgraded to Node 16 and reverted to Node 12.\u003c/p\u003e\u003ch3 id=\"Developers-using-legacy-extensibility-products\"\u003eDevelopers using legacy extensibility products\u003c/h3\u003e\u003cp\u003eOur legacy extensibility products (Rules and Hooks) will continue to support Node 12. Node 16 will only roll out to Actions.\u003c/p\u003e\u003cp\u003eWe strongly encourage developers using Rules and Hooks to migrate to Actions, wherever possible, to start taking advantage of the greatly \u003ca href=\"https://auth0.com/blog/introducing-auth0-actions/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eimproved developer experience\u003c/a\u003e that comes with Actions, such as an industry standard VS Code style editor, typescript, draft mode, version control, improved secret management, an expanded library of NPM modules, and more. \u003c/p\u003e\u003cp\u003eFor developers using Node 8, if there are Rules and Hooks that cannot be immediately migrated to Actions Node 16, at a minimum, update your code to Node 12. Node 8 reached the end of LTS back in December 2019 and since then has not been updated to address critical bugs, security fixes, patches, or other important updates.\u003c/p\u003e\u003cp\u003eWe want to hear from you. Please share any feedback on your experience with Actions and the Node 16 update in our \u003ca href=\"https://community.auth0.com/c/actions/91\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eDeveloper Community\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Starting Aug 4, 2021, we are rolling out Node 16 as the default runtime for Actions.",
      "date_published": "2021-08-04T16:02:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/adding-auth0-rbac-authorization-to-a-ktor-api/",
      "title": "Adding Auth0 RBAC Authorization to a Ktor API",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eIn the previous post, we created an Auth0 API to represent the Ktor HTTP API and an Auth0 application to allow the frontend application to authenticate users. This allowed us to query the backend API from the frontend application with a valid access token. We also updated the backend API to require a valid access token for the \u003ccode\u003e\u003cspan\u003eprotected\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003eadmin\u003c/code\u003e endpoints.\u003c/p\u003e\u003cp\u003eIn this post, we\u0026#39;ll complete the journey by enabling Role-Based Access Controls (RBAC) within Auth0 and restrict access to the \u003ccode\u003eadmin\u003c/code\u003e endpoint in our backend API to those users with the correct permissions.\u003c/p\u003e\u003ch2 id=\"RBAC-and-permissions\"\u003eRBAC and permissions\u003c/h2\u003e\u003cp\u003eWe start by enabling RBAC within our Auth0 API.\u003c/p\u003e\u003cp\u003eUnder the \u003cstrong\u003eSettings\u003c/strong\u003e tab in the API, switch the \u003cstrong\u003eEnable RBAC\u003c/strong\u003e and \u003cstrong\u003eAdd permissions in the Access Token\u003c/strong\u003e sliders to the on the setting. Doing so will ensure a \u003ccode\u003epermissions\u003c/code\u003e claim is added to the access token with any scopes that have been assigned to the logged-in user.\u003c/p\u003e\u003cp\u003eA detailed discussion on why scopes should not be used to grant permissions is presented in the post \u003ca href=\"https://auth0.com/blog/on-the-nature-of-oauth2-scopes/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eOn The Nature of OAuth2\u0026#39;s Scopes\u003c/a\u003e. The summary is that a scope constrains the actions that an OAuth client \u003cem\u003emay\u003c/em\u003e attempt to perform on behalf of a user, but \u003cem\u003edoes not\u003c/em\u003e imply that the user has the permission to access any particular resource.\u003c/p\u003e\u003cp\u003eThis has some subtle but significant implications on the claims returned in an Auth0 access token.\u003c/p\u003e\u003cp\u003eWithout enabling the RBAC settings, any scope requested by the OAuth client and consented to by the user will be returned in the \u003ccode\u003escope\u003c/code\u003e claim. It doesn\u0026#39;t matter if that scope has been assigned to the user or not - it is returned regardless. It is then the responsibility of the OAuth resource server to allow or deny access to a given resource based on the user\u0026#39;s identity and the action being performed.\u003c/p\u003e\u003cp\u003eWhen RBAC is enabled, only scopes that have been requested by the client, \u003cem\u003eand\u003c/em\u003e consented to by the user, \u003cem\u003eand\u003c/em\u003e assigned to a user will be returned in the \u003ccode\u003escope\u003c/code\u003e claim. In this scenario, the resource server can assume the absence of a scope means the client did not request it, the user did not consent to it, or it has not been assigned to the user, and so can quickly deny access.\u003c/p\u003e\u003cp\u003eBy adding the \u003ccode\u003epermissions\u003c/code\u003e claim, each scope assigned to the user is calculated and included in the access token. The \u003ccode\u003epermissions\u003c/code\u003e claim is populated without asking for consent from the user, which supports more traditional RBAC style applications, where clients have delegated all the permissions of their users, and the users don\u0026#39;t pick and choose scopes with each login.\u003c/p\u003e\u003cp\u003eOur sample application will make use of the scopes in the \u003ccode\u003epermissions\u003c/code\u003e claim to determine access to the API.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/4ZpaxCFDvKa7It8aToFSBP/06e7bd6600e3146032475a399a0d068a/01_build-a-ktor-api-pt-3.png\" alt=\"RBAC\"/\u003e\n\u003cem\u003eEnabling RBAC and permissions in the access token.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eUnder the \u003cstrong\u003ePermissions\u003c/strong\u003e tab, define a new \u003cstrong\u003ePermission (Scope)\u003c/strong\u003e of \u003ccode\u003eread\u003cspan\u003e:\u003c/span\u003eadmin\u003cspan\u003e-\u003c/span\u003emessages\u003c/code\u003e and a \u003cstrong\u003eDescription\u003c/strong\u003e of \u003cstrong\u003eThe ability to access the admin endpoint\u003c/strong\u003e. Click the \u003cstrong\u003eAdd\u003c/strong\u003e button to save the new permission:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/1DJaaadYXA4vGKV9i9R8LK/4564b6449b1b1d190f2345638431b92d/02_build-a-ktor-api-pt-3.png\" alt=\"API\"/\u003e\n\u003cem\u003eCreating an API permission.\u003c/em\u003e\u003c/p\u003e\u003ch3 id=\"Creating-the-role\"\u003eCreating the role\u003c/h3\u003e\u003cp\u003eWe now create a role to hold the permissions required by our API. Click the \u003cstrong\u003eUser Management -\u0026gt; Roles\u003c/strong\u003e option and click the \u003cstrong\u003eCreate Role\u003c/strong\u003e button.\u003c/p\u003e\u003cp\u003eIn the \u003cstrong\u003eNew Role\u003c/strong\u003e dialog, enter a name of \u003cstrong\u003emessages-admin\u003c/strong\u003e, enter a description, and click the \u003cstrong\u003eCreate\u003c/strong\u003e button:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/7EQTp4sJS03bScEWno7kEa/a1c2586b32a480c4b166fb4ce5ba09b5/03_build-a-ktor-api-pt-3.png\" alt=\"Roles\"/\u003e\n\u003cem\u003eCreating a new role.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eUnder the \u003cstrong\u003ePermissions\u003c/strong\u003e tab click the \u003cstrong\u003eAdd Permissions\u003c/strong\u003e button. In the \u003cstrong\u003eAdd Permissions\u003c/strong\u003e dialog select the API we created earlier, select the \u003cstrong\u003eread:admin-messages\u003c/strong\u003e permission, and click the \u003cstrong\u003eAdd Permission\u003c/strong\u003e button:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/ZBB0FviUiLxmOzXoeDvJV/20ce7562521525551515e16e1c23bbe2/04_build-a-ktor-api-pt-3.png\" alt=\"Permissions\"/\u003e\n\u003cem\u003eAdding permissions to a role.\u003c/em\u003e\u003c/p\u003e\u003ch3 id=\"Assigning-the-role-to-a-user\"\u003eAssigning the role to a user\u003c/h3\u003e\u003cp\u003eFor the purposes of this demo, I\u0026#39;ll assume you have already \u003ca href=\"https://auth0.com/docs/users/create-users\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ecreated an Auth0 user\u003c/a\u003e. I\u0026#39;ll also assume this user is linked to the application that was created earlier.\u003c/p\u003e\u003cp\u003eSelect the user, click the \u003cstrong\u003eRoles\u003c/strong\u003e tab, and click the \u003cstrong\u003eAssign Roles\u003c/strong\u003e button.\u003c/p\u003e\u003cp\u003eIn the \u003cstrong\u003eAdd Roles\u003c/strong\u003e dialog, select the \u003cstrong\u003emessages-admin\u003c/strong\u003e role and click the \u003cstrong\u003eAssign\u003c/strong\u003e button:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/6X6s3poUPbop1eG6LShtqM/b8147045f0f291e2e853b6f8027a1e74/05_build-a-ktor-api-pt-3.png\" alt=\"User\"/\u003e\n\u003cem\u003eAssigning a role to a user.\u003c/em\u003e\u003c/p\u003e\u003cp\u003eAuth0 is now configured and ready to authenticate our frontend application. We can move on to updating our Ktor HTTP API to check for the presence of these permissions when accessing the \u003ccode\u003eadmin\u003c/code\u003e endpoint.\u003c/p\u003e\u003ch2 id=\"The-sample-application-code\"\u003eThe sample application code\u003c/h2\u003e\u003cp\u003eTo build the backend application, you\u0026#39;ll need to have JDK 11 or above, which is available from many sources, including \u003ca href=\"https://openjdk.java.net/install/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eOpenJDK\u003c/a\u003e, \u003ca href=\"https://adoptopenjdk.net/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAdoptOpenJDK\u003c/a\u003e, \u003ca href=\"https://www.azul.com/downloads/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAzul\u003c/a\u003e, or \u003ca href=\"https://www.oracle.com/au/java/technologies/javase-jdk11-downloads.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eOracle\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThe final code for the Ktor application can be found \u003ca href=\"https://github.com/mcasperson/Auth0Ktor\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehere\u003c/a\u003e. The code discussed in each post is matched by a branch:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://github.com/mcasperson/Auth0Ktor/tree/starter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003estarter\u003c/a\u003e \u003cul\u003e\u003cli\u003ethe base API with no authentication or authorization.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/mcasperson/Auth0Ktor/tree/add-authorization\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eadd-authorization\u003c/a\u003e \u003cul\u003e\u003cli\u003ethe API requiring a valid access token for the \u003ccode\u003e\u003cspan\u003eprotected\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003eadmin\u003c/code\u003e endpoints.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://github.com/mcasperson/Auth0Ktor/tree/add-rbac\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eadd-rbac\u003c/a\u003e \u003cul\u003e\u003cli\u003ethe API requiring special permissions to access the \u003ccode\u003eadmin\u003c/code\u003e endpoint. This branch is discussed in this post.\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThe frontend application code can be found \u003ca href=\"https://github.com/auth0-sample-gallery/spa_react_javascript_hello-world\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"Updating-the-API\"\u003eUpdating the API\u003c/h2\u003e\u003cp\u003eThe backend API must now be updated to ensure the \u003ccode\u003eadmin\u003c/code\u003e endpoint requires the access token, including the \u003ccode\u003eread\u003cspan\u003e:\u003c/span\u003eadmin\u003cspan\u003e-\u003c/span\u003emessages\u003c/code\u003e permission. The complete code for the \u003ccode\u003esrc\u003cspan\u003e/\u003c/span\u003eApplication\u003cspan\u003e.\u003c/span\u003ekt\u003c/code\u003e file is shown below:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epackage\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003ematthewcasperson\n\n\u003cspan\u003eimport\u003c/span\u003e com\u003cspan\u003e.\u003c/span\u003eauth0\u003cspan\u003e.\u003c/span\u003ejwk\u003cspan\u003e.\u003c/span\u003eJwkProviderBuilder\n\u003cspan\u003eimport\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003eapplication\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003eauth\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003eauth\u003cspan\u003e.\u003c/span\u003ejwt\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003efeatures\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003ehttp\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003eresponse\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003erouting\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003e*\u003c/span\u003e\n\u003cspan\u003eimport\u003c/span\u003e java\u003cspan\u003e.\u003c/span\u003eutil\u003cspan\u003e.\u003c/span\u003econcurrent\u003cspan\u003e.\u003c/span\u003eTimeUnit\n\n\u003cspan\u003efun\u003c/span\u003e \u003cspan\u003emain\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eargs\u003cspan\u003e:\u003c/span\u003e Array\u003cspan\u003e\u0026lt;\u003c/span\u003eString\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e Unit \u003cspan\u003e=\u003c/span\u003e io\u003cspan\u003e.\u003c/span\u003ektor\u003cspan\u003e.\u003c/span\u003eserver\u003cspan\u003e.\u003c/span\u003enetty\u003cspan\u003e.\u003c/span\u003eEngineMain\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emain\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eargs\u003cspan\u003e)\u003c/span\u003e\n\n\u003cspan\u003efun\u003c/span\u003e \u003cspan\u003evalidateCreds\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredential\u003cspan\u003e:\u003c/span\u003e JWTCredential\u003cspan\u003e,\u003c/span\u003e permission\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e JWTPrincipal\u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eval\u003c/span\u003e containsAudience \u003cspan\u003e=\u003c/span\u003e credential\u003cspan\u003e.\u003c/span\u003epayload\u003cspan\u003e.\u003c/span\u003eaudience\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eSystem\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetenv\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;AUDIENCE\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eval\u003c/span\u003e containsScope \u003cspan\u003e=\u003c/span\u003e permission\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eisNullOrBlank\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e||\u003c/span\u003e\n            credential\u003cspan\u003e.\u003c/span\u003epayload\u003cspan\u003e.\u003c/span\u003eclaims\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e\u0026#34;permissions\u0026#34;\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e?\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003easArray\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eString\u003cspan\u003e::\u003c/span\u003e\u003cspan\u003eclass\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ejava\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e?\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003epermission\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\n\n    \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003econtainsAudience \u003cspan\u003e\u0026amp;\u0026amp;\u003c/span\u003e containsScope\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eJWTPrincipal\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredential\u003cspan\u003e.\u003c/span\u003epayload\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\n\n\u003cspan\u003efun\u003c/span\u003e Application\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003emodule\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n\n    \u003cspan\u003eval\u003c/span\u003e jwkProvider \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003eJwkProviderBuilder\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eSystem\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetenv\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;ISSUER\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecached\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e24\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e TimeUnit\u003cspan\u003e.\u003c/span\u003eHOURS\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003erateLimited\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e10\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e TimeUnit\u003cspan\u003e.\u003c/span\u003eMINUTES\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ebuild\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\n    \u003cspan\u003einstall\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eAuthentication\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ejwt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;auth0\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003everifier\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ejwkProvider\u003cspan\u003e,\u003c/span\u003e System\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetenv\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;ISSUER\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            validate \u003cspan\u003e{\u003c/span\u003e credential \u003cspan\u003e-\u0026gt;\u003c/span\u003e \u003cspan\u003evalidateCreds\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredential\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003ejwt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;auth0-admin\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003everifier\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ejwkProvider\u003cspan\u003e,\u003c/span\u003e System\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetenv\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;ISSUER\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            validate \u003cspan\u003e{\u003c/span\u003e credential \u003cspan\u003e-\u0026gt;\u003c/span\u003e \u003cspan\u003evalidateCreds\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredential\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;read:admin-messages\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003einstall\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eCORS\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eanyHost\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003emethod\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eHttpMethod\u003cspan\u003e.\u003c/span\u003eOptions\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003emethod\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eHttpMethod\u003cspan\u003e.\u003c/span\u003eGet\u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003eheader\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;authorization\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n        allowCredentials \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\n        allowNonSimpleContentTypes \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\n\n    \u003cspan\u003e}\u003c/span\u003e\n\n\n    routing \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eget\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/messages/public\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            call\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003erespondText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;{\u0026#34;message\u0026#34;: \u0026#34;The API doesn\u0026#39;t require an access token to share this message.\u0026#34;}\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                contentType \u003cspan\u003e=\u003c/span\u003e ContentType\u003cspan\u003e.\u003c/span\u003eApplication\u003cspan\u003e.\u003c/span\u003eJson\n            \u003cspan\u003e)\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    routing \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eauthenticate\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;auth0\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003eget\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/messages/protected\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                call\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003erespondText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;{\u0026#34;message\u0026#34;: \u0026#34;The API successfully validated your access token.\u0026#34;}\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    contentType \u003cspan\u003e=\u003c/span\u003e ContentType\u003cspan\u003e.\u003c/span\u003eApplication\u003cspan\u003e.\u003c/span\u003eJson\n                \u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    routing \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eauthenticate\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;auth0-admin\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003eget\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/messages/admin\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                call\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003erespondText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;{\u0026#34;message\u0026#34;: \u0026#34;The API successfully recognized you as an admin.\u0026#34;}\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    contentType \u003cspan\u003e=\u003c/span\u003e ContentType\u003cspan\u003e.\u003c/span\u003eApplication\u003cspan\u003e.\u003c/span\u003eJson\n                \u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eLet\u0026#39;s highlight the changes required from the code presented in the previous blog post.\u003c/p\u003e\u003cp\u003eWe\u0026#39;ve updated the \u003ccode\u003evalidateCreds\u003c/code\u003e function to include an optional \u003ccode\u003epermission\u003c/code\u003e parameter. If a permission has been supplied, we ensure it is present in the \u003ccode\u003epermissions\u003c/code\u003e claim on the access token:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003efun\u003c/span\u003e \u003cspan\u003evalidateCreds\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredential\u003cspan\u003e:\u003c/span\u003e JWTCredential\u003cspan\u003e,\u003c/span\u003e permission\u003cspan\u003e:\u003c/span\u003e String\u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e:\u003c/span\u003e JWTPrincipal\u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eval\u003c/span\u003e containsAudience \u003cspan\u003e=\u003c/span\u003e credential\u003cspan\u003e.\u003c/span\u003epayload\u003cspan\u003e.\u003c/span\u003eaudience\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eSystem\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetenv\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;AUDIENCE\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eval\u003c/span\u003e containsScope \u003cspan\u003e=\u003c/span\u003e permission\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eisNullOrBlank\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e||\u003c/span\u003e\n            credential\u003cspan\u003e.\u003c/span\u003epayload\u003cspan\u003e.\u003c/span\u003eclaims\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e\u0026#34;permissions\u0026#34;\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e?\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003easArray\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eString\u003cspan\u003e::\u003c/span\u003e\u003cspan\u003eclass\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ejava\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e?\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003econtains\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003epermission\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\n\n    \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003econtainsAudience \u003cspan\u003e\u0026amp;\u0026amp;\u003c/span\u003e containsScope\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003eJWTPrincipal\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredential\u003cspan\u003e.\u003c/span\u003epayload\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWe then define a second authentication mechanism called \u003ccode\u003eauth0\u003cspan\u003e-\u003c/span\u003eadmin\u003c/code\u003e requiring the permission \u003ccode\u003eread\u003cspan\u003e:\u003c/span\u003eadmin\u003cspan\u003e-\u003c/span\u003emessages\u003c/code\u003e in order to pass validation:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e    \u003cspan\u003einstall\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eAuthentication\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003e// ...\u003c/span\u003e\n        \u003cspan\u003ejwt\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;auth0-admin\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003everifier\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ejwkProvider\u003cspan\u003e,\u003c/span\u003e System\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetenv\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;ISSUER\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n            validate \u003cspan\u003e{\u003c/span\u003e credential \u003cspan\u003e-\u0026gt;\u003c/span\u003e \u003cspan\u003evalidateCreds\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ecredential\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e\u0026#34;read:admin-messages\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eFinally, the route exposing the \u003ccode\u003eadmin\u003c/code\u003e endpoint is updated to use the new \u003ccode\u003eauth0\u003cspan\u003e-\u003c/span\u003eadmin\u003c/code\u003e authentication mechanism:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e    routing \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eauthenticate\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;auth0-admin\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n            \u003cspan\u003eget\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;/api/messages/admin\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n                call\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003erespondText\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n                    \u003cspan\u003e\u0026#34;\u0026#34;\u0026#34;{\u0026#34;message\u0026#34;: \u0026#34;The API successfully recognized you as an admin.\u0026#34;}\u0026#34;\u0026#34;\u0026#34;\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e\n                    contentType \u003cspan\u003e=\u003c/span\u003e ContentType\u003cspan\u003e.\u003c/span\u003eApplication\u003cspan\u003e.\u003c/span\u003eJson\n                \u003cspan\u003e)\u003c/span\u003e\n            \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"Inspecting-the-access-token\"\u003eInspecting the access token\u003c/h2\u003e\u003cp\u003eBy capturing the network traffic sent by the frontend (as we did in the previous post), we can copy the access token to \u003ca href=\"https://jwt.io\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ejwt.io\u003c/a\u003e to inspect the JWT contents.\u003c/p\u003e\u003cp\u003eNote that the token includes the \u003ccode\u003epermissions\u003c/code\u003e claim, which defines the \u003ccode\u003eread\u003cspan\u003e:\u003c/span\u003eadmin\u003cspan\u003e-\u003c/span\u003emessages\u003c/code\u003e permission:\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/eFammxKcqhwLSKDPgfxRU/8b24e9b2c662143d983b4033aef61197/Assigning_the_role_to_a_user.jpg\" alt=\"Inspecting the access token\"/\u003e\n\u003cem\u003eA parsed JWT token.\u003c/em\u003e\u003c/p\u003e\u003ch2 id=\"Conclusion\"\u003eConclusion\u003c/h2\u003e\u003cp\u003eIn this post, we completed our three-part journey creating an HTTP API with Ktor, requiring authentication via Auth0, and finally enabling RBAC. By embedding the permissions assigned to a user in the \u003ccode\u003epermissions\u003c/code\u003e scope and verifying the presence of a known permission for any queries to the \u003ccode\u003eadmin\u003c/code\u003e endpoint, we can be sure that only authorized users can access the restricted endpoints in our HTTP API.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Learn how to add Auth0 RBAC authorization to Ktor HTTP API endpoints",
      "date_published": "2021-08-03T15:12:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/time-to-prepare-be-ready-to-scale-your-workforce-and-app/",
      "title": "Time to Prepare: Be Ready to Scale Your Workforce and App",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eIf you sped through your digital road map during the pandemic and are looking to fill security and privacy gaps right now, go back and check out my earlier posts:\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003ca href=\"https://auth0.com/blog/accelerated-your-road-map-go-fix-workforce-and-app-security\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAccelerated Your Road Map? Go Fix Workforce and App Security\u003c/a\u003e\u003c/li\u003e\u003cli\u003e\u003ca href=\"https://auth0.com/blog/workforce-and-app-privacy-have-changed-so-should-you\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eWorkforce and App Privacy Have Changed, So Should You\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eThis post is about making the shift from reaction to preparation so that you are ready for the next moment that requires speed – and set up to scale.\u003c/p\u003e\u003ch2 id=\"Find-Your-Balance\"\u003eFind Your Balance\u003c/h2\u003e\u003cp\u003eIn all of these posts, we mention speed and imply pressure. There is always going to be a business reason to get an app to market as quickly as possible. You will discover vulnerabilities that require your immediate attention. And regulations will set deadlines for you. \u003c/p\u003e\u003cp\u003eSo there is always going to be more you could do to improve security for your customers, your business, and the rest of the internet. Even for veteran security professionals, the pandemic was a reminder that we still need to pick and choose priorities. If you have an internal security team, lean into their expertise. Give them the time and space to guide you on priorities. Listen to their assessments of risk and let them set a pace that works for your business.\u003c/p\u003e\u003cp\u003eLonger-term security and privacy improvements can have big payoffs. Like the previous posts, these things require action. You’re also going to need to support your existing security team or create one. By support, I mean backing conversations about risks with budget for tools, external vendors, and hiring internal talent.\u003c/p\u003e\u003cp\u003eIf you don’t currently have security or privacy teams, we’ll cover a bit of advice on what to look for as well.\u003c/p\u003e\u003ch2 id=\"Consumers-Expect-and-Deserve-Strong-Security-and-Privacy\"\u003eConsumers Expect and Deserve Strong Security and Privacy\u003c/h2\u003e\u003cp\u003eLet’s also set some context.\u003c/p\u003e\u003cp\u003eThere was a time when businesses leaned heavily into just shipping the product. Speed often won over security or privacy.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eConsumers are telling us that time is over.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eIn a \u003ca href=\"https://www.mckinsey.com/business-functions/risk/our-insights/the-consumer-data-opportunity-and-the-privacy-imperative\" target=\"_blank\" rel=\"noreferrer noopener\"\u003erecent global survey\u003c/a\u003e, McKinsey found that 87% of consumer respondents said security practice concerns would mean they wouldn’t do business with a company, and 71% would stop doing business if it gave away sensitive data without their permission. \u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eThe more secure and private app is now the one that keeps and attracts customers. \u003c/p\u003e\u003c/blockquote\u003e\u003ch2 id=\"Security--Longer-Term-Planning\"\u003eSecurity: Longer-Term Planning\u003c/h2\u003e\u003cp\u003eIf you’re looking to make a dramatic improvement in your cybersecurity, these best practices will help get you there.\u003c/p\u003e\u003cul\u003e\u003cli\u003e\u003cstrong\u003eIncrease pen test frequency.\u003c/strong\u003e Penetration testing (pen testing) includes hiring an external vendor to test your application and site for vulnerabilities and provide you with a report cataloged by severity. Many companies do this once a year and call it good. In today’s evolving threat environment, that’s not enough. If you can up your pen testing to every quarter — and take action on what you learn — you’ll see a big increase in security. Adding a pen test after every major operating system upgrade, library update, or major code push will do even more.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eImprove your software development life cycle (SLDC).\u003c/strong\u003e Many shops are still doing security after the product is completely coded, but this creates an automatic security backlog that can not only slow getting your product to market it can put pressure on your execs to allow unnecessary risks into the wild. Involving security and privacy teams as software is being developed allows them to raise questions that influence architecture before burning hours of engineering time. Few people like to put hours and hours into something only to have to take it apart, so your devs are rarely pleased to see this analysis tacked on at the end of the SLDC., which leads me to my next point.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eEncourage ownership and collaboration between devs and security.\u003c/strong\u003e How you introduce the idea of static and dynamic code analysis as well as overall participation of security in the SLDC matters. Explaining that humans are fallible, so all code is going to have vulnerabilities, and there are going to be remote code executions (RCEs) is a good place to start. As a dev, they don’t want RCEs creating headaches, and they don’t want to get paged and work nights because problems have been discovered and exploited. You can encourage ownership by asking your dev team to review the security team handling analyses. Ultimately, this can go a long way towards establishing security-dev collaboration, leading to apps that get to market more securely as well quickly.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCreate a golden image.\u003c/strong\u003e A \u003ca href=\"https://www.cisecurity.org/cis-hardened-images/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003egolden Image\u003c/a\u003eis a single machine image that has been tested and hardened. When there is an operating system or library update, the AMI gets updated and tested. This allows you to see how your customers might be impacted before you push that patch update out to thousands of users. It also provides an approved starting point for new business units or apps. The time it takes to create and maintain this image pays off in protected services and reduced downtimes. Using \u003ca href=\"https://en.wikipedia.org/wiki/Hardening_(computing\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehardened\u003c/a\u003e) images also increases reliability and consistency.\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"Hiring-Security-Talent\"\u003eHiring Security Talent\u003c/h2\u003e\u003cp\u003eSecurity can seem like an area that is purely technical — and your team does need to have a deep understanding of your product and how it works, but sooner or later, a human is going to touch or use your product. Strong security talent needs to understand human behavior from bad actors to customers. Your chief information security officer (CISO) also needs to be able to explain technical risks and benefits to non-technical executive teams.\u003c/p\u003e\u003cp\u003eThere’s a cybersecurity talent shortage globally. According to an International Information System Security Certification Consortium (ISC)² \u003ca href=\"https://www.isc2.org/Research/Workforce-Study#\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ereport\u003c/a\u003e, that shortage shrank slightly during the pandemic, from 4 million open jobs in 2019 to 3.1 million. You’re going to need to compete for talent.\u003c/p\u003e\u003cp\u003eYour new CISO also needs to understand your industry because threats are often industry-specific. Here are some questions to ask your hiring team when considering a potential candidate:\u003c/p\u003e\u003cul\u003e\u003cli\u003eAre they passionate about not only security but also your company?\u003c/li\u003e\u003cli\u003eDo they have experience in your industry? If not, how adept are they at cross-applying knowledge?\u003c/li\u003e\u003cli\u003eAreas of expertise? If you need them to be a generalist, do they understand how to source third-party support (and are you willing to fund that support)?\u003c/li\u003e\u003cli\u003eDo they welcome diversity?\u003c/li\u003e\u003cli\u003eDo they contribute to open source security?\u003c/li\u003e\u003cli\u003eDo they regularly attend and speak at conferences?\u003c/li\u003e\u003cli\u003eCan they explain the business case for your product?\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"Privacy--Longer-Term-Planning\"\u003ePrivacy: Longer-Term Planning\u003c/h2\u003e\u003cp\u003eConsumers are demanding a secure and contextual private experience — and we’re seeing regulators back them up with a variety of data privacy regulations.\u003c/p\u003e\u003cp\u003e\u0026#34;\u003cem\u003eBy industry, consumers are most comfortable sharing data with providers in healthcare and financial services, though no industry reached a trust rating of 50 percent for data protection,\u003c/em\u003e” notes \u003ca href=\"https://www.mckinsey.com/business-functions/risk/our-insights/the-consumer-data-opportunity-and-the-privacy-imperative\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMcKinsey\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eThis isn’t one of those things that is going away, says Auth0’s Vice President of Privacy Lucy McGrath. Globally, we’re seeing consumer groups becoming more vocal about data privacy concerns and violations with filings against companies like \u003ca href=\"https://www.beuc.eu/publications/consumer-groups-file-complaint-against-whatsapp-unfairly-pressuring-users-accept-its/html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eWhat’sApp\u003c/a\u003e. \u003c/p\u003e\u003cp\u003e“\u003cem\u003eData privacy is going to continue to evolve with consumers’ awareness and expectations,\u003c/em\u003e” says Lucy. “\u003cem\u003eTo adapt, companies are going to have to think beyond just meeting the bare minimum of legal requirements. They need to ask themselves hard questions about what protections are appropriate given the context and the humans you’re interacting with and work through the answers. We need to be building proactive privacy programs that reflect these data privacy conversations. Creating consumer trust requires listening and deliberate action.\u003c/em\u003e”\u003c/p\u003e\u003cp\u003eStart with these questions:\u003c/p\u003e\u003cul\u003e\u003cli\u003eHave I taken the time to understand the relationship my digital properties (app, site) create with my customers? How do I want them to feel at login? What about as they continue through my app or site?\u003c/li\u003e\u003cli\u003eAm I encouraging or discouraging trust by how I gather consent and data?\u003c/li\u003e\u003cli\u003eHave I created a transparent customer experience (CX) with clear consent and options?\u003c/li\u003e\u003cli\u003eIf I am really honest with myself, do I need to change something? Do I really need this data?\u003c/li\u003e\u003cli\u003eWho are my customers? What does privacy mean to them in the context of my services?\u003c/li\u003e\u003cli\u003eDo I have appropriate basic security and data governance processes in place?\u003c/li\u003e\u003cli\u003eHave I invested extra resources and time to protect the most sensitive/high-risk data such as health, financial, religious, or sexual orientation information?\u003c/li\u003e\u003cli\u003eDo I have any customers in regulated jurisdictions such as the European Union (EU) or California? If so, when was the last time I checked in with my legal counsel to make sure I’m in line with current requirements?\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"Provide-Cues-for-Safety-and-Trust\"\u003eProvide Cues for Safety and Trust\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://www.wired.com/story/apple-app-privacy-labels/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eApple’s nutrition labels for data privacy\u003c/a\u003e make good on efforts that have been around since the 2010s. If your new app is going to be in the App Store, Apple requires that you report publicly on data you’re using to track your customers, data linked to them, and data gathered but not linked to them. Even though Apple is relying on app developers to self-report, the labels increase consumer awareness and expectation, says Lucy. Given Apple’s size ($274.5 billion reported revenue in 2020 makes it the world’s largest company), these nutrition labels signal that data privacy is now an everyday consumer concern.\u003c/p\u003e\u003cp\u003e“\u003cem\u003eBusinesses who don’t respond could miss out\u003c/em\u003e”, says Lucy. “\u003cem\u003eThe threats of data privacy fines and unhappy customers are real, but so is the opportunity to create customer experiences (CX) that drive brand loyalty. The entire tech industry is coming together to work on these data privacy challenges. Companies that act on the side of the consumer stand out.\u003c/em\u003e”\u003c/p\u003e\u003ch2 id=\"Hiring-Data-Privacy-Talent\"\u003eHiring Data Privacy Talent\u003c/h2\u003e\u003cp\u003eLike security, data privacy professionals need to understand and express the intersection of humans and technology. They need to be able to communicate risks and benefits across an entire organization, with an emphasis on engineering, marketing, and senior leadership. Critical and analytical thinking, empathy, and consideration of different motivations and perspectives are key. Technical knowledge around privacy laws can be taught, but an ability to engage, listen and understand the context of the business and their customers is essential. Privacy isn’t “done” by privacy professionals - they support all parts of the business to build privacy protections into their individual business processes.\u003c/p\u003e\u003cp\u003eLucy recommends that you ask candidates questions to show how they think about privacy issues in the context of the businesses in which they work. Examples of such questions include: \u003c/p\u003e\u003cul\u003e\u003cli\u003eHow would you demonstrate the value of good privacy practices to the chief financial officer (CFO)?\u003c/li\u003e\u003cli\u003eHow do you respond to the statement: privacy slows the business down?\u003c/li\u003e\u003cli\u003eWhat can you do to support developers to integrate privacy controls into their development lifecycle?\u003c/li\u003e\u003cli\u003eProvide examples of when you have translated legal obligations into plain English requirements that the business can implement?\u003c/li\u003e\u003cli\u003eWhich company does privacy well? Why? How would you implement similar standards here?\u003c/li\u003e\u003cli\u003eWhat are the key privacy risks that need to be prioritized? What actions are required to mitigate these risks?\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"You-re-Helping-Make-the-Internet-Safer\"\u003eYou’re Helping Make the Internet Safer\u003c/h2\u003e\u003cp\u003eThank you for checking out this series. One of the things that came up while working on this content is how the pandemic has made everything even more connected. The \u003ca href=\"https://auth0.com/resources/whitepapers/state-of-security-identity-report\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ethreat landscape\u003c/a\u003e and regulatory requirements can seem overwhelming, but taking the time to secure your personal data, your customer’s data, and your businesses make it harder for bad actors.\u003c/p\u003e\u003cp\u003eIdentity can be a weak spot for both security and privacy if it’s not handled by experts. A strong Customer Identity Access Management (CIAM) solution like Auth0 can increase your security, support your data privacy strategy, and comes with certifications for various compliance requirements like \u003ca href=\"https://auth0.com/blog/what-is-iso-27001-2013-a-guide-for-businesses/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eISO 27001:2013\u003c/a\u003e and \u003ca href=\"https://auth0.com/blog/what-is-iso-27018-2019-everything-executives-need-to-know/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eISO 27018:2019\u003c/a\u003e and \u003ca href=\"https://auth0.com/blog/the-csa-star-program-a-business-guide-to-certification/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eCSA Star\u003c/a\u003e. If you’d like to learn more about how Auth0 can help make your business more secure and stay ahead of your customers’ evolving expectations, please \u003ca href=\"https://auth0.com/contact-us?place=header\u0026amp;type=button\u0026amp;text=contact%20sales\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ereach out to the team at Auth0\u003c/a\u003e.\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"About-Auth0\"\u003eAbout Auth0 \u003c/h2\u003e\u003cp\u003eAuth0’s modern approach to identity enables organizations to provide secure access to any application, for any user. The Auth0 platform is a highly customizable identity operating system that is as simple as development teams want and as flexible as they need. Safeguarding billions of login transactions each month, Auth0 delivers convenience, privacy, and security so customers can focus on innovation. For more information, visit \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://auth0.com\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "The consumer speaks — how readiness to scale wins the security and privacy battle for the customer",
      "date_published": "2021-07-30T16:32:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/latam-response-to-rapid-digital-change/",
      "title": "LATAM Response to Rapid Digital Change",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eThe market in Latin America is growing faster than ever, with new venture capital deals nearly doubling to 488 between 2017 and 2020, according to \u003ca href=\"https://www.bloomberg.com/news/articles/2021-03-16/latin-american-startups-had-record-venture-capital-deals-in-2020\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eBloomberg\u003c/a\u003e. Beyond VC, a \u003ca href=\"https://publications.iadb.org/publications/english/document/Tecnolatinas-2021-The-LAC-Startup-Ecosystem-Comes-of-Age.pdf\" target=\"_blank\" rel=\"noreferrer noopener\"\u003estudy by IDB lab\u003c/a\u003e revealed that the tech-enabled startup market hit a valuation of more than $220 billion USD in 2020.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/Gz6t31FLxbPc7r8T996gE/caed742f057acf90192df17560dbf527/Latam11.jpg\" alt=\"LATAM\"/\u003e\u003c/p\u003e\u003cp\u003eGlobally, the pandemic has \u003ca href=\"https://auth0.com/blog/how-brick-and-mortar-approaches-improve-digital-experiences/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eaccelerated digital road maps across industries\u003c/a\u003e and businesses now have to respond to changes in digital expectations and buying patterns.\n\u003c/p\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Person\" itemprop=\"author\"\u003e\u003cp\u003e“Companies cannot predict exactly what their business and customers will need tomorrow, especially in response to today’s rapidly changing digital environment.”\u003c/p\u003e\u003cp\u003eGabriel Camargo\u003c/p\u003e\u003cp\u003eProduct Director\u003c/p\u003e\u003cp\u003eCLM\u003c/p\u003e\u003c/div\u003e\u003cp\u003ePartnering with \u003ca href=\"https://auth0.com/blog/auth0-expands-global-partner-network-in-latin-america-with-clm/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eCLM\u003c/a\u003e on distribution in Latin America (LATAM) extends Auth0’s reach into Brazil, Colombia, Ecuador, and Peru.\u003c/p\u003e\u003cp\u003eOver the years of working within Latin America, we’ve learned that \u003ca href=\"https://auth0.com/blog/building-an-identity-solution-quantity-doesnt-equal-quality\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eidentity expertise\u003c/a\u003e and \u003ca href=\"https://auth0.com/blog/can-your-identity-solution-grow-with-your-company\" target=\"_blank\" rel=\"noreferrer noopener\"\u003escalability\u003c/a\u003e are two critical areas of concern for businesses in the region. You can check out our earlier posts in this series for details, but here, we wanted to look more closely at how we were able to help two companies within the region.\u003c/p\u003e\u003ch2 id=\"Naranja---From-Leading-Credit-Card-Issuer-in-Argentina--To-Complete-Consumer-Ecosystem\"\u003eNaranja — From Leading Credit Card Issuer in Argentina, To Complete Consumer Ecosystem\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://auth0.com/case-studies/naranja/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eFintech leader Naranja\u003c/a\u003e has been providing credit cards to the Argentinian market for over 30 years. In that time, they’ve grown to cover over 5 million customers by keeping those customers’ needs their top priority. As they grew, Naranja also began to integrate additional verticals into their business model. Pretty soon, they were offering payment services, financing, travel, media, and other services beyond their credit card programs.\u003c/p\u003e\u003cp\u003eAs they added these verticals, Naranja’s head of engineering Javier Voos soon realized they would need to consolidate their identity solution to cover all aspects of their growing ecosystem. He knew that in order to continue putting the customer experience first, they would need to find the right IDaaS provider that would be able to scale along with their planned expansion.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=kqouiuVk07Q\u0026amp;feature=emb_imp_woyt\" target=\"_blank\" rel=\"noreferrer noopener\"\u003elink to video\u003c/a\u003e\u003c/p\u003e\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/kqouiuVk07Q\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Person\" itemprop=\"author\"\u003e\u003cp\u003e“The main idea behind the Naranja ecosystem is to provide the best experience to our customers, making sure that our digital platform provides all the resources that an online business needs for success, and hence support the ecosystem evolution.”\u003c/p\u003e\u003cp\u003eJavier Voos\u003c/p\u003e\u003cp\u003eHead of Engineerin\u003c/p\u003e\u003cp\u003eNaranja\u003c/p\u003e\u003c/div\u003e\u003cp\u003eVoos’ priority was to find a platform that provided secure APIs for identity so they could focus their expansion efforts on B2B services alongside their expanded consumer offerings. Finding Auth0 meant that his team could implement one identity solution that would allow both B2B and B2C customers access to the platforms they needed access to while ensuring data privacy and a low-friction user experience.\n\u003c/p\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Person\" itemprop=\"author\"\u003e\u003cp\u003e“Auth0 gave our company the tools to secure the access to our API for first- and third-party consumers, in a way that can scale through time and put us in a better position to ally with new partners and work our way to a fully functional Naranja API Market.”\u003c/p\u003e\u003cp\u003eDanilo Asis\u003c/p\u003e\u003cp\u003eSolution Architect\u003c/p\u003e\u003cp\u003eNaranja\u003c/p\u003e\u003c/div\u003e\u003ch2 id=\"WABI---South-America-s-E-Commerce-Portal\"\u003eWABI — South America’s E-Commerce Portal\u003c/h2\u003e\u003cp\u003eWith a half-dozen offerings already on offer, \u003ca href=\"https://auth0.com/case-studies/wabipay/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eWABI\u003c/a\u003e is looking to the future. Their ambitious goal is to become Latin America’s go-to e-commerce portal. Their offerings already include WABI, a smartphone-based grocery service; Wabipay, an e-wallet app; and four additional applications. The end-goal WABI envisions is for customers to log in one time and have access to a complete, end-to-end e-commerce experience. They’ll be able to shop, pay, and track delivery all in one place.\u003c/p\u003e\u003cp\u003eJuan Manuel Mingo, former WABI Business Manager, sums up the hurdle they faced when it came to identity and customer authentication, “We had different platforms with different user registration processes,” he says. “Our aim was to unify all the user registration of the different platforms in order to get a better user experience and to have a more organized user database.” The disjointed customer experience was the first thing WABI knew they would have to solve before they could continue growing and expanding their e-commerce ecosystem. \u003c/p\u003e\u003cdiv itemscope=\"\" itemtype=\"http://schema.org/Person\" itemprop=\"author\"\u003e\u003cp\u003e“Our endgame is that you enter the ecosystem through Wabi. You log in to Wabi, order your things, and when you want to pay, you simply go to WabiPay, and you’re already logged in.”\u003c/p\u003e\u003cp\u003eFrederico Galli\u003c/p\u003e\u003cp\u003eGeneral Manager\u003c/p\u003e\u003cp\u003eWABI\u003c/p\u003e\u003c/div\u003e\u003cp\u003eLike Naranja, WABI has always had a customer-first attitude. That meant that customer-facing features like single sign-on were top priorities. As Frederico Galli stated, their endgame is for customers to sign in once and have access to the entire ecosystem of WABI offerings. Not only that, but with further expansion plans in the works, they needed an identity solution that was with them for the long haul. Juan Manual Mingo put it like this, “WABI is scalable, and we need a partner that is, too. We believe Auth0 will support us in getting there.”\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/P45m9X6Z8ag9oOTv8R4kW/cc92f6325cb89fd84f233aa6c6992218/Latam12.jpg\" alt=\"LATAM\"/\u003e\u003c/p\u003e\u003ch2 id=\"Learn-how-Auth0-can-help-your-business\"\u003eLearn how Auth0 can help your business\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://www.forbesargentina.com/editorial/la-increible-historia-auth0-cliente-us-27-quinto-unicornio-hoy-vale-us-1100-n1352\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eArgentinian talent Eugenio Pace and Matias Wolowski\u003c/a\u003e founded Auth0, so we know the ins and outs of the South American market. When you’re ready to bring your identity solution in line with your broader organizational expansion goals, reach out to our \u003ca href=\"https://auth0.com/contact-us\" target=\"_blank\" rel=\"noreferrer noopener\"\u003emarket experts\u003c/a\u003e to start the discussion about how we can help.\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"About-Auth0\"\u003eAbout Auth0 \u003c/h2\u003e\u003cp\u003eAuth0’s modern approach to identity enables organizations to provide secure access to any application, for any user. The Auth0 platform is a highly customizable identity operating system that is as simple as development teams want and as flexible as they need. Safeguarding billions of login transactions each month, Auth0 delivers convenience, privacy, and security so customers can focus on innovation. For more information, visit \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://auth0.com\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Why Naranja and Wabi turned to Auth0 to ensure identity expertise and scaling",
      "date_published": "2021-07-30T12:45:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/a-complete-guide-to-lombok/",
      "title": "A Complete Guide to Lombok",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eJava is a great but verbose language. You may be ending up writing many lines of code even to achieve the most common goals. Plus, it definitely involves repetitive code, like getters and setters. This leads to a huge amount of boilerplate and avoidable code. Not only does this add nothing to the business logic of your application, but writing it is an unnecessarily boring and time-consuming process. This is why you should start employing tools and libraries to make you more productive by avoiding this. That’s where Lombok comes into play!\u003c/p\u003e\u003cp\u003eThis Java library provides you with several annotations aimed at avoiding writing Java code known to be repetitive and/or boilerplate. Project Lombok works by plugging into your build process. Then, it will auto-generate the Java bytecode into your \u003cem\u003e.class\u003c/em\u003e files required to implement the desired behavior, based on the annotations you used. Thus, each annotation offered by Project Lombok allows you to skip writing methods and logic you would like to avoid, like constructors, equals, and hash code functions. This will save you a lot of time and let you focus on the business logic of your project. Plus, you will be able to keep your codebase smaller, cleaner, and easier to be read and maintained.\u003c/p\u003e\u003cp\u003eFirst, we will see what Project Lombok is and how it works. Then, we will study the most common and relevant Lombok’s annotations, understanding what the most important ones are, where, and how to use them. Next, it will be time to see how to integrate it in your IDE (\u003ca href=\"https://en.wikipedia.org/wiki/Integrated_development_environment\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eIntegrated Development Environment\u003c/a\u003e) and why you should not be afraid of using it.\u003c/p\u003e\u003ch2 id=\"Prerequisites\"\u003ePrerequisites\u003c/h2\u003e\u003cp\u003eThis is the list of all the prerequisites to replicate the examples that will be shown next:\u003c/p\u003e\u003cul\u003e\u003cli\u003eJava \u0026gt;= 1.8\u003c/li\u003e\u003cli\u003eGradle \u0026gt;= 4.x or Maven 3.6.x\u003c/li\u003e\u003cli\u003eProject Lombok \u0026gt;= 1.18.20\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"What-is-Lombok\"\u003eWhat is Lombok\u003c/h2\u003e\u003cp\u003e\u003ca href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eProject Lombok\u003c/a\u003e (from now on, \u003cem\u003eLombok\u003c/em\u003e) is an annotation-based Java library that allows you to reduce boilerplate code. Lombok offers various annotations aimed at replacing Java code that is well known for being boilerplate, repetitive, or tedious to write. For example, by using Lombok, you can avoid writing constructors with no arguments, \u003ccode\u003e\u003cspan\u003etoString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, and \u003ccode\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e methods by simply adding a few annotations. The magic happens during the compile-time when the library injects the bytecode representing the desired and boilerplate code into your \u003cem\u003e.class\u003c/em\u003e files. Plus, as we will see, the library can be plugged into your IDE, letting you have the same experience as if you had written all the boilerplate code yourself.\u003c/p\u003e\u003cp\u003eYou can easily install Lombok by adding \u003ca href=\"https://mvnrepository.com/artifact/org.projectlombok/lombok/1.18.20\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003elombok\u003c/code\u003e\u003c/a\u003e to your dependencies.\nIf you are a \u003ca href=\"https://projectlombok.org/setup/gradle\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eGradle user\u003c/a\u003e, add these two lines to the dependencies section of your \u003ccode\u003ebuild\u003cspan\u003e.\u003c/span\u003egradle\u003c/code\u003e file:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003ecompileOnly \u003cspan\u003e\u0026#39;org.projectlombok:lombok:1.18.20\u0026#39;\u003c/span\u003e\nannotationProcessor \u003cspan\u003e\u0026#39;org.projectlombok:lombok:1.18.20\u0026#39;\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eWhile if you are a \u003ca href=\"https://projectlombok.org/setup/maven\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMaven user\u003c/a\u003e, add the following dependency to your \u003ccode\u003epom\u003cspan\u003e.\u003c/span\u003exml\u003c/code\u003e file:\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n      \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eorg.projectlombok\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n      \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003elombok\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n      \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e1.18.20\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n      \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003escope\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eprovided\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003escope\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003edependency\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003ePlus, add the Lombok dependency to the \u003ca href=\"https://maven.apache.org/plugins/maven-compiler-plugin/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003emaven\u003cspan\u003e-\u003c/span\u003ecompiler\u003cspan\u003e-\u003c/span\u003eplugin\u003c/code\u003e\u003c/a\u003e configuration section as follows :\u003c/p\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003ebuild\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n      \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eplugins\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e      \n            \n            \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eplugin\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                  \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eorg.apache.maven.plugins\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                  \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003emaven-compiler-plugin\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                  \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e3.5.1\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                  \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003econfiguration\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003esource\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e11\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003esource\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e \u003cspan\u003e\u0026lt;!-- depending on your project --\u0026gt;\u003c/span\u003e\n                        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003etarget\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e11\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003etarget\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e \u003cspan\u003e\u0026lt;!-- depending on your project --\u0026gt;\u003c/span\u003e\n                        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eannotationProcessorPaths\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                              \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003epath\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                                    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003eorg.projectlombok\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003egroupId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                                    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003elombok\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eartifactId\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                                    \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e1.18.20\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eversion\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                              \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003epath\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e                              \n                        \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eannotationProcessorPaths\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n                  \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003econfiguration\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n            \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eplugin\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n            \n            \u003cspan\u003e\u0026lt;!-- ... --\u0026gt;\u003c/span\u003e  \n            \n      \u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003eplugins\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\n\u003cspan\u003e\u003cspan\u003e\u003cspan\u003e\u0026lt;/\u003c/span\u003ebuild\u003c/span\u003e\u003cspan\u003e\u0026gt;\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eNow, you have all you need to start using Lombok.\u003c/p\u003e\u003ch2 id=\"Most-Common-Lombok-Annotations\"\u003eMost Common Lombok Annotations\u003c/h2\u003e\u003cp\u003eHere you can find the most common and important Lombok annotations. Each of them will be explained and then seen in use compared to the equivalent Java vanilla translation. To see examples and get more support, click on each annotation and visit its page on the \u003ca href=\"https://projectlombok.org/features/all\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eLombok official documentation\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"---Getter---https---projectlombok-org-features-GetterSetter------Setter---https---projectlombok-org-features-GetterSetter-\"\u003e\u003ca href=\"https://projectlombok.org/features/GetterSetter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Getter\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://projectlombok.org/features/GetterSetter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Setter\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eWhen a field is annotated with \u003ccode\u003e@Getter\u003c/code\u003e and/or \u003ccode\u003e@Setter\u003c/code\u003e, Lombok will automatically generate the default getter and/or setter, respectively. The default implementation for getters simply takes care of returning the annotated field. Similarly, the default implementation for setters takes one parameter of the same type as the annotated field and simply sets it with the received value. When a field called \u003ccode\u003evalue\u003c/code\u003e is annotated with both \u003ccode\u003e@Getter\u003c/code\u003e and \u003ccode\u003e@Setter\u003c/code\u003e, Lombok will define a \u003ccode\u003e\u003cspan\u003egetValue\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e (or \u003ccode\u003e\u003cspan\u003eisValue\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e if the field is \u003ccode\u003eboolean\u003c/code\u003e), and a \u003ccode\u003e\u003cspan\u003esetValue\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method. The generated getter/setter method will be \u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e\u003c/code\u003e, unless a particular \u003ccode\u003eAccessLevel\u003c/code\u003e is specified. The allowed \u003ccode\u003eAccessLevel\u003c/code\u003e values are \u003ccode\u003e\u003cspan\u003ePUBLIC\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003ePROTECTED\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003ePACKAGE\u003c/span\u003e\u003c/code\u003e, and \u003ccode\u003e\u003cspan\u003ePRIVATE\u003c/span\u003e\u003c/code\u003e. Please, note that you can also annotate the entire class. In this case, this logic will be applied to each field.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e@Getter\u003c/span\u003e\n\u003cspan\u003e@Setter\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e@Setter\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eAccessLevel\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ePROTECTED\u003cspan\u003e)\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eUser\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eid \u003cspan\u003e=\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ename \u003cspan\u003e=\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003eprotected\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003esurname \u003cspan\u003e=\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---NoArgsConstructor---https---projectlombok-org-features-constructor------RequiredArgsConstructor---https---projectlombok-org-features-constructor------AllArgsConstructor---https---projectlombok-org-features-constructor-\"\u003e\u003ca href=\"https://projectlombok.org/features/constructor\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@NoArgsConstructor\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://projectlombok.org/features/constructor\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@RequiredArgsConstructor\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://projectlombok.org/features/constructor\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@AllArgsConstructor\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eWhen a class is annotated with \u003ccode\u003e@NoArgsConstructor\u003c/code\u003e, Lombok will take care of automatically generating a constructor with no parameters. Likewise, when annotated with \u003ccode\u003e@AllArgsConstructor\u003c/code\u003e, a constructor with one parameter for each field in your class will be generated. Similarly, \u003ccode\u003e@RequiredArgsConstructor\u003c/code\u003e leads to a constructor with a parameter for each field requiring special handling. In particular, this involves non-initialized \u003ccode\u003efinal\u003c/code\u003e fields, as well as any fields marked as \u003ccode\u003e@NonNull\u003c/code\u003e that are not initialized where declared. Please, do not forget that static fields will be ignored by these annotations.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e@NoArgsConstructor\u003c/span\u003e\n\u003cspan\u003e@AllArgsConstructor\u003c/span\u003e\n\u003cspan\u003e@RequiredArgsConstructor\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e birthPlace\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e birthPlace\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003e// @NoArgsConstructor\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e// @AllArgsConstructor\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e birthPlace\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eid \u003cspan\u003e=\u003c/span\u003e id\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ename \u003cspan\u003e=\u003c/span\u003e name\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003esurname \u003cspan\u003e=\u003c/span\u003e surname\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ebirthPlace \u003cspan\u003e=\u003c/span\u003e birthPlace\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e// @RequiredArgsConstructor\u003c/span\u003e\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e birthPlace\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ebirthPlace \u003cspan\u003e=\u003c/span\u003e birthPlace\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---ToString---https---projectlombok-org-features-ToString-\"\u003e\u003ca href=\"https://projectlombok.org/features/ToString\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@ToString\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eWhen a class is annotated with \u003ccode\u003e@ToString\u003c/code\u003e, Lombok will take care of generating a proper implementation of the \u003ccode\u003e\u003cspan\u003etoString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method. By default, a String containing the class name, followed by each field\u0026#39;s value separated by a comma, will be returned. By setting the \u003ccode\u003eincludeFieldNames\u003c/code\u003e parameter to \u003cem\u003etrue\u003c/em\u003e, the name of each field will be placed before its value. By default, all non-static fields will be considered when generating the \u003ccode\u003e\u003cspan\u003etoString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e method. Annotate a field with \u003ccode\u003e@ToString\u003cspan\u003e.\u003c/span\u003eExclude\u003c/code\u003e to make Lombok ignore it. Alternatively, you can specify which fields you wish to be taken into account by using \u003ccode\u003e@\u003cspan\u003eToString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eonlyExplicitlyIncluded \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e. Then, mark each field you want to include with \u003ccode\u003e@ToString\u003cspan\u003e.\u003c/span\u003eInclude\u003c/code\u003e.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e@ToString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eincludeFieldNames\u003cspan\u003e=\u003c/span\u003e\u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e \n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003etoString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e\u0026#34;Author(id=\u0026#34;\u003c/span\u003e \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eid \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e\u0026#34;, name=\u0026#34;\u003c/span\u003e \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ename \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e\u0026#34;, surnname=\u0026#34;\u003c/span\u003e \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003esurname \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e\u0026#34;)\u0026#34;\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---EqualsAndHashCode---https---projectlombok-org-features-EqualsAndHashCode-\"\u003e\u003ca href=\"https://projectlombok.org/features/EqualsAndHashCode\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@EqualsAndHashCode\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eAnnotate a class with \u003ccode\u003e@EqualsAndHashCode\u003c/code\u003e, and Lombok will automatically implement the \u003ccode\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e methods for you. By default, all non-static, non-transient fields will be taken into account. You can modify which fields are used by annotating them with \u003ccode\u003e@EqualsAndHashCode\u003cspan\u003e.\u003c/span\u003eInclude\u003c/code\u003e or \u003ccode\u003e@EqualsAndHashCode\u003cspan\u003e.\u003c/span\u003eExclude\u003c/code\u003e. Alternatively, you can annotate your class with \u003ccode\u003e@\u003cspan\u003eEqualsAndHashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eonlyExplicitlyIncluded \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e and then specify exactly which fields or methods you want to be used by marking them with \u003ccode\u003e@EqualsAndHashCode\u003cspan\u003e.\u003c/span\u003eInclude\u003c/code\u003e. Please, note that the \u003ca href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/a\u003e) and \u003ca href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode(\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e\u003c/a\u003e) methods will be generated by Lombok without breaking the contract between them. Follow the link on the two methods to the official Java documentation to learn more about the contracts that \u003ccode\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e implementations should fulfill.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e@Getter\u003c/span\u003e\n\u003cspan\u003e@Setter\u003c/span\u003e\n\u003cspan\u003e@EqualsAndHashCode\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \n    \u003cspan\u003e// gettes and setters ...\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e \n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n       \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e PRIME \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e31\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eint\u003c/span\u003e result \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n       result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ename \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e name\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003esurname \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e surname\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003ereturn\u003c/span\u003e result\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e \n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eboolean\u003c/span\u003e \u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eObject\u003c/span\u003e o\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eo \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eo \u003cspan\u003einstanceof\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eAuthor\u003c/span\u003e other \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e o\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecanEqual\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eObject\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---NonNull---https---projectlombok-org-features-NonNull-\"\u003e\u003ca href=\"https://projectlombok.org/features/NonNull\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@NonNull\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eYou can annotate with \u003ccode\u003e@NonNull\u003c/code\u003e a record component, a parameter of a method, or an entire constructor. This way, Lombok will generate null-check statements for you accordingly.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n      \u003cspan\u003e@NonNull\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e,\u003c/span\u003e\n      \u003cspan\u003e@NonNull\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e,\u003c/span\u003e\n      \u003cspan\u003eString\u003c/span\u003e surname\n    \u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eid \u003cspan\u003e=\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ename \u003cspan\u003e=\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003esurname \u003cspan\u003e=\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e \n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\n      \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e,\u003c/span\u003e\n      \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e,\u003c/span\u003e\n      \u003cspan\u003eString\u003c/span\u003e surname\n    \u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eid \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n          \u003cspan\u003ethrow\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eNullPointerException\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;id is marked @NonNull but is null\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eid \u003cspan\u003e=\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003ename \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n          \u003cspan\u003ethrow\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eNullPointerException\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;name is marked @NonNull but is null\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ename \u003cspan\u003e=\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003esurname \u003cspan\u003e=\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e \n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---Data---https---projectlombok-org-features-Data-\"\u003e\u003ca href=\"https://projectlombok.org/features/Data\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Data\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e@Data\u003c/code\u003e is a shortcut annotation that combines the features of \u003ca href=\"https://projectlombok.org/features/ToString\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@ToString\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://projectlombok.org/features/EqualsAndHashCode\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@EqualsAndHashCode\u003c/code\u003e\u003c/a\u003e, \u003ca href=\"https://projectlombok.org/features/GetterSetter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Getter\u003c/code\u003e\u003c/a\u003e \u003ca href=\"https://projectlombok.org/features/GetterSetter\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Setter\u003c/code\u003e\u003c/a\u003e, and \u003ca href=\"https://projectlombok.org/features/constructor\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@RequiredArgsConstructor\u003c/code\u003e\u003c/a\u003e together. So, \u003ccode\u003e@Data\u003c/code\u003e generates all the boilerplate involved in POJOs (\u003ca href=\"https://en.wikipedia.org/wiki/Plain_old_Java_object\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ePlain Old Java Objects\u003c/a\u003e). This means, in particular, getters for all fields, setters for all non-final fields, proper \u003ccode\u003etoString\u003c/code\u003e, \u003ccode\u003eequals\u003c/code\u003e, and \u003ccode\u003ehashCode\u003c/code\u003e implementations involving every field of the class, and a constructor for all final fields.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e@Data\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eid \u003cspan\u003e=\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e    \n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ename \u003cspan\u003e=\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003esurname \u003cspan\u003e=\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e \n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n       \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e PRIME \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e31\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eint\u003c/span\u003e result \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003ereturn\u003c/span\u003e result\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e \n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eboolean\u003c/span\u003e \u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eObject\u003c/span\u003e o\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eo \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eo \u003cspan\u003einstanceof\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eAuthor\u003c/span\u003e other \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e o\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecanEqual\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eObject\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n       \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---Value---https---projectlombok-org-features-Value-\"\u003e\u003ca href=\"https://projectlombok.org/features/Value\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Value\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e@Value\u003c/code\u003e is the immutable variant of \u003ca href=\"https://projectlombok.org/features/Data\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Data\u003c/code\u003e\u003c/a\u003e. This means that all fields are made \u003ccode\u003e\u003cspan\u003eprivate\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003efinal\u003c/code\u003e by Lombok by default. Plus, setters will not be generated, and the class itself will be marked as \u003ccode\u003efinal\u003c/code\u003e. This way, the class will not be inheritable. Just like what happens with \u003ccode\u003e@Data\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003etoString\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, \u003ccode\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e and \u003ccode\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e implementations are also created.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003e@Data\u003c/span\u003e\n\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eint\u003c/span\u003e id\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e name\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e surname\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eid \u003cspan\u003e=\u003c/span\u003e id\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003ename \u003cspan\u003e=\u003c/span\u003e name\n      \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003esurname \u003cspan\u003e=\u003c/span\u003e surname\n    \u003cspan\u003e}\u003c/span\u003e  \n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e id\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e name\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eString\u003c/span\u003e \u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e surname\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e \n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e PRIME \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e31\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eint\u003c/span\u003e result \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        result \u003cspan\u003e=\u003c/span\u003e prime \u003cspan\u003e*\u003c/span\u003e result \u003cspan\u003e+\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ehashCode\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e result\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\n    \u003cspan\u003e@Override\u003c/span\u003e \n    \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eboolean\u003c/span\u003e \u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eObject\u003c/span\u003e o\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003eo \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eo \u003cspan\u003einstanceof\u003c/span\u003e \u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eAuthor\u003c/span\u003e other \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eAuthor\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e o\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e!\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ecanEqual\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eObject\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetId\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetName\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e?\u003c/span\u003e other\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e!=\u003c/span\u003e \u003cspan\u003enull\u003c/span\u003e \u003cspan\u003e:\u003c/span\u003e \u003cspan\u003e!\u003c/span\u003e\u003cspan\u003ethis\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eequals\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eother\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003egetSurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003efalse\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"Advanced-Lombok-Annotations\"\u003eAdvanced Lombok Annotations\u003c/h2\u003e\u003cp\u003eHere you can find the most complex Lombok annotations. Each of them will be explained and then seen in use compared to the equivalent Java vanilla translation. To see examples and get more support, click on each annotation and visit its page on the \u003ca href=\"https://projectlombok.org/features/all\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eLombok official documentation\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"---Cleanup---https---projectlombok-org-features-Cleanup-\"\u003e\u003ca href=\"https://projectlombok.org/features/Cleanup\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Cleanup\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e@Cleanup\u003c/code\u003e can be used to ensure a given resource is automatically cleaned up before leaving the current scope. By default, the cleanup method of the annotated resource is assumed to be \u003ccode\u003e\u003cspan\u003eclose\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003c/code\u003e, but you can specify the name of the desired method to be called instead. Note that this annotation works by harnessing the \u003ca href=\"https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003etry-with-resources statement\u003c/a\u003e.\u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eCleanupDemo\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003emain\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e args\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ethrows\u003c/span\u003e \u003cspan\u003eIOException\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003e@Cleanup\u003c/span\u003e \n    \u003cspan\u003eInputStream\u003c/span\u003e input \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eFileInputStream\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eargs\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003e@Cleanup\u003c/span\u003e \n    \u003cspan\u003eOutputStream\u003c/span\u003e output \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eFileOutputStream\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eargs\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003ebyte\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e b \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003ebyte\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e10000\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n    \u003cspan\u003ewhile\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003eint\u003c/span\u003e r \u003cspan\u003e=\u003c/span\u003e input\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eread\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eb\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n      \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003er \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \n        \u003cspan\u003ebreak\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n      output\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ewrite\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eb\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e r\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eCleanupDemo\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003emain\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eString\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e args\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003ethrows\u003c/span\u003e \u003cspan\u003eIOException\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003etry\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eOutputStream\u003c/span\u003e output \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eFileOutputStream\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eargs\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003etry\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003eInputStream\u003c/span\u003e input \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eFileInputStream\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eargs\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n        \u003cspan\u003ebyte\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e b \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003ebyte\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e10000\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n        \u003cspan\u003ewhile\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003e\u003cspan\u003etrue\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n          \u003cspan\u003eint\u003c/span\u003e r \u003cspan\u003e=\u003c/span\u003e input\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eread\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eb\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n          \u003cspan\u003eif\u003c/span\u003e \u003cspan\u003e(\u003c/span\u003er \u003cspan\u003e==\u003c/span\u003e \u003cspan\u003e-\u003c/span\u003e\u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \n            \u003cspan\u003ebreak\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n\n          output\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ewrite\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eb\u003cspan\u003e,\u003c/span\u003e \u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e,\u003c/span\u003e r\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n        \u003cspan\u003e}\u003c/span\u003e\n      \u003cspan\u003e}\u003c/span\u003e       \n    \u003cspan\u003e}\u003c/span\u003e \n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---Synchronized---https---projectlombok-org-features-Synchronized-\"\u003e\u003ca href=\"https://projectlombok.org/features/Synchronized\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Synchronized\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e@Synchronized\u003c/code\u003e allows you to achieve something similar to the \u003ca href=\"https://docs.oracle.com/javase/tutorial/essential/concurrency/syncmeth.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003esynchronized\u003c/code\u003e\u003c/a\u003e keyword, but locking on different objects. The keyword locks on \u003ccode\u003e\u003cspan\u003ethis\u003c/span\u003e\u003c/code\u003e, while the annotation locks on a special private field named \u003ccode\u003e$lock\u003c/code\u003e. If this field does not exist, it will be created by Lombok. This is the default behavior, but you can also specify lock objects yourself. When dealing with \u003ccode\u003e\u003cspan\u003estatic\u003c/span\u003e\u003c/code\u003e methods, the annotation will lock on a static field named \u003ccode\u003e$\u003cspan\u003eLOCK\u003c/span\u003e\u003c/code\u003e. Please, consider that just like \u003ccode\u003esynchronized\u003c/code\u003e, the annotation can only be used on static and instance methods. \u003c/p\u003e\u003ch4 id=\"With-Lombok\"\u003eWith Lombok\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eSynchronizedDemo\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n  \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e objectToLock \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \n  \u003cspan\u003e@Synchronized\u003c/span\u003e\n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esayHello\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eSystem\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eout\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprintln\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Hello!\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n  \n  \u003cspan\u003e@Synchronized\u003c/span\u003e\n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003egetOne\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n  \n  \u003cspan\u003e@Synchronized\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;objectToLock\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003eprintObject\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003eSystem\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eout\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprintln\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eobjectToLock\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch4 id=\"Java-Vanilla\"\u003eJava Vanilla\u003c/h4\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eclass\u003c/span\u003e \u003cspan\u003eSynchronizedDemo\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n  \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e $LOCK \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e $lock \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e\u003cspan\u003e[\u003c/span\u003e\u003cspan\u003e0\u003c/span\u003e\u003cspan\u003e]\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \u003cspan\u003eprivate\u003c/span\u003e \u003cspan\u003efinal\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e readLock \u003cspan\u003e=\u003c/span\u003e \u003cspan\u003enew\u003c/span\u003e \u003cspan\u003eObject\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n  \n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003estatic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003esayHello\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003esynchronized\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e$LOCK\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003eSystem\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eout\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprintln\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Hello\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n  \n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003eint\u003c/span\u003e \u003cspan\u003egetOne\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003esynchronized\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e$lock\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003ereturn\u003c/span\u003e \u003cspan\u003e1\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n  \n  \u003cspan\u003epublic\u003c/span\u003e \u003cspan\u003evoid\u003c/span\u003e \u003cspan\u003eprintObject\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n    \u003cspan\u003esynchronized\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003ereadLock\u003cspan\u003e)\u003c/span\u003e \u003cspan\u003e{\u003c/span\u003e\n      \u003cspan\u003eSystem\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003eout\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eprintln\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003eobjectToLock\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\n    \u003cspan\u003e}\u003c/span\u003e\n  \u003cspan\u003e}\u003c/span\u003e\n\u003cspan\u003e}\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"---SneakyThrows---https---projectlombok-org-features-SneakyThrows-\"\u003e\u003ca href=\"https://projectlombok.org/features/SneakyThrows\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@SneakyThrows\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003e\u003ccode\u003e@SneakyThrows\u003c/code\u003e can be used to sneakily throw checked exceptions without actually declaring them in your method\u0026#39;s \u003ccode\u003ethrows\u003c/code\u003e clause, as you normally would. So, this annotation allows you to avoid the required \u003ccode\u003e\u003cspan\u003etry\u003c/span\u003e\u003cspan\u003e-\u003c/span\u003ecatch\u003c/code\u003e blocks completely by handling all the checked exceptions quietly. Lombok will not ignore, wrap, replace, or modify the thrown checked exception. On the contrary, it will mislead the compiler. In fact, at the JVM (\u003ca href=\"https://en.wikipedia.org/wiki/Java_virtual_machine\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eJava Virtual Machine\u003c/a\u003e) class file level, all exceptions can be thrown regardless of the \u003ccode\u003ethrows\u003c/code\u003e clause of your methods, which is why this works. This annotation can be dangerous and should be used carefully. This is why you should read \u003ca href=\"https://projectlombok.org/features/SneakyThrows\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ethis\u003c/a\u003e page from the Lombok official documentation to learn more about when and how to use it.\u003c/p\u003e\u003ch3 id=\"---Builder---https---projectlombok-org-features-Builder-\"\u003e\u003ca href=\"https://projectlombok.org/features/Builder\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Builder\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eYou may need to develop a builder object allowing you to create objects by following a step-by-step construction pattern, such as \u003ccode\u003eAuthor\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ebuilder\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003eid\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;1\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ename\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Maria\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003esurname\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e\u0026#34;Williams\u0026#34;\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e.\u003c/span\u003e\u003cspan\u003ebuild\u003c/span\u003e\u003cspan\u003e(\u003c/span\u003e\u003cspan\u003e)\u003c/span\u003e\u003cspan\u003e;\u003c/span\u003e\u003c/code\u003e. This is particularly useful when dealing with large classes with several fields. Instead of using a constructor with many parameters, you can use this more readable approach.\nBy using the \u003ccode\u003e@Builder\u003c/code\u003e annotation, you let Lombok generate the builders for you. By annotating a class with \u003ccode\u003e@Builder\u003c/code\u003e, Lombok will produce a class implementing the aforementioned builder pattern. For example, by annotating the \u003ccode\u003eAuthor\u003c/code\u003e class, an \u003ccode\u003eAuthorBuilder\u003c/code\u003e class will be automatically generated. Since the behavior of your builder may be complex or highly-tailored, Lombok offers many parameters to achieve the desired result. You can find out them all \u003ca href=\"https://projectlombok.org/features/Builder\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003ch3 id=\"---Log---https---projectlombok-org-features-log-\"\u003e\u003ca href=\"https://projectlombok.org/features/log\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e\u003ccode\u003e@Log\u003c/code\u003e\u003c/a\u003e\u003c/h3\u003e\u003cp\u003eThe majority of loggers require you to set up a logger instance in every class where you want to log. This definitely involves boilerplate code. By annotating a class with \u003ccode\u003e@Log\u003c/code\u003e, Lombok will automatically add a static final \u003ccode\u003elog\u003c/code\u003e field, initialized as required by your logging library. This is why Lombok provides developers with an annotation per each of the most popular logging frameworks. You can find the entire list \u003ca href=\"https://projectlombok.org/features/log\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\u003ch2 id=\"The-Lombok-Plugin\"\u003eThe Lombok Plugin\u003c/h2\u003e\u003cp\u003eThe most popular and widely used IDEs come with an official Lombok plugin designed to help developers use Lombok. In particular, it supports you by offering shortcuts to the most common Lombok annotation. Plus, it suggests to you the annotations you may require or be looking for based on where you clicked. At the time of writing \u003ca href=\"https://projectlombok.org/setup/intellij\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eIntelliJ IDEA\u003c/a\u003e, \u003ca href=\"https://projectlombok.org/setup/eclipse\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eEclipse, Spring Tool Suite, (Red Hat) JBoss Developer Studio, MyEclipse\u003c/a\u003e, \u003ca href=\"https://projectlombok.org/setup/vscode\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMicrosoft Visual Studio Code\u003c/a\u003e, and \u003ca href=\"https://projectlombok.org/setup/netbeans\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eNetbeans\u003c/a\u003e are officially supported. Follow the link related to your IDE to get support on how to install it.\nVisit the \u003ca href=\"https://projectlombok.org/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eLombok\u003c/a\u003e website for the complete list of all supported IDEs.\u003c/p\u003e\u003ch2 id=\"Is-Using-Lombok-A-Risk-\"\u003eIs Using Lombok A Risk?\u003c/h2\u003e\u003cp\u003eYou may be concerned about spreading Lombok annotations throughout your codebase. In fact, what would happen if you decided to avoid using it? You might be finding yourself stuck. Well, this is not a real problem because Lombok comes with a \u003cem\u003edelombok\u003c/em\u003e tool. \nAs stated \u003ca href=\"https://projectlombok.org/features/delombok\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ein the official documentation\u003c/a\u003e, although not covering all possible IDEs and cases, it makes the process of freeing your code from Lombok easier. What this tool does is auto-generate Java source code containing the same features contained in the bytecode Lombok would have injected. This way, your Lombok annotated codebase will be simply replaced with a standard, non-Lombok Java one. \nAs a result, your entire project will no longer depend on Lombok. So, to answer the original question, no, not at all. Using Lombok does not represent a risk for the future or your project.\u003c/p\u003e\u003ch2 id=\"Conclusion\"\u003eConclusion\u003c/h2\u003e\u003cp\u003eIn this article, we looked at how to use Project Lombok, a Java library that automatically plugs into your editor and builds tools, to avoid writing boilerplate, boring, and repetitive code Java is well known for. As shown, this is an easy way to make you a more productive developer and do not waste your time on cumbersome activities. By starting to take advantage of its most relevant annotations, you can avoid writing thousand of lines of code with no real value from the business logic point of view of your project. Plus, there is always the possibility to make your project no longer depend on Project Lombok easily. So, it using it does not represent a risk of finding yourself locked in. In conclusion, every Java developer should use Project Lombok, and explaining everything you need to start using it is what this article was aimed at.\u003c/p\u003e\u003cp\u003eThanks for reading! I hope that you found this article helpful. Feel free to reach out to me with any questions, comments, or suggestions.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Let’s see everything you should know to start using Project Lombok. We will have a look at how to integrate it into your IDE and use it to avoid boilerplate code.",
      "date_published": "2021-07-29T16:55:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/workforce-and-app-privacy-have-changed-so-should-you/",
      "title": "Workforce and App Privacy Have Changed, So Should You",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eAccelerating digital road maps by seven to 10 years likely left you with some things to review from a security perspective. Please check out the \u003ca href=\"https://auth0.com/blog/accelerated-your-road-map-go-fix-workforce-and-app-security\" target=\"_blank\" rel=\"noreferrer noopener\"\u003efirst post in this series\u003c/a\u003e for what you might need to review to securely support your remote or hybrid workforce, as well as a checklist for consumer-facing apps.\u003c/p\u003e\u003cp\u003eSecurity isn’t the only thing that can get overlooked when we go fast.  As well as implementing technical protections — we also need to understand what and how the data and how impacts the humans that use technology. This is where privacy comes in. Privacy is having a critical global impact on software development because consumers, businesses, and governments are demanding that technology operates in a way that complies with legislation like GDPR (General Data Privacy Regulation), CPRA (California Public Records Act), APPI (Act on the Protection of Personal Information), and LGPD (Lei Geral de Proteção de Dados Pessoais). This is an opportunity to rethink exactly what and how much data is collected, how it’s used, and who gets to see it. It’s a turning point where individuals are no longer blithely accepting that massive amounts of data about them are being created, shared, and used.\u003c/p\u003e\u003cp\u003eAt Auth0, I regularly collaborate with our vice president of privacy, Lucy McGrath, and she is a part of my organization. For this series, I asked Lucy for her perspective on data privacy mistakes companies can make when they move fast.\u003c/p\u003e\u003cp\u003eAn integrated approach is essential for security and privacy. There’s a saying if you want to go fast, go alone, but if you want to go far, go together. This is changing — you can’t protect privacy alone. If you go alone, you won’t go anywhere. “Ultimately, data privacy is about trust,” says Lucy. “And it’s a collaborative effort. You can’t think about security or data governance, or privacy in isolation. You need to work across departments within your organization and also listen to your staff and your consumers/users. From a practical standpoint, you need to work with others even beyond your immediate business — data privacy regulations are changing rapidly —technical solutions are essential in order to scale privacy compliant technology. If you don’t collaborate, you’ll be left behind.”\u003c/p\u003e\u003cp\u003eLucy’s insights on remote/hybrid workforces and consumer-facing apps can improve your workplace culture and improve your relationships with your customers — and keep you focused on your business rather than dealing with regulators and potentially incurring large fines.\u003c/p\u003e\u003ch2 id=\"Put-Your-Focus-on-the-Human\"\u003ePut Your Focus on the Human\u003c/h2\u003e\u003cp\u003e“Probably the most important thing to remember when thinking through data privacy is that you’re delivering a service that impacts humans,” says Lucy. “We can get dazzled by what technology can do, but the technology is really there to help the humans accomplish something. Centering on the human who needs to use or benefit from the technology helps you to focus.  — and align with existing and emerging data privacy regulations.”\u003c/p\u003e\u003cp\u003eAs always, this information is shared from the perspective of business impact and planning. For how data privacy regulations apply to your specific business situation, please reach out to your legal counsel.\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eAuth0 recommends you always consult legal counsel for specific advice about compliance with legal requirements.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003e\u003cstrong\u003eThe workforce mix: remote, hybrid, in office\u003c/strong\u003e\u003c/p\u003e\u003cp\u003eIf your company relies on a globally dispersed workforce (or acquired one during the pandemic), you’re likely dealing with a mix of employees who welcome some office quietly, some still struggling with lockdown requirements, and others who may not expect to see vaccines become available until fall. “As you look at creating or reviewing policies, it’s especially important to remember that there’s a human on the other side of the Zoom screen”, says Lucy. “This is a good time for your HR team to check back in with staff. Circumstances and perspectives have changed for many people as a result of the pandemic. One size definitely will not fit all.”\u003c/p\u003e\u003cp\u003eUnderstanding that worker privacy rights vary globally, here are some areas to review:\u003c/p\u003e\u003ch3 id=\"1--How-you-measure-productivity\"\u003e1. How you measure productivity\u003c/h3\u003e\u003cp\u003eFor organizations used to seeing people in chairs, the shift to Zoom screens caused some anxiety. Interestingly, \u003ca href=\"https://www.bcg.com/publications/2020/valuable-productivity-gains-covid-19\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e75% of 12,000 workers surveyed by BCG\u003c/a\u003e in the United States, Germany, and India felt they were able to maintain or increase productivity on individual tasks during the pandemic. \u003c/p\u003e\u003cp\u003eSome of that may have been accomplished by blurring the lines between home and work, says Lucy. \u003c/p\u003e\u003cp\u003eSurveillance technologies like keyloggers, video monitoring, and attention tracking via biometrics have been rising in adoption even before the pandemic. We’re hearing this often says, Lucy: “I like my boss — a lot —  but I would find it a bit creepy if she was tracking every word I write, tracking when I popped off to the loo and listening to my family conversations. And it would make it harder to do my job because I would feel unnecessarily surveilled. It’s really important to assess the correct way to protect data and maintain trust with your employees as humans. Especially with workers working from home in potentially cramped situations, you could be gathering data you don’t need and shouldn’t have.\u003c/p\u003e\u003cp\u003e“Workers generally know that emails are subject to company oversight nearly everywhere, but it’s essential to be transparent about monitoring activities across all applications and devices. Transparency also encourages trust and increases the likelihood that individuals will report issues/mistakes they encounter. Tell them about how long you retain the data, and why and be sure to check local rules about internal and external data sharing — they can vary by region and even by state in the United States. It’s important to only keep what you really need to perform a task,” says Lucy.\u003c/p\u003e\u003ch3 id=\"2--How-do-you-encourage-collaboration-\"\u003e2. How do you encourage collaboration?\u003c/h3\u003e\u003cp\u003eNearly everyone became Zoom-literate in 2020. Many people were introduced to Slack or other collaboration tools, and some folks also mixed in personal texts. “As great as these technologies are — and I am speaking as someone who enjoys working with a globally distributed workforce — they’re not going to replicate the physical space. From a privacy perspective, some small changes can mean a lot to employees,” says Lucy.\u003c/p\u003e\u003cp\u003e“Some people enjoy having dogs and kids flow in and out of their workplace. Others prefer to keep things separated. Over the last several months, I’ve noticed some colleagues making different choices.”\u003c/p\u003e\u003cp\u003eThings like Zoom backgrounds can protect employee privacy, but only if they know how to use the tools. If you’re using a collaboration tool like Zoom or Slack, document expected uses, alternatives on offer (as applicable) and make sure employees know how to use tools like Zoom backgrounds. \u003c/p\u003e\u003ch3 id=\"3--Onboarding-can-protect-against-data-breaches\"\u003e3. Onboarding can protect against data breaches\u003c/h3\u003e\u003cp\u003eNormally, we bring our new employees to our Bellevue, Wash. offices for onboarding. This in-person connection brings all kinds of benefits, including protecting data. “Onboarding may seem like an odd place to bring up data privacy, but people are more likely to feel comfortable reporting potential problems or even breaches when they have formed a connection to their colleagues,” says Lucy.\u003c/p\u003e\u003cp\u003eEstablishing connections may mean creating social events (likely on Zoom) or connecting employees for non-work meetings. We have an app that randomly pairs employees for casual chat sessions we call “donuts.” It’s a surprisingly effective way to establish connection and get to know about the day-to-day work life of far-flung colleagues.\u003c/p\u003e\u003ch3 id=\"4--Security-and-Privacy-of-Customers-is-Key\"\u003e4. Security and Privacy of Customers is Key\u003c/h3\u003e\u003cp\u003e“We’ve had workers who used to be home by themselves all day, suddenly have teenaged children pass through meetings on the way to the fridge,” says Lucy. “It’s charming, but it also means that family members might see things they’re not meant to see. You need to recognize that not everyone has the luxury of a room with a door and a lock. Protecting customer security and privacy is key.”\u003c/p\u003e\u003cp\u003eTo your security protocols, Lucy would also suggest adding:\u003c/p\u003e\u003cul\u003e\u003cli\u003eHeadphones so you can control what can be overheard (and coaching that awareness with your teams)\u003c/li\u003e\u003cli\u003ePrivacy screens for monitors\u003c/li\u003e\u003cli\u003ePrinted material (and the printer) needs to be kept in a space that remains locked when not in use\u003c/li\u003e\u003c/ul\u003e\u003ch2 id=\"Data-Privacy-Checklist-for-Consumer-Facing-Apps\"\u003eData Privacy Checklist for Consumer-Facing Apps\u003c/h2\u003e\u003cp\u003eCOVID has brought populations that are used to trust in physical environments online, says Lucy. This is part of why in the UK we’re seeing \u003ca href=\"https://www.theguardian.com/money/2021/may/18/delivery-text-scams-the-nasty-new-wave-sweeping-the-uk\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eincrease in delivery text phishing scams\u003c/a\u003e where additional funds are requested for delivery. Many of these ploys play on user trust and the expectation that information is being shared securely. We’ll get deeper into how consumers are demanding a secure and contextual private experience in the final post. As preparation, here is a data privacy checklist. Please follow up with your legal counsel on your specifics.\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003e\u003cstrong\u003eReview what you’ve got and why you’ve got it and how you’re getting it.\u003c/strong\u003e It’s not uncommon for apps to gather more information than is necessary to do the job. You need to know what data you have and why you’re collecting it as well how it’s stored to comply with regulations — and to know how to safeguard your customers’ data. \u003cstrong\u003eThis includes third-party vendors and your marketing teams.\u003c/strong\u003e\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eMake sure your code only collects data you really need\u003c/strong\u003e. The days of data gluttony are coming to an end. Individuals are rightly fed up with the attitude of “just because you can collect as much data as possible, you do. Ask yourself: do you use all the data you collect? Don’t be afraid to reduce the amount of data you collect when you update your app or add new products. Look for opportunities to innovate by using privacy-enhancing technologies to mask or anonymize, or de-identify data. And safely delete the information you don’t use.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eKnow where your customers are and check out the regulations.\u003c/strong\u003e While the EU’s General Data Privacy Regulation (GDPR) has become the benchmark for data privacy, not every regulation is GDPR. There are differences. Children also often have extra protections. Once you’ve identified where and who your customers are, work closely with your legal counsel to design the right approach.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eSecurely delete info and keep a record.\u003c/strong\u003e Maybe you’re deleting information due to a verified request or because you have data you actually don’t need; either way, you need to keep a record.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eMake sure you have someone responsible for privacy who respects the humans interacting with your app.\u003c/strong\u003e This stuff is not simple. You need someone who looks after it.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eLook out for service departments or social media complaints.\u003c/strong\u003e Complaints can show you how the public perceives their data is being used — and identify areas that need your attention.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eCommunicate clearly with your users.\u003c/strong\u003e Users often need to know how to unsubscribe and other rights as part of data privacy regulations.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eDo as you would be done by.\u003c/strong\u003e Think through how you’d like your data to be treated. That’s a good guideline. But also think about the specific customer base - what’s their perspective and might they require additional protections (e.g., if they are a vulnerable group).\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eConsult your legal counsel.\u003c/strong\u003e Data privacy is a rapidly evolving field. Lawyers really are your friends! Please check in with your legal counsel regularly, and especially if you’re thinking of expanding into a new region.\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"Learn-More-about-Identity-s-Role-in-Your-Data-Privacy-Strategy\"\u003eLearn More about Identity’s Role in Your Data Privacy Strategy\u003c/h2\u003e\u003cp\u003eAs Lucy says, you can have security without privacy, but you can’t have privacy without security if you’d like to learn more about how a robust identity solution can support your data privacy and security strategies, \u003ca href=\"https://auth0.com/contact-us\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eplease reach out to the team at Auth0\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eIn the final post in the Acceleration Response Series, we’ll look at how creating a long-term plan for security and privacy can help you meet consumers’ demands.\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"About-Auth0\"\u003eAbout Auth0 \u003c/h2\u003e\u003cp\u003eAuth0’s modern approach to identity enables organizations to provide secure access to any application, for any user. The Auth0 platform is a highly customizable identity operating system that is as simple as development teams want and as flexible as they need. Safeguarding billions of login transactions each month, Auth0 delivers convenience, privacy, and security so customers can focus on innovation. For more information, visit \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://auth0.com\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "Go fast but not alone — our leaders are here to help secure your workforce and app privacy.",
      "date_published": "2021-07-29T15:08:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/can-your-identity-solution-grow-with-your-company/",
      "title": "Can Your Identity Solution Grow With Your Company?",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003cdiv\u003e\u003cp\u003eThe number of Venture Capital deals signed in Latin America hit a record high of 488 in 2020. That’s nearly double the 2017 number according to \u003ca href=\"https://www.bloomberg.com/news/articles/2021-03-16/latin-american-startups-had-record-venture-capital-deals-in-2020\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eBloomberg\u003c/a\u003e. The growth in the tech market in LatAm isn’t only apparent in new startup deals; companies who already have a presence in the region are expanding both through mergers and acquisitions and by looking into new countries to grow their footprint in the region. \u003c/p\u003e\u003cp\u003eEach scenario brings its own challenges for your IT infrastructure, particularly your\u003ca href=\"https://auth0.com/blog/how-to-scale-quickly-with-identity/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e identity solution\u003c/a\u003e. If you’re expanding into a new country, there’s likely to be a different data privacy regulation you’ll have to comply with. And that startup you’re eyeing probably has a vastly different infrastructure than yours, whether private or public cloud or even legacy on-prem. An Identity management solution has to be able to expand and flex in order to grow with your company, regardless of the specific scenario.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/1HnNeEEQ4hCBb2M4y2ZerT/5b5a1de004ea8021fdc38d042a85a672/Latam05.jpg\" alt=\"Business Expansion\"/\u003e\u003c/p\u003e\u003ch2 id=\"With-Business-Expansion-Come-Business-Questions\"\u003eWith Business Expansion Come Business Questions\u003c/h2\u003e\u003cp\u003eLet’s take a look at those two potential growth scenarios and what they mean for your business’s identity solution. First up is the acquisition of a competitor or related smaller entity. \u003ca href=\"https://auth0.com/blog/why-your-ma-strategy-has-to-include-an-iam-solution/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eMergers and acquisitions\u003c/a\u003e (M\u0026amp;A) always bring an array of unique challenges, but for this article, we’re going to focus on the identity challenges associated with the merging of IT infrastructure.\u003c/p\u003e\u003cp\u003eYour web app may be hosted on a public cloud, but the company you just bought has been in business for a while and is still using on-prem hosting for theirs. In order for you to bring both properties together under one identity solution, you need one that can bridge the gap between the two, allowing your new audience access to both apps without managing multiple sets of credentials.\u003c/p\u003e\u003cp\u003eIn our second scenario, your organization is considering an expansion into a neighboring country to take advantage of the easing of business restrictions and the growing market for your product that your marketing team has identified. You already comply with the privacy regulations in your country, but are you ready to comply with those abroad? \u003c/p\u003e\u003cp\u003eIs your organization ready to answer questions like these:\u003c/p\u003e\u003cul\u003e\u003cli\u003eCan our existing in-house identity platform scale to include our hybrid-cloud infrastructure and the legacy system our latest acquisition uses?\u003c/li\u003e\u003cli\u003eIs our identity solution ready to handle the influx of new user accounts and login requests when we roll out to our new market?\u003c/li\u003e\u003cli\u003eIs our consent gathering process in compliance with the regulations in the country we’re expanding into?\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eIf not, or if the answer to any of these questions is “no,” it may be time to consult with an identity specialist. \u003c/p\u003e\u003cblockquote\u003e\u003ca href=\"https://twitter.com/intent/tweet?text=\u0026#34;Auth0%20recommends%20you%20always%20consult%20legal%20counsel%20when%20it%20comes%20to%20complying%20with%20data%20privacy%20regulations.\u0026#34; via @auth0 https://auth0.com/blog/can-your-identity-solution-grow-with-your-company\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\u003cp\u003e\u0026#34;Auth0 recommends you always consult legal counsel when it comes to complying with data privacy regulations.\u0026#34;\u003c/p\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg alt=\"Tweet\" src=\"https://cdn.auth0.com/blog/resources/twitter.svg\"/\u003e\u003c/p\u003e\u003ch4\u003eTweet This\u003c/h4\u003e\u003c/div\u003e\u003c/a\u003e\u003c/blockquote\u003e\u003ch2 id=\"Auth0-Is-the-Identity-Solution-That-Scales-With-You\"\u003eAuth0 Is the Identity Solution That Scales With You\u003c/h2\u003e\u003cp\u003eBoth of these scenarios mean you’re going to be scaling your infrastructure, adding users to existing web apps, and even adding new web apps. Having an identity solution in place that can easily expand to include controlling access to these new properties can help reign in costs and speed your time to market post-expansion. Our customers tell us that by using Auth0 for their authentication and identity needs, they took their time-to-value from months or years down to weeks or even days.\u003c/p\u003e\u003cp\u003eCredit card company \u003ca href=\"https://www.marketwatch.com/story/visa-sees-massive-digital-acceleration-with-millions-trying-e-commerce-for-the-first-time-2020-05-13\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eVisa reported\u003c/a\u003e that during just the first month of the COVID-19 pandemic, more than 13 million cardholders in Latin America made their very first e-commerce transaction. That’s 13 million new accounts being created, 13 million new logins, and 13 million opportunities for identity to go wrong if your solution isn’t scalable. There are many aspects to what makes something scalable. When it comes to identity, we see five as being the most important.\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003e\u003cstrong\u003eBridging legacy and cloud systems\u003c/strong\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eOne of the downsides to M\u0026amp;A is that your IT department inherits the backend infrastructure of the other company, for better or worse. Auth0’s extensive SDK libraries and robust APIs mean it’s a simple matter to bridge the gap between legacy systems and modern cloud-first ones. One login box can take your current and new customers to both web apps, no matter where they’re hosted. This ability also speeds your time to value because your developers can maintain focus on their core product delivery rather than piecing together connectivity solutions that may only work for a short time.\u003c/p\u003e\u003col start=\"2\"\u003e\u003cli\u003e\u003cstrong\u003eSingle source of truth for customer data\u003c/strong\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eBringing all of your customer data together into one single source of truth (SSoT) makes it that much easier to protect. It also speeds access when a user logs in, as no matter which property they’re using, it has only one place to look to find their credentials, rather than scouring multiple data silos.\u003c/p\u003e\u003col start=\"3\"\u003e\u003cli\u003e\u003cstrong\u003eSingle sign-on\u003c/strong\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eCustomers want low-friction experiences online, and being able to create an account using credentials they already have is a great way to win them over. Single sign-on (using account information from a provider like Apple, Facebook, or Twitter) allows a customer to create an account on your site quickly and easily, and without the need to create and remember a new password.\u003c/p\u003e\u003col start=\"4\"\u003e\u003cli\u003e\u003cstrong\u003eBreach protection\u003c/strong\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eThe issue of passwords brings us to a major sticking point for many identity solutions, protecting user information from data breaches. According to the most recent \u003ca href=\"https://www.ibm.com/security/data-breach\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eIBM/Ponemon Cost of a Data Breach Study\u003c/a\u003e, the global average cost of a breach is now $3.86 million (USD). And Verizon reports in their \u003ca href=\"https://www.verizon.com/business/resources/reports/dbir/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e2021 Data Breach Investigations Report\u003c/a\u003e that 61% of breaches involve misuse of credentials. Put those together, and you see why protecting your customers’ information is such a major piece of scaling your online business presence and why a robust identity solution needs to take this aspect into account.\u003c/p\u003e\u003col start=\"5\"\u003e\u003cli\u003e\u003cstrong\u003eProtection from staffing fluctuations\u003c/strong\u003e\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eAn often overlooked aspect of identity projects is the simple fact that people change jobs. If you have an identity tool that was developed in-house two years ago, there’s a good chance you won’t have anyone on staff who can expand it to cover your new properties. That will delay roll-out and extend your time-to-market. \u003c/p\u003e\u003cp\u003e\u003ca href=\"https://auth0.com/case-studies/wabipay/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAuth0 customer WABI\u003c/a\u003e is modernizing e-commerce in Latin America. They’re currently active in 11 countries and have expansion plans to add four more in 2021. And they’re trusting Auth0 to scale their identity solution to match these ambitious plans. “WABI is scalable, and we need a partner that is, too. We believe Auth0 will support us in getting there.” Says WABI Business Manager Juan Manuel Mingo. With their planned expansion opening their market to millions of potential new customers, WABI knows they need a robust identity platform that’s ready to handle the influx of new users.\u003c/p\u003e\u003ch2 id=\"Auth0-Brings-Global-Experience-to-Your-Latin-America-Growth-Plans\"\u003eAuth0 Brings Global Experience to Your Latin America Growth Plans\u003c/h2\u003e\u003cp\u003eOur founders are from Argentina, the company was started in the United States, and we currently have people in 30+ countries with more being added every day. Our \u003ca href=\"https://auth0.com/blog/auth0-expands-global-partner-network-in-latin-america-with-clm/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003einternational team\u003c/a\u003e of identity specialists can help you work out your identity needs and help get you set up with an identity as a service (IDaaS) platform that is ready to grow with your company, no matter what your expansion plans look like. We know that having an identity solution designed to be extensible and flexible to move with your business can mean the difference between a successful rollout or a failed acquisition attempt. \u003c/p\u003e\u003cp\u003eAuth0 is built on open standards, making it easy to connect with existing systems and varying infrastructure scenarios. Bridging the gap between a public cloud-based web app and an on-prem user database is only the beginning. Our extensive marketplace of integrations means you can connect with your existing business software solutions as well.\u003c/p\u003e\u003cp\u003eOur breach protection includes features such as \u003ca href=\"https://auth0.com/docs/attack-protection/bot-detection\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ebot detection\u003c/a\u003e, \u003ca href=\"https://auth0.com/multifactor-authentication\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eadaptive MFA\u003c/a\u003e, \u003ca href=\"https://auth0.com/single-sign-on\" target=\"_blank\" rel=\"noreferrer noopener\"\u003esingle sign-on\u003c/a\u003e, and \u003ca href=\"https://auth0.com/passwordless\" target=\"_blank\" rel=\"noreferrer noopener\"\u003epasswordless\u003c/a\u003e flows. And the \u003ca href=\"https://marketplace.auth0.com/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eAuth0 Marketplace\u003c/a\u003e has what you need to handle everything from consent management to business process software integrations. The protections and extensibility we offer is a key factor in our scalability. \u003c/p\u003e\u003cp\u003eWhen the time comes to expand across borders, Auth0 is ready. We’re certified by a third party as compliant with the International Standards Organization (ISO) standards \u003ca href=\"https://www.iso.org/obp/ui/#iso:std:iso-iec:27001:ed-2:v1:en\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eISO27001\u003c/a\u003e and \u003ca href=\"https://www.iso.org/standard/61498.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eISO27018\u003c/a\u003e for handling information security and personally identifiable information (PII) as a cloud provider.\u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/1sBMtrIri0sAw0OBkWE4QV/41d7fc8b0740ac05ec3c82145fd1478f/Latam06.jpg\" alt=\"Growing\"/\u003e\u003c/p\u003e\u003ch2 id=\"Auth0-is-the-Identity-Solution-That-Can-Keep-Up-With-The-Growing-LatAm-Market\"\u003eAuth0 is the Identity Solution That Can Keep Up With The Growing LatAm Market\u003c/h2\u003e\u003cp\u003eTo provide your customers with a continuous, low-friction, and intuitive login flow requires a robust identity solution. Whether you’re scaling internationally or your growth plans call for staying closer to home, Auth0 can provide the IDaaS platform you need to maintain a great customer experience while ensuring the security and privacy of your customer data. And don’t worry if you’ve already started an identity project and hit a stumbling block, \u003ca href=\"https://auth0.com/contact-us\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eour experts can help\u003c/a\u003e. \u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"About-Auth0\"\u003eAbout Auth0 \u003c/h2\u003e\u003cp\u003eAuth0’s modern approach to identity enables organizations to provide secure access to any application, for any user. The Auth0 platform is a highly customizable identity operating system that is as simple as development teams want and as flexible as they need. Safeguarding billions of login transactions each month, Auth0 delivers convenience, privacy, and security so customers can focus on innovation. For more information, visit \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://auth0.com\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e",
      "summary": "The tech market in Latin America is growing; Auth0 can help you keep up with a scalable identity solution.",
      "date_published": "2021-07-29T11:56:00Z",
      "author": {}
    },
    {
      "id": "",
      "url": "https://auth0.com/blog/accelerated-your-road-map-go-fix-workforce-and-app-security/",
      "title": "Accelerated Your Road Map? Go Fix Workforce and App Security",
      "content_html": "\u003cdiv id=\"readability-page-1\" class=\"page\"\u003e\u003csection itemscope=\"\" itemtype=\"http://schema.org/BlogPosting\" itemprop=\"mainEntity\"\u003e\u003cheader\u003e\u003cdiv\u003e\u003cdiv\u003e\u003cp\u003e\u003cspan\u003eACCELERATION RESPONSE SERIES\u003c/span\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eRapid change introduces workforce and app risks. Auth0 Security team’s advice on what to fix now.\u003c/p\u003e\u003c/div\u003e\u003cp\u003eLast Updated On: July 28, 2021\u003c/p\u003e\u003cmeta itemprop=\"datePublished\" content=\"2021-07-28\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2021-07-28\"/\u003e\u003c/div\u003e\u003c/header\u003e\u003cheader\u003e\u003cdiv\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/lpo0yom5xDZonfNzlOkHc/c55bd864b5d7360bf8a2c307f99c8e40/Security_and_Identity_4x.jpg\"/\u003e\u003c/p\u003e\u003cdiv\u003e\u003cp\u003e\u003cspan\u003eACCELERATION RESPONSE SERIES\u003c/span\u003e\u003c/p\u003e\u003cp itemprop=\"description\"\u003eRapid change introduces workforce and app risks. Auth0 Security team’s advice on what to fix now.\u003c/p\u003e\u003cp\u003eLast Updated On: July 28, 2021\u003c/p\u003e\u003cmeta itemprop=\"datePublished\" content=\"2021-07-28\"/\u003e\u003cmeta itemprop=\"dateModified\" content=\"2021-07-28\"/\u003e\u003c/div\u003e\u003c/div\u003e\u003c/header\u003e\u003carticle\u003e\u003cmain id=\"post-content\" itemprop=\"articleBody\"\u003e\u003cdiv\u003e\u003cp\u003eFast response allowed many organizations to survive and thrive in 2020. Orgs went remote overnight; businesses launched consumer-facing apps, and \u003ca href=\"https://auth0.com/blog/how-brick-and-mortar-approaches-improve-digital-experiences/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003econsumers shifted buying patterns online\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eGoing fast gets products to market, it gives consumers choices, and it helps companies scale. But when you jump ahead seven to 10 years in your digital road map, you risk leaving a few security and data privacy concerns behind. I reached out to key members of my security team, as well as our data privacy team, to put together this three-part series based on our industry experience and observations.\u003c/p\u003e\u003cp\u003eEach post will focus on protecting and securing two critical areas: your workforce and your consumer-facing apps. The first post will focus on security details to check and mitigate now. The second will focus on immediate data privacy concerns with the help of Auth0 Vice President, Privacy Lucy McGrath. And the third post will help you put together a plan for the future that will make it easier the next time you want to turn on the speed — and to remain current in an ever-changing security landscape.\u003c/p\u003e\u003cp\u003eThe thing is that security is a global team sport.  As more of us shift to working and living online, everything is more connected — and that can be a good thing. Securing your personal identity, your business identity, and helping increase security at your business can actually make an impact. Here’s what you can do to help make the internet safer for everyone.\u003c/p\u003e\u003ch2 id=\"Why-Remote-Work-Forced-a-Change-in-Security-Thinking\"\u003eWhy Remote Work Forced a Change in Security Thinking\u003c/h2\u003e\u003cp\u003eBefore the world started working remotely, a lot of companies used a castle-and-moat approach to security. They relied on a combination of physical security and internal networks to ensure that employees and outsiders only accessed necessary information. They might even have relied on SaaS companies to provide some of their protections, but the thinking was still pretty much “protect the castle.”\u003c/p\u003e\u003cp\u003eSuddenly workers were working anywhere in the world, maybe on their own devices. Without remote experience, your security team might not have had time to think through all of the security issues inherent with having remote endpoints. For example, to ensure that they properly protect these assets against current threats like ransomware and malware, it would be appropriate to install leading next-gen antivirus on these machines.\u003c/p\u003e\u003cp\u003eRole-based privileges and policies also abruptly needed to follow the user. I know I work for an identity company, but it was identity and policy \u003ca href=\"https://auth0.com/blog/why-identity-federation-matters/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003efederation\u003c/a\u003e that anticipated this need and allowed for a rapid response.\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://www.businessinsider.com/companies-asking-employees-to-work-from-home-due-to-coronavirus-2020\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eNow some companies are making work from home a permanent\u003c/a\u003e part of their employee offering. Since Auth0 was built as a remote-friendly, globally dispersed company, we’ve had some time to think through the security concerns. Here’s what you need to consider to protect your customers, your business, and your employees:\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003e\u003cstrong\u003eSecure the endpoints.\u003c/strong\u003e Services like CarbonBlack or CrowdStrike can help prevent malware or breaches occurring from endpoints.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eUpdate bring your own device policies.\u003c/strong\u003e Rethink how and where employees are accessing business and customer data. Do you need to restrict access in public spaces? Adjust policies?\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eUpdate action policies\u003c/strong\u003e. What do your employees do if a work computer is stolen? What steps do they need to take if the information is exposed at home? A \u003ca href=\"https://www.darkreading.com/51--of-wfh-parents-say-children-have-accessed-work-accounts/d/d-id/1339754\" target=\"_blank\" rel=\"noreferrer noopener\"\u003e1Password survey\u003c/a\u003e found that 51% of work from home (WFH) parents surveyed said their children had accessed their work accounts, sometimes accidentally deleting necessary files.  How can you support your employees??\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eHuman risk is increased.\u003c/strong\u003e Have a look at the next section.\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"The-Human-Element\"\u003eThe Human Element\u003c/h2\u003e\u003cp\u003eThis is the critical part of this series — \u003cstrong\u003ethe human element is the most important aspect of security and data privacy.\u003c/strong\u003e\u003c/p\u003e\u003cblockquote\u003e\u003cp\u003eSecurity awareness training needs to happen at every single level of your organization.\u003c/p\u003e\u003c/blockquote\u003e\u003cp\u003eA malicious actor is going to use everything you need to do business — email address patterns, information on your website, social media posts, and items gleaned from news articles all to try to gain entry to your system. While the attacks will vary, they usually follow this pattern: \u003cstrong\u003ehuman factor\u003c/strong\u003e + inject something into the code + lack of input validation + insufficient logging and monitoring.\u003c/p\u003e\u003cp\u003eIf something looks like it’s coming from your CEO or payroll, an employee might fall for it and supply a way into your system. And once a bad actor is in, there’s lots they can do.\u003c/p\u003e\u003cp\u003eBut if you train your entire team to watch out for phishing attacks, you can stop them at the first step. \u003ca href=\"https://auth0.com/blog/protecting-against-phishing-attacks/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eThis post is a good place to start.\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAttacks evolve, so even though security awareness is something you should pause and do now, it’s something you’re going to need to do regularly. Developing a security culture throughout your org provides great protection. To do business with some industries like finance or healthcare, the training will be required to cover specific areas and will need to be documented. The training you provide can also help protect your employees in their personal lives.\u003c/p\u003e\u003ch2 id=\"Top-7-Things-to-Do-Now-to-Check-Your-App-s-Security\"\u003eTop 7 Things to Do Now to Check Your App’s Security\u003c/h2\u003e\u003cp\u003eThis can seem like a lot if you don’t have an in-house security team (and maybe if you do). One principle of security is encouraging diversity of thought not only because it’s the right thing to do but because studies show it makes teams more productive. In security, \u003ca href=\"https://www.mckinsey.com/business-functions/strategy-and-corporate-finance/our-insights/innovation-in-a-crisis-why-it-is-more-critical-than-ever\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ediversity of thought\u003c/a\u003e makes it easier to spot potential threats. This is part of why even large teams rely on external testing vendors and may even need to provide proof of outside testing for certifications like \u003ca href=\"https://auth0.com/blog/the-csa-star-program-a-business-guide-to-certification/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eCSA Star\u003c/a\u003e and \u003ca href=\"https://auth0.com/blog/what-is-pci-a-business-guide-to-compliance/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ePCI\u003c/a\u003e.\u003c/p\u003e\u003col start=\"1\"\u003e\u003cli\u003e\u003cstrong\u003eGet an external third-party pen test — and implement the recommendations\u003c/strong\u003e. A penetration test is where you hire a verified third party to attempt to find your app’s vulnerabilities. They will sign a non-disclosure agreement (NDA) and provide a detailed report outlining their findings and usually with recommended fixes cataloged by severity. Discovering vulnerabilities can be scary, and there is the temptation to use fear to drive organizational change, but we’ve found that partnering and collaborating with other teams and leadership can often get changes implemented faster.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eReview best practices for your cloud-based services.\u003c/strong\u003e When people go really fast, they may not take the time to fully understand the technology and security controls. This is a great time to go back and pay really close attention to the docs provided by your third-party vendors.\u003c/li\u003e\u003c/ol\u003e\u003cblockquote\u003e\u003cp\u003e“Many common AWS security issues, for example, happen as a result of not following AWS security best practice guidelines when setting up the infrastructure. This can lead to open and accessible EC2 security groups, public S3 buckets, unprotected EMR clusters, and more,” says Auth0 Detection and Response Security Engineer Troy Wegner (formerly of AWS and Amazon.com).\u003c/p\u003e\u003c/blockquote\u003e\u003col start=\"3\"\u003e\u003cli\u003e\u003cstrong\u003e\u003ca href=\"https://www.overops.com/blog/static-vs-dynamic-code-analysis-how-to-choose-between-them/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ePerform static\u003c/a\u003e and \u003ca href=\"https://www.overops.com/blog/static-vs-dynamic-code-analysis-how-to-choose-between-them/\" target=\"_blank\" rel=\"noreferrer noopener\"\u003edynamic code analysis\u003c/a\u003e\u003c/strong\u003e. Static analysis reviews the code as it exists. Dynamic analysis looks for vulnerabilities while the code is being executed and for unexpected outcomes. Ideally, you want to move towards baking both into your Software Development Lifecycle (SDLC). Devs may not always enjoy adding this to part of their process—more on how to add this analysis to your long-term software development plans in the final post.\u003c/li\u003e\u003cli\u003e\u003cstrong\u003eThink through vulnerability management and updates\u003c/strong\u003e. Since humans are fallible and it’s humans who make code, it’s inevitable that you’re going to run into vulnerabilities. If you don’t have a plan for pushing updates, now’s the time to make one so you don’t hear about something BIG like the \u003ca href=\"https://www.vox.com/2014/6/19/18076318/heartbleed\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eHeartbleed Bug\u003c/a\u003e and find yourself painfully updating ad-hoc.\u003c/li\u003e\u003c/ol\u003e\u003cblockquote\u003e\u003cp\u003eIn general, you’re going to need to test every time your devs update something and whenever your tech stack libraries or any of the main operating systems updates. Services like Chef, Puppet and Terraform can make this easier by pushing updates from a central server to connected servers. In the final post, we’ll get into longer-term strategies for updates, like maintaining a Golden Amazon Machine Image (AMI) if you’re on AWS. For now, just document how and when you’re going to update and test.\u003c/p\u003e\u003c/blockquote\u003e\u003col start=\"5\"\u003e\u003cli\u003e\u003cstrong\u003eThreat model\u003c/strong\u003e. A lot of security is determining risks. Ideally, you’ve threat modeled before building your app, but in some ways, it’s easier to model after it’s live. Yes, you can hire a trusted third party to do this for you. To give you a sense of the thought process, I asked Troy to threat model this restaurant scenario. Security engineers often diagram vulnerabilities, so we also include Troy’s whiteboard as a reference.\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eLet’s say you’re a local restaurant who responded to COVID by offering the ingredients to make your tastiest dishes and recipes to your customers via curbside pickup. You hired someone to put the app together quickly, but now your region is opening up, and you’ve decided this channel of operations should continue contributing to your bottom line. \u003c/p\u003e\u003cp\u003e\u003cimg src=\"https://images.ctfassets.net/23aumh6u8s0i/3qWEruezG4YZw2AwS2w4Nf/ccb3121e94d794c8baa0ec470e4b084d/diagram.jpg\" alt=\"Whiteboard\"/\u003e\n\u003cstrong\u003eFigure 1:\u003c/strong\u003e \u003cem\u003eAuth0 Senior Security Engineer - Detection and Response Troy Wegner’s whiteboard of our restaurant scenario.\u003c/em\u003e\u003c/p\u003e\u003cul\u003e\u003cli\u003eStart with authentication because you know customers need to authenticate in order to interact with your app. How are they authenticating? Are they only using a username and password? If they are only using a username and password for authentication, then you have just hit on your first major risk (user compromise/phishing/user impersonation).\u003c/li\u003e\u003cli\u003eAs a way to address the first risk identified, you have chosen to go with two-factor authentication for your users. But here is where things get interesting; which 2-factor options do you want to support? There are authenticator apps, FIDO U2F, Push-based 2FA, and SMS (the weakest available option). Each option has its own pros and cons to consider.\u003c/li\u003e\u003cli\u003eSince this is a restaurant, you’re also somehow connecting the app to the food supply. How are you measuring and validating your existing ingredients inventory to ensure you do not oversell based on your total ingredients available? Are you using a database to store this information? If so, where does this database live, is it protected or hardened information security wise, and if so, how is it hardened? How do you authenticate to the database, is it updated regularly, do you perform backups, etc.\u003c/li\u003e\u003cli\u003eIf your service has gotten really popular, too many people might try to order at once, and that could overwhelm the app’s limits. The app could go down due to resource constraints based on how it is architected. This is basically the risk a DOS/DDOS would present in bringing your app down and making it no longer available to your customers. In order to mitigate a DDOS risk, you might have a plan to make your app more fault tolerant and highly available by using load balancing, increasing back-end servers to handle the load, or using a front-end CDN to help distribute load across various edge locations.\u003c/li\u003e\u003cli\u003eMost likely, your app is taking payment and processing it in order to fulfill orders; how are customer payment and other sensitive information being handled/stored? If you accept credit cards or debit cards, PCI compliance is a concern you should address.\u003c/li\u003e\u003cli\u003eHere is where you would now want to think through and fully diagram out the rest of how the app works and uncover any other risks or bottlenecks that currently exist with your app, place a severity on those risks, and determine by severity which risks you want to fix, and which ones you are ok accepting.\u003c/li\u003e\u003c/ul\u003e\u003col start=\"6\"\u003e\u003cli\u003e\u003cstrong\u003eTurn on your logs — and make sure they’re monitored\u003c/strong\u003e. Turning on logs can seem like common sense, but because there’s often an expense attached to logging and getting the data analyzed, the logs might not always be turned on. It’s really hard to know what to fix after a malware outbreak or other issues occur, especially if your logs aren’t turned on and are being actively analyzed.\u003c/li\u003e\u003c/ol\u003e\u003cp\u003eSo this is where we tell you to turn on the logs for all the services you’re using. You should also make sure that a trusted third-party vendor or trained security engineer is watching your logs and building actionable detections based on those log sources to look for suspicious or anomalous activity.\u003c/p\u003e\u003col start=\"7\"\u003e\u003cli\u003e\u003cstrong\u003eTake action\u003c/strong\u003e. Logs, vulnerability assessments, pen tests — these things can help you identify what needs to be fixed, but you still need to fix it. Breaches and ransomware are the obvious security problems you want to avoid. How your security challenges impact consumer behavior might not be as clear. Lost conversions, abandoned shopping carts, and low time on site are all indications that your target audience may not feel comfortable sharing their data with you. Our customers tell us that an app or site that feels secure (think smooth login, logical and smooth payment process) supports their business goals.\u003c/li\u003e\u003c/ol\u003e\u003ch2 id=\"If-You-Need-More-Help\"\u003eIf You Need More Help\u003c/h2\u003e\u003cp\u003eAuthentication is often a critical part of securing an app or workplace. If you’d like to understand how Auth0’s solutions might help make your app more secure, please reach out to the \u003ca href=\"https://auth0.com/contact-us\" target=\"_blank\" rel=\"noreferrer noopener\"\u003eteam at Auth0\u003c/a\u003e.\u003c/p\u003e\u003cp\u003eMy next post will focus on immediate data privacy concerns with the help of Auth0 Vice President of Privacy Lucy McGrath.\u003c/p\u003e\u003cdiv\u003e\u003ch2 id=\"About-Auth0\"\u003eAbout Auth0 \u003c/h2\u003e\u003cp\u003eAuth0’s modern approach to identity enables organizations to provide secure access to any application, for any user. The Auth0 platform is a highly customizable identity operating system that is as simple as development teams want and as flexible as they need. Safeguarding billions of login transactions each month, Auth0 delivers convenience, privacy, and security so customers can focus on innovation. For more information, visit \u003ca href=\"https://auth0.com/\" target=\"_blank\" rel=\"noopener noreferrer\"\u003ehttps://auth0.com\u003c/a\u003e.\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/main\u003e\u003c/article\u003e\u003c/section\u003e\u003c/div\u003e",
      "summary": "Rapid change introduces workforce and app risks. Auth0 Security team’s advice on what to fix now.",
      "date_published": "2021-07-28T16:05:00Z",
      "author": {}
    }
  ]
}
